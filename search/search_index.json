{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4f60\u597d\uff0c\u6b22\u8fce\u6765\u5230SHUAI\u7684\u4e2a\u4eba\u7f51\u7ad9 \u8fd9\u91cc\u662fSHUAI\u7684\u4e2a\u4eba\u7f51\u7ad9 \u8fd8\u6ca1\u60f3\u597d\u4e2a\u4eba\u7f51\u7ad9\u5c55\u793a\u4ec0\u4e48\u5185\u5bb9\uff0c\u6682\u65f6\u5c31\u5199\u4e00\u4e9b\u4e2a\u4eba\u611f\u60f3\u548c\u5237\u9898\u8bb0\u5f55\u5427","title":"\u4f60\u597d\uff0c\u6b22\u8fce\u6765\u5230SHUAI\u7684\u4e2a\u4eba\u7f51\u7ad9"},{"location":"#shuai","text":"","title":"\u4f60\u597d\uff0c\u6b22\u8fce\u6765\u5230SHUAI\u7684\u4e2a\u4eba\u7f51\u7ad9"},{"location":"#shuai_1","text":"","title":"\u8fd9\u91cc\u662fSHUAI\u7684\u4e2a\u4eba\u7f51\u7ad9"},{"location":"#_1","text":"","title":"\u8fd8\u6ca1\u60f3\u597d\u4e2a\u4eba\u7f51\u7ad9\u5c55\u793a\u4ec0\u4e48\u5185\u5bb9\uff0c\u6682\u65f6\u5c31\u5199\u4e00\u4e9b\u4e2a\u4eba\u611f\u60f3\u548c\u5237\u9898\u8bb0\u5f55\u5427"},{"location":"aboutme/","text":"\u8fd9\u91cc\u662f\u4e2a\u4eba\u4ecb\u7ecd \u5c06\u5728\u8fd9\u91cc\u4ecb\u7ecd\u6211\u81ea\u5df1 \u7ade\u8d5b\u83b7\u5956 \u8f66\u8054\u7f51\u51b3\u8d5b \u9e3f\u8499\u7701\u8d5b \u5f00\u53d1\u8005\u7701\u8d5b \u8d62\u5728\u521b\u65b0\u5927\u8d5b \u8336\u60a6\u5c9a\u6ecb-\u751f\u6001\u8336\u56ed\u54c1\u724c\u7b56\u5212\u4e0e\u56fd\u9645\u5316\u63a8\u5e7f","title":"\u6211"},{"location":"aboutme/#_1","text":"","title":"\u8fd9\u91cc\u662f\u4e2a\u4eba\u4ecb\u7ecd"},{"location":"aboutme/#_2","text":"","title":"\u5c06\u5728\u8fd9\u91cc\u4ecb\u7ecd\u6211\u81ea\u5df1"},{"location":"aboutme/#_3","text":"","title":"\u7ade\u8d5b\u83b7\u5956"},{"location":"aboutme/#_4","text":"","title":"\u8f66\u8054\u7f51\u51b3\u8d5b"},{"location":"aboutme/#_5","text":"","title":"\u9e3f\u8499\u7701\u8d5b"},{"location":"aboutme/#_6","text":"","title":"\u5f00\u53d1\u8005\u7701\u8d5b"},{"location":"aboutme/#_7","text":"","title":"\u8d62\u5728\u521b\u65b0\u5927\u8d5b"},{"location":"aboutme/#-","text":"","title":"\u8336\u60a6\u5c9a\u6ecb-\u751f\u6001\u8336\u56ed\u54c1\u724c\u7b56\u5212\u4e0e\u56fd\u9645\u5316\u63a8\u5e7f"},{"location":"Algorithm/Backtracking/Binary_Tree/","text":"\u5728\u4e8c\u53c9\u6811\u7684\u904d\u5386\u4e2d\uff0c \u6df1\u5ea6\u4f18\u5148\u904d\u5386 \u548c \u5e7f\u5ea6\u4f18\u5148\u904d\u5386 \u662f\u4e24\u79cd\u4e0d\u540c\u7684\u904d\u5386\u65b9\u5f0f\uff1a 1. \u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff08DFS - Depth First Search\uff09 \u7279\u70b9 \uff1a \u6cbf\u7740\u6811\u7684\u6df1\u5ea6\u4f18\u5148\u8bbf\u95ee\u8282\u70b9\uff0c\u76f4\u5230\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u540e\u56de\u6eaf\u3002 \u9012\u5f52\u6216\u4f7f\u7528\u6808\u5b9e\u73b0\u3002 \u5e38\u89c1\u65b9\u5f0f \uff1a \u524d\u5e8f\u904d\u5386 \uff08Preorder Traversal\uff09\uff1a \u8bbf\u95ee\u987a\u5e8f\uff1a\u6839\u8282\u70b9 \u2192 \u5de6\u5b50\u6811 \u2192 \u53f3\u5b50\u6811\u3002 \u4e2d\u5e8f\u904d\u5386 \uff08Inorder Traversal\uff09\uff1a \u8bbf\u95ee\u987a\u5e8f\uff1a\u5de6\u5b50\u6811 \u2192 \u6839\u8282\u70b9 \u2192 \u53f3\u5b50\u6811\u3002 \u540e\u5e8f\u904d\u5386 \uff08Postorder Traversal\uff09\uff1a \u8bbf\u95ee\u987a\u5e8f\uff1a\u5de6\u5b50\u6811 \u2192 \u53f3\u5b50\u6811 \u2192 \u6839\u8282\u70b9\u3002 \u793a\u4f8b \u7ed9\u5b9a\u4e8c\u53c9\u6811\uff1a 1 / \\ 2 3 / \\ 4 5 - \u524d\u5e8f\u904d\u5386 \uff1a 1 \u2192 2 \u2192 4 \u2192 5 \u2192 3 - \u4e2d\u5e8f\u904d\u5386 \uff1a 4 \u2192 2 \u2192 5 \u2192 1 \u2192 3 - \u540e\u5e8f\u904d\u5386 \uff1a 4 \u2192 5 \u2192 2 \u2192 3 \u2192 1 2. \u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff08BFS - Breadth First Search\uff09 \u7279\u70b9 \uff1a \u6309\u5c42\u6b21\u9010\u5c42\u8bbf\u95ee\u8282\u70b9\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u4f9d\u6b21\u8bbf\u95ee\u6bcf\u4e00\u5c42\u7684\u6240\u6709\u8282\u70b9\u3002 \u4f7f\u7528\u961f\u5217\u5b9e\u73b0\u3002 \u5e38\u89c1\u65b9\u5f0f \uff1a \u5c42\u5e8f\u904d\u5386 \uff08Level Order Traversal\uff09\uff1a \u8bbf\u95ee\u987a\u5e8f\uff1a\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u9010\u5c42\u8bbf\u95ee\u3002 \u793a\u4f8b \u7ed9\u5b9a\u4e8c\u53c9\u6811\uff1a 1 / \\ 2 3 / \\ 4 5 - \u5c42\u5e8f\u904d\u5386 \uff1a 1 \u2192 2 \u2192 3 \u2192 4 \u2192 5 \u603b\u7ed3 \u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff08DFS\uff09 \uff1a \u524d\u5e8f\u3001\u4e2d\u5e8f\u3001\u540e\u5e8f\u904d\u5386\u3002 \u4f7f\u7528\u9012\u5f52\u6216\u6808\u5b9e\u73b0\u3002 \u9002\u5408\u7528\u4e8e\u641c\u7d22\u8def\u5f84\u6216\u9012\u5f52\u95ee\u9898\u3002 \u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff08BFS\uff09 \uff1a \u5c42\u5e8f\u904d\u5386\u3002 \u4f7f\u7528\u961f\u5217\u5b9e\u73b0\u3002 \u9002\u5408\u7528\u4e8e\u5bfb\u627e\u6700\u77ed\u8def\u5f84\u6216\u6309\u5c42\u6b21\u5904\u7406\u95ee\u9898\u3002","title":"\u4e8c\u53c9\u6811\u641c\u7d22"},{"location":"Algorithm/Backtracking/Binary_Tree/#1-dfs-depth-first-search","text":"\u7279\u70b9 \uff1a \u6cbf\u7740\u6811\u7684\u6df1\u5ea6\u4f18\u5148\u8bbf\u95ee\u8282\u70b9\uff0c\u76f4\u5230\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u540e\u56de\u6eaf\u3002 \u9012\u5f52\u6216\u4f7f\u7528\u6808\u5b9e\u73b0\u3002 \u5e38\u89c1\u65b9\u5f0f \uff1a \u524d\u5e8f\u904d\u5386 \uff08Preorder Traversal\uff09\uff1a \u8bbf\u95ee\u987a\u5e8f\uff1a\u6839\u8282\u70b9 \u2192 \u5de6\u5b50\u6811 \u2192 \u53f3\u5b50\u6811\u3002 \u4e2d\u5e8f\u904d\u5386 \uff08Inorder Traversal\uff09\uff1a \u8bbf\u95ee\u987a\u5e8f\uff1a\u5de6\u5b50\u6811 \u2192 \u6839\u8282\u70b9 \u2192 \u53f3\u5b50\u6811\u3002 \u540e\u5e8f\u904d\u5386 \uff08Postorder Traversal\uff09\uff1a \u8bbf\u95ee\u987a\u5e8f\uff1a\u5de6\u5b50\u6811 \u2192 \u53f3\u5b50\u6811 \u2192 \u6839\u8282\u70b9\u3002","title":"1. \u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff08DFS - Depth First Search\uff09"},{"location":"Algorithm/Backtracking/Binary_Tree/#_1","text":"\u7ed9\u5b9a\u4e8c\u53c9\u6811\uff1a 1 / \\ 2 3 / \\ 4 5 - \u524d\u5e8f\u904d\u5386 \uff1a 1 \u2192 2 \u2192 4 \u2192 5 \u2192 3 - \u4e2d\u5e8f\u904d\u5386 \uff1a 4 \u2192 2 \u2192 5 \u2192 1 \u2192 3 - \u540e\u5e8f\u904d\u5386 \uff1a 4 \u2192 5 \u2192 2 \u2192 3 \u2192 1","title":"\u793a\u4f8b"},{"location":"Algorithm/Backtracking/Binary_Tree/#2-bfs-breadth-first-search","text":"\u7279\u70b9 \uff1a \u6309\u5c42\u6b21\u9010\u5c42\u8bbf\u95ee\u8282\u70b9\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u4f9d\u6b21\u8bbf\u95ee\u6bcf\u4e00\u5c42\u7684\u6240\u6709\u8282\u70b9\u3002 \u4f7f\u7528\u961f\u5217\u5b9e\u73b0\u3002 \u5e38\u89c1\u65b9\u5f0f \uff1a \u5c42\u5e8f\u904d\u5386 \uff08Level Order Traversal\uff09\uff1a \u8bbf\u95ee\u987a\u5e8f\uff1a\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3\u9010\u5c42\u8bbf\u95ee\u3002","title":"2. \u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff08BFS - Breadth First Search\uff09"},{"location":"Algorithm/Backtracking/Binary_Tree/#_2","text":"\u7ed9\u5b9a\u4e8c\u53c9\u6811\uff1a 1 / \\ 2 3 / \\ 4 5 - \u5c42\u5e8f\u904d\u5386 \uff1a 1 \u2192 2 \u2192 3 \u2192 4 \u2192 5","title":"\u793a\u4f8b"},{"location":"Algorithm/Backtracking/Binary_Tree/#_3","text":"\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff08DFS\uff09 \uff1a \u524d\u5e8f\u3001\u4e2d\u5e8f\u3001\u540e\u5e8f\u904d\u5386\u3002 \u4f7f\u7528\u9012\u5f52\u6216\u6808\u5b9e\u73b0\u3002 \u9002\u5408\u7528\u4e8e\u641c\u7d22\u8def\u5f84\u6216\u9012\u5f52\u95ee\u9898\u3002 \u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff08BFS\uff09 \uff1a \u5c42\u5e8f\u904d\u5386\u3002 \u4f7f\u7528\u961f\u5217\u5b9e\u73b0\u3002 \u9002\u5408\u7528\u4e8e\u5bfb\u627e\u6700\u77ed\u8def\u5f84\u6216\u6309\u5c42\u6b21\u5904\u7406\u95ee\u9898\u3002","title":"\u603b\u7ed3"},{"location":"Algorithm/Backtracking/Full_range/","text":"\u56de\u6eaf\u6cd5\u7ecf\u5178\u4f8b\u9898 \u5b50\u96c6\u95ee\u9898\uff08Leetcode 78\uff09 \u7ec4\u5408\u603b\u548c\uff08Leetcode 39\uff09 \u62ec\u53f7\u751f\u6210\uff08Leetcode 22\uff09 \u5982\u4f55\u7528\u56de\u6eaf\u6cd5\u6c42\u89e3\u5168\u6392\u5217\u95ee\u9898 \u8f93\u5165\u4e00\u4e2a\u4e0d\u542b\u91cd\u590d\u6570\u5b57\u7684\u6570\u7ec4 nums\uff0c\u8fd4\u56de\u5b83\u6240\u6709\u53ef\u80fd\u7684\u5168\u6392\u5217\u3002","title":"\u5168\u6392\u5217\u95ee\u9898"},{"location":"Algorithm/Backtracking/Full_range/#_1","text":"\u5b50\u96c6\u95ee\u9898\uff08Leetcode 78\uff09 \u7ec4\u5408\u603b\u548c\uff08Leetcode 39\uff09 \u62ec\u53f7\u751f\u6210\uff08Leetcode 22\uff09","title":"\u56de\u6eaf\u6cd5\u7ecf\u5178\u4f8b\u9898"},{"location":"Algorithm/Backtracking/Full_range/#_2","text":"\u8f93\u5165\u4e00\u4e2a\u4e0d\u542b\u91cd\u590d\u6570\u5b57\u7684\u6570\u7ec4 nums\uff0c\u8fd4\u56de\u5b83\u6240\u6709\u53ef\u80fd\u7684\u5168\u6392\u5217\u3002","title":"\u5982\u4f55\u7528\u56de\u6eaf\u6cd5\u6c42\u89e3\u5168\u6392\u5217\u95ee\u9898"},{"location":"Algorithm/Backtracking/bag/","text":"01\u80cc\u5305\u95ee\u9898\u7684\u56de\u6eaf\u6cd5\u89e3\u7a7a\u95f4\u6811 \u5728 01 \u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u56de\u6eaf\u6cd5\u901a\u8fc7\u6784\u9020 \u89e3\u7a7a\u95f4\u6811 \u6765\u7cfb\u7edf\u5730\u641c\u7d22\u6240\u6709\u53ef\u80fd\u7684\u89e3\uff0c\u4ece\u800c\u627e\u5230\u6700\u4f18\u89e3\u3002\u4ee5\u4e0b\u662f\u89e3\u7a7a\u95f4\u6811\u7684\u6784\u9020\u548c\u641c\u7d22\u8fc7\u7a0b\uff1a 1. \u89e3\u7a7a\u95f4\u6811\u7684\u6784\u9020 \u8282\u70b9\u8868\u793a \uff1a \u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u5f53\u524d\u9009\u62e9\u7684\u72b6\u6001\uff0c\u5305\u62ec\uff1a \u5f53\u524d\u7269\u54c1\u662f\u5426\u88ab\u9009\u4e2d\u3002 \u5f53\u524d\u80cc\u5305\u7684\u603b\u91cd\u91cf\u3002 \u5f53\u524d\u80cc\u5305\u7684\u603b\u4ef7\u503c\u3002 \u6811\u7684\u7ed3\u6784 \uff1a \u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u5206\u652f\uff1a \u9009\u62e9\u5f53\u524d\u7269\u54c1 \uff08\u5c06\u5f53\u524d\u7269\u54c1\u653e\u5165\u80cc\u5305\uff09\u3002 \u4e0d\u9009\u62e9\u5f53\u524d\u7269\u54c1 \uff08\u8df3\u8fc7\u5f53\u524d\u7269\u54c1\uff09\u3002 \u6811\u7684\u6df1\u5ea6\u4e3a\u7269\u54c1\u7684\u6570\u91cf n \u3002 \u6839\u8282\u70b9 \uff1a \u6839\u8282\u70b9\u8868\u793a\u521d\u59cb\u72b6\u6001\uff08\u672a\u9009\u62e9\u4efb\u4f55\u7269\u54c1\uff0c\u603b\u91cd\u91cf\u548c\u603b\u4ef7\u503c\u5747\u4e3a 0\uff09\u3002 2. \u641c\u7d22\u8fc7\u7a0b \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09 \uff1a \u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u6cbf\u7740\u89e3\u7a7a\u95f4\u6811\u7684\u5206\u652f\u9010\u6b65\u5c1d\u8bd5\u6bcf\u79cd\u53ef\u80fd\u7684\u9009\u62e9\u3002 \u6bcf\u6b21\u9009\u62e9\u540e\uff0c\u8fdb\u5165\u4e0b\u4e00\u5c42\uff08\u4e0b\u4e00\u4e2a\u7269\u54c1\uff09\u3002 \u7ea6\u675f\u6761\u4ef6 \uff1a \u5982\u679c\u5f53\u524d\u9009\u62e9\u5bfc\u81f4\u80cc\u5305\u7684\u603b\u91cd\u91cf\u8d85\u8fc7\u5bb9\u91cf\uff0c\u5219\u526a\u679d\uff08\u505c\u6b62\u641c\u7d22\u8be5\u5206\u652f\uff09\u3002 \u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u6f5c\u5728\u4ef7\u503c\uff08\u57fa\u4e8e\u5269\u4f59\u7269\u54c1\u7684\u6700\u5927\u53ef\u80fd\u4ef7\u503c\uff09\u5c0f\u4e8e\u5f53\u524d\u5df2\u77e5\u7684\u6700\u4f18\u89e3\uff0c\u5219\u526a\u679d\u3002 \u56de\u6eaf \uff1a \u5f53\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\uff08\u6240\u6709\u7269\u54c1\u90fd\u5df2\u5904\u7406\uff09\u6216\u526a\u679d\u65f6\uff0c\u56de\u9000\u5230\u4e0a\u4e00\u4e2a\u8282\u70b9\uff0c\u5c1d\u8bd5\u53e6\u4e00\u6761\u5206\u652f\u3002 3. \u641c\u7d22\u8fc7\u7a0b\u7684\u6b65\u9aa4 \u521d\u59cb\u5316 \uff1a \u5f53\u524d\u80cc\u5305\u91cd\u91cf currentWeight = 0 \u3002 \u5f53\u524d\u80cc\u5305\u4ef7\u503c currentValue = 0 \u3002 \u5f53\u524d\u7269\u54c1\u7d22\u5f15 i = 0 \u3002 \u9012\u5f52\u641c\u7d22 \uff1a \u5bf9\u4e8e\u5f53\u524d\u7269\u54c1 i \uff1a \u9009\u62e9\u7269\u54c1 i \uff1a \u66f4\u65b0 currentWeight \u548c currentValue \u3002 \u5982\u679c currentWeight \u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u5219\u526a\u679d\u3002 \u5426\u5219\uff0c\u7ee7\u7eed\u641c\u7d22\u4e0b\u4e00\u4e2a\u7269\u54c1\u3002 \u4e0d\u9009\u62e9\u7269\u54c1 i \uff1a \u4fdd\u6301 currentWeight \u548c currentValue \u4e0d\u53d8\u3002 \u7ee7\u7eed\u641c\u7d22\u4e0b\u4e00\u4e2a\u7269\u54c1\u3002 \u66f4\u65b0\u6700\u4f18\u89e3 \uff1a \u5f53\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u6bd4\u8f83\u5f53\u524d\u89e3\u7684\u603b\u4ef7\u503c\u4e0e\u5df2\u77e5\u7684\u6700\u4f18\u89e3\uff0c\u66f4\u65b0\u6700\u4f18\u89e3\u3002 \u56de\u6eaf \uff1a \u64a4\u9500\u5f53\u524d\u9009\u62e9\uff0c\u56de\u9000\u5230\u4e0a\u4e00\u4e2a\u8282\u70b9\uff0c\u5c1d\u8bd5\u53e6\u4e00\u6761\u5206\u652f\u3002 4. \u793a\u4f8b \u95ee\u9898\u63cf\u8ff0 \uff1a \u7269\u54c1\uff1a [{\u91cd\u91cf: 2, \u4ef7\u503c: 3}, {\u91cd\u91cf: 3, \u4ef7\u503c: 4}, {\u91cd\u91cf: 4, \u4ef7\u503c: 5}, {\u91cd\u91cf: 5, \u4ef7\u503c: 6}] \u80cc\u5305\u5bb9\u91cf\uff1a 8 \u89e3\u7a7a\u95f4\u6811 \uff1a \u6839\u8282\u70b9\uff1a (currentWeight = 0, currentValue = 0) \u5206\u652f 1\uff1a\u9009\u62e9\u7269\u54c1 1\uff08\u91cd\u91cf 2\uff0c\u4ef7\u503c 3\uff09\u3002 \u5206\u652f 2\uff1a\u4e0d\u9009\u62e9\u7269\u54c1 1\u3002 \u641c\u7d22\u8fc7\u7a0b \uff1a \u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u9009\u62e9\u7269\u54c1 1\uff0c\u8fdb\u5165\u5206\u652f 1\u3002 \u5728\u5206\u652f 1 \u4e2d\uff0c\u9009\u62e9\u7269\u54c1 2\uff0c\u8fdb\u5165\u5206\u652f 1.1\u3002 \u5728\u5206\u652f 1.1 \u4e2d\uff0c\u9009\u62e9\u7269\u54c1 3\uff0c\u53d1\u73b0\u8d85\u51fa\u5bb9\u91cf\uff0c\u526a\u679d\u3002 \u56de\u6eaf\u5230\u5206\u652f 1.1\uff0c\u5c1d\u8bd5\u4e0d\u9009\u62e9\u7269\u54c1 3\u3002 \u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u5230\u641c\u7d22\u5b8c\u6574\u68f5\u6811\u3002 5. \u4f18\u5316\uff1a\u526a\u679d\u7b56\u7565 \u91cd\u91cf\u526a\u679d \uff1a \u5982\u679c\u5f53\u524d\u91cd\u91cf\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u5219\u505c\u6b62\u641c\u7d22\u8be5\u5206\u652f\u3002 \u4ef7\u503c\u526a\u679d \uff1a \u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u6f5c\u5728\u6700\u5927\u4ef7\u503c\u5c0f\u4e8e\u5f53\u524d\u6700\u4f18\u89e3\uff0c\u5219\u505c\u6b62\u641c\u7d22\u8be5\u5206\u652f\u3002 \u603b\u7ed3 \u89e3\u7a7a\u95f4\u6811 \uff1a\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u5f53\u524d\u9009\u62e9\u72b6\u6001\uff0c\u5206\u652f\u8868\u793a\u9009\u62e9\u6216\u4e0d\u9009\u62e9\u5f53\u524d\u7269\u54c1\u3002 \u641c\u7d22\u65b9\u5f0f \uff1a\u4f7f\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09\u9010\u6b65\u63a2\u7d22\u89e3\u7a7a\u95f4\u3002 \u526a\u679d\u4f18\u5316 \uff1a\u901a\u8fc7\u91cd\u91cf\u548c\u4ef7\u503c\u526a\u679d\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u641c\u7d22\uff0c\u63d0\u9ad8\u6548\u7387\u3002 \u76ee\u6807 \uff1a\u627e\u5230\u603b\u4ef7\u503c\u6700\u5927\u7684\u7269\u54c1\u7ec4\u5408\uff0c\u540c\u65f6\u6ee1\u8db3\u80cc\u5305\u5bb9\u91cf\u9650\u5236\u3002 \u4ee5\u4e0b\u662f\u4f7f\u7528 void backtrack \u3001 constraint \u548c bound \u51fd\u6570\u91cd\u65b0\u8bbe\u8ba1\u7684 01 \u80cc\u5305\u95ee\u9898\u7684\u56de\u6eaf\u6cd5\u5b9e\u73b0\uff1a #include <iostream> #include <vector> using namespace std ; // \u5168\u5c40\u53d8\u91cf\uff0c\u7528\u4e8e\u8bb0\u5f55\u6700\u4f18\u89e3 int maxValue = 0 ; // \u5f53\u524d\u6700\u5927\u4ef7\u503c vector < int > bestChoice ; // \u6700\u4f18\u89e3\u7684\u9009\u62e9\u65b9\u6848 // \u68c0\u67e5\u7ea6\u675f\u6761\u4ef6\uff1a\u5f53\u524d\u91cd\u91cf\u662f\u5426\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf bool constraint ( int currentWeight , int capacity ) { return currentWeight <= capacity ; } // \u68c0\u67e5\u754c\u9650\u6761\u4ef6\uff1a\u5f53\u524d\u8282\u70b9\u7684\u6f5c\u5728\u6700\u5927\u4ef7\u503c\u662f\u5426\u6709\u53ef\u80fd\u8d85\u8fc7\u5f53\u524d\u6700\u4f18\u89e3 bool bound ( int currentValue , int remainingValue ) { return currentValue + remainingValue > maxValue ; } // \u56de\u6eaf\u51fd\u6570 void backtrack ( int i , int currentWeight , int currentValue , int capacity , const vector < int > & weights , const vector < int > & values , vector < int > & currentChoice , int remainingValue ) { // \u5982\u679c\u5df2\u7ecf\u5904\u7406\u5b8c\u6240\u6709\u7269\u54c1 if ( i == weights . size ()) { // \u66f4\u65b0\u6700\u4f18\u89e3 if ( currentValue > maxValue ) { maxValue = currentValue ; bestChoice = currentChoice ; } return ; } // \u526a\u679d\uff1a\u68c0\u67e5\u7ea6\u675f\u6761\u4ef6 if ( ! constraint ( currentWeight , capacity )) { return ; } // \u526a\u679d\uff1a\u68c0\u67e5\u754c\u9650\u6761\u4ef6 if ( ! bound ( currentValue , remainingValue )) { return ; } // \u4e0d\u9009\u62e9\u5f53\u524d\u7269\u54c1 currentChoice [ i ] = 0 ; backtrack ( i + 1 , currentWeight , currentValue , capacity , weights , values , currentChoice , remainingValue - values [ i ]); // \u9009\u62e9\u5f53\u524d\u7269\u54c1 currentChoice [ i ] = 1 ; backtrack ( i + 1 , currentWeight + weights [ i ], currentValue + values [ i ], capacity , weights , values , currentChoice , remainingValue - values [ i ]); } int main () { // \u8f93\u5165\u7269\u54c1\u7684\u91cd\u91cf\u548c\u4ef7\u503c vector < int > weights = { 2 , 3 , 4 , 5 }; // \u7269\u54c1\u91cd\u91cf vector < int > values = { 3 , 4 , 5 , 6 }; // \u7269\u54c1\u4ef7\u503c int capacity = 8 ; // \u80cc\u5305\u5bb9\u91cf // \u5f53\u524d\u9009\u62e9\u65b9\u6848 vector < int > currentChoice ( weights . size (), 0 ); // \u8ba1\u7b97\u6240\u6709\u7269\u54c1\u7684\u603b\u4ef7\u503c\uff0c\u7528\u4e8e\u754c\u9650\u6761\u4ef6 int totalValue = 0 ; for ( int value : values ) { totalValue += value ; } // \u8c03\u7528\u56de\u6eaf\u51fd\u6570 backtrack ( 0 , 0 , 0 , capacity , weights , values , currentChoice , totalValue ); // \u8f93\u51fa\u7ed3\u679c cout << \"\u6700\u5927\u4ef7\u503c: \" << maxValue << endl ; cout << \"\u9009\u62e9\u7684\u7269\u54c1: \" ; for ( int i = 0 ; i < bestChoice . size (); i ++ ) { if ( bestChoice [ i ] == 1 ) { cout << i + 1 << \" \" ; } } cout << endl ; return 0 ; } \u4ee3\u7801\u8bf4\u660e constraint \u51fd\u6570 \uff1a \u7528\u4e8e\u68c0\u67e5\u7ea6\u675f\u6761\u4ef6\uff0c\u5224\u65ad\u5f53\u524d\u91cd\u91cf\u662f\u5426\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\u3002 \u5982\u679c\u8d85\u8fc7\u5bb9\u91cf\uff0c\u8fd4\u56de false \uff0c\u505c\u6b62\u641c\u7d22\u3002 bound \u51fd\u6570 \uff1a \u7528\u4e8e\u68c0\u67e5\u754c\u9650\u6761\u4ef6\uff0c\u5224\u65ad\u5f53\u524d\u8282\u70b9\u7684\u6f5c\u5728\u6700\u5927\u4ef7\u503c\u662f\u5426\u6709\u53ef\u80fd\u8d85\u8fc7\u5f53\u524d\u6700\u4f18\u89e3\u3002 \u5982\u679c\u5f53\u524d\u4ef7\u503c\u52a0\u4e0a\u5269\u4f59\u7269\u54c1\u7684\u6700\u5927\u53ef\u80fd\u4ef7\u503c\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u6700\u4f18\u89e3\uff0c\u8fd4\u56de false \uff0c\u505c\u6b62\u641c\u7d22\u3002 backtrack \u51fd\u6570 \uff1a \u6838\u5fc3\u56de\u6eaf\u51fd\u6570\uff0c\u9012\u5f52\u5730\u63a2\u7d22\u89e3\u7a7a\u95f4\u6811\u3002 \u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u5206\u652f\uff1a\u9009\u62e9\u5f53\u524d\u7269\u54c1\u6216\u4e0d\u9009\u62e9\u5f53\u524d\u7269\u54c1\u3002 \u5728\u6bcf\u6b21\u9012\u5f52\u8c03\u7528\u524d\uff0c\u68c0\u67e5\u7ea6\u675f\u6761\u4ef6\u548c\u754c\u9650\u6761\u4ef6\uff0c\u8fdb\u884c\u526a\u679d\u3002 remainingValue \uff1a \u8868\u793a\u5f53\u524d\u8282\u70b9\u4e4b\u540e\u5269\u4f59\u7269\u54c1\u7684\u603b\u4ef7\u503c\uff0c\u7528\u4e8e\u754c\u9650\u6761\u4ef6\u7684\u8ba1\u7b97\u3002 \u4e3b\u51fd\u6570 \uff1a \u521d\u59cb\u5316\u7269\u54c1\u7684\u91cd\u91cf\u3001\u4ef7\u503c\u548c\u80cc\u5305\u5bb9\u91cf\u3002 \u8ba1\u7b97\u6240\u6709\u7269\u54c1\u7684\u603b\u4ef7\u503c\uff0c\u4f20\u9012\u7ed9\u56de\u6eaf\u51fd\u6570\u3002 \u8f93\u51fa\u6700\u5927\u4ef7\u503c\u548c\u5bf9\u5e94\u7684\u9009\u62e9\u65b9\u6848\u3002 \u8fd0\u884c\u7ed3\u679c \u8f93\u5165 \uff1a \u7269\u54c1\u91cd\u91cf\uff1a [2, 3, 4, 5] \u7269\u54c1\u4ef7\u503c\uff1a [3, 4, 5, 6] \u80cc\u5305\u5bb9\u91cf\uff1a 8 \u8f93\u51fa \uff1a \u6700\u5927\u4ef7\u503c: 10 \u9009\u62e9\u7684\u7269\u54c1: 2 4 \u603b\u7ed3 \u4f7f\u7528 constraint \u548c bound \u51fd\u6570\u5206\u522b\u5b9e\u73b0\u7ea6\u675f\u6761\u4ef6\u548c\u754c\u9650\u6761\u4ef6\u7684\u68c0\u67e5\uff0c\u903b\u8f91\u6e05\u6670\u3002 backtrack \u51fd\u6570\u901a\u8fc7\u9012\u5f52\u63a2\u7d22\u89e3\u7a7a\u95f4\u6811\uff0c\u5e76\u7ed3\u5408\u526a\u679d\u4f18\u5316\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u641c\u7d22\u3002 \u8fd9\u79cd\u8bbe\u8ba1\u65b9\u5f0f\u6a21\u5757\u5316\u7a0b\u5ea6\u9ad8\uff0c\u4fbf\u4e8e\u6269\u5c55\u548c\u7ef4\u62a4\u3002","title":"\u80cc\u5305\u95ee\u9898"},{"location":"Algorithm/Backtracking/bag/#01","text":"\u5728 01 \u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u56de\u6eaf\u6cd5\u901a\u8fc7\u6784\u9020 \u89e3\u7a7a\u95f4\u6811 \u6765\u7cfb\u7edf\u5730\u641c\u7d22\u6240\u6709\u53ef\u80fd\u7684\u89e3\uff0c\u4ece\u800c\u627e\u5230\u6700\u4f18\u89e3\u3002\u4ee5\u4e0b\u662f\u89e3\u7a7a\u95f4\u6811\u7684\u6784\u9020\u548c\u641c\u7d22\u8fc7\u7a0b\uff1a","title":"01\u80cc\u5305\u95ee\u9898\u7684\u56de\u6eaf\u6cd5\u89e3\u7a7a\u95f4\u6811"},{"location":"Algorithm/Backtracking/bag/#1","text":"\u8282\u70b9\u8868\u793a \uff1a \u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u5f53\u524d\u9009\u62e9\u7684\u72b6\u6001\uff0c\u5305\u62ec\uff1a \u5f53\u524d\u7269\u54c1\u662f\u5426\u88ab\u9009\u4e2d\u3002 \u5f53\u524d\u80cc\u5305\u7684\u603b\u91cd\u91cf\u3002 \u5f53\u524d\u80cc\u5305\u7684\u603b\u4ef7\u503c\u3002 \u6811\u7684\u7ed3\u6784 \uff1a \u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u5206\u652f\uff1a \u9009\u62e9\u5f53\u524d\u7269\u54c1 \uff08\u5c06\u5f53\u524d\u7269\u54c1\u653e\u5165\u80cc\u5305\uff09\u3002 \u4e0d\u9009\u62e9\u5f53\u524d\u7269\u54c1 \uff08\u8df3\u8fc7\u5f53\u524d\u7269\u54c1\uff09\u3002 \u6811\u7684\u6df1\u5ea6\u4e3a\u7269\u54c1\u7684\u6570\u91cf n \u3002 \u6839\u8282\u70b9 \uff1a \u6839\u8282\u70b9\u8868\u793a\u521d\u59cb\u72b6\u6001\uff08\u672a\u9009\u62e9\u4efb\u4f55\u7269\u54c1\uff0c\u603b\u91cd\u91cf\u548c\u603b\u4ef7\u503c\u5747\u4e3a 0\uff09\u3002","title":"1. \u89e3\u7a7a\u95f4\u6811\u7684\u6784\u9020"},{"location":"Algorithm/Backtracking/bag/#2","text":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09 \uff1a \u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u6cbf\u7740\u89e3\u7a7a\u95f4\u6811\u7684\u5206\u652f\u9010\u6b65\u5c1d\u8bd5\u6bcf\u79cd\u53ef\u80fd\u7684\u9009\u62e9\u3002 \u6bcf\u6b21\u9009\u62e9\u540e\uff0c\u8fdb\u5165\u4e0b\u4e00\u5c42\uff08\u4e0b\u4e00\u4e2a\u7269\u54c1\uff09\u3002 \u7ea6\u675f\u6761\u4ef6 \uff1a \u5982\u679c\u5f53\u524d\u9009\u62e9\u5bfc\u81f4\u80cc\u5305\u7684\u603b\u91cd\u91cf\u8d85\u8fc7\u5bb9\u91cf\uff0c\u5219\u526a\u679d\uff08\u505c\u6b62\u641c\u7d22\u8be5\u5206\u652f\uff09\u3002 \u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u6f5c\u5728\u4ef7\u503c\uff08\u57fa\u4e8e\u5269\u4f59\u7269\u54c1\u7684\u6700\u5927\u53ef\u80fd\u4ef7\u503c\uff09\u5c0f\u4e8e\u5f53\u524d\u5df2\u77e5\u7684\u6700\u4f18\u89e3\uff0c\u5219\u526a\u679d\u3002 \u56de\u6eaf \uff1a \u5f53\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\uff08\u6240\u6709\u7269\u54c1\u90fd\u5df2\u5904\u7406\uff09\u6216\u526a\u679d\u65f6\uff0c\u56de\u9000\u5230\u4e0a\u4e00\u4e2a\u8282\u70b9\uff0c\u5c1d\u8bd5\u53e6\u4e00\u6761\u5206\u652f\u3002","title":"2. \u641c\u7d22\u8fc7\u7a0b"},{"location":"Algorithm/Backtracking/bag/#3","text":"\u521d\u59cb\u5316 \uff1a \u5f53\u524d\u80cc\u5305\u91cd\u91cf currentWeight = 0 \u3002 \u5f53\u524d\u80cc\u5305\u4ef7\u503c currentValue = 0 \u3002 \u5f53\u524d\u7269\u54c1\u7d22\u5f15 i = 0 \u3002 \u9012\u5f52\u641c\u7d22 \uff1a \u5bf9\u4e8e\u5f53\u524d\u7269\u54c1 i \uff1a \u9009\u62e9\u7269\u54c1 i \uff1a \u66f4\u65b0 currentWeight \u548c currentValue \u3002 \u5982\u679c currentWeight \u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u5219\u526a\u679d\u3002 \u5426\u5219\uff0c\u7ee7\u7eed\u641c\u7d22\u4e0b\u4e00\u4e2a\u7269\u54c1\u3002 \u4e0d\u9009\u62e9\u7269\u54c1 i \uff1a \u4fdd\u6301 currentWeight \u548c currentValue \u4e0d\u53d8\u3002 \u7ee7\u7eed\u641c\u7d22\u4e0b\u4e00\u4e2a\u7269\u54c1\u3002 \u66f4\u65b0\u6700\u4f18\u89e3 \uff1a \u5f53\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u6bd4\u8f83\u5f53\u524d\u89e3\u7684\u603b\u4ef7\u503c\u4e0e\u5df2\u77e5\u7684\u6700\u4f18\u89e3\uff0c\u66f4\u65b0\u6700\u4f18\u89e3\u3002 \u56de\u6eaf \uff1a \u64a4\u9500\u5f53\u524d\u9009\u62e9\uff0c\u56de\u9000\u5230\u4e0a\u4e00\u4e2a\u8282\u70b9\uff0c\u5c1d\u8bd5\u53e6\u4e00\u6761\u5206\u652f\u3002","title":"3. \u641c\u7d22\u8fc7\u7a0b\u7684\u6b65\u9aa4"},{"location":"Algorithm/Backtracking/bag/#4","text":"","title":"4. \u793a\u4f8b"},{"location":"Algorithm/Backtracking/bag/#_1","text":"\u7269\u54c1\uff1a [{\u91cd\u91cf: 2, \u4ef7\u503c: 3}, {\u91cd\u91cf: 3, \u4ef7\u503c: 4}, {\u91cd\u91cf: 4, \u4ef7\u503c: 5}, {\u91cd\u91cf: 5, \u4ef7\u503c: 6}] \u80cc\u5305\u5bb9\u91cf\uff1a 8","title":"\u95ee\u9898\u63cf\u8ff0\uff1a"},{"location":"Algorithm/Backtracking/bag/#_2","text":"\u6839\u8282\u70b9\uff1a (currentWeight = 0, currentValue = 0) \u5206\u652f 1\uff1a\u9009\u62e9\u7269\u54c1 1\uff08\u91cd\u91cf 2\uff0c\u4ef7\u503c 3\uff09\u3002 \u5206\u652f 2\uff1a\u4e0d\u9009\u62e9\u7269\u54c1 1\u3002","title":"\u89e3\u7a7a\u95f4\u6811\uff1a"},{"location":"Algorithm/Backtracking/bag/#_3","text":"\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u9009\u62e9\u7269\u54c1 1\uff0c\u8fdb\u5165\u5206\u652f 1\u3002 \u5728\u5206\u652f 1 \u4e2d\uff0c\u9009\u62e9\u7269\u54c1 2\uff0c\u8fdb\u5165\u5206\u652f 1.1\u3002 \u5728\u5206\u652f 1.1 \u4e2d\uff0c\u9009\u62e9\u7269\u54c1 3\uff0c\u53d1\u73b0\u8d85\u51fa\u5bb9\u91cf\uff0c\u526a\u679d\u3002 \u56de\u6eaf\u5230\u5206\u652f 1.1\uff0c\u5c1d\u8bd5\u4e0d\u9009\u62e9\u7269\u54c1 3\u3002 \u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u5230\u641c\u7d22\u5b8c\u6574\u68f5\u6811\u3002","title":"\u641c\u7d22\u8fc7\u7a0b\uff1a"},{"location":"Algorithm/Backtracking/bag/#5","text":"\u91cd\u91cf\u526a\u679d \uff1a \u5982\u679c\u5f53\u524d\u91cd\u91cf\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u5219\u505c\u6b62\u641c\u7d22\u8be5\u5206\u652f\u3002 \u4ef7\u503c\u526a\u679d \uff1a \u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u6f5c\u5728\u6700\u5927\u4ef7\u503c\u5c0f\u4e8e\u5f53\u524d\u6700\u4f18\u89e3\uff0c\u5219\u505c\u6b62\u641c\u7d22\u8be5\u5206\u652f\u3002","title":"5. \u4f18\u5316\uff1a\u526a\u679d\u7b56\u7565"},{"location":"Algorithm/Backtracking/bag/#_4","text":"\u89e3\u7a7a\u95f4\u6811 \uff1a\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u5f53\u524d\u9009\u62e9\u72b6\u6001\uff0c\u5206\u652f\u8868\u793a\u9009\u62e9\u6216\u4e0d\u9009\u62e9\u5f53\u524d\u7269\u54c1\u3002 \u641c\u7d22\u65b9\u5f0f \uff1a\u4f7f\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09\u9010\u6b65\u63a2\u7d22\u89e3\u7a7a\u95f4\u3002 \u526a\u679d\u4f18\u5316 \uff1a\u901a\u8fc7\u91cd\u91cf\u548c\u4ef7\u503c\u526a\u679d\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u641c\u7d22\uff0c\u63d0\u9ad8\u6548\u7387\u3002 \u76ee\u6807 \uff1a\u627e\u5230\u603b\u4ef7\u503c\u6700\u5927\u7684\u7269\u54c1\u7ec4\u5408\uff0c\u540c\u65f6\u6ee1\u8db3\u80cc\u5305\u5bb9\u91cf\u9650\u5236\u3002 \u4ee5\u4e0b\u662f\u4f7f\u7528 void backtrack \u3001 constraint \u548c bound \u51fd\u6570\u91cd\u65b0\u8bbe\u8ba1\u7684 01 \u80cc\u5305\u95ee\u9898\u7684\u56de\u6eaf\u6cd5\u5b9e\u73b0\uff1a #include <iostream> #include <vector> using namespace std ; // \u5168\u5c40\u53d8\u91cf\uff0c\u7528\u4e8e\u8bb0\u5f55\u6700\u4f18\u89e3 int maxValue = 0 ; // \u5f53\u524d\u6700\u5927\u4ef7\u503c vector < int > bestChoice ; // \u6700\u4f18\u89e3\u7684\u9009\u62e9\u65b9\u6848 // \u68c0\u67e5\u7ea6\u675f\u6761\u4ef6\uff1a\u5f53\u524d\u91cd\u91cf\u662f\u5426\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf bool constraint ( int currentWeight , int capacity ) { return currentWeight <= capacity ; } // \u68c0\u67e5\u754c\u9650\u6761\u4ef6\uff1a\u5f53\u524d\u8282\u70b9\u7684\u6f5c\u5728\u6700\u5927\u4ef7\u503c\u662f\u5426\u6709\u53ef\u80fd\u8d85\u8fc7\u5f53\u524d\u6700\u4f18\u89e3 bool bound ( int currentValue , int remainingValue ) { return currentValue + remainingValue > maxValue ; } // \u56de\u6eaf\u51fd\u6570 void backtrack ( int i , int currentWeight , int currentValue , int capacity , const vector < int > & weights , const vector < int > & values , vector < int > & currentChoice , int remainingValue ) { // \u5982\u679c\u5df2\u7ecf\u5904\u7406\u5b8c\u6240\u6709\u7269\u54c1 if ( i == weights . size ()) { // \u66f4\u65b0\u6700\u4f18\u89e3 if ( currentValue > maxValue ) { maxValue = currentValue ; bestChoice = currentChoice ; } return ; } // \u526a\u679d\uff1a\u68c0\u67e5\u7ea6\u675f\u6761\u4ef6 if ( ! constraint ( currentWeight , capacity )) { return ; } // \u526a\u679d\uff1a\u68c0\u67e5\u754c\u9650\u6761\u4ef6 if ( ! bound ( currentValue , remainingValue )) { return ; } // \u4e0d\u9009\u62e9\u5f53\u524d\u7269\u54c1 currentChoice [ i ] = 0 ; backtrack ( i + 1 , currentWeight , currentValue , capacity , weights , values , currentChoice , remainingValue - values [ i ]); // \u9009\u62e9\u5f53\u524d\u7269\u54c1 currentChoice [ i ] = 1 ; backtrack ( i + 1 , currentWeight + weights [ i ], currentValue + values [ i ], capacity , weights , values , currentChoice , remainingValue - values [ i ]); } int main () { // \u8f93\u5165\u7269\u54c1\u7684\u91cd\u91cf\u548c\u4ef7\u503c vector < int > weights = { 2 , 3 , 4 , 5 }; // \u7269\u54c1\u91cd\u91cf vector < int > values = { 3 , 4 , 5 , 6 }; // \u7269\u54c1\u4ef7\u503c int capacity = 8 ; // \u80cc\u5305\u5bb9\u91cf // \u5f53\u524d\u9009\u62e9\u65b9\u6848 vector < int > currentChoice ( weights . size (), 0 ); // \u8ba1\u7b97\u6240\u6709\u7269\u54c1\u7684\u603b\u4ef7\u503c\uff0c\u7528\u4e8e\u754c\u9650\u6761\u4ef6 int totalValue = 0 ; for ( int value : values ) { totalValue += value ; } // \u8c03\u7528\u56de\u6eaf\u51fd\u6570 backtrack ( 0 , 0 , 0 , capacity , weights , values , currentChoice , totalValue ); // \u8f93\u51fa\u7ed3\u679c cout << \"\u6700\u5927\u4ef7\u503c: \" << maxValue << endl ; cout << \"\u9009\u62e9\u7684\u7269\u54c1: \" ; for ( int i = 0 ; i < bestChoice . size (); i ++ ) { if ( bestChoice [ i ] == 1 ) { cout << i + 1 << \" \" ; } } cout << endl ; return 0 ; }","title":"\u603b\u7ed3"},{"location":"Algorithm/Backtracking/bag/#_5","text":"constraint \u51fd\u6570 \uff1a \u7528\u4e8e\u68c0\u67e5\u7ea6\u675f\u6761\u4ef6\uff0c\u5224\u65ad\u5f53\u524d\u91cd\u91cf\u662f\u5426\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\u3002 \u5982\u679c\u8d85\u8fc7\u5bb9\u91cf\uff0c\u8fd4\u56de false \uff0c\u505c\u6b62\u641c\u7d22\u3002 bound \u51fd\u6570 \uff1a \u7528\u4e8e\u68c0\u67e5\u754c\u9650\u6761\u4ef6\uff0c\u5224\u65ad\u5f53\u524d\u8282\u70b9\u7684\u6f5c\u5728\u6700\u5927\u4ef7\u503c\u662f\u5426\u6709\u53ef\u80fd\u8d85\u8fc7\u5f53\u524d\u6700\u4f18\u89e3\u3002 \u5982\u679c\u5f53\u524d\u4ef7\u503c\u52a0\u4e0a\u5269\u4f59\u7269\u54c1\u7684\u6700\u5927\u53ef\u80fd\u4ef7\u503c\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u6700\u4f18\u89e3\uff0c\u8fd4\u56de false \uff0c\u505c\u6b62\u641c\u7d22\u3002 backtrack \u51fd\u6570 \uff1a \u6838\u5fc3\u56de\u6eaf\u51fd\u6570\uff0c\u9012\u5f52\u5730\u63a2\u7d22\u89e3\u7a7a\u95f4\u6811\u3002 \u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u5206\u652f\uff1a\u9009\u62e9\u5f53\u524d\u7269\u54c1\u6216\u4e0d\u9009\u62e9\u5f53\u524d\u7269\u54c1\u3002 \u5728\u6bcf\u6b21\u9012\u5f52\u8c03\u7528\u524d\uff0c\u68c0\u67e5\u7ea6\u675f\u6761\u4ef6\u548c\u754c\u9650\u6761\u4ef6\uff0c\u8fdb\u884c\u526a\u679d\u3002 remainingValue \uff1a \u8868\u793a\u5f53\u524d\u8282\u70b9\u4e4b\u540e\u5269\u4f59\u7269\u54c1\u7684\u603b\u4ef7\u503c\uff0c\u7528\u4e8e\u754c\u9650\u6761\u4ef6\u7684\u8ba1\u7b97\u3002 \u4e3b\u51fd\u6570 \uff1a \u521d\u59cb\u5316\u7269\u54c1\u7684\u91cd\u91cf\u3001\u4ef7\u503c\u548c\u80cc\u5305\u5bb9\u91cf\u3002 \u8ba1\u7b97\u6240\u6709\u7269\u54c1\u7684\u603b\u4ef7\u503c\uff0c\u4f20\u9012\u7ed9\u56de\u6eaf\u51fd\u6570\u3002 \u8f93\u51fa\u6700\u5927\u4ef7\u503c\u548c\u5bf9\u5e94\u7684\u9009\u62e9\u65b9\u6848\u3002","title":"\u4ee3\u7801\u8bf4\u660e"},{"location":"Algorithm/Backtracking/bag/#_6","text":"","title":"\u8fd0\u884c\u7ed3\u679c"},{"location":"Algorithm/Backtracking/bag/#_7","text":"\u7269\u54c1\u91cd\u91cf\uff1a [2, 3, 4, 5] \u7269\u54c1\u4ef7\u503c\uff1a [3, 4, 5, 6] \u80cc\u5305\u5bb9\u91cf\uff1a 8","title":"\u8f93\u5165\uff1a"},{"location":"Algorithm/Backtracking/bag/#_8","text":"\u6700\u5927\u4ef7\u503c: 10 \u9009\u62e9\u7684\u7269\u54c1: 2 4","title":"\u8f93\u51fa\uff1a"},{"location":"Algorithm/Backtracking/bag/#_9","text":"\u4f7f\u7528 constraint \u548c bound \u51fd\u6570\u5206\u522b\u5b9e\u73b0\u7ea6\u675f\u6761\u4ef6\u548c\u754c\u9650\u6761\u4ef6\u7684\u68c0\u67e5\uff0c\u903b\u8f91\u6e05\u6670\u3002 backtrack \u51fd\u6570\u901a\u8fc7\u9012\u5f52\u63a2\u7d22\u89e3\u7a7a\u95f4\u6811\uff0c\u5e76\u7ed3\u5408\u526a\u679d\u4f18\u5316\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u641c\u7d22\u3002 \u8fd9\u79cd\u8bbe\u8ba1\u65b9\u5f0f\u6a21\u5757\u5316\u7a0b\u5ea6\u9ad8\uff0c\u4fbf\u4e8e\u6269\u5c55\u548c\u7ef4\u62a4\u3002","title":"\u603b\u7ed3"},{"location":"Algorithm/Backtracking/load/","text":"\u56de\u6eaf\u6cd5\u7684\u601d\u60f3 \u56de\u6eaf\u6cd5\u662f\u4e00\u79cd \u7cfb\u7edf\u641c\u7d22\u95ee\u9898\u89e3\u7a7a\u95f4 \u7684\u7b97\u6cd5\uff0c\u9002\u7528\u4e8e\u89e3\u51b3\u7ec4\u5408\u4f18\u5316\u95ee\u9898\u3001\u7ea6\u675f\u6ee1\u8db3\u95ee\u9898\u7b49\u3002\u5b83\u901a\u8fc7\u9010\u6b65\u6784\u9020\u89e3\uff0c\u5e76\u5728\u53d1\u73b0\u5f53\u524d\u89e3\u4e0d\u6ee1\u8db3\u6761\u4ef6\u65f6\u56de\u9000\uff08\u56de\u6eaf\uff09\u5230\u4e0a\u4e00\u6b65\uff0c\u5c1d\u8bd5\u5176\u4ed6\u53ef\u80fd\u7684\u89e3\u3002 \u6838\u5fc3\u601d\u60f3 \u9010\u6b65\u6784\u9020\u89e3 \uff1a \u4ece\u4e00\u4e2a\u521d\u59cb\u72b6\u6001\u5f00\u59cb\uff0c\u9010\u6b65\u5c1d\u8bd5\u5c06\u95ee\u9898\u7684\u89e3\u6784\u9020\u51fa\u6765\u3002 \u6bcf\u4e00\u6b65\u9009\u62e9\u4e00\u4e2a\u53ef\u80fd\u7684\u9009\u9879\uff0c\u8fdb\u5165\u4e0b\u4e00\u6b65\u3002 \u7ea6\u675f\u68c0\u67e5 \uff1a \u5728\u6bcf\u4e00\u6b65\u9009\u62e9\u540e\uff0c\u68c0\u67e5\u5f53\u524d\u90e8\u5206\u89e3\u662f\u5426\u6ee1\u8db3\u95ee\u9898\u7684\u7ea6\u675f\u6761\u4ef6\u3002 \u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u7acb\u5373\u56de\u9000\uff08\u56de\u6eaf\uff09\u5230\u4e0a\u4e00\u6b65\uff0c\u5c1d\u8bd5\u5176\u4ed6\u9009\u9879\u3002 \u56de\u6eaf \uff1a \u5982\u679c\u5f53\u524d\u8def\u5f84\u65e0\u6cd5\u7ee7\u7eed\uff08\u5373\u6240\u6709\u9009\u9879\u90fd\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff09\uff0c\u5219\u56de\u9000\u5230\u4e0a\u4e00\u6b65\uff0c\u64a4\u9500\u5f53\u524d\u9009\u62e9\uff0c\u5c1d\u8bd5\u5176\u4ed6\u53ef\u80fd\u7684\u8def\u5f84\u3002 \u7ec8\u6b62\u6761\u4ef6 \uff1a \u5f53\u627e\u5230\u4e00\u4e2a\u5b8c\u6574\u7684\u89e3\u5e76\u6ee1\u8db3\u6240\u6709\u7ea6\u675f\u65f6\uff0c\u8bb0\u5f55\u8be5\u89e3\u3002 \u5982\u679c\u6240\u6709\u8def\u5f84\u90fd\u5c1d\u8bd5\u5b8c\u6bd5\uff0c\u5219\u7b97\u6cd5\u7ed3\u675f\u3002 \u9002\u7528\u573a\u666f \u56de\u6eaf\u6cd5\u9002\u7528\u4e8e\u4ee5\u4e0b\u7c7b\u578b\u7684\u95ee\u9898\uff1a 1. \u7ec4\u5408\u95ee\u9898 \uff1a - \u5982\u5b50\u96c6\u751f\u6210\u3001\u6392\u5217\u95ee\u9898\u3001\u7ec4\u5408\u95ee\u9898\u3002 2. \u7ea6\u675f\u6ee1\u8db3\u95ee\u9898 \uff1a - \u5982\u6570\u72ec\u3001\u56fe\u7740\u8272\u95ee\u9898\u3001N\u7687\u540e\u95ee\u9898\u3002 3. \u8def\u5f84\u641c\u7d22\u95ee\u9898 \uff1a - \u5982\u8ff7\u5bab\u95ee\u9898\u3001\u56fe\u7684\u904d\u5386\u3002 \u56de\u6eaf\u6cd5\u7684\u7279\u70b9 \u4f18\u70b9 \uff1a \u7b80\u5355\u76f4\u89c2\uff0c\u9002\u5408\u89e3\u51b3\u5c0f\u89c4\u6a21\u95ee\u9898\u3002 \u80fd\u591f\u627e\u5230\u6240\u6709\u53ef\u80fd\u7684\u89e3\uff08\u7a77\u4e3e\u6cd5\uff09\u3002 \u7f3a\u70b9 \uff1a \u65f6\u95f4\u590d\u6742\u5ea6\u9ad8\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u5927\u91cf\u5197\u4f59\u8ba1\u7b97\u3002 \u5bf9\u4e8e\u5927\u89c4\u6a21\u95ee\u9898\uff0c\u6548\u7387\u8f83\u4f4e\u3002 \u603b\u7ed3 \u56de\u6eaf\u6cd5\u662f\u4e00\u79cd\u901a\u8fc7 \u8bd5\u63a2\u548c\u56de\u9000 \u7684\u65b9\u5f0f\uff0c\u7cfb\u7edf\u5730\u641c\u7d22\u89e3\u7a7a\u95f4\u7684\u7b97\u6cd5\u3002\u5b83\u7684\u6838\u5fc3\u662f \u9010\u6b65\u5c1d\u8bd5\u6784\u9020\u89e3 \uff0c\u5e76\u5728\u4e0d\u6ee1\u8db3\u6761\u4ef6\u65f6\u56de\u9000\u5230\u4e0a\u4e00\u6b65\uff0c\u5c1d\u8bd5\u5176\u4ed6\u53ef\u80fd\u7684\u8def\u5f84\u3002","title":"\u88c5\u8f7d\u95ee\u9898"},{"location":"Algorithm/Backtracking/load/#_1","text":"\u56de\u6eaf\u6cd5\u662f\u4e00\u79cd \u7cfb\u7edf\u641c\u7d22\u95ee\u9898\u89e3\u7a7a\u95f4 \u7684\u7b97\u6cd5\uff0c\u9002\u7528\u4e8e\u89e3\u51b3\u7ec4\u5408\u4f18\u5316\u95ee\u9898\u3001\u7ea6\u675f\u6ee1\u8db3\u95ee\u9898\u7b49\u3002\u5b83\u901a\u8fc7\u9010\u6b65\u6784\u9020\u89e3\uff0c\u5e76\u5728\u53d1\u73b0\u5f53\u524d\u89e3\u4e0d\u6ee1\u8db3\u6761\u4ef6\u65f6\u56de\u9000\uff08\u56de\u6eaf\uff09\u5230\u4e0a\u4e00\u6b65\uff0c\u5c1d\u8bd5\u5176\u4ed6\u53ef\u80fd\u7684\u89e3\u3002","title":"\u56de\u6eaf\u6cd5\u7684\u601d\u60f3"},{"location":"Algorithm/Backtracking/load/#_2","text":"\u9010\u6b65\u6784\u9020\u89e3 \uff1a \u4ece\u4e00\u4e2a\u521d\u59cb\u72b6\u6001\u5f00\u59cb\uff0c\u9010\u6b65\u5c1d\u8bd5\u5c06\u95ee\u9898\u7684\u89e3\u6784\u9020\u51fa\u6765\u3002 \u6bcf\u4e00\u6b65\u9009\u62e9\u4e00\u4e2a\u53ef\u80fd\u7684\u9009\u9879\uff0c\u8fdb\u5165\u4e0b\u4e00\u6b65\u3002 \u7ea6\u675f\u68c0\u67e5 \uff1a \u5728\u6bcf\u4e00\u6b65\u9009\u62e9\u540e\uff0c\u68c0\u67e5\u5f53\u524d\u90e8\u5206\u89e3\u662f\u5426\u6ee1\u8db3\u95ee\u9898\u7684\u7ea6\u675f\u6761\u4ef6\u3002 \u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u7acb\u5373\u56de\u9000\uff08\u56de\u6eaf\uff09\u5230\u4e0a\u4e00\u6b65\uff0c\u5c1d\u8bd5\u5176\u4ed6\u9009\u9879\u3002 \u56de\u6eaf \uff1a \u5982\u679c\u5f53\u524d\u8def\u5f84\u65e0\u6cd5\u7ee7\u7eed\uff08\u5373\u6240\u6709\u9009\u9879\u90fd\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff09\uff0c\u5219\u56de\u9000\u5230\u4e0a\u4e00\u6b65\uff0c\u64a4\u9500\u5f53\u524d\u9009\u62e9\uff0c\u5c1d\u8bd5\u5176\u4ed6\u53ef\u80fd\u7684\u8def\u5f84\u3002 \u7ec8\u6b62\u6761\u4ef6 \uff1a \u5f53\u627e\u5230\u4e00\u4e2a\u5b8c\u6574\u7684\u89e3\u5e76\u6ee1\u8db3\u6240\u6709\u7ea6\u675f\u65f6\uff0c\u8bb0\u5f55\u8be5\u89e3\u3002 \u5982\u679c\u6240\u6709\u8def\u5f84\u90fd\u5c1d\u8bd5\u5b8c\u6bd5\uff0c\u5219\u7b97\u6cd5\u7ed3\u675f\u3002","title":"\u6838\u5fc3\u601d\u60f3"},{"location":"Algorithm/Backtracking/load/#_3","text":"\u56de\u6eaf\u6cd5\u9002\u7528\u4e8e\u4ee5\u4e0b\u7c7b\u578b\u7684\u95ee\u9898\uff1a 1. \u7ec4\u5408\u95ee\u9898 \uff1a - \u5982\u5b50\u96c6\u751f\u6210\u3001\u6392\u5217\u95ee\u9898\u3001\u7ec4\u5408\u95ee\u9898\u3002 2. \u7ea6\u675f\u6ee1\u8db3\u95ee\u9898 \uff1a - \u5982\u6570\u72ec\u3001\u56fe\u7740\u8272\u95ee\u9898\u3001N\u7687\u540e\u95ee\u9898\u3002 3. \u8def\u5f84\u641c\u7d22\u95ee\u9898 \uff1a - \u5982\u8ff7\u5bab\u95ee\u9898\u3001\u56fe\u7684\u904d\u5386\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"Algorithm/Backtracking/load/#_4","text":"\u4f18\u70b9 \uff1a \u7b80\u5355\u76f4\u89c2\uff0c\u9002\u5408\u89e3\u51b3\u5c0f\u89c4\u6a21\u95ee\u9898\u3002 \u80fd\u591f\u627e\u5230\u6240\u6709\u53ef\u80fd\u7684\u89e3\uff08\u7a77\u4e3e\u6cd5\uff09\u3002 \u7f3a\u70b9 \uff1a \u65f6\u95f4\u590d\u6742\u5ea6\u9ad8\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u5927\u91cf\u5197\u4f59\u8ba1\u7b97\u3002 \u5bf9\u4e8e\u5927\u89c4\u6a21\u95ee\u9898\uff0c\u6548\u7387\u8f83\u4f4e\u3002","title":"\u56de\u6eaf\u6cd5\u7684\u7279\u70b9"},{"location":"Algorithm/Backtracking/load/#_5","text":"\u56de\u6eaf\u6cd5\u662f\u4e00\u79cd\u901a\u8fc7 \u8bd5\u63a2\u548c\u56de\u9000 \u7684\u65b9\u5f0f\uff0c\u7cfb\u7edf\u5730\u641c\u7d22\u89e3\u7a7a\u95f4\u7684\u7b97\u6cd5\u3002\u5b83\u7684\u6838\u5fc3\u662f \u9010\u6b65\u5c1d\u8bd5\u6784\u9020\u89e3 \uff0c\u5e76\u5728\u4e0d\u6ee1\u8db3\u6761\u4ef6\u65f6\u56de\u9000\u5230\u4e0a\u4e00\u6b65\uff0c\u5c1d\u8bd5\u5176\u4ed6\u53ef\u80fd\u7684\u8def\u5f84\u3002","title":"\u603b\u7ed3"},{"location":"Algorithm/divide_and_conquer/quick_sort/","text":"\u5feb\u901f\u6392\u5e8f\u7684\u601d\u60f3 \u5feb\u901f\u6392\u5e8f\uff08Quick Sort\uff09\u662f\u4e00\u79cd\u57fa\u4e8e \u5206\u6cbb\u6cd5\uff08Divide and Conquer\uff09 \u7684\u9ad8\u6548\u6392\u5e8f\u7b97\u6cd5\u3002\u5b83\u901a\u8fc7\u5c06\u6570\u7ec4\u5206\u6210\u8f83\u5c0f\u7684\u5b50\u6570\u7ec4\u9012\u5f52\u5730\u6392\u5e8f\uff0c\u6700\u7ec8\u5b9e\u73b0\u6574\u4e2a\u6570\u7ec4\u7684\u6709\u5e8f\u3002 \u6838\u5fc3\u601d\u60f3 \u9009\u62e9\u57fa\u51c6\uff08Pivot\uff09 \uff1a \u4ece\u6570\u7ec4\u4e2d\u9009\u62e9\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u57fa\u51c6\uff08\u901a\u5e38\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u3001\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6216\u968f\u673a\u9009\u62e9\uff09\u3002 \u5206\u533a\uff08Partition\uff09 \uff1a \u5c06\u6570\u7ec4\u5206\u4e3a\u4e24\u90e8\u5206\uff1a \u5de6\u4fa7 \uff1a\u6240\u6709\u5c0f\u4e8e\u57fa\u51c6\u7684\u5143\u7d20\u3002 \u53f3\u4fa7 \uff1a\u6240\u6709\u5927\u4e8e\u57fa\u51c6\u7684\u5143\u7d20\u3002 \u57fa\u51c6\u5143\u7d20\u653e\u5728\u4e2d\u95f4\u7684\u6b63\u786e\u4f4d\u7f6e\u3002 \u9012\u5f52\u6392\u5e8f \uff1a \u5bf9\u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u5b50\u6570\u7ec4\u5206\u522b\u9012\u5f52\u5730\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\u3002 \u6b65\u9aa4 \u9009\u62e9\u57fa\u51c6\u5143\u7d20\u3002 \u8c03\u6574\u6570\u7ec4\uff0c\u4f7f\u5f97\u57fa\u51c6\u5de6\u4fa7\u7684\u5143\u7d20\u90fd\u5c0f\u4e8e\u57fa\u51c6\uff0c\u53f3\u4fa7\u7684\u5143\u7d20\u90fd\u5927\u4e8e\u57fa\u51c6\u3002 \u5bf9\u5de6\u53f3\u5b50\u6570\u7ec4\u9012\u5f52\u6267\u884c\u5feb\u901f\u6392\u5e8f\u3002 \u793a\u4f8b \u5bf9\u6570\u7ec4 [6, 3, 8, 5, 2, 7, 4, 1] \u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff1a \u9009\u62e9\u57fa\u51c6 \uff1a\u9009\u62e9 6 \u4f5c\u4e3a\u57fa\u51c6\u3002 \u5206\u533a \uff1a \u5de6\u4fa7\uff1a [3, 5, 2, 4, 1] \u57fa\u51c6\uff1a 6 \u53f3\u4fa7\uff1a [8, 7] \u9012\u5f52\u6392\u5e8f \uff1a \u5bf9\u5de6\u4fa7 [3, 5, 2, 4, 1] \u548c\u53f3\u4fa7 [8, 7] \u5206\u522b\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\u3002 \u6700\u7ec8\u7ed3\u679c \uff1a [1, 2, 3, 4, 5, 6, 7, 8] \u65f6\u95f4\u590d\u6742\u5ea6 \u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6 \uff1a O(n log n) \uff08\u6bcf\u6b21\u5206\u533a\u5c06\u6570\u7ec4\u5747\u5300\u5206\u6210\u4e24\u90e8\u5206\uff09\u3002 \u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6 \uff1a O(n^2) \uff08\u5f53\u6bcf\u6b21\u5206\u533a\u6781\u4e0d\u5747\u5300\u65f6\uff0c\u5982\u6570\u7ec4\u5df2\u63a5\u8fd1\u6709\u5e8f\uff09\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6 \uff1a O(log n) \uff08\u9012\u5f52\u8c03\u7528\u6808\u7684\u6df1\u5ea6\uff09\u3002 \u7279\u70b9 \u4e0d\u7a33\u5b9a\u6392\u5e8f \uff1a\u76f8\u540c\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e\u53ef\u80fd\u4f1a\u6539\u53d8\u3002 \u539f\u5730\u6392\u5e8f \uff1a\u4e0d\u9700\u8981\u989d\u5916\u7684\u5b58\u50a8\u7a7a\u95f4\uff08\u9664\u4e86\u9012\u5f52\u8c03\u7528\u6808\uff09\u3002 \u5feb\u901f\u6392\u5e8f\u56e0\u5176\u9ad8\u6548\u6027\u548c\u7b80\u5355\u6027\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5b9e\u9645\u573a\u666f\u4e2d\u3002 int partition ( vector < int > & arr , int l , int r ) { int pivot = arr [ l ]; // \u9009\u62e9\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u57fa\u51c6 while ( l < r ) { while ( l < r && arr [ r ] >= pivot ) r -- ; // \u4ece\u53f3\u5411\u5de6\u627e\u5230\u5c0f\u4e8e\u57fa\u51c6\u7684\u5143\u7d20 arr [ l ] = arr [ r ]; // \u5c06\u5c0f\u4e8e\u57fa\u51c6\u7684\u5143\u7d20\u79fb\u5230\u5de6\u4fa7 while ( l < r && arr [ l ] <= pivot ) l ++ ; // \u4ece\u5de6\u5411\u53f3\u627e\u5230\u5927\u4e8e\u57fa\u51c6\u7684\u5143\u7d20 arr [ r ] = arr [ l ]; // \u5c06\u5927\u4e8e\u57fa\u51c6\u7684\u5143\u7d20\u79fb\u5230\u53f3\u4fa7 } arr [ l ] = pivot ; // \u57fa\u51c6\u5143\u7d20\u5f52\u4f4d return l ; // \u8fd4\u56de\u57fa\u51c6\u5143\u7d20\u7684\u4f4d\u7f6e }","title":"\u5feb\u901f\u6392\u5e8f"},{"location":"Algorithm/divide_and_conquer/quick_sort/#_1","text":"\u5feb\u901f\u6392\u5e8f\uff08Quick Sort\uff09\u662f\u4e00\u79cd\u57fa\u4e8e \u5206\u6cbb\u6cd5\uff08Divide and Conquer\uff09 \u7684\u9ad8\u6548\u6392\u5e8f\u7b97\u6cd5\u3002\u5b83\u901a\u8fc7\u5c06\u6570\u7ec4\u5206\u6210\u8f83\u5c0f\u7684\u5b50\u6570\u7ec4\u9012\u5f52\u5730\u6392\u5e8f\uff0c\u6700\u7ec8\u5b9e\u73b0\u6574\u4e2a\u6570\u7ec4\u7684\u6709\u5e8f\u3002","title":"\u5feb\u901f\u6392\u5e8f\u7684\u601d\u60f3"},{"location":"Algorithm/divide_and_conquer/quick_sort/#_2","text":"\u9009\u62e9\u57fa\u51c6\uff08Pivot\uff09 \uff1a \u4ece\u6570\u7ec4\u4e2d\u9009\u62e9\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u57fa\u51c6\uff08\u901a\u5e38\u662f\u7b2c\u4e00\u4e2a\u5143\u7d20\u3001\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6216\u968f\u673a\u9009\u62e9\uff09\u3002 \u5206\u533a\uff08Partition\uff09 \uff1a \u5c06\u6570\u7ec4\u5206\u4e3a\u4e24\u90e8\u5206\uff1a \u5de6\u4fa7 \uff1a\u6240\u6709\u5c0f\u4e8e\u57fa\u51c6\u7684\u5143\u7d20\u3002 \u53f3\u4fa7 \uff1a\u6240\u6709\u5927\u4e8e\u57fa\u51c6\u7684\u5143\u7d20\u3002 \u57fa\u51c6\u5143\u7d20\u653e\u5728\u4e2d\u95f4\u7684\u6b63\u786e\u4f4d\u7f6e\u3002 \u9012\u5f52\u6392\u5e8f \uff1a \u5bf9\u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u5b50\u6570\u7ec4\u5206\u522b\u9012\u5f52\u5730\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\u3002","title":"\u6838\u5fc3\u601d\u60f3"},{"location":"Algorithm/divide_and_conquer/quick_sort/#_3","text":"\u9009\u62e9\u57fa\u51c6\u5143\u7d20\u3002 \u8c03\u6574\u6570\u7ec4\uff0c\u4f7f\u5f97\u57fa\u51c6\u5de6\u4fa7\u7684\u5143\u7d20\u90fd\u5c0f\u4e8e\u57fa\u51c6\uff0c\u53f3\u4fa7\u7684\u5143\u7d20\u90fd\u5927\u4e8e\u57fa\u51c6\u3002 \u5bf9\u5de6\u53f3\u5b50\u6570\u7ec4\u9012\u5f52\u6267\u884c\u5feb\u901f\u6392\u5e8f\u3002","title":"\u6b65\u9aa4"},{"location":"Algorithm/divide_and_conquer/quick_sort/#_4","text":"\u5bf9\u6570\u7ec4 [6, 3, 8, 5, 2, 7, 4, 1] \u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff1a \u9009\u62e9\u57fa\u51c6 \uff1a\u9009\u62e9 6 \u4f5c\u4e3a\u57fa\u51c6\u3002 \u5206\u533a \uff1a \u5de6\u4fa7\uff1a [3, 5, 2, 4, 1] \u57fa\u51c6\uff1a 6 \u53f3\u4fa7\uff1a [8, 7] \u9012\u5f52\u6392\u5e8f \uff1a \u5bf9\u5de6\u4fa7 [3, 5, 2, 4, 1] \u548c\u53f3\u4fa7 [8, 7] \u5206\u522b\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\u3002 \u6700\u7ec8\u7ed3\u679c \uff1a [1, 2, 3, 4, 5, 6, 7, 8]","title":"\u793a\u4f8b"},{"location":"Algorithm/divide_and_conquer/quick_sort/#_5","text":"\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6 \uff1a O(n log n) \uff08\u6bcf\u6b21\u5206\u533a\u5c06\u6570\u7ec4\u5747\u5300\u5206\u6210\u4e24\u90e8\u5206\uff09\u3002 \u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6 \uff1a O(n^2) \uff08\u5f53\u6bcf\u6b21\u5206\u533a\u6781\u4e0d\u5747\u5300\u65f6\uff0c\u5982\u6570\u7ec4\u5df2\u63a5\u8fd1\u6709\u5e8f\uff09\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6 \uff1a O(log n) \uff08\u9012\u5f52\u8c03\u7528\u6808\u7684\u6df1\u5ea6\uff09\u3002","title":"\u65f6\u95f4\u590d\u6742\u5ea6"},{"location":"Algorithm/divide_and_conquer/quick_sort/#_6","text":"\u4e0d\u7a33\u5b9a\u6392\u5e8f \uff1a\u76f8\u540c\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e\u53ef\u80fd\u4f1a\u6539\u53d8\u3002 \u539f\u5730\u6392\u5e8f \uff1a\u4e0d\u9700\u8981\u989d\u5916\u7684\u5b58\u50a8\u7a7a\u95f4\uff08\u9664\u4e86\u9012\u5f52\u8c03\u7528\u6808\uff09\u3002 \u5feb\u901f\u6392\u5e8f\u56e0\u5176\u9ad8\u6548\u6027\u548c\u7b80\u5355\u6027\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5b9e\u9645\u573a\u666f\u4e2d\u3002 int partition ( vector < int > & arr , int l , int r ) { int pivot = arr [ l ]; // \u9009\u62e9\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u57fa\u51c6 while ( l < r ) { while ( l < r && arr [ r ] >= pivot ) r -- ; // \u4ece\u53f3\u5411\u5de6\u627e\u5230\u5c0f\u4e8e\u57fa\u51c6\u7684\u5143\u7d20 arr [ l ] = arr [ r ]; // \u5c06\u5c0f\u4e8e\u57fa\u51c6\u7684\u5143\u7d20\u79fb\u5230\u5de6\u4fa7 while ( l < r && arr [ l ] <= pivot ) l ++ ; // \u4ece\u5de6\u5411\u53f3\u627e\u5230\u5927\u4e8e\u57fa\u51c6\u7684\u5143\u7d20 arr [ r ] = arr [ l ]; // \u5c06\u5927\u4e8e\u57fa\u51c6\u7684\u5143\u7d20\u79fb\u5230\u53f3\u4fa7 } arr [ l ] = pivot ; // \u57fa\u51c6\u5143\u7d20\u5f52\u4f4d return l ; // \u8fd4\u56de\u57fa\u51c6\u5143\u7d20\u7684\u4f4d\u7f6e }","title":"\u7279\u70b9"},{"location":"Algorithm/dynamic_programming/Floyd-Warshall/","text":"Floyd-Warshall \u7b97\u6cd5\u7b80\u4ecb Floyd-Warshall \u7b97\u6cd5 \u662f\u4e00\u79cd\u7ecf\u5178\u7684 \u52a8\u6001\u89c4\u5212\u7b97\u6cd5 ,\u7528\u4e8e\u89e3\u51b3 \u591a\u6e90\u6700\u77ed\u8def\u5f84\u95ee\u9898 \u3002\u5b83\u53ef\u4ee5\u8ba1\u7b97\u56fe\u4e2d\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84,\u9002\u7528\u4e8e\u6709\u5411\u56fe\u548c\u65e0\u5411\u56fe\u3002 \u7b97\u6cd5\u601d\u60f3 \u52a8\u6001\u89c4\u5212 \uff1a \u901a\u8fc7\u9010\u6b65\u589e\u52a0\u4e2d\u95f4\u8282\u70b9,\u66f4\u65b0\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u3002 \u5982\u679c\u4ece\u8282\u70b9 i \u5230\u8282\u70b9 j \u7684\u8def\u5f84\u7ecf\u8fc7\u8282\u70b9 k \u4f1a\u66f4\u77ed,\u5219\u66f4\u65b0\u6700\u77ed\u8def\u5f84\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a \u8bbe dist[i][j] \u8868\u793a\u4ece\u8282\u70b9 i \u5230\u8282\u70b9 j \u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]) \u5176\u4e2d, k \u662f\u5f53\u524d\u8003\u8651\u7684\u4e2d\u95f4\u8282\u70b9\u3002 \u7b97\u6cd5\u6b65\u9aa4 \u521d\u59cb\u5316 \uff1a \u5982\u679c\u8282\u70b9 i \u5230\u8282\u70b9 j \u6709\u8fb9,\u5219 dist[i][j] \u4e3a\u8fb9\u7684\u6743\u503c\u3002 \u5982\u679c\u6ca1\u6709\u8fb9,\u5219 dist[i][j] \u521d\u59cb\u5316\u4e3a\u6b63\u65e0\u7a77\u5927\uff08 INF \uff09\u3002 \u81ea\u73af\uff08 i == j \uff09\u7684\u8ddd\u79bb\u521d\u59cb\u5316\u4e3a 0 \u3002 \u9010\u6b65\u52a0\u5165\u4e2d\u95f4\u8282\u70b9 \uff1a \u5bf9\u6bcf\u4e2a\u8282\u70b9 k ,\u5c1d\u8bd5\u5c06\u5176\u4f5c\u4e3a\u4e2d\u95f4\u8282\u70b9,\u66f4\u65b0\u6240\u6709\u8282\u70b9\u5bf9 (i, j) \u7684\u6700\u77ed\u8def\u5f84\u3002 \u66f4\u65b0\u6700\u77ed\u8def\u5f84 \uff1a \u5982\u679c\u901a\u8fc7\u8282\u70b9 k \u7684\u8def\u5f84\u66f4\u77ed,\u5219\u66f4\u65b0 dist[i][j] \u3002 \u8f93\u51fa\u7ed3\u679c \uff1a \u6700\u7ec8, dist[i][j] \u8868\u793a\u4ece\u8282\u70b9 i \u5230\u8282\u70b9 j \u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002 \u7279\u70b9 \u9002\u7528\u8303\u56f4 \uff1a \u9002\u7528\u4e8e\u6709\u5411\u56fe\u548c\u65e0\u5411\u56fe\u3002 \u53ef\u4ee5\u5904\u7406\u8d1f\u6743\u8fb9,\u4f46\u4e0d\u80fd\u5904\u7406\u8d1f\u6743\u73af\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(V^3) ,\u5176\u4e2d V \u662f\u56fe\u7684\u8282\u70b9\u6570\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6 \uff1a \u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(V^2) ,\u7528\u4e8e\u5b58\u50a8\u8ddd\u79bb\u77e9\u9635\u3002 \u603b\u7ed3 if ( dp [ i ][ k ] != INT_MAX && dp [ k ][ j ] != INT_MAX ){ dp [ i ][ j ] = min ( dp [ i ][ j ], dp [ i ][ k ] + dp [ k ][ j ]); } floyd \u7b97\u6cd5\u8fd8\u7b97\u7b80\u5355,\u601d\u8def\u5f88\u6e05\u6670,\u4f9d\u6b21\u9009\u62e9\u8282\u70b9 k \u4f5c\u4e3a\u4e2d\u95f4\u8282\u70b9,\u7136\u540e\u66f4\u65b0\u8ddd\u79bb\u4e8c\u7ef4\u77e9\u9635dp\u5373\u53ef\uff0c\u4e3b\u8981\u662f\u8981\u5224\u65ad\u4e0b i->k\u548ck->j \u662f\u5426\u53ef\u8fbe\uff0c\u5373\u8ddd\u79bb\u4e0d\u662f INT_MAX \u3002","title":"Floyd-Warshall"},{"location":"Algorithm/dynamic_programming/Floyd-Warshall/#floyd-warshall","text":"Floyd-Warshall \u7b97\u6cd5 \u662f\u4e00\u79cd\u7ecf\u5178\u7684 \u52a8\u6001\u89c4\u5212\u7b97\u6cd5 ,\u7528\u4e8e\u89e3\u51b3 \u591a\u6e90\u6700\u77ed\u8def\u5f84\u95ee\u9898 \u3002\u5b83\u53ef\u4ee5\u8ba1\u7b97\u56fe\u4e2d\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84,\u9002\u7528\u4e8e\u6709\u5411\u56fe\u548c\u65e0\u5411\u56fe\u3002","title":"Floyd-Warshall \u7b97\u6cd5\u7b80\u4ecb"},{"location":"Algorithm/dynamic_programming/Floyd-Warshall/#_1","text":"\u52a8\u6001\u89c4\u5212 \uff1a \u901a\u8fc7\u9010\u6b65\u589e\u52a0\u4e2d\u95f4\u8282\u70b9,\u66f4\u65b0\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u3002 \u5982\u679c\u4ece\u8282\u70b9 i \u5230\u8282\u70b9 j \u7684\u8def\u5f84\u7ecf\u8fc7\u8282\u70b9 k \u4f1a\u66f4\u77ed,\u5219\u66f4\u65b0\u6700\u77ed\u8def\u5f84\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a \u8bbe dist[i][j] \u8868\u793a\u4ece\u8282\u70b9 i \u5230\u8282\u70b9 j \u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]) \u5176\u4e2d, k \u662f\u5f53\u524d\u8003\u8651\u7684\u4e2d\u95f4\u8282\u70b9\u3002","title":"\u7b97\u6cd5\u601d\u60f3"},{"location":"Algorithm/dynamic_programming/Floyd-Warshall/#_2","text":"\u521d\u59cb\u5316 \uff1a \u5982\u679c\u8282\u70b9 i \u5230\u8282\u70b9 j \u6709\u8fb9,\u5219 dist[i][j] \u4e3a\u8fb9\u7684\u6743\u503c\u3002 \u5982\u679c\u6ca1\u6709\u8fb9,\u5219 dist[i][j] \u521d\u59cb\u5316\u4e3a\u6b63\u65e0\u7a77\u5927\uff08 INF \uff09\u3002 \u81ea\u73af\uff08 i == j \uff09\u7684\u8ddd\u79bb\u521d\u59cb\u5316\u4e3a 0 \u3002 \u9010\u6b65\u52a0\u5165\u4e2d\u95f4\u8282\u70b9 \uff1a \u5bf9\u6bcf\u4e2a\u8282\u70b9 k ,\u5c1d\u8bd5\u5c06\u5176\u4f5c\u4e3a\u4e2d\u95f4\u8282\u70b9,\u66f4\u65b0\u6240\u6709\u8282\u70b9\u5bf9 (i, j) \u7684\u6700\u77ed\u8def\u5f84\u3002 \u66f4\u65b0\u6700\u77ed\u8def\u5f84 \uff1a \u5982\u679c\u901a\u8fc7\u8282\u70b9 k \u7684\u8def\u5f84\u66f4\u77ed,\u5219\u66f4\u65b0 dist[i][j] \u3002 \u8f93\u51fa\u7ed3\u679c \uff1a \u6700\u7ec8, dist[i][j] \u8868\u793a\u4ece\u8282\u70b9 i \u5230\u8282\u70b9 j \u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002","title":"\u7b97\u6cd5\u6b65\u9aa4"},{"location":"Algorithm/dynamic_programming/Floyd-Warshall/#_3","text":"\u9002\u7528\u8303\u56f4 \uff1a \u9002\u7528\u4e8e\u6709\u5411\u56fe\u548c\u65e0\u5411\u56fe\u3002 \u53ef\u4ee5\u5904\u7406\u8d1f\u6743\u8fb9,\u4f46\u4e0d\u80fd\u5904\u7406\u8d1f\u6743\u73af\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(V^3) ,\u5176\u4e2d V \u662f\u56fe\u7684\u8282\u70b9\u6570\u3002 \u7a7a\u95f4\u590d\u6742\u5ea6 \uff1a \u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(V^2) ,\u7528\u4e8e\u5b58\u50a8\u8ddd\u79bb\u77e9\u9635\u3002","title":"\u7279\u70b9"},{"location":"Algorithm/dynamic_programming/Floyd-Warshall/#_4","text":"if ( dp [ i ][ k ] != INT_MAX && dp [ k ][ j ] != INT_MAX ){ dp [ i ][ j ] = min ( dp [ i ][ j ], dp [ i ][ k ] + dp [ k ][ j ]); } floyd \u7b97\u6cd5\u8fd8\u7b97\u7b80\u5355,\u601d\u8def\u5f88\u6e05\u6670,\u4f9d\u6b21\u9009\u62e9\u8282\u70b9 k \u4f5c\u4e3a\u4e2d\u95f4\u8282\u70b9,\u7136\u540e\u66f4\u65b0\u8ddd\u79bb\u4e8c\u7ef4\u77e9\u9635dp\u5373\u53ef\uff0c\u4e3b\u8981\u662f\u8981\u5224\u65ad\u4e0b i->k\u548ck->j \u662f\u5426\u53ef\u8fbe\uff0c\u5373\u8ddd\u79bb\u4e0d\u662f INT_MAX \u3002","title":"\u603b\u7ed3"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/","text":"\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u662f\u52a8\u6001\u89c4\u5212\u4e2d\u7684\u7ecf\u5178\u95ee\u9898\u4e4b\u4e00\u3002\u5b83\u4e0e 0-1 \u80cc\u5305\u95ee\u9898\u7c7b\u4f3c\uff0c\u4f46\u6709\u4e00\u4e2a\u5173\u952e\u7684\u533a\u522b\uff1a\u5728\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u6bcf\u79cd\u7269\u54c1\u53ef\u4ee5\u88ab\u9009\u62e9\u591a\u6b21\uff0c\u800c\u4e0d\u662f\u6700\u591a\u53ea\u80fd\u9009\u62e9\u4e00\u6b21\u3002 0-1\u80cc\u5305(NPC\u95ee\u9898) \u5728 0-1 \u80cc\u5305\u95ee\u9898 \u4e2d\uff0c\u6bcf\u79cd\u7269\u54c1\u53ea\u80fd\u9009\u62e9\u4e00\u6b21\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a \u72b6\u6001\u5b9a\u4e49 dp[i][j] \u8868\u793a\u524d i \u4e2a\u7269\u54c1\u5728\u80cc\u5305\u5bb9\u91cf\u4e3a j \u65f6\u7684\u6700\u5927\u4ef7\u503c\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \u5bf9\u4e8e\u6bcf\u79cd\u7269\u54c1 i \uff1a - \u5982\u679c\u4e0d\u9009\u62e9\u7269\u54c1 i \uff0c\u5219\uff1a dp[i][j] = dp[i - 1][j]; \u8868\u793a\u5f53\u524d\u5bb9\u91cf j \u7684\u6700\u5927\u4ef7\u503c\u7b49\u4e8e\u524d i-1 \u4e2a\u7269\u54c1\u5728\u5bb9\u91cf j \u65f6\u7684\u6700\u5927\u4ef7\u503c\u3002 \u5982\u679c\u9009\u62e9\u7269\u54c1 i \uff0c\u5219\uff1a dp[i][j] = dp[i - 1][j - weight[i]] + value[i]; \u8868\u793a\u5f53\u524d\u5bb9\u91cf j \u7684\u6700\u5927\u4ef7\u503c\u7b49\u4e8e\u524d i-1 \u4e2a\u7269\u54c1\u5728\u5bb9\u91cf j - weight[i] \u65f6\u7684\u6700\u5927\u4ef7\u503c\uff0c\u52a0\u4e0a\u7269\u54c1 i \u7684\u4ef7\u503c\u3002 \u7efc\u5408\u4e24\u79cd\u60c5\u51b5\uff0c\u53d6\u6700\u5927\u503c\uff1a dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]); \u521d\u59cb\u5316 dp[0][j] = 0 \uff1a\u8868\u793a\u6ca1\u6709\u7269\u54c1\u65f6\uff0c\u80cc\u5305\u7684\u6700\u5927\u4ef7\u503c\u4e3a 0\u3002 dp[i][0] = 0 \uff1a\u8868\u793a\u80cc\u5305\u5bb9\u91cf\u4e3a 0 \u65f6\uff0c\u6700\u5927\u4ef7\u503c\u4e3a 0\u3002 \u4f18\u5316\u4e3a\u4e00\u7ef4\u6570\u7ec4 \u5982\u679c\u4f7f\u7528\u4e00\u7ef4\u6570\u7ec4\u4f18\u5316\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a dp[j] = max(dp[j], dp[j - weight[i]] + value[i]); \u6ce8\u610f\uff1a\u5728\u4e00\u7ef4\u6570\u7ec4\u4e2d\uff0c\u5185\u5c42\u5faa\u73af\u9700\u8981\u4ece \u5927\u5230\u5c0f \u904d\u5386 j \uff0c\u4ee5\u907f\u514d\u91cd\u590d\u4f7f\u7528\u540c\u4e00\u4e2a\u7269\u54c1\u3002 \u5b8c\u5168\u80cc\u5305 \u7ed9\u5b9a\u4e00\u4e2a\u5bb9\u91cf\u4e3a W \u7684\u80cc\u5305\u548c n \u79cd\u7269\u54c1\uff0c\u6bcf\u79cd\u7269\u54c1\u6709\u4ee5\u4e0b\u5c5e\u6027\uff1a - \u91cd\u91cf weight[i] - \u4ef7\u503c value[i] \u76ee\u6807\u662f\u4ece\u8fd9\u4e9b\u7269\u54c1\u4e2d\u9009\u62e9\u82e5\u5e72\u4e2a\uff0c\u4f7f\u5f97\u5728\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf W \u7684\u524d\u63d0\u4e0b\uff0c\u80cc\u5305\u4e2d\u7684\u603b\u4ef7\u503c\u6700\u5927\u5316\u3002 \u4e0e 0-1 \u80cc\u5305\u95ee\u9898\u4e0d\u540c\u7684\u662f\uff0c\u6bcf\u79cd\u7269\u54c1\u53ef\u4ee5\u88ab\u9009\u62e9\u4efb\u610f\u6b21\uff08\u5373\u53ef\u4ee5\u91cd\u590d\u653e\u5165\u80cc\u5305\uff09\u3002 \u52a8\u6001\u89c4\u5212\u89e3\u6cd5 \u72b6\u6001\u5b9a\u4e49 \u8bbe dp[j] \u8868\u793a\u80cc\u5305\u5bb9\u91cf\u4e3a j \u65f6\u7684\u6700\u5927\u4ef7\u503c\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \u5bf9\u4e8e\u6bcf\u79cd\u7269\u54c1 i \uff1a - \u5982\u679c\u9009\u62e9\u8be5\u7269\u54c1\uff0c\u5219\u72b6\u6001\u8f6c\u79fb\u4e3a dp[j] = max(dp[j], dp[j - weight[i]] + value[i]) \u3002 \u8fd9\u91cc\u7684 dp[j - weight[i]] + value[i] \u8868\u793a\u5f53\u524d\u5bb9\u91cf j \u51cf\u53bb\u7269\u54c1 i \u7684\u91cd\u91cf\u540e\uff0c\u5269\u4f59\u5bb9\u91cf\u7684\u6700\u5927\u4ef7\u503c\u52a0\u4e0a\u7269\u54c1 i \u7684\u4ef7\u503c\u3002 \u521d\u59cb\u5316 dp[0] = 0 \uff0c\u8868\u793a\u80cc\u5305\u5bb9\u91cf\u4e3a 0 \u65f6\u7684\u6700\u5927\u4ef7\u503c\u4e3a 0\u3002 \u5176\u4ed6 dp[j] \u521d\u59cb\u5316\u4e3a 0 \u6216\u8d1f\u65e0\u7a77\uff08\u6839\u636e\u9898\u76ee\u662f\u5426\u5141\u8bb8\u90e8\u5206\u5bb9\u91cf\u672a\u88ab\u4f7f\u7528\uff09\u3002 \u4e8c\u7ef4\u6570\u7ec4\u52a0\u4e09\u91cd\u5faa\u73af \u4e8c\u7ef4\u6570\u7ec4\u5b9a\u4e49 \uff1a dp[i][j] \u8868\u793a\u524d i \u4e2a\u7269\u54c1\u5728\u80cc\u5305\u5bb9\u91cf\u4e3a j \u65f6\u7684\u6700\u5927\u4ef7\u503c\u3002 \u4e09\u91cd\u5faa\u73af \uff1a \u7b2c\u4e00\u5c42\u5faa\u73af\uff1a\u904d\u5386\u7269\u54c1 i \u3002 \u7b2c\u4e8c\u5c42\u5faa\u73af\uff1a\u904d\u5386\u80cc\u5305\u5bb9\u91cf j \u3002 \u7b2c\u4e09\u5c42\u5faa\u73af\uff08\u9690\u542b\u5728\u72b6\u6001\u8f6c\u79fb\u4e2d\uff09\uff1a\u904d\u5386\u7269\u54c1\u9009\u62e9\u6570\u91cf j/w[i] \u8003\u8651\u5f53\u524d\u7269\u54c1\u53ef\u4ee5\u88ab\u9009\u62e9\u591a\u6b21\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a \u4e0d\u9009\u5f53\u524d\u7269\u54c1\uff1a dp[i][j] = dp[i - 1][j] \u5728\u6700\u5185\u5c42\u5faa\u73af\u4e4b\u524d\u4e00\u5b9a\u8981\u521d\u59cb\u5316 dp[i][j] \u4e3a dp[i - 1][j] \u9009\u5f53\u524d\u7269\u54c1\uff1a dp[i][j] = max(dp[i][j], dp[i][j - k*weight[i]] + k*value[i]) \u8bb0\u4f4f\u6bcf\u6b21\u904d\u5386\u7269\u54c1\u6570\u91cf k \u65f6\u662f\u8ddf\u4e0a\u4e2a\u6570\u91cf k-1 \u7684 dp[i][j] \u5bf9\u6bd4\u3002 \u521d\u59cb\u5316 \uff1a dp[0][j] = 0 \u8868\u793a\u6ca1\u6709\u7269\u54c1\u65f6\uff0c\u80cc\u5305\u7684\u6700\u5927\u4ef7\u503c\u4e3a 0\u3002 dp[i][0] = 0 \u8868\u793a\u80cc\u5305\u5bb9\u91cf\u4e3a 0 \u65f6\uff0c\u6700\u5927\u4ef7\u503c\u4e3a 0\u3002 \u786c\u5e01\u627e\u96f6\u95ee\u9898 \u8bbe\u6709 n \u79cd\u4e0d\u540c\u9762\u503c\u7684\u786c\u5e01\uff0c\u5404\u786c\u5e01\u7684\u9762\u503c\u5b58\u4e8e\u6570\u7ec4 T[1 : n] \u4e2d\u3002\u73b0\u8981\u7528\u8fd9\u4e9b\u9762\u503c\u7684\u786c\u5e01\u6765 \u627e\u94b1\u3002\u53ef\u4ee5\u4f7f\u7528\u7684\u5404\u79cd\u9762\u503c\u7684\u786c\u5e01\u4e2a\u6570\u5b58\u4e8e\u6570\u7ec4 Coins[1 : n] \u4e2d\u3002\u5bf9\u4efb\u610f\u94b1\u6570 0 \u2264 m \u2264 20001 \uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7528\u6700\u5c11\u786c\u5e01\u627e\u94b1m \u7684\u65b9\u6cd5\u3002 \u4f7f\u7528 \u52a8\u6001\u89c4\u5212 \u89e3\u51b3\u786c\u5e01\u627e\u96f6\u95ee\u9898\uff0c\u76ee\u6807\u662f\u7528\u6700\u5c11\u7684\u786c\u5e01\u51d1\u6210\u6307\u5b9a\u91d1\u989d m \uff0c\u540c\u65f6\u8003\u8651\u6bcf\u79cd\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\u9650\u5236\u3002\u4ee5\u4e0b\u662f\u4f60\u7684\u7b97\u6cd5\u7684\u590d\u8ff0\uff1a 1. \u95ee\u9898\u5efa\u6a21 \u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 dp[i][j] \uff1a \u8868\u793a\u7528\u524d i + 1 \u79cd\u786c\u5e01\u51d1\u6210\u91d1\u989d j \u6240\u9700\u7684\u6700\u5c11\u786c\u5e01\u6570\u3002 \u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 choice[i][j] \uff1a \u8bb0\u5f55\u51d1\u6210\u91d1\u989d j \u65f6\uff0c\u7b2c i \u79cd\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\u3002 2. \u521d\u59cb\u5316 \u521d\u59cb\u5316 dp[0][j] \uff1a \u5982\u679c\u91d1\u989d j \u662f\u7b2c 0 \u79cd\u786c\u5e01\u9762\u503c\u7684\u500d\u6570\uff0c\u4e14\u4f7f\u7528\u7684\u786c\u5e01\u6570\u91cf\u4e0d\u8d85\u8fc7\u9650\u5236\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u51fa\u6240\u9700\u786c\u5e01\u6570\u3002 \u5426\u5219\uff0c\u8bbe\u7f6e\u4e3a\u65e0\u7a77\u5927\uff08\u8868\u793a\u65e0\u6cd5\u51d1\u6210\u91d1\u989d j \uff09\u3002 \u521d\u59cb\u5316 choice[0][j] \uff1a \u8bb0\u5f55\u7b2c 0 \u79cd\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\u3002 3. \u72b6\u6001\u8f6c\u79fb \u4ece\u7b2c 1 \u79cd\u786c\u5e01\u5f00\u59cb\uff0c\u9010\u6b65\u66f4\u65b0 dp[i][j] \uff1a \u5bf9\u4e8e\u6bcf\u79cd\u786c\u5e01 i \uff0c\u5c1d\u8bd5\u4f7f\u7528 0 \u5230\u6700\u5927\u6570\u91cf coins[i] \u7684\u786c\u5e01\u3002 \u66f4\u65b0 dp[i][j] \u4e3a\u5f53\u524d\u6700\u4f18\u89e3\uff08\u5373\u6700\u5c11\u786c\u5e01\u6570\uff09\u3002 \u540c\u65f6\u8bb0\u5f55\u5f53\u524d\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\u5230 choice[i][j] \u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a dp[i][j] = min(dp[i][j], dp[i \u2212 1][j \u2212 k \u00d7 T[i]] + k) - \u5176\u4e2d\uff1a - 0 \u2264 k \u2264 coins[i] \uff1a\u8868\u793a\u5f53\u524d\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\u3002 - j \u2212 k \u00d7 T[i] \u2265 0 \uff1a\u8868\u793a\u5f53\u524d\u91d1\u989d j \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 k \u679a\u7b2c i \u79cd\u786c\u5e01\u51d1\u6210\u3002 \u8bb0\u5f55\u9009\u62e9 \uff1a choice[i][j] = k - \u8868\u793a\u51d1\u6210\u91d1\u989d j \u65f6\uff0c\u7b2c i \u79cd\u786c\u5e01\u4f7f\u7528\u4e86 k \u679a\u3002 4. \u56de\u6eaf\u7ed3\u679c \u6700\u7ec8\u901a\u8fc7 dp[n\u22121][m] \u5224\u65ad\u662f\u5426\u53ef\u4ee5\u51d1\u6210\u91d1\u989d m \uff1a \u5982\u679c dp[n\u22121][m] \u662f\u6709\u9650\u503c\uff0c\u5219\u8868\u793a\u53ef\u4ee5\u51d1\u6210\u91d1\u989d m \u3002 \u5982\u679c dp[n\u22121][m] \u662f\u65e0\u7a77\u5927\uff0c\u5219\u8868\u793a\u65e0\u6cd5\u51d1\u6210\u91d1\u989d m \u3002 \u5982\u679c\u53ef\u4ee5\u51d1\u6210\u91d1\u989d m \uff0c\u901a\u8fc7\u56de\u6eaf choice \u6570\u7ec4\uff0c\u9010\u6b65\u8fd8\u539f\u6bcf\u79cd\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002 5. \u7b97\u6cd5\u603b\u7ed3 \u52a8\u6001\u89c4\u5212\u8868 dp \uff1a \u7528\u4e8e\u8bb0\u5f55\u51d1\u6210\u6bcf\u4e2a\u91d1\u989d\u6240\u9700\u7684\u6700\u5c11\u786c\u5e01\u6570\u3002 \u9009\u62e9\u8868 choice \uff1a \u7528\u4e8e\u8bb0\u5f55\u6bcf\u79cd\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\uff0c\u65b9\u4fbf\u56de\u6eaf\u7ed3\u679c\u3002 \u72b6\u6001\u8f6c\u79fb \uff1a \u5c1d\u8bd5\u4f7f\u7528\u5f53\u524d\u786c\u5e01\u7684\u4e0d\u540c\u6570\u91cf\uff0c\u66f4\u65b0\u6700\u4f18\u89e3\u3002 \u56de\u6eaf \uff1a \u4ece choice \u6570\u7ec4\u4e2d\u8fd8\u539f\u6bcf\u79cd\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\u3002 // \u521d\u59cb\u5316 dp \u548c choice \u6570\u7ec4 vector < vector < int >> dp ( n , vector < int > ( m + 1 , INT_MAX )); vector < vector < int >> choice ( n , vector < int > ( m + 1 , 0 )); dp [ 0 ][ 0 ] = 0 ; // \u51d1\u6210\u91d1\u989d 0 \u4e0d\u9700\u8981\u786c\u5e01 for ( int i = 0 ; i <= m ; i ++ ) { for ( int k = 0 ; k <= coins [ 0 ]; k ++ ) { if ( k * T [ 0 ] == i ) { dp [ 0 ][ i ] = k ; choice [ 0 ][ i ] = k ; // \u7b2c 0 \u79cd\u786c\u5e01\u51d1\u6210\u91d1\u989d i \u7684\u6570\u91cf } } } // \u52a8\u6001\u89c4\u5212 for ( int i = 1 ; i < n ; i ++ ) { for ( int j = 0 ; j <= m ; j ++ ) { dp [ i ][ j ] = dp [ i -1 ][ j ]; // \u4e0d\u4f7f\u7528\u7b2c i \u79cd\u786c\u5e01 choice [ i ][ j ] = 0 ; // \u9ed8\u8ba4\u4e0d\u4f7f\u7528\u7b2c i \u79cd\u786c\u5e01 for ( int k = 0 ; k <= coins [ i ]; k ++ ) { if ( j >= k * T [ i ] && dp [ i -1 ][ j - k * T [ i ]] != INT_MAX ) { if ( dp [ i ][ j ] > dp [ i -1 ][ j - k * T [ i ]] + k ) { dp [ i ][ j ] = dp [ i -1 ][ j - k * T [ i ]] + k ; choice [ i ][ j ] = k ; // \u8bb0\u5f55\u7b2c i \u79cd\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf } } } } }","title":"\u80cc\u5305\u95ee\u9898"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#0-1npc","text":"\u5728 0-1 \u80cc\u5305\u95ee\u9898 \u4e2d\uff0c\u6bcf\u79cd\u7269\u54c1\u53ea\u80fd\u9009\u62e9\u4e00\u6b21\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\uff1a","title":"0-1\u80cc\u5305(NPC\u95ee\u9898)"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#_1","text":"dp[i][j] \u8868\u793a\u524d i \u4e2a\u7269\u54c1\u5728\u80cc\u5305\u5bb9\u91cf\u4e3a j \u65f6\u7684\u6700\u5927\u4ef7\u503c\u3002","title":"\u72b6\u6001\u5b9a\u4e49"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#_2","text":"\u5bf9\u4e8e\u6bcf\u79cd\u7269\u54c1 i \uff1a - \u5982\u679c\u4e0d\u9009\u62e9\u7269\u54c1 i \uff0c\u5219\uff1a dp[i][j] = dp[i - 1][j]; \u8868\u793a\u5f53\u524d\u5bb9\u91cf j \u7684\u6700\u5927\u4ef7\u503c\u7b49\u4e8e\u524d i-1 \u4e2a\u7269\u54c1\u5728\u5bb9\u91cf j \u65f6\u7684\u6700\u5927\u4ef7\u503c\u3002 \u5982\u679c\u9009\u62e9\u7269\u54c1 i \uff0c\u5219\uff1a dp[i][j] = dp[i - 1][j - weight[i]] + value[i]; \u8868\u793a\u5f53\u524d\u5bb9\u91cf j \u7684\u6700\u5927\u4ef7\u503c\u7b49\u4e8e\u524d i-1 \u4e2a\u7269\u54c1\u5728\u5bb9\u91cf j - weight[i] \u65f6\u7684\u6700\u5927\u4ef7\u503c\uff0c\u52a0\u4e0a\u7269\u54c1 i \u7684\u4ef7\u503c\u3002 \u7efc\u5408\u4e24\u79cd\u60c5\u51b5\uff0c\u53d6\u6700\u5927\u503c\uff1a dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight[i]] + value[i]);","title":"\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#_3","text":"dp[0][j] = 0 \uff1a\u8868\u793a\u6ca1\u6709\u7269\u54c1\u65f6\uff0c\u80cc\u5305\u7684\u6700\u5927\u4ef7\u503c\u4e3a 0\u3002 dp[i][0] = 0 \uff1a\u8868\u793a\u80cc\u5305\u5bb9\u91cf\u4e3a 0 \u65f6\uff0c\u6700\u5927\u4ef7\u503c\u4e3a 0\u3002","title":"\u521d\u59cb\u5316"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#_4","text":"\u5982\u679c\u4f7f\u7528\u4e00\u7ef4\u6570\u7ec4\u4f18\u5316\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a dp[j] = max(dp[j], dp[j - weight[i]] + value[i]); \u6ce8\u610f\uff1a\u5728\u4e00\u7ef4\u6570\u7ec4\u4e2d\uff0c\u5185\u5c42\u5faa\u73af\u9700\u8981\u4ece \u5927\u5230\u5c0f \u904d\u5386 j \uff0c\u4ee5\u907f\u514d\u91cd\u590d\u4f7f\u7528\u540c\u4e00\u4e2a\u7269\u54c1\u3002","title":"\u4f18\u5316\u4e3a\u4e00\u7ef4\u6570\u7ec4"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#_5","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5bb9\u91cf\u4e3a W \u7684\u80cc\u5305\u548c n \u79cd\u7269\u54c1\uff0c\u6bcf\u79cd\u7269\u54c1\u6709\u4ee5\u4e0b\u5c5e\u6027\uff1a - \u91cd\u91cf weight[i] - \u4ef7\u503c value[i] \u76ee\u6807\u662f\u4ece\u8fd9\u4e9b\u7269\u54c1\u4e2d\u9009\u62e9\u82e5\u5e72\u4e2a\uff0c\u4f7f\u5f97\u5728\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf W \u7684\u524d\u63d0\u4e0b\uff0c\u80cc\u5305\u4e2d\u7684\u603b\u4ef7\u503c\u6700\u5927\u5316\u3002 \u4e0e 0-1 \u80cc\u5305\u95ee\u9898\u4e0d\u540c\u7684\u662f\uff0c\u6bcf\u79cd\u7269\u54c1\u53ef\u4ee5\u88ab\u9009\u62e9\u4efb\u610f\u6b21\uff08\u5373\u53ef\u4ee5\u91cd\u590d\u653e\u5165\u80cc\u5305\uff09\u3002","title":"\u5b8c\u5168\u80cc\u5305"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#_6","text":"","title":"\u52a8\u6001\u89c4\u5212\u89e3\u6cd5"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#_7","text":"\u8bbe dp[j] \u8868\u793a\u80cc\u5305\u5bb9\u91cf\u4e3a j \u65f6\u7684\u6700\u5927\u4ef7\u503c\u3002","title":"\u72b6\u6001\u5b9a\u4e49"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#_8","text":"\u5bf9\u4e8e\u6bcf\u79cd\u7269\u54c1 i \uff1a - \u5982\u679c\u9009\u62e9\u8be5\u7269\u54c1\uff0c\u5219\u72b6\u6001\u8f6c\u79fb\u4e3a dp[j] = max(dp[j], dp[j - weight[i]] + value[i]) \u3002 \u8fd9\u91cc\u7684 dp[j - weight[i]] + value[i] \u8868\u793a\u5f53\u524d\u5bb9\u91cf j \u51cf\u53bb\u7269\u54c1 i \u7684\u91cd\u91cf\u540e\uff0c\u5269\u4f59\u5bb9\u91cf\u7684\u6700\u5927\u4ef7\u503c\u52a0\u4e0a\u7269\u54c1 i \u7684\u4ef7\u503c\u3002","title":"\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#_9","text":"dp[0] = 0 \uff0c\u8868\u793a\u80cc\u5305\u5bb9\u91cf\u4e3a 0 \u65f6\u7684\u6700\u5927\u4ef7\u503c\u4e3a 0\u3002 \u5176\u4ed6 dp[j] \u521d\u59cb\u5316\u4e3a 0 \u6216\u8d1f\u65e0\u7a77\uff08\u6839\u636e\u9898\u76ee\u662f\u5426\u5141\u8bb8\u90e8\u5206\u5bb9\u91cf\u672a\u88ab\u4f7f\u7528\uff09\u3002","title":"\u521d\u59cb\u5316"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#_10","text":"\u4e8c\u7ef4\u6570\u7ec4\u5b9a\u4e49 \uff1a dp[i][j] \u8868\u793a\u524d i \u4e2a\u7269\u54c1\u5728\u80cc\u5305\u5bb9\u91cf\u4e3a j \u65f6\u7684\u6700\u5927\u4ef7\u503c\u3002 \u4e09\u91cd\u5faa\u73af \uff1a \u7b2c\u4e00\u5c42\u5faa\u73af\uff1a\u904d\u5386\u7269\u54c1 i \u3002 \u7b2c\u4e8c\u5c42\u5faa\u73af\uff1a\u904d\u5386\u80cc\u5305\u5bb9\u91cf j \u3002 \u7b2c\u4e09\u5c42\u5faa\u73af\uff08\u9690\u542b\u5728\u72b6\u6001\u8f6c\u79fb\u4e2d\uff09\uff1a\u904d\u5386\u7269\u54c1\u9009\u62e9\u6570\u91cf j/w[i] \u8003\u8651\u5f53\u524d\u7269\u54c1\u53ef\u4ee5\u88ab\u9009\u62e9\u591a\u6b21\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a \u4e0d\u9009\u5f53\u524d\u7269\u54c1\uff1a dp[i][j] = dp[i - 1][j] \u5728\u6700\u5185\u5c42\u5faa\u73af\u4e4b\u524d\u4e00\u5b9a\u8981\u521d\u59cb\u5316 dp[i][j] \u4e3a dp[i - 1][j] \u9009\u5f53\u524d\u7269\u54c1\uff1a dp[i][j] = max(dp[i][j], dp[i][j - k*weight[i]] + k*value[i]) \u8bb0\u4f4f\u6bcf\u6b21\u904d\u5386\u7269\u54c1\u6570\u91cf k \u65f6\u662f\u8ddf\u4e0a\u4e2a\u6570\u91cf k-1 \u7684 dp[i][j] \u5bf9\u6bd4\u3002 \u521d\u59cb\u5316 \uff1a dp[0][j] = 0 \u8868\u793a\u6ca1\u6709\u7269\u54c1\u65f6\uff0c\u80cc\u5305\u7684\u6700\u5927\u4ef7\u503c\u4e3a 0\u3002 dp[i][0] = 0 \u8868\u793a\u80cc\u5305\u5bb9\u91cf\u4e3a 0 \u65f6\uff0c\u6700\u5927\u4ef7\u503c\u4e3a 0\u3002","title":"\u4e8c\u7ef4\u6570\u7ec4\u52a0\u4e09\u91cd\u5faa\u73af"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#_11","text":"\u8bbe\u6709 n \u79cd\u4e0d\u540c\u9762\u503c\u7684\u786c\u5e01\uff0c\u5404\u786c\u5e01\u7684\u9762\u503c\u5b58\u4e8e\u6570\u7ec4 T[1 : n] \u4e2d\u3002\u73b0\u8981\u7528\u8fd9\u4e9b\u9762\u503c\u7684\u786c\u5e01\u6765 \u627e\u94b1\u3002\u53ef\u4ee5\u4f7f\u7528\u7684\u5404\u79cd\u9762\u503c\u7684\u786c\u5e01\u4e2a\u6570\u5b58\u4e8e\u6570\u7ec4 Coins[1 : n] \u4e2d\u3002\u5bf9\u4efb\u610f\u94b1\u6570 0 \u2264 m \u2264 20001 \uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7528\u6700\u5c11\u786c\u5e01\u627e\u94b1m \u7684\u65b9\u6cd5\u3002 \u4f7f\u7528 \u52a8\u6001\u89c4\u5212 \u89e3\u51b3\u786c\u5e01\u627e\u96f6\u95ee\u9898\uff0c\u76ee\u6807\u662f\u7528\u6700\u5c11\u7684\u786c\u5e01\u51d1\u6210\u6307\u5b9a\u91d1\u989d m \uff0c\u540c\u65f6\u8003\u8651\u6bcf\u79cd\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\u9650\u5236\u3002\u4ee5\u4e0b\u662f\u4f60\u7684\u7b97\u6cd5\u7684\u590d\u8ff0\uff1a","title":"\u786c\u5e01\u627e\u96f6\u95ee\u9898"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#1","text":"\u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 dp[i][j] \uff1a \u8868\u793a\u7528\u524d i + 1 \u79cd\u786c\u5e01\u51d1\u6210\u91d1\u989d j \u6240\u9700\u7684\u6700\u5c11\u786c\u5e01\u6570\u3002 \u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 choice[i][j] \uff1a \u8bb0\u5f55\u51d1\u6210\u91d1\u989d j \u65f6\uff0c\u7b2c i \u79cd\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\u3002","title":"1. \u95ee\u9898\u5efa\u6a21"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#2","text":"\u521d\u59cb\u5316 dp[0][j] \uff1a \u5982\u679c\u91d1\u989d j \u662f\u7b2c 0 \u79cd\u786c\u5e01\u9762\u503c\u7684\u500d\u6570\uff0c\u4e14\u4f7f\u7528\u7684\u786c\u5e01\u6570\u91cf\u4e0d\u8d85\u8fc7\u9650\u5236\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u51fa\u6240\u9700\u786c\u5e01\u6570\u3002 \u5426\u5219\uff0c\u8bbe\u7f6e\u4e3a\u65e0\u7a77\u5927\uff08\u8868\u793a\u65e0\u6cd5\u51d1\u6210\u91d1\u989d j \uff09\u3002 \u521d\u59cb\u5316 choice[0][j] \uff1a \u8bb0\u5f55\u7b2c 0 \u79cd\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\u3002","title":"2. \u521d\u59cb\u5316"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#3","text":"\u4ece\u7b2c 1 \u79cd\u786c\u5e01\u5f00\u59cb\uff0c\u9010\u6b65\u66f4\u65b0 dp[i][j] \uff1a \u5bf9\u4e8e\u6bcf\u79cd\u786c\u5e01 i \uff0c\u5c1d\u8bd5\u4f7f\u7528 0 \u5230\u6700\u5927\u6570\u91cf coins[i] \u7684\u786c\u5e01\u3002 \u66f4\u65b0 dp[i][j] \u4e3a\u5f53\u524d\u6700\u4f18\u89e3\uff08\u5373\u6700\u5c11\u786c\u5e01\u6570\uff09\u3002 \u540c\u65f6\u8bb0\u5f55\u5f53\u524d\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\u5230 choice[i][j] \u3002","title":"3. \u72b6\u6001\u8f6c\u79fb"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#_12","text":"dp[i][j] = min(dp[i][j], dp[i \u2212 1][j \u2212 k \u00d7 T[i]] + k) - \u5176\u4e2d\uff1a - 0 \u2264 k \u2264 coins[i] \uff1a\u8868\u793a\u5f53\u524d\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\u3002 - j \u2212 k \u00d7 T[i] \u2265 0 \uff1a\u8868\u793a\u5f53\u524d\u91d1\u989d j \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 k \u679a\u7b2c i \u79cd\u786c\u5e01\u51d1\u6210\u3002","title":"\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#_13","text":"choice[i][j] = k - \u8868\u793a\u51d1\u6210\u91d1\u989d j \u65f6\uff0c\u7b2c i \u79cd\u786c\u5e01\u4f7f\u7528\u4e86 k \u679a\u3002","title":"\u8bb0\u5f55\u9009\u62e9\uff1a"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#4","text":"\u6700\u7ec8\u901a\u8fc7 dp[n\u22121][m] \u5224\u65ad\u662f\u5426\u53ef\u4ee5\u51d1\u6210\u91d1\u989d m \uff1a \u5982\u679c dp[n\u22121][m] \u662f\u6709\u9650\u503c\uff0c\u5219\u8868\u793a\u53ef\u4ee5\u51d1\u6210\u91d1\u989d m \u3002 \u5982\u679c dp[n\u22121][m] \u662f\u65e0\u7a77\u5927\uff0c\u5219\u8868\u793a\u65e0\u6cd5\u51d1\u6210\u91d1\u989d m \u3002 \u5982\u679c\u53ef\u4ee5\u51d1\u6210\u91d1\u989d m \uff0c\u901a\u8fc7\u56de\u6eaf choice \u6570\u7ec4\uff0c\u9010\u6b65\u8fd8\u539f\u6bcf\u79cd\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002","title":"4. \u56de\u6eaf\u7ed3\u679c"},{"location":"Algorithm/dynamic_programming/Knapsack-problem/#5","text":"\u52a8\u6001\u89c4\u5212\u8868 dp \uff1a \u7528\u4e8e\u8bb0\u5f55\u51d1\u6210\u6bcf\u4e2a\u91d1\u989d\u6240\u9700\u7684\u6700\u5c11\u786c\u5e01\u6570\u3002 \u9009\u62e9\u8868 choice \uff1a \u7528\u4e8e\u8bb0\u5f55\u6bcf\u79cd\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\uff0c\u65b9\u4fbf\u56de\u6eaf\u7ed3\u679c\u3002 \u72b6\u6001\u8f6c\u79fb \uff1a \u5c1d\u8bd5\u4f7f\u7528\u5f53\u524d\u786c\u5e01\u7684\u4e0d\u540c\u6570\u91cf\uff0c\u66f4\u65b0\u6700\u4f18\u89e3\u3002 \u56de\u6eaf \uff1a \u4ece choice \u6570\u7ec4\u4e2d\u8fd8\u539f\u6bcf\u79cd\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf\u3002 // \u521d\u59cb\u5316 dp \u548c choice \u6570\u7ec4 vector < vector < int >> dp ( n , vector < int > ( m + 1 , INT_MAX )); vector < vector < int >> choice ( n , vector < int > ( m + 1 , 0 )); dp [ 0 ][ 0 ] = 0 ; // \u51d1\u6210\u91d1\u989d 0 \u4e0d\u9700\u8981\u786c\u5e01 for ( int i = 0 ; i <= m ; i ++ ) { for ( int k = 0 ; k <= coins [ 0 ]; k ++ ) { if ( k * T [ 0 ] == i ) { dp [ 0 ][ i ] = k ; choice [ 0 ][ i ] = k ; // \u7b2c 0 \u79cd\u786c\u5e01\u51d1\u6210\u91d1\u989d i \u7684\u6570\u91cf } } } // \u52a8\u6001\u89c4\u5212 for ( int i = 1 ; i < n ; i ++ ) { for ( int j = 0 ; j <= m ; j ++ ) { dp [ i ][ j ] = dp [ i -1 ][ j ]; // \u4e0d\u4f7f\u7528\u7b2c i \u79cd\u786c\u5e01 choice [ i ][ j ] = 0 ; // \u9ed8\u8ba4\u4e0d\u4f7f\u7528\u7b2c i \u79cd\u786c\u5e01 for ( int k = 0 ; k <= coins [ i ]; k ++ ) { if ( j >= k * T [ i ] && dp [ i -1 ][ j - k * T [ i ]] != INT_MAX ) { if ( dp [ i ][ j ] > dp [ i -1 ][ j - k * T [ i ]] + k ) { dp [ i ][ j ] = dp [ i -1 ][ j - k * T [ i ]] + k ; choice [ i ][ j ] = k ; // \u8bb0\u5f55\u7b2c i \u79cd\u786c\u5e01\u7684\u4f7f\u7528\u6570\u91cf } } } } }","title":"5. \u7b97\u6cd5\u603b\u7ed3"},{"location":"Algorithm/dynamic_programming/Sharing_pears/","text":"\u95ee\u9898\u63cf\u8ff0 \u5c0f\u660e\u975e\u5e38\u559c\u6b22\u5403\u68a8\uff0c\u6709\u4e00\u5929\u4ed6\u5f97\u5230\u4e86ACMCLUB\u9001\u7ed9\u4ed6\u7684\u4e00\u7b50\u68a8\u5b50\u3002\u7531\u4e8e\u4ed6\u6bd4\u8f83\u4ed7\u4e49\uff0c\u5c31\u6253\u7b97\u628a\u68a8\u5b50\u5206\u7ed9\u597d\u670b\u53cb\u4eec\u5403\u3002\u73b0\u5728\u4ed6\u8981\u628aM\u4e2a\u68a8\u5b50\u653e\u5230N\u4e2a\u76d8\u5b50\u91cc\u9762\uff08\u6211\u4eec\u5141\u8bb8\u6709\u7684\u76d8\u5b50\u4e3a\u7a7a\uff09\uff0c\u4f60\u80fd\u544a\u8bc9\u5c0f\u660e\u6709\u591a\u5c11\u79cd\u5206\u6cd5\u5417\uff1f\uff08\u8bf7\u6ce8\u610f\uff0c\u4f8b\u5982\u6709\u4e09\u4e2a\u76d8\u5b50\uff0c\u6211\u4eec\u5c065,1,1\u548c1,1,5\uff0c\u89c6\u4e3a\u540c\u4e00\u79cd\u5206\u6cd5\uff09 \u52a8\u6001\u89c4\u5212\u601d\u8def \u5b9a\u4e49\u72b6\u6001 \uff1a \u8bbe dp[m][n] \u8868\u793a\u5c06 m \u4e2a\u68a8\u5b50\u5206\u5230 n \u4e2a\u76d8\u5b50\u4e2d\u7684\u5206\u6cd5\u6570\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a \u5982\u679c\u6709\u76d8\u5b50\u4e3a\u7a7a\uff08\u5373\u81f3\u5c11\u6709\u4e00\u4e2a\u76d8\u5b50\u4e0d\u653e\u68a8\u5b50\uff09\uff0c\u5219\u95ee\u9898\u8f6c\u5316\u4e3a\u5c06 m \u4e2a\u68a8\u5b50\u5206\u5230 n-1 \u4e2a\u76d8\u5b50\u4e2d\uff0c\u5206\u6cd5\u6570\u4e3a dp[m][n-1] \u3002\u6bd4\u5982\u6709\u4e24\u4e2a\u7a7a\u76d8\u5b50\u5c31\u8f6c\u5316\u4e3a\u5c06m\u4e2a\u68a8\u5206\u5230n-1\u4e2a\u7a7a\u76d8\u5b50\uff08\u8fd8\u5269\u4e00\u4e2a\u7a7a\u76d8\u5b50\uff09\uff0c\u518d\u5206\u5230n-2\u4e2a\u76d8\u5b50\uff08\u6ca1\u6709\u7a7a\u76d8\u5b50\u4e86\u3002 \u5982\u679c\u6bcf\u4e2a\u76d8\u5b50\u81f3\u5c11\u653e\u4e00\u4e2a\u68a8\u5b50\uff0c\u5219\u95ee\u9898\u8f6c\u5316\u4e3a\u5c06 m-n \u4e2a\u68a8\u5b50\u5206\u5230 n \u4e2a\u76d8\u5b50\u4e2d\uff0c\u5206\u6cd5\u6570\u4e3a dp[m-n][n] \u3002\u5148\u5c06n\u4e2a\u68a8\u62ff\u51fa\u6765\u653e\u5230\u6bcf\u4e2a\u76d8\u5b50\u91cc\uff0c\u7136\u540e\u8f6c\u5316\u4e3a\u5c06m-n\u4e2a\u68a8\u653e\u5230n\u4e2a\u76d8\u5b50\u3002 \u7efc\u5408\u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\uff1a dp[m][n] = dp[m][n-1] + dp[m-n][n] (\u5f53 m >= n \u65f6) dp[m][n] = dp[m][n-1] (\u5f53 m < n \u65f6) \u4e0d\u4f1a\u51fa\u9519\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b dp[m][n] = dp[m][n-1] + dp[m-n][n] \u5df2\u7ecf\u5b8c\u6574\u5730\u8986\u76d6\u4e86\u6240\u6709\u60c5\u51b5\uff0c\u5305\u62ec\u6ca1\u6709\u76d8\u5b50\u4e3a\u7a7a\u7684\u60c5\u51b5\u3002 \u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u51fa\u9519\uff1f 1. \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u4e24\u90e8\u5206 \u7b2c\u4e00\u90e8\u5206\uff1a dp[m][n-1] \u8fd9\u90e8\u5206\u5904\u7406\u4e86 \u81f3\u5c11\u6709\u4e00\u4e2a\u76d8\u5b50\u4e3a\u7a7a \u7684\u60c5\u51b5\u3002 \u5982\u679c\u6ca1\u6709\u76d8\u5b50\u4e3a\u7a7a\uff0c\u8fd9\u90e8\u5206\u7684\u503c\u4e3a 0\uff0c\u4e0d\u4f1a\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c\u3002 \u7b2c\u4e8c\u90e8\u5206\uff1a dp[m-n][n] \u8fd9\u90e8\u5206\u5904\u7406\u4e86 \u6bcf\u4e2a\u76d8\u5b50\u81f3\u5c11\u653e\u4e00\u4e2a\u68a8\u5b50 \u7684\u60c5\u51b5\u3002 \u5982\u679c\u6ca1\u6709\u76d8\u5b50\u4e3a\u7a7a\uff0c\u8fd9\u90e8\u5206\u4f1a\u6b63\u786e\u8ba1\u7b97\u51fa\u6240\u6709\u5206\u6cd5\u3002 2. \u6ca1\u6709\u76d8\u5b50\u4e3a\u7a7a\u7684\u60c5\u51b5 \u5982\u679c\u6ca1\u6709\u76d8\u5b50\u4e3a\u7a7a\uff0c\u610f\u5473\u7740\u6bcf\u4e2a\u76d8\u5b50\u81f3\u5c11\u653e\u4e00\u4e2a\u68a8\u5b50\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u7b2c\u4e8c\u90e8\u5206 dp[m-n][n] \u4f1a\u5b8c\u5168\u8986\u76d6\u8fd9\u79cd\u60c5\u51b5\u3002 \u7b2c\u4e00\u90e8\u5206 dp[m][n-1] \u7684\u503c\u4e3a 0\uff0c\u4e0d\u4f1a\u5bf9\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\u3002 \u52a8\u6001\u89c4\u5212\u5b9e\u73b0 #include <iostream> #include <vector> using namespace std ; void solute ( int m , int n ){ vector < vector < int >> dp ( m + 1 , vector < int > ( n + 1 , 0 )); for ( int i = 0 ; i <= n ; i ++ ) dp [ 0 ][ i ] = 1 ; for ( int i = 1 ; i <= m ; i ++ ){ for ( int j = 1 ; j <= n ; j ++ ){ if ( i >= j ){ dp [ i ][ j ] = dp [ i ][ j -1 ] + dp [ i - j ][ j ]; } else { dp [ i ][ j ] = dp [ i ][ j -1 ]; } } } cout << dp [ m ][ n ] << endl ; } int main (){ int k = 0 ; cin >> k ; for ( int i = 0 ; i < k ; i ++ ){ int m , n ; cin >> m >> n ; solute ( m , n ); } } \u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e0a\u9762\u7684\u7b54\u6848\u6ca1\u80fd\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u3002","title":"\u5206\u68a8\u95ee\u9898"},{"location":"Algorithm/dynamic_programming/Sharing_pears/#_1","text":"\u5c0f\u660e\u975e\u5e38\u559c\u6b22\u5403\u68a8\uff0c\u6709\u4e00\u5929\u4ed6\u5f97\u5230\u4e86ACMCLUB\u9001\u7ed9\u4ed6\u7684\u4e00\u7b50\u68a8\u5b50\u3002\u7531\u4e8e\u4ed6\u6bd4\u8f83\u4ed7\u4e49\uff0c\u5c31\u6253\u7b97\u628a\u68a8\u5b50\u5206\u7ed9\u597d\u670b\u53cb\u4eec\u5403\u3002\u73b0\u5728\u4ed6\u8981\u628aM\u4e2a\u68a8\u5b50\u653e\u5230N\u4e2a\u76d8\u5b50\u91cc\u9762\uff08\u6211\u4eec\u5141\u8bb8\u6709\u7684\u76d8\u5b50\u4e3a\u7a7a\uff09\uff0c\u4f60\u80fd\u544a\u8bc9\u5c0f\u660e\u6709\u591a\u5c11\u79cd\u5206\u6cd5\u5417\uff1f\uff08\u8bf7\u6ce8\u610f\uff0c\u4f8b\u5982\u6709\u4e09\u4e2a\u76d8\u5b50\uff0c\u6211\u4eec\u5c065,1,1\u548c1,1,5\uff0c\u89c6\u4e3a\u540c\u4e00\u79cd\u5206\u6cd5\uff09","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"Algorithm/dynamic_programming/Sharing_pears/#_2","text":"\u5b9a\u4e49\u72b6\u6001 \uff1a \u8bbe dp[m][n] \u8868\u793a\u5c06 m \u4e2a\u68a8\u5b50\u5206\u5230 n \u4e2a\u76d8\u5b50\u4e2d\u7684\u5206\u6cd5\u6570\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a \u5982\u679c\u6709\u76d8\u5b50\u4e3a\u7a7a\uff08\u5373\u81f3\u5c11\u6709\u4e00\u4e2a\u76d8\u5b50\u4e0d\u653e\u68a8\u5b50\uff09\uff0c\u5219\u95ee\u9898\u8f6c\u5316\u4e3a\u5c06 m \u4e2a\u68a8\u5b50\u5206\u5230 n-1 \u4e2a\u76d8\u5b50\u4e2d\uff0c\u5206\u6cd5\u6570\u4e3a dp[m][n-1] \u3002\u6bd4\u5982\u6709\u4e24\u4e2a\u7a7a\u76d8\u5b50\u5c31\u8f6c\u5316\u4e3a\u5c06m\u4e2a\u68a8\u5206\u5230n-1\u4e2a\u7a7a\u76d8\u5b50\uff08\u8fd8\u5269\u4e00\u4e2a\u7a7a\u76d8\u5b50\uff09\uff0c\u518d\u5206\u5230n-2\u4e2a\u76d8\u5b50\uff08\u6ca1\u6709\u7a7a\u76d8\u5b50\u4e86\u3002 \u5982\u679c\u6bcf\u4e2a\u76d8\u5b50\u81f3\u5c11\u653e\u4e00\u4e2a\u68a8\u5b50\uff0c\u5219\u95ee\u9898\u8f6c\u5316\u4e3a\u5c06 m-n \u4e2a\u68a8\u5b50\u5206\u5230 n \u4e2a\u76d8\u5b50\u4e2d\uff0c\u5206\u6cd5\u6570\u4e3a dp[m-n][n] \u3002\u5148\u5c06n\u4e2a\u68a8\u62ff\u51fa\u6765\u653e\u5230\u6bcf\u4e2a\u76d8\u5b50\u91cc\uff0c\u7136\u540e\u8f6c\u5316\u4e3a\u5c06m-n\u4e2a\u68a8\u653e\u5230n\u4e2a\u76d8\u5b50\u3002 \u7efc\u5408\u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\uff1a dp[m][n] = dp[m][n-1] + dp[m-n][n] (\u5f53 m >= n \u65f6) dp[m][n] = dp[m][n-1] (\u5f53 m < n \u65f6) \u4e0d\u4f1a\u51fa\u9519\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b dp[m][n] = dp[m][n-1] + dp[m-n][n] \u5df2\u7ecf\u5b8c\u6574\u5730\u8986\u76d6\u4e86\u6240\u6709\u60c5\u51b5\uff0c\u5305\u62ec\u6ca1\u6709\u76d8\u5b50\u4e3a\u7a7a\u7684\u60c5\u51b5\u3002","title":"\u52a8\u6001\u89c4\u5212\u601d\u8def"},{"location":"Algorithm/dynamic_programming/Sharing_pears/#_3","text":"","title":"\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u51fa\u9519\uff1f"},{"location":"Algorithm/dynamic_programming/Sharing_pears/#1","text":"\u7b2c\u4e00\u90e8\u5206\uff1a dp[m][n-1] \u8fd9\u90e8\u5206\u5904\u7406\u4e86 \u81f3\u5c11\u6709\u4e00\u4e2a\u76d8\u5b50\u4e3a\u7a7a \u7684\u60c5\u51b5\u3002 \u5982\u679c\u6ca1\u6709\u76d8\u5b50\u4e3a\u7a7a\uff0c\u8fd9\u90e8\u5206\u7684\u503c\u4e3a 0\uff0c\u4e0d\u4f1a\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c\u3002 \u7b2c\u4e8c\u90e8\u5206\uff1a dp[m-n][n] \u8fd9\u90e8\u5206\u5904\u7406\u4e86 \u6bcf\u4e2a\u76d8\u5b50\u81f3\u5c11\u653e\u4e00\u4e2a\u68a8\u5b50 \u7684\u60c5\u51b5\u3002 \u5982\u679c\u6ca1\u6709\u76d8\u5b50\u4e3a\u7a7a\uff0c\u8fd9\u90e8\u5206\u4f1a\u6b63\u786e\u8ba1\u7b97\u51fa\u6240\u6709\u5206\u6cd5\u3002","title":"1. \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u4e24\u90e8\u5206"},{"location":"Algorithm/dynamic_programming/Sharing_pears/#2","text":"\u5982\u679c\u6ca1\u6709\u76d8\u5b50\u4e3a\u7a7a\uff0c\u610f\u5473\u7740\u6bcf\u4e2a\u76d8\u5b50\u81f3\u5c11\u653e\u4e00\u4e2a\u68a8\u5b50\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u7b2c\u4e8c\u90e8\u5206 dp[m-n][n] \u4f1a\u5b8c\u5168\u8986\u76d6\u8fd9\u79cd\u60c5\u51b5\u3002 \u7b2c\u4e00\u90e8\u5206 dp[m][n-1] \u7684\u503c\u4e3a 0\uff0c\u4e0d\u4f1a\u5bf9\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\u3002","title":"2. \u6ca1\u6709\u76d8\u5b50\u4e3a\u7a7a\u7684\u60c5\u51b5"},{"location":"Algorithm/dynamic_programming/Sharing_pears/#_4","text":"#include <iostream> #include <vector> using namespace std ; void solute ( int m , int n ){ vector < vector < int >> dp ( m + 1 , vector < int > ( n + 1 , 0 )); for ( int i = 0 ; i <= n ; i ++ ) dp [ 0 ][ i ] = 1 ; for ( int i = 1 ; i <= m ; i ++ ){ for ( int j = 1 ; j <= n ; j ++ ){ if ( i >= j ){ dp [ i ][ j ] = dp [ i ][ j -1 ] + dp [ i - j ][ j ]; } else { dp [ i ][ j ] = dp [ i ][ j -1 ]; } } } cout << dp [ m ][ n ] << endl ; } int main (){ int k = 0 ; cin >> k ; for ( int i = 0 ; i < k ; i ++ ){ int m , n ; cin >> m >> n ; solute ( m , n ); } } \u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e0a\u9762\u7684\u7b54\u6848\u6ca1\u80fd\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u3002","title":"\u52a8\u6001\u89c4\u5212\u5b9e\u73b0"},{"location":"Algorithm/dynamic_programming/number-triangle/","text":"\u6570\u5b57\u4e09\u89d2\u5f62\u95ee\u9898\u7b80\u4ecb \u6570\u5b57\u4e09\u89d2\u5f62\u95ee\u9898\u662f\u52a8\u6001\u89c4\u5212\u4e2d\u7684\u7ecf\u5178\u95ee\u9898\u4e4b\u4e00\uff0c\u901a\u5e38\u7528\u4e8e\u7ec3\u4e60\u52a8\u6001\u89c4\u5212\u7684\u57fa\u672c\u601d\u60f3\u548c\u6280\u5de7\u3002\u95ee\u9898\u7684\u6838\u5fc3\u662f\u4ece\u4e00\u4e2a\u6570\u5b57\u4e09\u89d2\u5f62\u7684\u9876\u7aef\u51fa\u53d1\uff0c\u5bfb\u627e\u4e00\u6761\u8def\u5f84\uff0c\u4f7f\u8def\u5f84\u4e0a\u7684\u6570\u5b57\u4e4b\u548c\u6700\u5927\u6216\u6700\u5c0f\u3002 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57\u4e09\u89d2\u5f62\uff0c\u4ece\u9876\u90e8\u51fa\u53d1\uff0c\u6bcf\u6b21\u53ef\u4ee5\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\u76f8\u90bb\u7684\u6570\u5b57\uff0c\u6c42\u4ece\u9876\u90e8\u5230\u5e95\u90e8\u7684\u8def\u5f84\u4e2d\uff0c\u6570\u5b57\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002 \u793a\u4f8b \u6570\u5b57\u4e09\u89d2\u5f62\u5982\u4e0b\uff1a 2 3 4 6 5 7 4 1 8 3 \u4ece\u9876\u90e8\u5230\u5e95\u90e8\u7684\u4e00\u6761\u8def\u5f84\u4e3a\uff1a 2 \u2192 3 \u2192 5 \u2192 8 \uff0c\u8def\u5f84\u4e0a\u7684\u6570\u5b57\u4e4b\u548c\u4e3a 18 \uff0c\u8fd9\u662f\u6240\u6709\u8def\u5f84\u4e2d\u6570\u5b57\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002 \u89e3\u9898\u601d\u8def \u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b58\u50a8\uff1a 2 3 4 6 5 7 4 1 8 3 \u72b6\u6001\u5b9a\u4e49 \u8bbe dp[i][j] \u8868\u793a\u4ece\u4f4d\u7f6e (i, j) \u5230\u5e95\u90e8\u7684\u6700\u5927\u8def\u5f84\u548c\u3002\u5148\u8d4b\u503c dp \u6570\u7ec4\u7b49\u4e8e trangle \u6570\u7ec4\uff0c\u7136\u540e\u4ece\u5012\u6570\u7b2c\u4e8c\u884c\u5f00\u59cb\u9012\u63a8\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \u4ece\u5e95\u5411\u4e0a\u9012\u63a8\uff1a dp[i][j] = max(dp[i+1][j], dp[i+1][j+1]) + dp[i][j] \u5373\uff0c\u4ece\u5012\u6570\u7b2c\u4e8c\u884c\u5f00\u59cb\uff0c\u627e\u5230\u5b83\u4e0b\u9762\u4e00\u884c\u7684\u90a3\u4e2a\u6570\u548c\u53f3\u4e0b\u89d2\u7684\u6570\u4e4b\u95f4\u8f83\u5927\u7684\u52a0\u4e0a dp[i][j] ,\u6ce8\u610f\u5148\u524d\u8981\u8ba9 dp \u6570\u7ec4\u7b49\u4e8e trangle \u6570\u7ec4","title":"\u6570\u5b57\u4e09\u89d2"},{"location":"Algorithm/dynamic_programming/number-triangle/#_1","text":"\u6570\u5b57\u4e09\u89d2\u5f62\u95ee\u9898\u662f\u52a8\u6001\u89c4\u5212\u4e2d\u7684\u7ecf\u5178\u95ee\u9898\u4e4b\u4e00\uff0c\u901a\u5e38\u7528\u4e8e\u7ec3\u4e60\u52a8\u6001\u89c4\u5212\u7684\u57fa\u672c\u601d\u60f3\u548c\u6280\u5de7\u3002\u95ee\u9898\u7684\u6838\u5fc3\u662f\u4ece\u4e00\u4e2a\u6570\u5b57\u4e09\u89d2\u5f62\u7684\u9876\u7aef\u51fa\u53d1\uff0c\u5bfb\u627e\u4e00\u6761\u8def\u5f84\uff0c\u4f7f\u8def\u5f84\u4e0a\u7684\u6570\u5b57\u4e4b\u548c\u6700\u5927\u6216\u6700\u5c0f\u3002","title":"\u6570\u5b57\u4e09\u89d2\u5f62\u95ee\u9898\u7b80\u4ecb"},{"location":"Algorithm/dynamic_programming/number-triangle/#_2","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57\u4e09\u89d2\u5f62\uff0c\u4ece\u9876\u90e8\u51fa\u53d1\uff0c\u6bcf\u6b21\u53ef\u4ee5\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\u76f8\u90bb\u7684\u6570\u5b57\uff0c\u6c42\u4ece\u9876\u90e8\u5230\u5e95\u90e8\u7684\u8def\u5f84\u4e2d\uff0c\u6570\u5b57\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"Algorithm/dynamic_programming/number-triangle/#_3","text":"\u6570\u5b57\u4e09\u89d2\u5f62\u5982\u4e0b\uff1a 2 3 4 6 5 7 4 1 8 3 \u4ece\u9876\u90e8\u5230\u5e95\u90e8\u7684\u4e00\u6761\u8def\u5f84\u4e3a\uff1a 2 \u2192 3 \u2192 5 \u2192 8 \uff0c\u8def\u5f84\u4e0a\u7684\u6570\u5b57\u4e4b\u548c\u4e3a 18 \uff0c\u8fd9\u662f\u6240\u6709\u8def\u5f84\u4e2d\u6570\u5b57\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002","title":"\u793a\u4f8b"},{"location":"Algorithm/dynamic_programming/number-triangle/#_4","text":"\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b58\u50a8\uff1a 2 3 4 6 5 7 4 1 8 3","title":"\u89e3\u9898\u601d\u8def"},{"location":"Algorithm/dynamic_programming/number-triangle/#_5","text":"\u8bbe dp[i][j] \u8868\u793a\u4ece\u4f4d\u7f6e (i, j) \u5230\u5e95\u90e8\u7684\u6700\u5927\u8def\u5f84\u548c\u3002\u5148\u8d4b\u503c dp \u6570\u7ec4\u7b49\u4e8e trangle \u6570\u7ec4\uff0c\u7136\u540e\u4ece\u5012\u6570\u7b2c\u4e8c\u884c\u5f00\u59cb\u9012\u63a8\u3002","title":"\u72b6\u6001\u5b9a\u4e49"},{"location":"Algorithm/dynamic_programming/number-triangle/#_6","text":"\u4ece\u5e95\u5411\u4e0a\u9012\u63a8\uff1a dp[i][j] = max(dp[i+1][j], dp[i+1][j+1]) + dp[i][j] \u5373\uff0c\u4ece\u5012\u6570\u7b2c\u4e8c\u884c\u5f00\u59cb\uff0c\u627e\u5230\u5b83\u4e0b\u9762\u4e00\u884c\u7684\u90a3\u4e2a\u6570\u548c\u53f3\u4e0b\u89d2\u7684\u6570\u4e4b\u95f4\u8f83\u5927\u7684\u52a0\u4e0a dp[i][j] ,\u6ce8\u610f\u5148\u524d\u8981\u8ba9 dp \u6570\u7ec4\u7b49\u4e8e trangle \u6570\u7ec4","title":"\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b"},{"location":"Algorithm/dynamic_programming/sequence/","text":"\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff08LIS\uff09 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4,\u627e\u5230\u4e00\u4e2a\u6700\u957f\u7684\u5b50\u5e8f\u5217,\u4f7f\u5f97\u8fd9\u4e2a\u5b50\u5e8f\u5217\u662f\u4e25\u683c\u9012\u589e\u7684\u3002 \u52a8\u6001\u89c4\u5212\u89e3\u6cd5 \u72b6\u6001\u5b9a\u4e49 \uff1a dp[i] \u8868\u793a\u4ee5\u7b2c i \u4e2a\u5143\u7d20\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a \u5bf9\u4e8e\u6bcf\u4e2a j < i ,\u5982\u679c nums[j] < nums[i] ,\u5219\uff1a dp[i] = max(dp[i], dp[j] + 1); \u8868\u793a\u5f53\u524d\u5143\u7d20\u53ef\u4ee5\u63a5\u5728 j \u7684\u5b50\u5e8f\u5217\u540e\u9762\u3002 \u521d\u59cb\u5316 \uff1a \u6bcf\u4e2a\u5143\u7d20\u5355\u72ec\u4f5c\u4e3a\u5b50\u5e8f\u5217\u65f6,\u957f\u5ea6\u4e3a 1\uff1a dp[i] = 1; \u7ed3\u679c \uff1a \u6700\u7ec8\u7ed3\u679c\u662f dp \u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c,\u5373\uff1a LIS = max(dp[i]) for all i. \u65f6\u95f4\u590d\u6742\u5ea6 \u52a8\u6001\u89c4\u5212\u89e3\u6cd5\uff1a O(n^2) \u3002 \u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u4f18\u5316\uff1a O(n log n) \u3002 \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\uff08LCS\uff09 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 text1 \u548c text2 ,\u627e\u5230\u5b83\u4eec\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5b50\u5e8f\u5217\u662f\u6307\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5220\u9664\u4e00\u4e9b\u5b57\u7b26\uff08\u6216\u4e0d\u5220\u9664\uff09\u540e\u5f97\u5230\u7684\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u52a8\u6001\u89c4\u5212\u89e3\u6cd5 \u72b6\u6001\u5b9a\u4e49 \uff1a dp[i][j] \u8868\u793a text1[0...i-1] \u548c text2[0...j-1] \u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u957f\u5ea6\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a \u5982\u679c text1[i-1] == text2[j-1] ,\u5219\uff1a dp[i][j] = dp[i-1][j-1] + 1; \u5426\u5219\uff1a dp[i][j] = max(dp[i-1][j], dp[i][j-1]); \u521d\u59cb\u5316 \uff1a \u5982\u679c i == 0 \u6216 j == 0 ,\u5219\uff1a dp[i][j] = 0; \u7ed3\u679c \uff1a \u6700\u7ec8\u7ed3\u679c\u662f dp[m][n] ,\u5176\u4e2d m \u548c n \u5206\u522b\u662f text1 \u548c text2 \u7684\u957f\u5ea6\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \u65f6\u95f4\u590d\u6742\u5ea6\uff1a O(m * n) \u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a O(m * n) ,\u53ef\u4ee5\u4f18\u5316\u4e3a O(min(m, n)) \u3002 \u70ae\u5f39\u62e6\u622a\u95ee\u9898 \u67d0\u56fd\u4e3a\u4e86\u9632\u5fa1\u654c\u56fd\u7684\u5bfc\u5f39\u88ad\u51fb,\u5f00\u53d1\u51fa\u4e00\u79cd\u5bfc\u5f39\u62e6\u622a\u7cfb\u7edf\u3002\u4f46\u662f\u8fd9\u79cd\u5bfc\u5f39\u62e6\u622a\u7cfb\u7edf\u6709\u4e00\u4e2a\u7f3a\u9677\uff1a\u867d\u7136\u5b83\u7684\u7b2c\u4e00\u53d1\u70ae\u5f39\u80fd\u591f\u5230\u8fbe\u4efb\u610f\u7684\u9ad8\u5ea6,\u4f46\u662f\u4ee5\u540e\u6bcf\u4e00\u53d1\u70ae\u5f39\u90fd\u4e0d\u80fd\u9ad8\u4e8e\u524d\u4e00\u53d1\u7684\u9ad8\u5ea6\u3002\u67d0\u5929,\u96f7\u8fbe\u6355\u6349\u5230\u654c\u56fd\u7684\u5bfc\u5f39\u6765\u88ad,\u5e76\u89c2\u6d4b\u5230\u5bfc\u5f39\u4f9d\u6b21\u98de\u6765\u7684\u9ad8\u5ea6,\u8bf7\u8ba1\u7b97\u8fd9\u5957\u7cfb\u7edf\u6700\u591a\u80fd\u62e6\u622a\u591a\u5c11\u5bfc\u5f39\u3002\u62e6\u622a\u6765\u88ad\u5bfc\u5f39\u65f6,\u5fc5\u987b\u6309\u6765\u88ad\u5bfc\u5f39\u88ad\u51fb\u7684\u65f6\u95f4\u987a\u5e8f,\u4e0d\u5141\u8bb8\u5148\u62e6\u622a\u540e\u9762\u7684\u5bfc\u5f39,\u518d\u62e6\u622a\u524d\u9762\u7684\u5bfc\u5f39\u3002 4 9 6 7 8 \u8fd9\u4e2a\u9898\u5f00\u59cb\u89e3\u6cd5\u8fd8\u662f\u53cc\u6307\u9488\u5faa\u73af\u6765\u505a,\u603b\u662f\u6709\u4e9b\u6d4b\u8bd5\u7528\u4f8b\u6ca1\u901a\u8fc7,\u540e\u6765\u53d1\u73b0\u8fd9\u4e2a\u5e94\u8be5\u7528\u52a8\u6001\u89c4\u5212\u624d\u662f\u6b63\u786e\u89e3\u6cd5 \u6c42\u5355\u8c03\u4e0b\u964d\u5b50\u5e8f\u5217\u5c31\u597d \u53cc\u91cd\u5faa\u73af dp[i]\u8868\u793a\u4ee5num[i]\u7ed3\u5c3e\u7684\u6700\u957f\u4e0b\u964d\u5b50\u5e8f\u5217 ```` ----- ```cpp for(int i=1;i<n;i++){ for(int j=0;j<i;j++){ if(num[j]>=num[i]){ dp[i]=max(dp[i],dp[j]+1); } } } \u6700\u957f\u56de\u6587\u5b50\u4e32 \u52a8\u6001\u89c4\u5212\u7684\u6838\u5fc3\u601d\u60f3 \u5b9a\u4e49\u72b6\u6001 \uff1a \u7528 dp[i][j] \u8868\u793a\u5b57\u7b26\u4e32\u4ece\u7d22\u5f15 i \u5230 j \u662f\u5426\u662f\u56de\u6587\u5b50\u4e32\u3002 dp[i][j] = true \u8868\u793a s[i..=j] \u662f\u56de\u6587\u5b50\u4e32\u3002 dp[i][j] = false \u8868\u793a s[i..=j] \u4e0d\u662f\u56de\u6587\u5b50\u4e32\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a \u5982\u679c s[i] == s[j] ,\u5219\uff1a \u5f53\u5b50\u4e32\u957f\u5ea6\u4e3a 1 \u6216 2 \u65f6\uff08\u5373 j - i <= 1 \uff09, dp[i][j] = true \u3002 \u5426\u5219, dp[i][j] = dp[i+1][j-1] \u3002 \u5982\u679c s[i] != s[j] ,\u5219 dp[i][j] = false \u3002 \u521d\u59cb\u5316 \uff1a \u5355\u4e2a\u5b57\u7b26\u4e00\u5b9a\u662f\u56de\u6587\u5b50\u4e32,\u56e0\u6b64 dp[i][i] = true \u3002 \u7ed3\u679c \uff1a \u904d\u5386\u6240\u6709\u53ef\u80fd\u7684\u5b50\u4e32,\u627e\u5230\u6700\u957f\u7684\u56de\u6587\u5b50\u4e32\u3002 \u4ece\u957f\u5ea6 len \u4e3a 2 \u5f00\u59cb\u904d\u5386\u5230\u957f\u5ea6\u4e3a n , \u7528\u53d8\u91cfstart\u548cmaxlen \u8bb0\u5f55\u6700\u957f\u56de\u6587\u5b50\u4e32\u7684\u5f00\u59cb\u4f4d\u7f6e\u548c\u6700\u957f\u957f\u5ea6,\u5f00\u59cb len=2 \u65f6,\u76f8\u5f53\u4e8e\u5728\u5b57\u7b26\u4e32s\u4e2d\u6309\u4e2a\u904d\u5386\u76f8\u90bb\u4e24\u5bf9\u5b57\u7b26 s[i]\u548cs[j] ,\u5224\u65ad\u4e24\u4e2a\u662f\u5426\u76f8\u7b49\u76f8\u7b49 dp[i][j]\u4e3atrue ,\u7136\u540e len=3 \u540e,\u5224\u65ad s[i]\u662f\u5426\u7b49\u4e8es[j] ,\u82e5\u76f8\u7b49,\u5219\u5224\u65ad dp[i+1][j-1]\u662f\u5426\u4e3atrue ,\u4e5f\u5c31\u662f\u5224\u65ad i,j \u4e4b\u95f4\u7684\u8fd9\u4e9b\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587\u5b57\u7b26\u4e32\u3002 \u6838\u5fc3\u4ee3\u7801: for ( int len = 2 ; len <= n ; len ++ ){ for ( int i = 0 ; i <= n - len ; i ++ ){ int j = i + len -1 ; if ( s [ i ] == s [ j ] && ( len == 2 || dp [ i + 1 ][ j -1 ])){ dp [ i ][ j ] = true ; if ( len > maxlen ){ start = i ; maxlen = len ; } } } } leetcode.123 \u4e70\u80a1\u7968 \u53ea\u80fd\u4ea4\u6613\u4e24\u6b21,\u6211\u672c\u6765\u6253\u7b97\u8ba1\u7b97\u5e8f\u5217\u4e2d\u6240\u6709\u8fde\u7eed\u7684\u5347\u5e8f\u7684\u533a\u95f4\u7684\u5229\u6da6,\u7136\u540e\u628a\u8fd9\u4e9b\u5229\u6da6\u5b58\u5165\u4e00\u4e2a\u5411\u91cf,\u7136\u540e\u6392\u5e8f,\u627e\u51fa\u6700\u5927\u7684\u4e24\u9879\u3002\u4f46\u662f\u7f16\u8bd1\u9519\u8bef,\u4f46\u53ef\u4ee5\u5728\u672c\u5730\u8fd0\u884c\u4e00\u4e9b\u6d4b\u8bd5\u7528\u4f8b\u901a\u8fc7,\u4e0d\u77e5\u9053\u4ec0\u4e48\u539f\u56e0,\u6682\u4e14\u4e0d\u7ba1,\u611f\u89c9\u8fd9\u4e2a\u6709\u70b9\u50cf\u8d2a\u5fc3\u601d\u60f3\u3002 \u6b63\u786e\u505a\u6cd5\u5e94\u8be5\u662f\u52a8\u6001\u89c4\u5212,\u7528\u4e24\u4e2a\u52a8\u6001\u89c4\u5212\u6570\u7ec4 left \u548c right \u6570\u7ec4,\u5206\u522b\u8868\u793a\u7b2c0-i\u5929\u7684\u5229\u6da6\u548c\u7b2c i-n \u7684\u5229\u6da6\u3002 \u4f60\u7684\u4ee3\u7801\u5728\u6267\u884c\u65f6\u53ef\u80fd\u4f1a\u51fa\u9519,\u4e3b\u8981\u539f\u56e0\u662f \u6570\u7ec4\u8d8a\u754c \u548c \u903b\u8f91\u95ee\u9898 \u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u5206\u6790\u548c\u4fee\u590d\u5efa\u8bae\uff1a \u95ee\u9898 1\uff1a\u6570\u7ec4\u8d8a\u754c \u5728 while \u5faa\u73af\u4e2d\uff1a while ( prices [ i ] - prices [ i - 1 ] > 0 ) { temp += prices [ i ] - prices [ i - 1 ]; i ++ ; } - \u5f53 i \u589e\u52a0\u5230 prices.size() \u65f6, prices[i] \u4f1a\u8bbf\u95ee\u8d8a\u754c\u7684\u5185\u5b58,\u5bfc\u81f4\u8fd0\u884c\u65f6\u9519\u8bef\u3002 \u4fee\u590d\u65b9\u6cd5 \uff1a \u5728\u8fdb\u5165 while \u5faa\u73af\u4e4b\u524d,\u68c0\u67e5 i \u662f\u5426\u8d8a\u754c\uff1a while ( i < prices . size () && prices [ i ] - prices [ i - 1 ] > 0 ) { temp += prices [ i ] - prices [ i - 1 ]; i ++ ; } \u95ee\u9898 2\uff1a\u903b\u8f91\u95ee\u9898 \u6211\u539f\u6765\u60f3\u901a\u8fc7\u8ba1\u7b97\u6240\u6709\u7684\u4e0a\u5347\u533a\u95f4\u5229\u6da6,\u5e76\u53d6\u6700\u5927\u7684\u4e24\u4e2a\u5229\u6da6\u76f8\u52a0\u3002 \u4f46\u662f\u5982\u679c\u662f 1,3,2,7,2,0,9 \u8fd9\u4e2a\u5e8f\u5217\u6309\u7167\u6211\u7684\u7b97\u6cd5\u5c31\u4f1a\u51fa\u9519\u3002 \u52a8\u6001\u89c4\u5212\u601d\u8def \uff1a \u5b9a\u4e49\u72b6\u6001 \uff1a \u7528\u4e24\u4e2a\u6570\u7ec4 left \u548c right \uff1a left[i] \u8868\u793a\u4ece\u7b2c 0 \u5929\u5230\u7b2c i \u5929\u7684\u6700\u5927\u5229\u6da6\u3002 right[i] \u8868\u793a\u4ece\u7b2c i \u5929\u5230\u6700\u540e\u4e00\u5929\u7684\u6700\u5927\u5229\u6da6\u3002 \u72b6\u6001\u8f6c\u79fb \uff1a \u8ba1\u7b97 left[i] \uff1a \u904d\u5386 prices ,\u8bb0\u5f55\u6700\u4f4e\u4ef7\u683c minPrice ,\u5e76\u66f4\u65b0\u6700\u5927\u5229\u6da6\uff1a left [ i ] = max ( left [ i - 1 ], prices [ i ] - minPrice ); \u8ba1\u7b97 right[i] \uff1a \u4ece\u53f3\u5411\u5de6\u904d\u5386 prices ,\u8bb0\u5f55\u6700\u9ad8\u4ef7\u683c maxPrice ,\u5e76\u66f4\u65b0\u6700\u5927\u5229\u6da6\uff1a right [ i ] = max ( right [ i + 1 ], maxPrice - prices [ i ]); \u5408\u5e76\u7ed3\u679c \uff1a \u904d\u5386\u6240\u6709\u53ef\u80fd\u7684\u5206\u5272\u70b9 i ,\u8ba1\u7b97\u6700\u5927\u5229\u6da6\uff1a maxProfit = max ( maxProfit , left [ i ] + right [ i ]); \u5de6\u4fa7\u6700\u5927\u5229\u6da6 \uff1a \u904d\u5386 prices ,\u8bb0\u5f55\u6700\u4f4e\u4ef7\u683c minPrice ,\u5e76\u66f4\u65b0\u4ece\u7b2c 0 \u5929\u5230\u7b2c i \u5929\u7684\u6700\u5927\u5229\u6da6\u3002 \u53f3\u4fa7\u6700\u5927\u5229\u6da6 \uff1a \u4ece\u53f3\u5411\u5de6\u904d\u5386 prices ,\u8bb0\u5f55\u6700\u9ad8\u4ef7\u683c maxPrice ,\u5e76\u66f4\u65b0\u4ece\u7b2c i \u5929\u5230\u6700\u540e\u4e00\u5929\u7684\u6700\u5927\u5229\u6da6\u3002 \u5408\u5e76\u7ed3\u679c \uff1a \u904d\u5386\u6240\u6709\u53ef\u80fd\u7684\u5206\u5272\u70b9 i ,\u5c06 left[i] \u548c right[i] \u76f8\u52a0,\u5f97\u5230\u6700\u591a\u4e24\u6b21\u4ea4\u6613\u7684\u6700\u5927\u5229\u6da6\u3002 // \u5de6\u4fa7\u6700\u5927\u5229\u6da6 vector < int > left ( n , 0 ); int minPrice = prices [ 0 ]; for ( int i = 1 ; i < n ; i ++ ) { minPrice = min ( minPrice , prices [ i ]); left [ i ] = max ( left [ i - 1 ], prices [ i ] - minPrice ); } // \u53f3\u4fa7\u6700\u5927\u5229\u6da6 vector < int > right ( n , 0 ); int maxPrice = prices [ n - 1 ]; for ( int i = n - 2 ; i >= 0 ; i -- ) { maxPrice = max ( maxPrice , prices [ i ]); right [ i ] = max ( right [ i + 1 ], maxPrice - prices [ i ]); } // \u5408\u5e76\u7ed3\u679c int maxProfit = 0 ; for ( int i = 0 ; i < n ; i ++ ) { maxProfit = max ( maxProfit , left [ i ] + right [ i ]); } lc72\u7f16\u8f91\u8ddd\u79bb \u7ed9\u4f60\u4e24\u4e2a\u5355\u8bcd word1 \u548c word2\uff0c \u8bf7\u8fd4\u56de\u5c06 word1 \u8f6c\u6362\u6210 word2 \u6240\u4f7f\u7528\u7684\u6700\u5c11\u64cd\u4f5c\u6570 \u3002 \u4f60\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u5355\u8bcd\u8fdb\u884c\u5982\u4e0b\u4e09\u79cd\u64cd\u4f5c\uff1a \u63d2\u5165\u4e00\u4e2a\u5b57\u7b26 \u5220\u9664\u4e00\u4e2a\u5b57\u7b26 \u66ff\u6362\u4e00\u4e2a\u5b57\u7b26 \u8fd9\u4e2a\u9898\u9700\u8981\u52a8\u6001\u89c4\u5212\u6c42\u89e3\uff0c\u4f46\u662f\u600e\u4e48\u5efa\u7acb\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5462 \u5b9a\u4e49 dp[i][j] dp[i][j] \u4ee3\u8868 word1 \u4e2d\u524d i \u4e2a\u5b57\u7b26\uff0c\u53d8\u6362\u5230 word2 \u4e2d\u524d j \u4e2a\u5b57\u7b26\uff0c\u6700\u77ed\u9700\u8981\u64cd\u4f5c\u7684\u6b21\u6570 \u9700\u8981\u8003\u8651 word1 \u6216 word2 \u4e00\u4e2a\u5b57\u6bcd\u90fd\u6ca1\u6709\uff0c\u5373\u5168\u589e\u52a0/\u5220\u9664\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u9884\u7559 dp[0][j] \u548c dp[i][0] \u72b6\u6001\u8f6c\u79fb \u589e\uff0c dp[i][j] = dp[i][j - 1] + 1 \u5220\uff0c dp[i][j] = dp[i - 1][j] + 1 \u6539\uff0c dp[i][j] = dp[i - 1][j - 1] + 1 \u6309\u987a\u5e8f\u8ba1\u7b97\uff0c\u5f53\u8ba1\u7b97 dp[i][j] \u65f6\uff0cdp[i - 1][j] \uff0c dp[i][j - 1] \uff0c dp[i - 1][j - 1] \u5747\u5df2\u7ecf\u786e\u5b9a\u4e86 \u914d\u5408\u589e\u5220\u6539\u8fd9\u4e09\u79cd\u64cd\u4f5c\uff0c\u9700\u8981\u5bf9\u5e94\u7684 dp \u628a\u64cd\u4f5c\u6b21\u6570\u52a0\u4e00\uff0c\u53d6\u4e09\u79cd\u7684\u6700\u5c0f \u5982\u679c\u521a\u597d\u8fd9\u4e24\u4e2a\u5b57\u6bcd\u76f8\u540c word1[i - 1] = word2[j - 1] \uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u53c2\u8003 dp[i - 1][j - 1] \uff0c\u64cd\u4f5c\u4e0d\u7528\u52a0\u4e00 class Solution { public : int minDistance ( string word1 , string word2 ) { int m = word1 . size (); int n = word2 . size (); // dp[i][j] \u8868\u793a\u5c06 word1 \u7684\u524d i \u4e2a\u5b57\u7b26\u8f6c\u6362\u4e3a word2 \u7684\u524d j \u4e2a\u5b57\u7b26\u6240\u9700\u7684\u6700\u5c11\u64cd\u4f5c\u6570 vector < vector < int >> dp ( m + 1 , vector < int > ( n + 1 , 0 )); // \u521d\u59cb\u5316 dp \u6570\u7ec4 for ( int i = 0 ; i <= m ; i ++ ) dp [ i ][ 0 ] = i ; // \u5220\u9664\u64cd\u4f5c for ( int j = 0 ; j <= n ; j ++ ) dp [ 0 ][ j ] = j ; // \u63d2\u5165\u64cd\u4f5c // \u586b\u5145 dp \u6570\u7ec4 for ( int i = 1 ; i <= m ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { if ( word1 [ i - 1 ] == word2 [ j - 1 ]) { // \u5982\u679c\u5f53\u524d\u5b57\u7b26\u76f8\u7b49\uff0c\u4e0d\u9700\u8981\u989d\u5916\u64cd\u4f5c dp [ i ][ j ] = dp [ i - 1 ][ j - 1 ]; } else { // \u5426\u5219\uff0c\u53d6\u589e\u3001\u5220\u3001\u6539\u4e09\u79cd\u64cd\u4f5c\u7684\u6700\u5c0f\u503c dp [ i ][ j ] = min ( dp [ i - 1 ][ j - 1 ] + 1 , // \u66ff\u6362\u64cd\u4f5c min ( dp [ i ][ j - 1 ] + 1 , // \u63d2\u5165\u64cd\u4f5c dp [ i - 1 ][ j ] + 1 )); // \u5220\u9664\u64cd\u4f5c } } } return dp [ m ][ n ]; } };","title":"\u5b50\u5e8f\u5217\u95ee\u9898"},{"location":"Algorithm/dynamic_programming/sequence/#lis","text":"","title":"\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff08LIS\uff09"},{"location":"Algorithm/dynamic_programming/sequence/#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4,\u627e\u5230\u4e00\u4e2a\u6700\u957f\u7684\u5b50\u5e8f\u5217,\u4f7f\u5f97\u8fd9\u4e2a\u5b50\u5e8f\u5217\u662f\u4e25\u683c\u9012\u589e\u7684\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"Algorithm/dynamic_programming/sequence/#_2","text":"\u72b6\u6001\u5b9a\u4e49 \uff1a dp[i] \u8868\u793a\u4ee5\u7b2c i \u4e2a\u5143\u7d20\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a \u5bf9\u4e8e\u6bcf\u4e2a j < i ,\u5982\u679c nums[j] < nums[i] ,\u5219\uff1a dp[i] = max(dp[i], dp[j] + 1); \u8868\u793a\u5f53\u524d\u5143\u7d20\u53ef\u4ee5\u63a5\u5728 j \u7684\u5b50\u5e8f\u5217\u540e\u9762\u3002 \u521d\u59cb\u5316 \uff1a \u6bcf\u4e2a\u5143\u7d20\u5355\u72ec\u4f5c\u4e3a\u5b50\u5e8f\u5217\u65f6,\u957f\u5ea6\u4e3a 1\uff1a dp[i] = 1; \u7ed3\u679c \uff1a \u6700\u7ec8\u7ed3\u679c\u662f dp \u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c,\u5373\uff1a LIS = max(dp[i]) for all i.","title":"\u52a8\u6001\u89c4\u5212\u89e3\u6cd5"},{"location":"Algorithm/dynamic_programming/sequence/#_3","text":"\u52a8\u6001\u89c4\u5212\u89e3\u6cd5\uff1a O(n^2) \u3002 \u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u4f18\u5316\uff1a O(n log n) \u3002","title":"\u65f6\u95f4\u590d\u6742\u5ea6"},{"location":"Algorithm/dynamic_programming/sequence/#lcs","text":"","title":"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\uff08LCS\uff09"},{"location":"Algorithm/dynamic_programming/sequence/#_4","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 text1 \u548c text2 ,\u627e\u5230\u5b83\u4eec\u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5b50\u5e8f\u5217\u662f\u6307\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5220\u9664\u4e00\u4e9b\u5b57\u7b26\uff08\u6216\u4e0d\u5220\u9664\uff09\u540e\u5f97\u5230\u7684\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"Algorithm/dynamic_programming/sequence/#_5","text":"\u72b6\u6001\u5b9a\u4e49 \uff1a dp[i][j] \u8868\u793a text1[0...i-1] \u548c text2[0...j-1] \u7684\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u957f\u5ea6\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a \u5982\u679c text1[i-1] == text2[j-1] ,\u5219\uff1a dp[i][j] = dp[i-1][j-1] + 1; \u5426\u5219\uff1a dp[i][j] = max(dp[i-1][j], dp[i][j-1]); \u521d\u59cb\u5316 \uff1a \u5982\u679c i == 0 \u6216 j == 0 ,\u5219\uff1a dp[i][j] = 0; \u7ed3\u679c \uff1a \u6700\u7ec8\u7ed3\u679c\u662f dp[m][n] ,\u5176\u4e2d m \u548c n \u5206\u522b\u662f text1 \u548c text2 \u7684\u957f\u5ea6\u3002","title":"\u52a8\u6001\u89c4\u5212\u89e3\u6cd5"},{"location":"Algorithm/dynamic_programming/sequence/#_6","text":"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a O(m * n) \u3002 \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a O(m * n) ,\u53ef\u4ee5\u4f18\u5316\u4e3a O(min(m, n)) \u3002","title":"\u65f6\u95f4\u590d\u6742\u5ea6"},{"location":"Algorithm/dynamic_programming/sequence/#_7","text":"\u67d0\u56fd\u4e3a\u4e86\u9632\u5fa1\u654c\u56fd\u7684\u5bfc\u5f39\u88ad\u51fb,\u5f00\u53d1\u51fa\u4e00\u79cd\u5bfc\u5f39\u62e6\u622a\u7cfb\u7edf\u3002\u4f46\u662f\u8fd9\u79cd\u5bfc\u5f39\u62e6\u622a\u7cfb\u7edf\u6709\u4e00\u4e2a\u7f3a\u9677\uff1a\u867d\u7136\u5b83\u7684\u7b2c\u4e00\u53d1\u70ae\u5f39\u80fd\u591f\u5230\u8fbe\u4efb\u610f\u7684\u9ad8\u5ea6,\u4f46\u662f\u4ee5\u540e\u6bcf\u4e00\u53d1\u70ae\u5f39\u90fd\u4e0d\u80fd\u9ad8\u4e8e\u524d\u4e00\u53d1\u7684\u9ad8\u5ea6\u3002\u67d0\u5929,\u96f7\u8fbe\u6355\u6349\u5230\u654c\u56fd\u7684\u5bfc\u5f39\u6765\u88ad,\u5e76\u89c2\u6d4b\u5230\u5bfc\u5f39\u4f9d\u6b21\u98de\u6765\u7684\u9ad8\u5ea6,\u8bf7\u8ba1\u7b97\u8fd9\u5957\u7cfb\u7edf\u6700\u591a\u80fd\u62e6\u622a\u591a\u5c11\u5bfc\u5f39\u3002\u62e6\u622a\u6765\u88ad\u5bfc\u5f39\u65f6,\u5fc5\u987b\u6309\u6765\u88ad\u5bfc\u5f39\u88ad\u51fb\u7684\u65f6\u95f4\u987a\u5e8f,\u4e0d\u5141\u8bb8\u5148\u62e6\u622a\u540e\u9762\u7684\u5bfc\u5f39,\u518d\u62e6\u622a\u524d\u9762\u7684\u5bfc\u5f39\u3002 4 9 6 7 8","title":"\u70ae\u5f39\u62e6\u622a\u95ee\u9898"},{"location":"Algorithm/dynamic_programming/sequence/#_8","text":"\u6c42\u5355\u8c03\u4e0b\u964d\u5b50\u5e8f\u5217\u5c31\u597d \u53cc\u91cd\u5faa\u73af dp[i]\u8868\u793a\u4ee5num[i]\u7ed3\u5c3e\u7684\u6700\u957f\u4e0b\u964d\u5b50\u5e8f\u5217 ```` ----- ```cpp for(int i=1;i<n;i++){ for(int j=0;j<i;j++){ if(num[j]>=num[i]){ dp[i]=max(dp[i],dp[j]+1); } } }","title":"\u8fd9\u4e2a\u9898\u5f00\u59cb\u89e3\u6cd5\u8fd8\u662f\u53cc\u6307\u9488\u5faa\u73af\u6765\u505a,\u603b\u662f\u6709\u4e9b\u6d4b\u8bd5\u7528\u4f8b\u6ca1\u901a\u8fc7,\u540e\u6765\u53d1\u73b0\u8fd9\u4e2a\u5e94\u8be5\u7528\u52a8\u6001\u89c4\u5212\u624d\u662f\u6b63\u786e\u89e3\u6cd5"},{"location":"Algorithm/dynamic_programming/sequence/#_9","text":"","title":"\u6700\u957f\u56de\u6587\u5b50\u4e32"},{"location":"Algorithm/dynamic_programming/sequence/#_10","text":"\u5b9a\u4e49\u72b6\u6001 \uff1a \u7528 dp[i][j] \u8868\u793a\u5b57\u7b26\u4e32\u4ece\u7d22\u5f15 i \u5230 j \u662f\u5426\u662f\u56de\u6587\u5b50\u4e32\u3002 dp[i][j] = true \u8868\u793a s[i..=j] \u662f\u56de\u6587\u5b50\u4e32\u3002 dp[i][j] = false \u8868\u793a s[i..=j] \u4e0d\u662f\u56de\u6587\u5b50\u4e32\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a \u5982\u679c s[i] == s[j] ,\u5219\uff1a \u5f53\u5b50\u4e32\u957f\u5ea6\u4e3a 1 \u6216 2 \u65f6\uff08\u5373 j - i <= 1 \uff09, dp[i][j] = true \u3002 \u5426\u5219, dp[i][j] = dp[i+1][j-1] \u3002 \u5982\u679c s[i] != s[j] ,\u5219 dp[i][j] = false \u3002 \u521d\u59cb\u5316 \uff1a \u5355\u4e2a\u5b57\u7b26\u4e00\u5b9a\u662f\u56de\u6587\u5b50\u4e32,\u56e0\u6b64 dp[i][i] = true \u3002 \u7ed3\u679c \uff1a \u904d\u5386\u6240\u6709\u53ef\u80fd\u7684\u5b50\u4e32,\u627e\u5230\u6700\u957f\u7684\u56de\u6587\u5b50\u4e32\u3002 \u4ece\u957f\u5ea6 len \u4e3a 2 \u5f00\u59cb\u904d\u5386\u5230\u957f\u5ea6\u4e3a n , \u7528\u53d8\u91cfstart\u548cmaxlen \u8bb0\u5f55\u6700\u957f\u56de\u6587\u5b50\u4e32\u7684\u5f00\u59cb\u4f4d\u7f6e\u548c\u6700\u957f\u957f\u5ea6,\u5f00\u59cb len=2 \u65f6,\u76f8\u5f53\u4e8e\u5728\u5b57\u7b26\u4e32s\u4e2d\u6309\u4e2a\u904d\u5386\u76f8\u90bb\u4e24\u5bf9\u5b57\u7b26 s[i]\u548cs[j] ,\u5224\u65ad\u4e24\u4e2a\u662f\u5426\u76f8\u7b49\u76f8\u7b49 dp[i][j]\u4e3atrue ,\u7136\u540e len=3 \u540e,\u5224\u65ad s[i]\u662f\u5426\u7b49\u4e8es[j] ,\u82e5\u76f8\u7b49,\u5219\u5224\u65ad dp[i+1][j-1]\u662f\u5426\u4e3atrue ,\u4e5f\u5c31\u662f\u5224\u65ad i,j \u4e4b\u95f4\u7684\u8fd9\u4e9b\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587\u5b57\u7b26\u4e32\u3002 \u6838\u5fc3\u4ee3\u7801: for ( int len = 2 ; len <= n ; len ++ ){ for ( int i = 0 ; i <= n - len ; i ++ ){ int j = i + len -1 ; if ( s [ i ] == s [ j ] && ( len == 2 || dp [ i + 1 ][ j -1 ])){ dp [ i ][ j ] = true ; if ( len > maxlen ){ start = i ; maxlen = len ; } } } }","title":"\u52a8\u6001\u89c4\u5212\u7684\u6838\u5fc3\u601d\u60f3"},{"location":"Algorithm/dynamic_programming/sequence/#leetcode123","text":"\u53ea\u80fd\u4ea4\u6613\u4e24\u6b21,\u6211\u672c\u6765\u6253\u7b97\u8ba1\u7b97\u5e8f\u5217\u4e2d\u6240\u6709\u8fde\u7eed\u7684\u5347\u5e8f\u7684\u533a\u95f4\u7684\u5229\u6da6,\u7136\u540e\u628a\u8fd9\u4e9b\u5229\u6da6\u5b58\u5165\u4e00\u4e2a\u5411\u91cf,\u7136\u540e\u6392\u5e8f,\u627e\u51fa\u6700\u5927\u7684\u4e24\u9879\u3002\u4f46\u662f\u7f16\u8bd1\u9519\u8bef,\u4f46\u53ef\u4ee5\u5728\u672c\u5730\u8fd0\u884c\u4e00\u4e9b\u6d4b\u8bd5\u7528\u4f8b\u901a\u8fc7,\u4e0d\u77e5\u9053\u4ec0\u4e48\u539f\u56e0,\u6682\u4e14\u4e0d\u7ba1,\u611f\u89c9\u8fd9\u4e2a\u6709\u70b9\u50cf\u8d2a\u5fc3\u601d\u60f3\u3002 \u6b63\u786e\u505a\u6cd5\u5e94\u8be5\u662f\u52a8\u6001\u89c4\u5212,\u7528\u4e24\u4e2a\u52a8\u6001\u89c4\u5212\u6570\u7ec4 left \u548c right \u6570\u7ec4,\u5206\u522b\u8868\u793a\u7b2c0-i\u5929\u7684\u5229\u6da6\u548c\u7b2c i-n \u7684\u5229\u6da6\u3002 \u4f60\u7684\u4ee3\u7801\u5728\u6267\u884c\u65f6\u53ef\u80fd\u4f1a\u51fa\u9519,\u4e3b\u8981\u539f\u56e0\u662f \u6570\u7ec4\u8d8a\u754c \u548c \u903b\u8f91\u95ee\u9898 \u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u5206\u6790\u548c\u4fee\u590d\u5efa\u8bae\uff1a","title":"leetcode.123 \u4e70\u80a1\u7968"},{"location":"Algorithm/dynamic_programming/sequence/#1","text":"\u5728 while \u5faa\u73af\u4e2d\uff1a while ( prices [ i ] - prices [ i - 1 ] > 0 ) { temp += prices [ i ] - prices [ i - 1 ]; i ++ ; } - \u5f53 i \u589e\u52a0\u5230 prices.size() \u65f6, prices[i] \u4f1a\u8bbf\u95ee\u8d8a\u754c\u7684\u5185\u5b58,\u5bfc\u81f4\u8fd0\u884c\u65f6\u9519\u8bef\u3002","title":"\u95ee\u9898 1\uff1a\u6570\u7ec4\u8d8a\u754c"},{"location":"Algorithm/dynamic_programming/sequence/#_11","text":"\u5728\u8fdb\u5165 while \u5faa\u73af\u4e4b\u524d,\u68c0\u67e5 i \u662f\u5426\u8d8a\u754c\uff1a while ( i < prices . size () && prices [ i ] - prices [ i - 1 ] > 0 ) { temp += prices [ i ] - prices [ i - 1 ]; i ++ ; }","title":"\u4fee\u590d\u65b9\u6cd5\uff1a"},{"location":"Algorithm/dynamic_programming/sequence/#2","text":"\u6211\u539f\u6765\u60f3\u901a\u8fc7\u8ba1\u7b97\u6240\u6709\u7684\u4e0a\u5347\u533a\u95f4\u5229\u6da6,\u5e76\u53d6\u6700\u5927\u7684\u4e24\u4e2a\u5229\u6da6\u76f8\u52a0\u3002 \u4f46\u662f\u5982\u679c\u662f 1,3,2,7,2,0,9 \u8fd9\u4e2a\u5e8f\u5217\u6309\u7167\u6211\u7684\u7b97\u6cd5\u5c31\u4f1a\u51fa\u9519\u3002","title":"\u95ee\u9898 2\uff1a\u903b\u8f91\u95ee\u9898"},{"location":"Algorithm/dynamic_programming/sequence/#_12","text":"\u5b9a\u4e49\u72b6\u6001 \uff1a \u7528\u4e24\u4e2a\u6570\u7ec4 left \u548c right \uff1a left[i] \u8868\u793a\u4ece\u7b2c 0 \u5929\u5230\u7b2c i \u5929\u7684\u6700\u5927\u5229\u6da6\u3002 right[i] \u8868\u793a\u4ece\u7b2c i \u5929\u5230\u6700\u540e\u4e00\u5929\u7684\u6700\u5927\u5229\u6da6\u3002 \u72b6\u6001\u8f6c\u79fb \uff1a \u8ba1\u7b97 left[i] \uff1a \u904d\u5386 prices ,\u8bb0\u5f55\u6700\u4f4e\u4ef7\u683c minPrice ,\u5e76\u66f4\u65b0\u6700\u5927\u5229\u6da6\uff1a left [ i ] = max ( left [ i - 1 ], prices [ i ] - minPrice ); \u8ba1\u7b97 right[i] \uff1a \u4ece\u53f3\u5411\u5de6\u904d\u5386 prices ,\u8bb0\u5f55\u6700\u9ad8\u4ef7\u683c maxPrice ,\u5e76\u66f4\u65b0\u6700\u5927\u5229\u6da6\uff1a right [ i ] = max ( right [ i + 1 ], maxPrice - prices [ i ]); \u5408\u5e76\u7ed3\u679c \uff1a \u904d\u5386\u6240\u6709\u53ef\u80fd\u7684\u5206\u5272\u70b9 i ,\u8ba1\u7b97\u6700\u5927\u5229\u6da6\uff1a maxProfit = max ( maxProfit , left [ i ] + right [ i ]); \u5de6\u4fa7\u6700\u5927\u5229\u6da6 \uff1a \u904d\u5386 prices ,\u8bb0\u5f55\u6700\u4f4e\u4ef7\u683c minPrice ,\u5e76\u66f4\u65b0\u4ece\u7b2c 0 \u5929\u5230\u7b2c i \u5929\u7684\u6700\u5927\u5229\u6da6\u3002 \u53f3\u4fa7\u6700\u5927\u5229\u6da6 \uff1a \u4ece\u53f3\u5411\u5de6\u904d\u5386 prices ,\u8bb0\u5f55\u6700\u9ad8\u4ef7\u683c maxPrice ,\u5e76\u66f4\u65b0\u4ece\u7b2c i \u5929\u5230\u6700\u540e\u4e00\u5929\u7684\u6700\u5927\u5229\u6da6\u3002 \u5408\u5e76\u7ed3\u679c \uff1a \u904d\u5386\u6240\u6709\u53ef\u80fd\u7684\u5206\u5272\u70b9 i ,\u5c06 left[i] \u548c right[i] \u76f8\u52a0,\u5f97\u5230\u6700\u591a\u4e24\u6b21\u4ea4\u6613\u7684\u6700\u5927\u5229\u6da6\u3002 // \u5de6\u4fa7\u6700\u5927\u5229\u6da6 vector < int > left ( n , 0 ); int minPrice = prices [ 0 ]; for ( int i = 1 ; i < n ; i ++ ) { minPrice = min ( minPrice , prices [ i ]); left [ i ] = max ( left [ i - 1 ], prices [ i ] - minPrice ); } // \u53f3\u4fa7\u6700\u5927\u5229\u6da6 vector < int > right ( n , 0 ); int maxPrice = prices [ n - 1 ]; for ( int i = n - 2 ; i >= 0 ; i -- ) { maxPrice = max ( maxPrice , prices [ i ]); right [ i ] = max ( right [ i + 1 ], maxPrice - prices [ i ]); } // \u5408\u5e76\u7ed3\u679c int maxProfit = 0 ; for ( int i = 0 ; i < n ; i ++ ) { maxProfit = max ( maxProfit , left [ i ] + right [ i ]); }","title":"\u52a8\u6001\u89c4\u5212\u601d\u8def\uff1a"},{"location":"Algorithm/dynamic_programming/sequence/#lc72","text":"\u7ed9\u4f60\u4e24\u4e2a\u5355\u8bcd word1 \u548c word2\uff0c \u8bf7\u8fd4\u56de\u5c06 word1 \u8f6c\u6362\u6210 word2 \u6240\u4f7f\u7528\u7684\u6700\u5c11\u64cd\u4f5c\u6570 \u3002 \u4f60\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u5355\u8bcd\u8fdb\u884c\u5982\u4e0b\u4e09\u79cd\u64cd\u4f5c\uff1a \u63d2\u5165\u4e00\u4e2a\u5b57\u7b26 \u5220\u9664\u4e00\u4e2a\u5b57\u7b26 \u66ff\u6362\u4e00\u4e2a\u5b57\u7b26 \u8fd9\u4e2a\u9898\u9700\u8981\u52a8\u6001\u89c4\u5212\u6c42\u89e3\uff0c\u4f46\u662f\u600e\u4e48\u5efa\u7acb\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5462 \u5b9a\u4e49 dp[i][j] dp[i][j] \u4ee3\u8868 word1 \u4e2d\u524d i \u4e2a\u5b57\u7b26\uff0c\u53d8\u6362\u5230 word2 \u4e2d\u524d j \u4e2a\u5b57\u7b26\uff0c\u6700\u77ed\u9700\u8981\u64cd\u4f5c\u7684\u6b21\u6570 \u9700\u8981\u8003\u8651 word1 \u6216 word2 \u4e00\u4e2a\u5b57\u6bcd\u90fd\u6ca1\u6709\uff0c\u5373\u5168\u589e\u52a0/\u5220\u9664\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u9884\u7559 dp[0][j] \u548c dp[i][0] \u72b6\u6001\u8f6c\u79fb \u589e\uff0c dp[i][j] = dp[i][j - 1] + 1 \u5220\uff0c dp[i][j] = dp[i - 1][j] + 1 \u6539\uff0c dp[i][j] = dp[i - 1][j - 1] + 1 \u6309\u987a\u5e8f\u8ba1\u7b97\uff0c\u5f53\u8ba1\u7b97 dp[i][j] \u65f6\uff0cdp[i - 1][j] \uff0c dp[i][j - 1] \uff0c dp[i - 1][j - 1] \u5747\u5df2\u7ecf\u786e\u5b9a\u4e86 \u914d\u5408\u589e\u5220\u6539\u8fd9\u4e09\u79cd\u64cd\u4f5c\uff0c\u9700\u8981\u5bf9\u5e94\u7684 dp \u628a\u64cd\u4f5c\u6b21\u6570\u52a0\u4e00\uff0c\u53d6\u4e09\u79cd\u7684\u6700\u5c0f \u5982\u679c\u521a\u597d\u8fd9\u4e24\u4e2a\u5b57\u6bcd\u76f8\u540c word1[i - 1] = word2[j - 1] \uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u53c2\u8003 dp[i - 1][j - 1] \uff0c\u64cd\u4f5c\u4e0d\u7528\u52a0\u4e00 class Solution { public : int minDistance ( string word1 , string word2 ) { int m = word1 . size (); int n = word2 . size (); // dp[i][j] \u8868\u793a\u5c06 word1 \u7684\u524d i \u4e2a\u5b57\u7b26\u8f6c\u6362\u4e3a word2 \u7684\u524d j \u4e2a\u5b57\u7b26\u6240\u9700\u7684\u6700\u5c11\u64cd\u4f5c\u6570 vector < vector < int >> dp ( m + 1 , vector < int > ( n + 1 , 0 )); // \u521d\u59cb\u5316 dp \u6570\u7ec4 for ( int i = 0 ; i <= m ; i ++ ) dp [ i ][ 0 ] = i ; // \u5220\u9664\u64cd\u4f5c for ( int j = 0 ; j <= n ; j ++ ) dp [ 0 ][ j ] = j ; // \u63d2\u5165\u64cd\u4f5c // \u586b\u5145 dp \u6570\u7ec4 for ( int i = 1 ; i <= m ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { if ( word1 [ i - 1 ] == word2 [ j - 1 ]) { // \u5982\u679c\u5f53\u524d\u5b57\u7b26\u76f8\u7b49\uff0c\u4e0d\u9700\u8981\u989d\u5916\u64cd\u4f5c dp [ i ][ j ] = dp [ i - 1 ][ j - 1 ]; } else { // \u5426\u5219\uff0c\u53d6\u589e\u3001\u5220\u3001\u6539\u4e09\u79cd\u64cd\u4f5c\u7684\u6700\u5c0f\u503c dp [ i ][ j ] = min ( dp [ i - 1 ][ j - 1 ] + 1 , // \u66ff\u6362\u64cd\u4f5c min ( dp [ i ][ j - 1 ] + 1 , // \u63d2\u5165\u64cd\u4f5c dp [ i - 1 ][ j ] + 1 )); // \u5220\u9664\u64cd\u4f5c } } } return dp [ m ][ n ]; } };","title":"lc72\u7f16\u8f91\u8ddd\u79bb"},{"location":"Algorithm/greedy/Dijkstra/","text":"Dijkstra \u7b97\u6cd5\u7b80\u4ecb Dijkstra \u7b97\u6cd5 \u662f\u4e00\u79cd\u7ecf\u5178\u7684 \u8d2a\u5fc3\u7b97\u6cd5 \uff0c\u7528\u4e8e\u89e3\u51b3 \u5355\u6e90\u6700\u77ed\u8def\u5f84\u95ee\u9898 \uff0c\u5373\u4ece\u56fe\u4e2d\u7684\u67d0\u4e2a\u8d77\u70b9\u5230\u5176\u4ed6\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\u5b83\u9002\u7528\u4e8e \u975e\u8d1f\u6743\u503c\u56fe \u3002 \u7b97\u6cd5\u601d\u60f3 \u8d2a\u5fc3\u7b56\u7565 \uff1a \u6bcf\u6b21\u9009\u62e9\u5f53\u524d\u672a\u8bbf\u95ee\u8282\u70b9\u4e2d\u8ddd\u79bb\u8d77\u70b9\u6700\u8fd1\u7684\u8282\u70b9\uff0c\u8ba4\u4e3a\u8be5\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u5df2\u7ecf\u786e\u5b9a\u3002 \u7136\u540e\u4ee5\u8be5\u8282\u70b9\u4e3a\u4e2d\u5fc3\uff0c\u66f4\u65b0\u5176\u90bb\u63a5\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002 \u5c40\u90e8\u6700\u4f18\u5230\u5168\u5c40\u6700\u4f18 \uff1a \u5c40\u90e8\u6700\u4f18\uff1a\u6bcf\u6b21\u9009\u62e9\u5f53\u524d\u6700\u77ed\u8def\u5f84\u3002 \u5168\u5c40\u6700\u4f18\uff1a\u6700\u7ec8\u5f97\u5230\u4ece\u8d77\u70b9\u5230\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002 \u7b97\u6cd5\u6b65\u9aa4 \u521d\u59cb\u5316 \uff1a \u8bbe\u7f6e\u8d77\u70b9\u5230\u81ea\u8eab\u7684\u8ddd\u79bb\u4e3a 0\uff0c\u5176\u4ed6\u8282\u70b9\u7684\u8ddd\u79bb\u4e3a\u6b63\u65e0\u7a77\u5927\u3002 \u4f7f\u7528\u4e00\u4e2a\u96c6\u5408\u8bb0\u5f55\u5df2\u786e\u5b9a\u6700\u77ed\u8def\u5f84\u7684\u8282\u70b9\u3002 \u9009\u62e9\u8282\u70b9 \uff1a \u4ece\u672a\u8bbf\u95ee\u7684\u8282\u70b9\u4e2d\u9009\u62e9\u8ddd\u79bb\u8d77\u70b9\u6700\u8fd1\u7684\u8282\u70b9\uff0c\u5c06\u5176\u52a0\u5165\u5df2\u786e\u5b9a\u96c6\u5408\u3002 \u66f4\u65b0\u8ddd\u79bb \uff1a \u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u4e2d\u5fc3\uff0c\u66f4\u65b0\u5176\u90bb\u63a5\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002 \u5982\u679c\u901a\u8fc7\u5f53\u524d\u8282\u70b9\u5230\u67d0\u4e2a\u90bb\u63a5\u8282\u70b9\u7684\u8def\u5f84\u66f4\u77ed\uff0c\u5219\u66f4\u65b0\u8be5\u90bb\u63a5\u8282\u70b9\u7684\u8ddd\u79bb\u3002 \u91cd\u590d \uff1a \u91cd\u590d\u6b65\u9aa4 2 \u548c 3\uff0c\u76f4\u5230\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u90fd\u88ab\u786e\u5b9a\u3002 \u7279\u70b9 \u9002\u7528\u8303\u56f4 \uff1a \u9002\u7528\u4e8e \u975e\u8d1f\u6743\u503c\u56fe \u3002 \u4e0d\u9002\u7528\u4e8e\u542b\u6709\u8d1f\u6743\u8fb9\u7684\u56fe\uff08\u56e0\u4e3a\u8d2a\u5fc3\u7b56\u7565\u65e0\u6cd5\u6b63\u786e\u5904\u7406\u8d1f\u6743\u8fb9\uff09\u3002 \u5e94\u7528\u573a\u666f \u8def\u7531\u89c4\u5212 \uff1a \u8ba1\u7b97\u4ece\u4e00\u4e2a\u57ce\u5e02\u5230\u5176\u4ed6\u57ce\u5e02\u7684\u6700\u77ed\u8def\u5f84\u3002 \u7f51\u7edc\u901a\u4fe1 \uff1a \u8ba1\u7b97\u6570\u636e\u5305\u4ece\u6e90\u8282\u70b9\u5230\u76ee\u6807\u8282\u70b9\u7684\u6700\u77ed\u4f20\u8f93\u8def\u5f84\u3002 \u6e38\u620f\u5f00\u53d1 \uff1a \u8ba1\u7b97\u89d2\u8272\u4ece\u8d77\u70b9\u5230\u76ee\u6807\u70b9\u7684\u6700\u77ed\u79fb\u52a8\u8def\u5f84\u3002 \u603b\u7ed3 \u9996\u5148\u8981\u6709\u4e2a\u521d\u59cb\u5316\u6570\u7ec4 distance(n,INT_MAX) \u6570\u7ec4\u8bb0\u5f55\u8d77\u70b9\u5230\u5404\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u63a5\u7740\u8981\u6709 visited(n,false) \u8bb0\u5f55\u8be5\u7ed3\u70b9\u662f\u5426\u8bbf\u95ee\u8fc7\uff0c\u521d\u59cb\u5316 distance[start]=0 ,\u63a5\u7740\u5c31\u627e\u672a\u8bbf\u95ee\u7684\u8282\u70b9\u4e2d\u8ddd\u79bb\u6700\u5c0f\u7684\u4f5c\u4e3a\u51fa\u53d1\u70b9\uff0c\u66f4\u65b0 distance \u6570\u7ec4,\u53ef\u4ee5\u521d\u59cb\u5316\u4e00\u4e2a u=-1 , minDistance=INT_MAX \u6bcf\u6b21\u4ece 0\u81f3n-1 \u5faa\u73af\u4e00\u904d\u627e\u5230 distance \u4e2d\u6700\u5c0f\u7684\u8282\u70b9 j ,\u4ee4 u=j ,\u63a5\u7740\u4ee5u\u4e3a\u8d77\u70b9\u6765\u66f4\u65b0 distance \u6570\u7ec4\u5224\u65ad\u6761\u4ef6, distance[v]=min(distance[v],diatance[u]+graph[u][v]) ,\u53cc\u91cd\u5faa\u73af\u7ed3\u675f\u540e distance \u6570\u7ec4\u4fbf\u66f4\u65b0\u5b8c\u6bd5\u3002 \u627e\u672a\u8bbf\u95ee\u7684\u8282\u70b9: if ( ! visited [ j ] && distance [ j ] < minDistance ) \u66f4\u65b0 distances \u6570\u7ec4: if ( graph [ u ][ v ] > 0 && ! visited [ v ]){ distance [ v ] = min ( distance [ v ], distance [ u ] + graph [ u ][ v ]); }","title":"Dijkstra \u7b97\u6cd5"},{"location":"Algorithm/greedy/Dijkstra/#dijkstra","text":"Dijkstra \u7b97\u6cd5 \u662f\u4e00\u79cd\u7ecf\u5178\u7684 \u8d2a\u5fc3\u7b97\u6cd5 \uff0c\u7528\u4e8e\u89e3\u51b3 \u5355\u6e90\u6700\u77ed\u8def\u5f84\u95ee\u9898 \uff0c\u5373\u4ece\u56fe\u4e2d\u7684\u67d0\u4e2a\u8d77\u70b9\u5230\u5176\u4ed6\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\u5b83\u9002\u7528\u4e8e \u975e\u8d1f\u6743\u503c\u56fe \u3002","title":"Dijkstra \u7b97\u6cd5\u7b80\u4ecb"},{"location":"Algorithm/greedy/Dijkstra/#_1","text":"\u8d2a\u5fc3\u7b56\u7565 \uff1a \u6bcf\u6b21\u9009\u62e9\u5f53\u524d\u672a\u8bbf\u95ee\u8282\u70b9\u4e2d\u8ddd\u79bb\u8d77\u70b9\u6700\u8fd1\u7684\u8282\u70b9\uff0c\u8ba4\u4e3a\u8be5\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u5df2\u7ecf\u786e\u5b9a\u3002 \u7136\u540e\u4ee5\u8be5\u8282\u70b9\u4e3a\u4e2d\u5fc3\uff0c\u66f4\u65b0\u5176\u90bb\u63a5\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002 \u5c40\u90e8\u6700\u4f18\u5230\u5168\u5c40\u6700\u4f18 \uff1a \u5c40\u90e8\u6700\u4f18\uff1a\u6bcf\u6b21\u9009\u62e9\u5f53\u524d\u6700\u77ed\u8def\u5f84\u3002 \u5168\u5c40\u6700\u4f18\uff1a\u6700\u7ec8\u5f97\u5230\u4ece\u8d77\u70b9\u5230\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002","title":"\u7b97\u6cd5\u601d\u60f3"},{"location":"Algorithm/greedy/Dijkstra/#_2","text":"\u521d\u59cb\u5316 \uff1a \u8bbe\u7f6e\u8d77\u70b9\u5230\u81ea\u8eab\u7684\u8ddd\u79bb\u4e3a 0\uff0c\u5176\u4ed6\u8282\u70b9\u7684\u8ddd\u79bb\u4e3a\u6b63\u65e0\u7a77\u5927\u3002 \u4f7f\u7528\u4e00\u4e2a\u96c6\u5408\u8bb0\u5f55\u5df2\u786e\u5b9a\u6700\u77ed\u8def\u5f84\u7684\u8282\u70b9\u3002 \u9009\u62e9\u8282\u70b9 \uff1a \u4ece\u672a\u8bbf\u95ee\u7684\u8282\u70b9\u4e2d\u9009\u62e9\u8ddd\u79bb\u8d77\u70b9\u6700\u8fd1\u7684\u8282\u70b9\uff0c\u5c06\u5176\u52a0\u5165\u5df2\u786e\u5b9a\u96c6\u5408\u3002 \u66f4\u65b0\u8ddd\u79bb \uff1a \u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u4e2d\u5fc3\uff0c\u66f4\u65b0\u5176\u90bb\u63a5\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002 \u5982\u679c\u901a\u8fc7\u5f53\u524d\u8282\u70b9\u5230\u67d0\u4e2a\u90bb\u63a5\u8282\u70b9\u7684\u8def\u5f84\u66f4\u77ed\uff0c\u5219\u66f4\u65b0\u8be5\u90bb\u63a5\u8282\u70b9\u7684\u8ddd\u79bb\u3002 \u91cd\u590d \uff1a \u91cd\u590d\u6b65\u9aa4 2 \u548c 3\uff0c\u76f4\u5230\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u90fd\u88ab\u786e\u5b9a\u3002","title":"\u7b97\u6cd5\u6b65\u9aa4"},{"location":"Algorithm/greedy/Dijkstra/#_3","text":"\u9002\u7528\u8303\u56f4 \uff1a \u9002\u7528\u4e8e \u975e\u8d1f\u6743\u503c\u56fe \u3002 \u4e0d\u9002\u7528\u4e8e\u542b\u6709\u8d1f\u6743\u8fb9\u7684\u56fe\uff08\u56e0\u4e3a\u8d2a\u5fc3\u7b56\u7565\u65e0\u6cd5\u6b63\u786e\u5904\u7406\u8d1f\u6743\u8fb9\uff09\u3002","title":"\u7279\u70b9"},{"location":"Algorithm/greedy/Dijkstra/#_4","text":"\u8def\u7531\u89c4\u5212 \uff1a \u8ba1\u7b97\u4ece\u4e00\u4e2a\u57ce\u5e02\u5230\u5176\u4ed6\u57ce\u5e02\u7684\u6700\u77ed\u8def\u5f84\u3002 \u7f51\u7edc\u901a\u4fe1 \uff1a \u8ba1\u7b97\u6570\u636e\u5305\u4ece\u6e90\u8282\u70b9\u5230\u76ee\u6807\u8282\u70b9\u7684\u6700\u77ed\u4f20\u8f93\u8def\u5f84\u3002 \u6e38\u620f\u5f00\u53d1 \uff1a \u8ba1\u7b97\u89d2\u8272\u4ece\u8d77\u70b9\u5230\u76ee\u6807\u70b9\u7684\u6700\u77ed\u79fb\u52a8\u8def\u5f84\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"Algorithm/greedy/Dijkstra/#_5","text":"\u9996\u5148\u8981\u6709\u4e2a\u521d\u59cb\u5316\u6570\u7ec4 distance(n,INT_MAX) \u6570\u7ec4\u8bb0\u5f55\u8d77\u70b9\u5230\u5404\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u63a5\u7740\u8981\u6709 visited(n,false) \u8bb0\u5f55\u8be5\u7ed3\u70b9\u662f\u5426\u8bbf\u95ee\u8fc7\uff0c\u521d\u59cb\u5316 distance[start]=0 ,\u63a5\u7740\u5c31\u627e\u672a\u8bbf\u95ee\u7684\u8282\u70b9\u4e2d\u8ddd\u79bb\u6700\u5c0f\u7684\u4f5c\u4e3a\u51fa\u53d1\u70b9\uff0c\u66f4\u65b0 distance \u6570\u7ec4,\u53ef\u4ee5\u521d\u59cb\u5316\u4e00\u4e2a u=-1 , minDistance=INT_MAX \u6bcf\u6b21\u4ece 0\u81f3n-1 \u5faa\u73af\u4e00\u904d\u627e\u5230 distance \u4e2d\u6700\u5c0f\u7684\u8282\u70b9 j ,\u4ee4 u=j ,\u63a5\u7740\u4ee5u\u4e3a\u8d77\u70b9\u6765\u66f4\u65b0 distance \u6570\u7ec4\u5224\u65ad\u6761\u4ef6, distance[v]=min(distance[v],diatance[u]+graph[u][v]) ,\u53cc\u91cd\u5faa\u73af\u7ed3\u675f\u540e distance \u6570\u7ec4\u4fbf\u66f4\u65b0\u5b8c\u6bd5\u3002 \u627e\u672a\u8bbf\u95ee\u7684\u8282\u70b9: if ( ! visited [ j ] && distance [ j ] < minDistance ) \u66f4\u65b0 distances \u6570\u7ec4: if ( graph [ u ][ v ] > 0 && ! visited [ v ]){ distance [ v ] = min ( distance [ v ], distance [ u ] + graph [ u ][ v ]); }","title":"\u603b\u7ed3"},{"location":"Algorithm/greedy/Huffman/","text":"\u54c8\u592b\u66fc\u7f16\u7801\u7b80\u4ecb \u54c8\u592b\u66fc\u7f16\u7801 \u662f\u4e00\u79cd\u57fa\u4e8e \u8d2a\u5fc3\u7b97\u6cd5 \u7684\u6700\u4f18\u524d\u7f00\u7f16\u7801\u65b9\u6cd5\uff0c\u5e38\u7528\u4e8e\u6570\u636e\u538b\u7f29\u3002\u5b83\u901a\u8fc7\u6784\u5efa\u4e00\u68f5\u54c8\u592b\u66fc\u6811\uff0c\u4e3a\u51fa\u73b0\u9891\u7387\u8f83\u9ad8\u7684\u5b57\u7b26\u5206\u914d\u8f83\u77ed\u7684\u7f16\u7801\uff0c\u4ece\u800c\u5b9e\u73b0\u6570\u636e\u538b\u7f29\u3002 \u6838\u5fc3\u601d\u60f3 \u6700\u4f18\u524d\u7f00\u7f16\u7801 \uff1a \u54c8\u592b\u66fc\u7f16\u7801\u662f\u4e00\u79cd\u524d\u7f00\u7f16\u7801\uff0c\u5373\u4efb\u4f55\u4e00\u4e2a\u5b57\u7b26\u7684\u7f16\u7801\u90fd\u4e0d\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u7f16\u7801\u7684\u524d\u7f00\uff0c\u907f\u514d\u4e86\u89e3\u7801\u6b67\u4e49\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a \u6bcf\u6b21\u5408\u5e76\u9891\u7387\u6700\u5c0f\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u6784\u5efa\u54c8\u592b\u66fc\u6811\uff0c\u6700\u7ec8\u5f97\u5230\u6700\u4f18\u7f16\u7801\u3002 \u7b97\u6cd5\u6b65\u9aa4 \u7edf\u8ba1\u9891\u7387 \uff1a \u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u5728\u6570\u636e\u4e2d\u7684\u51fa\u73b0\u9891\u7387\u3002 \u6784\u5efa\u54c8\u592b\u66fc\u6811 \uff1a \u5c06\u6bcf\u4e2a\u5b57\u7b26\u53ca\u5176\u9891\u7387\u4f5c\u4e3a\u4e00\u4e2a\u8282\u70b9\uff0c\u653e\u5165\u4f18\u5148\u961f\u5217\uff08\u6700\u5c0f\u5806\uff09\u3002 \u6bcf\u6b21\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u9891\u7387\u6700\u5c0f\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u65b0\u8282\u70b9\u7684\u9891\u7387\u4e3a\u4e24\u4e2a\u8282\u70b9\u9891\u7387\u4e4b\u548c\u3002 \u5c06\u65b0\u8282\u70b9\u653e\u56de\u961f\u5217\uff0c\u91cd\u590d\u6b64\u8fc7\u7a0b\uff0c\u76f4\u5230\u961f\u5217\u4e2d\u53ea\u5269\u4e00\u4e2a\u8282\u70b9\uff08\u6839\u8282\u70b9\uff09\u3002 \u751f\u6210\u7f16\u7801 \uff1a \u4ece\u54c8\u592b\u66fc\u6811\u7684\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u5de6\u5b50\u6811\u8bb0\u4e3a 0 \uff0c\u53f3\u5b50\u6811\u8bb0\u4e3a 1 \uff0c\u4e3a\u6bcf\u4e2a\u5b57\u7b26\u751f\u6210\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u7f16\u7801\u3002 \u7f16\u7801\u6570\u636e \uff1a \u4f7f\u7528\u751f\u6210\u7684\u54c8\u592b\u66fc\u7f16\u7801\u66ff\u6362\u539f\u59cb\u6570\u636e\uff0c\u5b8c\u6210\u538b\u7f29\u3002 \u7279\u70b9 \u6700\u4f18\u6027 \uff1a \u54c8\u592b\u66fc\u7f16\u7801\u5728\u5b57\u7b26\u9891\u7387\u5df2\u77e5\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u591f\u751f\u6210\u6700\u77ed\u7684\u7f16\u7801\uff0c\u603b\u7f16\u7801\u957f\u5ea6\u6700\u5c0f\u3002 \u524d\u7f00\u7f16\u7801 \uff1a \u4e0d\u4f1a\u51fa\u73b0\u89e3\u7801\u6b67\u4e49\uff0c\u4fdd\u8bc1\u7f16\u7801\u7684\u552f\u4e00\u6027\u3002 \u9002\u7528\u573a\u666f \uff1a \u5e38\u7528\u4e8e\u6587\u4ef6\u538b\u7f29\uff08\u5982 ZIP\u3001JPEG\uff09\u3001\u6570\u636e\u4f20\u8f93\u7b49\u573a\u666f\u3002 \u793a\u4f8b \u8f93\u5165\uff1a \u5b57\u7b26\u53ca\u5176\u9891\u7387\uff1a A: 5, B: 9, C: 12, D: 13, E: 16, F: 45 \u8f93\u51fa\uff1a \u54c8\u592b\u66fc\u7f16\u7801\uff1a F: 0 C: 100 D: 101 A: 1100 B: 1101 E: 111 \u54c8\u592b\u66fc\u6811\uff1a (*, 100) / \\ (*, 45) (*, 55) / \\ / \\ F(45) (*, 25) (*, 30) E(16) / \\ / \\ A(5) B(9) C(12) D(13) \u603b\u7ed3 \u54c8\u592b\u66fc\u7f16\u7801 \u662f\u4e00\u79cd\u9ad8\u6548\u7684\u538b\u7f29\u7b97\u6cd5\uff0c\u5229\u7528\u5b57\u7b26\u9891\u7387\u6784\u5efa\u6700\u4f18\u524d\u7f00\u7f16\u7801\u3002 \u5b83\u901a\u8fc7\u8d2a\u5fc3\u7b56\u7565\u6784\u5efa\u54c8\u592b\u66fc\u6811\uff0c\u4fdd\u8bc1\u7f16\u7801\u957f\u5ea6\u6700\u5c0f\u3002 \u5e38\u7528\u4e8e\u6570\u636e\u538b\u7f29\u548c\u4f20\u8f93\u573a\u666f\uff0c\u662f\u4fe1\u606f\u8bba\u4e2d\u7684\u7ecf\u5178\u7b97\u6cd5\u3002","title":"Huffman \u7f16\u7801"},{"location":"Algorithm/greedy/Huffman/#_1","text":"\u54c8\u592b\u66fc\u7f16\u7801 \u662f\u4e00\u79cd\u57fa\u4e8e \u8d2a\u5fc3\u7b97\u6cd5 \u7684\u6700\u4f18\u524d\u7f00\u7f16\u7801\u65b9\u6cd5\uff0c\u5e38\u7528\u4e8e\u6570\u636e\u538b\u7f29\u3002\u5b83\u901a\u8fc7\u6784\u5efa\u4e00\u68f5\u54c8\u592b\u66fc\u6811\uff0c\u4e3a\u51fa\u73b0\u9891\u7387\u8f83\u9ad8\u7684\u5b57\u7b26\u5206\u914d\u8f83\u77ed\u7684\u7f16\u7801\uff0c\u4ece\u800c\u5b9e\u73b0\u6570\u636e\u538b\u7f29\u3002","title":"\u54c8\u592b\u66fc\u7f16\u7801\u7b80\u4ecb"},{"location":"Algorithm/greedy/Huffman/#_2","text":"\u6700\u4f18\u524d\u7f00\u7f16\u7801 \uff1a \u54c8\u592b\u66fc\u7f16\u7801\u662f\u4e00\u79cd\u524d\u7f00\u7f16\u7801\uff0c\u5373\u4efb\u4f55\u4e00\u4e2a\u5b57\u7b26\u7684\u7f16\u7801\u90fd\u4e0d\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u7f16\u7801\u7684\u524d\u7f00\uff0c\u907f\u514d\u4e86\u89e3\u7801\u6b67\u4e49\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a \u6bcf\u6b21\u5408\u5e76\u9891\u7387\u6700\u5c0f\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u6784\u5efa\u54c8\u592b\u66fc\u6811\uff0c\u6700\u7ec8\u5f97\u5230\u6700\u4f18\u7f16\u7801\u3002","title":"\u6838\u5fc3\u601d\u60f3"},{"location":"Algorithm/greedy/Huffman/#_3","text":"\u7edf\u8ba1\u9891\u7387 \uff1a \u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u5728\u6570\u636e\u4e2d\u7684\u51fa\u73b0\u9891\u7387\u3002 \u6784\u5efa\u54c8\u592b\u66fc\u6811 \uff1a \u5c06\u6bcf\u4e2a\u5b57\u7b26\u53ca\u5176\u9891\u7387\u4f5c\u4e3a\u4e00\u4e2a\u8282\u70b9\uff0c\u653e\u5165\u4f18\u5148\u961f\u5217\uff08\u6700\u5c0f\u5806\uff09\u3002 \u6bcf\u6b21\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u9891\u7387\u6700\u5c0f\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u65b0\u8282\u70b9\u7684\u9891\u7387\u4e3a\u4e24\u4e2a\u8282\u70b9\u9891\u7387\u4e4b\u548c\u3002 \u5c06\u65b0\u8282\u70b9\u653e\u56de\u961f\u5217\uff0c\u91cd\u590d\u6b64\u8fc7\u7a0b\uff0c\u76f4\u5230\u961f\u5217\u4e2d\u53ea\u5269\u4e00\u4e2a\u8282\u70b9\uff08\u6839\u8282\u70b9\uff09\u3002 \u751f\u6210\u7f16\u7801 \uff1a \u4ece\u54c8\u592b\u66fc\u6811\u7684\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u5de6\u5b50\u6811\u8bb0\u4e3a 0 \uff0c\u53f3\u5b50\u6811\u8bb0\u4e3a 1 \uff0c\u4e3a\u6bcf\u4e2a\u5b57\u7b26\u751f\u6210\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u7f16\u7801\u3002 \u7f16\u7801\u6570\u636e \uff1a \u4f7f\u7528\u751f\u6210\u7684\u54c8\u592b\u66fc\u7f16\u7801\u66ff\u6362\u539f\u59cb\u6570\u636e\uff0c\u5b8c\u6210\u538b\u7f29\u3002","title":"\u7b97\u6cd5\u6b65\u9aa4"},{"location":"Algorithm/greedy/Huffman/#_4","text":"\u6700\u4f18\u6027 \uff1a \u54c8\u592b\u66fc\u7f16\u7801\u5728\u5b57\u7b26\u9891\u7387\u5df2\u77e5\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u591f\u751f\u6210\u6700\u77ed\u7684\u7f16\u7801\uff0c\u603b\u7f16\u7801\u957f\u5ea6\u6700\u5c0f\u3002 \u524d\u7f00\u7f16\u7801 \uff1a \u4e0d\u4f1a\u51fa\u73b0\u89e3\u7801\u6b67\u4e49\uff0c\u4fdd\u8bc1\u7f16\u7801\u7684\u552f\u4e00\u6027\u3002 \u9002\u7528\u573a\u666f \uff1a \u5e38\u7528\u4e8e\u6587\u4ef6\u538b\u7f29\uff08\u5982 ZIP\u3001JPEG\uff09\u3001\u6570\u636e\u4f20\u8f93\u7b49\u573a\u666f\u3002","title":"\u7279\u70b9"},{"location":"Algorithm/greedy/Huffman/#_5","text":"","title":"\u793a\u4f8b"},{"location":"Algorithm/greedy/Huffman/#_6","text":"\u5b57\u7b26\u53ca\u5176\u9891\u7387\uff1a A: 5, B: 9, C: 12, D: 13, E: 16, F: 45","title":"\u8f93\u5165\uff1a"},{"location":"Algorithm/greedy/Huffman/#_7","text":"\u54c8\u592b\u66fc\u7f16\u7801\uff1a F: 0 C: 100 D: 101 A: 1100 B: 1101 E: 111","title":"\u8f93\u51fa\uff1a"},{"location":"Algorithm/greedy/Huffman/#_8","text":"(*, 100) / \\ (*, 45) (*, 55) / \\ / \\ F(45) (*, 25) (*, 30) E(16) / \\ / \\ A(5) B(9) C(12) D(13)","title":"\u54c8\u592b\u66fc\u6811\uff1a"},{"location":"Algorithm/greedy/Huffman/#_9","text":"\u54c8\u592b\u66fc\u7f16\u7801 \u662f\u4e00\u79cd\u9ad8\u6548\u7684\u538b\u7f29\u7b97\u6cd5\uff0c\u5229\u7528\u5b57\u7b26\u9891\u7387\u6784\u5efa\u6700\u4f18\u524d\u7f00\u7f16\u7801\u3002 \u5b83\u901a\u8fc7\u8d2a\u5fc3\u7b56\u7565\u6784\u5efa\u54c8\u592b\u66fc\u6811\uff0c\u4fdd\u8bc1\u7f16\u7801\u957f\u5ea6\u6700\u5c0f\u3002 \u5e38\u7528\u4e8e\u6570\u636e\u538b\u7f29\u548c\u4f20\u8f93\u573a\u666f\uff0c\u662f\u4fe1\u606f\u8bba\u4e2d\u7684\u7ecf\u5178\u7b97\u6cd5\u3002","title":"\u603b\u7ed3"},{"location":"Algorithm/greedy/Minitree/","text":"\u6700\u5c0f\u751f\u6210\u6811\uff08Minimum Spanning Tree, MST\uff09\u7b80\u4ecb \u6700\u5c0f\u751f\u6210\u6811\u662f\u56fe\u8bba\u4e2d\u7684\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c\u76ee\u6807\u662f\u627e\u5230\u4e00\u68f5\u5305\u542b\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u7684\u6811\uff0c\u4f7f\u5f97\u8fb9\u6743\u503c\u4e4b\u548c\u6700\u5c0f\u3002\u6700\u5c0f\u751f\u6210\u6811\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7f51\u7edc\u8bbe\u8ba1\u3001\u8def\u5f84\u89c4\u5212\u7b49\u9886\u57df\u3002 \u4e24\u79cd\u7ecf\u5178\u7b97\u6cd5 1. Prim \u7b97\u6cd5 \u6838\u5fc3\u601d\u60f3 \uff1a Prim \u7b97\u6cd5\u662f\u4e00\u79cd\u57fa\u4e8e \u8d2a\u5fc3\u7b56\u7565 \u7684\u7b97\u6cd5\uff0c\u4ece\u4e00\u4e2a\u8d77\u59cb\u8282\u70b9\u5f00\u59cb\uff0c\u9010\u6b65\u6269\u5c55\u6700\u5c0f\u751f\u6210\u6811\u3002 \u6bcf\u6b21\u9009\u62e9\u4e0e\u5f53\u524d\u751f\u6210\u6811\u76f8\u8fde\u7684\u6743\u503c\u6700\u5c0f\u7684\u8fb9\uff0c\u5c06\u65b0\u8282\u70b9\u52a0\u5165\u751f\u6210\u6811\u3002 \u7b97\u6cd5\u6b65\u9aa4 \uff1a \u521d\u59cb\u5316\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u751f\u6210\u6811\u7684\u8d77\u70b9\u3002 \u627e\u5230\u4e0e\u751f\u6210\u6811\u76f8\u8fde\u7684\u6743\u503c\u6700\u5c0f\u7684\u8fb9\uff0c\u5c06\u5bf9\u5e94\u7684\u8282\u70b9\u52a0\u5165\u751f\u6210\u6811\u3002 \u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u76f4\u5230\u6240\u6709\u8282\u70b9\u90fd\u88ab\u52a0\u5165\u751f\u6210\u6811\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a \u4f7f\u7528\u90bb\u63a5\u77e9\u9635\u65f6\u4e3a O(V^2) \u3002 \u4f7f\u7528\u4f18\u5148\u961f\u5217\u4f18\u5316\u65f6\u4e3a O((V + E) log V) \uff0c\u9002\u5408\u7a00\u758f\u56fe\u3002 \u9002\u7528\u573a\u666f \uff1a \u9002\u5408\u7a20\u5bc6\u56fe\uff08\u8fb9\u8f83\u591a\u7684\u56fe\uff09\u3002 2. Kruskal \u7b97\u6cd5 \u6838\u5fc3\u601d\u60f3 \uff1a Kruskal \u7b97\u6cd5\u4e5f\u662f\u4e00\u79cd\u57fa\u4e8e \u8d2a\u5fc3\u7b56\u7565 \u7684\u7b97\u6cd5\uff0c\u4f46\u5b83\u4ece\u8fb9\u7684\u89d2\u5ea6\u51fa\u53d1\u3002 \u6bcf\u6b21\u9009\u62e9\u6743\u503c\u6700\u5c0f\u7684\u8fb9\uff0c\u5982\u679c\u8fd9\u6761\u8fb9\u4e0d\u4f1a\u5f62\u6210\u73af\uff0c\u5219\u5c06\u5176\u52a0\u5165\u751f\u6210\u6811\u3002 \u7b97\u6cd5\u6b65\u9aa4 \uff1a \u5c06\u56fe\u4e2d\u7684\u6240\u6709\u8fb9\u6309\u6743\u503c \u4ece\u5c0f\u5230\u5927\u6392\u5e8f \u3002 \u4ece\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u5f00\u59cb\uff0c\u4f9d\u6b21\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u52a0\u5165\u751f\u6210\u6811\uff08\u4f7f\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u662f\u5426\u4f1a\u5f62\u6210\u73af\uff09\u3002 \u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u76f4\u5230\u751f\u6210\u6811\u5305\u542b V-1 \u6761\u8fb9\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a \u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(E log E) \u3002 \u4f7f\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u73af\u7684\u590d\u6742\u5ea6\u4e3a O(E \u03b1(V)) \uff0c\u5176\u4e2d \u03b1(V) \u662f\u963f\u514b\u66fc\u51fd\u6570\u7684\u53cd\u51fd\u6570\uff0c\u8fd1\u4f3c\u4e3a\u5e38\u6570\u3002 \u9002\u7528\u573a\u666f \uff1a \u9002\u5408\u7a00\u758f\u56fe\uff08\u8fb9\u8f83\u5c11\u7684\u56fe\uff09\u3002 \u603b\u7ed3 prim -\u7531\u9876\u70b9\u5f00\u59cb\u6784\u5efa kruskal -\u5148\u5c06\u8fb9\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u518d\u63a5\u7740\u4e00\u6761\u4e00\u6761\u8fb9\u52a0\u5165\u96c6\u5408\uff0c\u4e5f\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u3002 prim\u7b97\u6cd5\u7684lowcost\u548cclosest\u6570\u7ec4\u662f\u5e72\u561b\u7684 \u5728 Prim\u7b97\u6cd5 \u4e2d\uff0c lowcost \u548c closest \u6570\u7ec4\u662f\u7528\u4e8e\u8f85\u52a9\u6784\u9020\u6700\u5c0f\u751f\u6210\u6811\uff08MST\uff09\u7684\u4e24\u4e2a\u5173\u952e\u6570\u7ec4\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u4f5c\u7528\u548c\u542b\u4e49\uff1a 1. lowcost \u6570\u7ec4 \u4f5c\u7528 \uff1a \u8bb0\u5f55\u5f53\u524d\u672a\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u9876\u70b9\u5230\u5df2\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u9876\u70b9\u7684\u6700\u5c0f\u6743\u503c\u3002 \u542b\u4e49 \uff1a lowcost[i] \u8868\u793a\u9876\u70b9 i \u5230\u5f53\u524d\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5c0f\u8fb9\u7684\u6743\u503c\u3002 \u5982\u679c lowcost[i] = 0 \uff0c\u8868\u793a\u9876\u70b9 i \u5df2\u7ecf\u52a0\u5165\u4e86\u6700\u5c0f\u751f\u6210\u6811\u3002 2. closest \u6570\u7ec4 \u4f5c\u7528 \uff1a \u8bb0\u5f55\u5f53\u524d\u672a\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u9876\u70b9\u4e2d\uff0c\u4e0e\u5176\u901a\u8fc7\u6700\u5c0f\u6743\u503c\u8fb9\u76f8\u8fde\u7684\u9876\u70b9\u3002 \u542b\u4e49 \uff1a closest[i] \u8868\u793a\u9876\u70b9 i \u5728\u5f53\u524d\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u4e0e\u5176\u76f8\u8fde\u7684\u9876\u70b9\u3002 Prim\u7b97\u6cd5\u7684\u8fc7\u7a0b \u521d\u59cb\u5316\uff1a \u9009\u62e9\u4e00\u4e2a\u8d77\u59cb\u9876\u70b9\uff0c\u5c06\u5176\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u3002 \u521d\u59cb\u5316 lowcost \u548c closest \u6570\u7ec4\uff1a lowcost[i] \u521d\u59cb\u5316\u4e3a\u8d77\u59cb\u9876\u70b9\u5230\u5176\u4ed6\u9876\u70b9\u7684\u8fb9\u6743\u503c\u3002 closest[i] \u521d\u59cb\u5316\u4e3a\u8d77\u59cb\u9876\u70b9\u3002 \u8fed\u4ee3\uff1a \u5728\u672a\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u9876\u70b9\u4e2d\uff0c\u627e\u5230 lowcost \u503c\u6700\u5c0f\u7684\u9876\u70b9 u \uff0c\u5c06\u5176\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u3002 \u66f4\u65b0 lowcost \u548c closest \u6570\u7ec4\uff1a \u5bf9\u4e8e\u6bcf\u4e2a\u672a\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u9876\u70b9 v \uff0c\u5982\u679c\u901a\u8fc7\u9876\u70b9 u \u7684\u8fb9\u6743\u503c\u5c0f\u4e8e\u5f53\u524d\u7684 lowcost[v] \uff0c\u5219\u66f4\u65b0\uff1a lowcost[v] = \u6743\u503c(u, v) closest[v] = u \u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u76f4\u5230\u6240\u6709\u9876\u70b9\u90fd\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u3002 \u793a\u4f8b \u5047\u8bbe\u6709\u4e00\u4e2a\u56fe\uff0c\u9876\u70b9\u4e3a {A, B, C, D} \uff0c\u8fb9\u6743\u503c\u5982\u4e0b\uff1a A - B: 1 A - C: 4 B - C: 2 B - D: 6 C - D: 3 \u521d\u59cb\u5316 \u8d77\u59cb\u9876\u70b9\uff1a A lowcost \uff1a [0, 1, 4, \u221e] \uff08 A \u5230\u5176\u4ed6\u9876\u70b9\u7684\u8fb9\u6743\u503c\uff09 closest \uff1a [-1, A, A, -1] \uff08 A \u662f\u8d77\u59cb\u9876\u70b9\uff09 \u7b2c\u4e00\u6b65 \u9009\u62e9 lowcost \u6700\u5c0f\u7684\u9876\u70b9 B \uff0c\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u3002 \u66f4\u65b0\uff1a lowcost \uff1a [0, 0, 2, 6] \uff08 B \u5230 C \u7684\u8fb9\u6743\u503c\u66f4\u5c0f\uff09 closest \uff1a [-1, A, B, B] \u7b2c\u4e8c\u6b65 \u9009\u62e9 lowcost \u6700\u5c0f\u7684\u9876\u70b9 C \uff0c\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u3002 \u66f4\u65b0\uff1a lowcost \uff1a [0, 0, 0, 3] \uff08 C \u5230 D \u7684\u8fb9\u6743\u503c\u66f4\u5c0f\uff09 closest \uff1a [-1, A, B, C] \u7b2c\u4e09\u6b65 \u9009\u62e9 lowcost \u6700\u5c0f\u7684\u9876\u70b9 D \uff0c\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u3002 \u6240\u6709\u9876\u70b9\u5df2\u52a0\u5165\uff0c\u7b97\u6cd5\u7ed3\u675f\u3002 \u603b\u7ed3 lowcost \uff1a\u8bb0\u5f55\u6bcf\u4e2a\u9876\u70b9\u5230\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5c0f\u8fb9\u6743\u503c\u3002 closest \uff1a\u8bb0\u5f55\u6bcf\u4e2a\u9876\u70b9\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u4e0e\u5176\u76f8\u8fde\u7684\u9876\u70b9\u3002 \u901a\u8fc7\u8fd9\u4e24\u4e2a\u6570\u7ec4\uff0cPrim\u7b97\u6cd5\u80fd\u591f\u9ad8\u6548\u5730\u6784\u9020\u6700\u5c0f\u751f\u6210\u6811\u3002","title":"\u6700\u5c0f\u751f\u6210\u6811"},{"location":"Algorithm/greedy/Minitree/#minimum-spanning-tree-mst","text":"\u6700\u5c0f\u751f\u6210\u6811\u662f\u56fe\u8bba\u4e2d\u7684\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c\u76ee\u6807\u662f\u627e\u5230\u4e00\u68f5\u5305\u542b\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u7684\u6811\uff0c\u4f7f\u5f97\u8fb9\u6743\u503c\u4e4b\u548c\u6700\u5c0f\u3002\u6700\u5c0f\u751f\u6210\u6811\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7f51\u7edc\u8bbe\u8ba1\u3001\u8def\u5f84\u89c4\u5212\u7b49\u9886\u57df\u3002","title":"\u6700\u5c0f\u751f\u6210\u6811\uff08Minimum Spanning Tree, MST\uff09\u7b80\u4ecb"},{"location":"Algorithm/greedy/Minitree/#_1","text":"","title":"\u4e24\u79cd\u7ecf\u5178\u7b97\u6cd5"},{"location":"Algorithm/greedy/Minitree/#1-prim","text":"\u6838\u5fc3\u601d\u60f3 \uff1a Prim \u7b97\u6cd5\u662f\u4e00\u79cd\u57fa\u4e8e \u8d2a\u5fc3\u7b56\u7565 \u7684\u7b97\u6cd5\uff0c\u4ece\u4e00\u4e2a\u8d77\u59cb\u8282\u70b9\u5f00\u59cb\uff0c\u9010\u6b65\u6269\u5c55\u6700\u5c0f\u751f\u6210\u6811\u3002 \u6bcf\u6b21\u9009\u62e9\u4e0e\u5f53\u524d\u751f\u6210\u6811\u76f8\u8fde\u7684\u6743\u503c\u6700\u5c0f\u7684\u8fb9\uff0c\u5c06\u65b0\u8282\u70b9\u52a0\u5165\u751f\u6210\u6811\u3002 \u7b97\u6cd5\u6b65\u9aa4 \uff1a \u521d\u59cb\u5316\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u751f\u6210\u6811\u7684\u8d77\u70b9\u3002 \u627e\u5230\u4e0e\u751f\u6210\u6811\u76f8\u8fde\u7684\u6743\u503c\u6700\u5c0f\u7684\u8fb9\uff0c\u5c06\u5bf9\u5e94\u7684\u8282\u70b9\u52a0\u5165\u751f\u6210\u6811\u3002 \u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u76f4\u5230\u6240\u6709\u8282\u70b9\u90fd\u88ab\u52a0\u5165\u751f\u6210\u6811\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a \u4f7f\u7528\u90bb\u63a5\u77e9\u9635\u65f6\u4e3a O(V^2) \u3002 \u4f7f\u7528\u4f18\u5148\u961f\u5217\u4f18\u5316\u65f6\u4e3a O((V + E) log V) \uff0c\u9002\u5408\u7a00\u758f\u56fe\u3002 \u9002\u7528\u573a\u666f \uff1a \u9002\u5408\u7a20\u5bc6\u56fe\uff08\u8fb9\u8f83\u591a\u7684\u56fe\uff09\u3002","title":"1. Prim \u7b97\u6cd5"},{"location":"Algorithm/greedy/Minitree/#2-kruskal","text":"\u6838\u5fc3\u601d\u60f3 \uff1a Kruskal \u7b97\u6cd5\u4e5f\u662f\u4e00\u79cd\u57fa\u4e8e \u8d2a\u5fc3\u7b56\u7565 \u7684\u7b97\u6cd5\uff0c\u4f46\u5b83\u4ece\u8fb9\u7684\u89d2\u5ea6\u51fa\u53d1\u3002 \u6bcf\u6b21\u9009\u62e9\u6743\u503c\u6700\u5c0f\u7684\u8fb9\uff0c\u5982\u679c\u8fd9\u6761\u8fb9\u4e0d\u4f1a\u5f62\u6210\u73af\uff0c\u5219\u5c06\u5176\u52a0\u5165\u751f\u6210\u6811\u3002 \u7b97\u6cd5\u6b65\u9aa4 \uff1a \u5c06\u56fe\u4e2d\u7684\u6240\u6709\u8fb9\u6309\u6743\u503c \u4ece\u5c0f\u5230\u5927\u6392\u5e8f \u3002 \u4ece\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u5f00\u59cb\uff0c\u4f9d\u6b21\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u52a0\u5165\u751f\u6210\u6811\uff08\u4f7f\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u662f\u5426\u4f1a\u5f62\u6210\u73af\uff09\u3002 \u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u76f4\u5230\u751f\u6210\u6811\u5305\u542b V-1 \u6761\u8fb9\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a \u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(E log E) \u3002 \u4f7f\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u73af\u7684\u590d\u6742\u5ea6\u4e3a O(E \u03b1(V)) \uff0c\u5176\u4e2d \u03b1(V) \u662f\u963f\u514b\u66fc\u51fd\u6570\u7684\u53cd\u51fd\u6570\uff0c\u8fd1\u4f3c\u4e3a\u5e38\u6570\u3002 \u9002\u7528\u573a\u666f \uff1a \u9002\u5408\u7a00\u758f\u56fe\uff08\u8fb9\u8f83\u5c11\u7684\u56fe\uff09\u3002","title":"2. Kruskal \u7b97\u6cd5"},{"location":"Algorithm/greedy/Minitree/#_2","text":"prim -\u7531\u9876\u70b9\u5f00\u59cb\u6784\u5efa kruskal -\u5148\u5c06\u8fb9\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u518d\u63a5\u7740\u4e00\u6761\u4e00\u6761\u8fb9\u52a0\u5165\u96c6\u5408\uff0c\u4e5f\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u3002","title":"\u603b\u7ed3"},{"location":"Algorithm/greedy/Minitree/#primlowcostclosest","text":"\u5728 Prim\u7b97\u6cd5 \u4e2d\uff0c lowcost \u548c closest \u6570\u7ec4\u662f\u7528\u4e8e\u8f85\u52a9\u6784\u9020\u6700\u5c0f\u751f\u6210\u6811\uff08MST\uff09\u7684\u4e24\u4e2a\u5173\u952e\u6570\u7ec4\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u4f5c\u7528\u548c\u542b\u4e49\uff1a","title":"prim\u7b97\u6cd5\u7684lowcost\u548cclosest\u6570\u7ec4\u662f\u5e72\u561b\u7684"},{"location":"Algorithm/greedy/Minitree/#1-lowcost","text":"\u4f5c\u7528 \uff1a \u8bb0\u5f55\u5f53\u524d\u672a\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u9876\u70b9\u5230\u5df2\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u9876\u70b9\u7684\u6700\u5c0f\u6743\u503c\u3002 \u542b\u4e49 \uff1a lowcost[i] \u8868\u793a\u9876\u70b9 i \u5230\u5f53\u524d\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5c0f\u8fb9\u7684\u6743\u503c\u3002 \u5982\u679c lowcost[i] = 0 \uff0c\u8868\u793a\u9876\u70b9 i \u5df2\u7ecf\u52a0\u5165\u4e86\u6700\u5c0f\u751f\u6210\u6811\u3002","title":"1. lowcost \u6570\u7ec4"},{"location":"Algorithm/greedy/Minitree/#2-closest","text":"\u4f5c\u7528 \uff1a \u8bb0\u5f55\u5f53\u524d\u672a\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u9876\u70b9\u4e2d\uff0c\u4e0e\u5176\u901a\u8fc7\u6700\u5c0f\u6743\u503c\u8fb9\u76f8\u8fde\u7684\u9876\u70b9\u3002 \u542b\u4e49 \uff1a closest[i] \u8868\u793a\u9876\u70b9 i \u5728\u5f53\u524d\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u4e0e\u5176\u76f8\u8fde\u7684\u9876\u70b9\u3002","title":"2. closest \u6570\u7ec4"},{"location":"Algorithm/greedy/Minitree/#prim","text":"\u521d\u59cb\u5316\uff1a \u9009\u62e9\u4e00\u4e2a\u8d77\u59cb\u9876\u70b9\uff0c\u5c06\u5176\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u3002 \u521d\u59cb\u5316 lowcost \u548c closest \u6570\u7ec4\uff1a lowcost[i] \u521d\u59cb\u5316\u4e3a\u8d77\u59cb\u9876\u70b9\u5230\u5176\u4ed6\u9876\u70b9\u7684\u8fb9\u6743\u503c\u3002 closest[i] \u521d\u59cb\u5316\u4e3a\u8d77\u59cb\u9876\u70b9\u3002 \u8fed\u4ee3\uff1a \u5728\u672a\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u9876\u70b9\u4e2d\uff0c\u627e\u5230 lowcost \u503c\u6700\u5c0f\u7684\u9876\u70b9 u \uff0c\u5c06\u5176\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u3002 \u66f4\u65b0 lowcost \u548c closest \u6570\u7ec4\uff1a \u5bf9\u4e8e\u6bcf\u4e2a\u672a\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u9876\u70b9 v \uff0c\u5982\u679c\u901a\u8fc7\u9876\u70b9 u \u7684\u8fb9\u6743\u503c\u5c0f\u4e8e\u5f53\u524d\u7684 lowcost[v] \uff0c\u5219\u66f4\u65b0\uff1a lowcost[v] = \u6743\u503c(u, v) closest[v] = u \u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u76f4\u5230\u6240\u6709\u9876\u70b9\u90fd\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u3002","title":"Prim\u7b97\u6cd5\u7684\u8fc7\u7a0b"},{"location":"Algorithm/greedy/Minitree/#_3","text":"\u5047\u8bbe\u6709\u4e00\u4e2a\u56fe\uff0c\u9876\u70b9\u4e3a {A, B, C, D} \uff0c\u8fb9\u6743\u503c\u5982\u4e0b\uff1a A - B: 1 A - C: 4 B - C: 2 B - D: 6 C - D: 3","title":"\u793a\u4f8b"},{"location":"Algorithm/greedy/Minitree/#_4","text":"\u8d77\u59cb\u9876\u70b9\uff1a A lowcost \uff1a [0, 1, 4, \u221e] \uff08 A \u5230\u5176\u4ed6\u9876\u70b9\u7684\u8fb9\u6743\u503c\uff09 closest \uff1a [-1, A, A, -1] \uff08 A \u662f\u8d77\u59cb\u9876\u70b9\uff09","title":"\u521d\u59cb\u5316"},{"location":"Algorithm/greedy/Minitree/#_5","text":"\u9009\u62e9 lowcost \u6700\u5c0f\u7684\u9876\u70b9 B \uff0c\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u3002 \u66f4\u65b0\uff1a lowcost \uff1a [0, 0, 2, 6] \uff08 B \u5230 C \u7684\u8fb9\u6743\u503c\u66f4\u5c0f\uff09 closest \uff1a [-1, A, B, B]","title":"\u7b2c\u4e00\u6b65"},{"location":"Algorithm/greedy/Minitree/#_6","text":"\u9009\u62e9 lowcost \u6700\u5c0f\u7684\u9876\u70b9 C \uff0c\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u3002 \u66f4\u65b0\uff1a lowcost \uff1a [0, 0, 0, 3] \uff08 C \u5230 D \u7684\u8fb9\u6743\u503c\u66f4\u5c0f\uff09 closest \uff1a [-1, A, B, C]","title":"\u7b2c\u4e8c\u6b65"},{"location":"Algorithm/greedy/Minitree/#_7","text":"\u9009\u62e9 lowcost \u6700\u5c0f\u7684\u9876\u70b9 D \uff0c\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u3002 \u6240\u6709\u9876\u70b9\u5df2\u52a0\u5165\uff0c\u7b97\u6cd5\u7ed3\u675f\u3002","title":"\u7b2c\u4e09\u6b65"},{"location":"Algorithm/greedy/Minitree/#_8","text":"lowcost \uff1a\u8bb0\u5f55\u6bcf\u4e2a\u9876\u70b9\u5230\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5c0f\u8fb9\u6743\u503c\u3002 closest \uff1a\u8bb0\u5f55\u6bcf\u4e2a\u9876\u70b9\u5728\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u4e0e\u5176\u76f8\u8fde\u7684\u9876\u70b9\u3002 \u901a\u8fc7\u8fd9\u4e24\u4e2a\u6570\u7ec4\uff0cPrim\u7b97\u6cd5\u80fd\u591f\u9ad8\u6548\u5730\u6784\u9020\u6700\u5c0f\u751f\u6210\u6811\u3002","title":"\u603b\u7ed3"},{"location":"Algorithm/greedy/Scheduling/","text":"\u591a\u5904\u7406\u673a\u8c03\u5ea6\u7684\u8d2a\u5fc3\u7b97\u6cd5\u601d\u60f3 \u591a\u5904\u7406\u673a\u8c03\u5ea6\u95ee\u9898\u7684\u76ee\u6807\u662f\u5c06\u4efb\u52a1\u5206\u914d\u5230\u591a\u4e2a\u5904\u7406\u673a\u4e0a\uff0c\u4f7f\u5f97\u6240\u6709\u4efb\u52a1\u5b8c\u6210\u7684 \u6700\u5927\u65f6\u95f4\uff08Makespan\uff09 \u6700\u5c0f\u3002\u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u7b80\u5355\u4e14\u9ad8\u6548\u7684\u8fd1\u4f3c\u65b9\u6cd5\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u5982\u4e0b\uff1a \u8d2a\u5fc3\u7b97\u6cd5\u7684\u6838\u5fc3\u601d\u60f3 \u4efb\u52a1\u6392\u5e8f \uff1a \u5c06\u6240\u6709\u4efb\u52a1\u6309\u7167\u5904\u7406\u65f6\u95f4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002 \u4f18\u5148\u5206\u914d\u8f83\u5927\u7684\u4efb\u52a1\uff0c\u5c3d\u91cf\u51cf\u5c11\u5bf9\u540e\u7eed\u4efb\u52a1\u7684\u5f71\u54cd\u3002 \u5206\u914d\u7b56\u7565 \uff1a \u6bcf\u6b21\u5c06\u5f53\u524d\u4efb\u52a1\u5206\u914d\u7ed9 \u5f53\u524d\u8d1f\u8f7d\u6700\u5c0f\u7684\u5904\u7406\u673a \u3002 \u8fd9\u6837\u53ef\u4ee5\u5c3d\u91cf\u5e73\u8861\u5404\u5904\u7406\u673a\u7684\u8d1f\u8f7d\uff0c\u907f\u514d\u67d0\u4e2a\u5904\u7406\u673a\u8d1f\u8f7d\u8fc7\u9ad8\u3002 \u66f4\u65b0\u8d1f\u8f7d \uff1a \u5206\u914d\u4efb\u52a1\u540e\uff0c\u66f4\u65b0\u8be5\u5904\u7406\u673a\u7684\u8d1f\u8f7d\u3002 \u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u76f4\u5230\u6240\u6709\u4efb\u52a1\u5206\u914d\u5b8c\u6210\u3002 \u7b97\u6cd5\u6b65\u9aa4 \u521d\u59cb\u5316 \uff1a \u5c06\u6240\u6709\u5904\u7406\u673a\u7684\u521d\u59cb\u8d1f\u8f7d\u8bbe\u7f6e\u4e3a 0\u3002 \u4efb\u52a1\u5206\u914d \uff1a \u6309\u4efb\u52a1\u65f6\u95f4\u4ece\u5927\u5230\u5c0f\u4f9d\u6b21\u5206\u914d\u4efb\u52a1\u3002 \u6bcf\u6b21\u5c06\u4efb\u52a1\u5206\u914d\u7ed9\u5f53\u524d\u8d1f\u8f7d\u6700\u5c0f\u7684\u5904\u7406\u673a\u3002 \u5b8c\u6210 \uff1a \u6240\u6709\u4efb\u52a1\u5206\u914d\u5b8c\u6210\u540e\uff0c\u5904\u7406\u673a\u7684\u6700\u5927\u8d1f\u8f7d\u5373\u4e3a\u6700\u7ec8\u7684\u6700\u5927\u5b8c\u6210\u65f6\u95f4\uff08Makespan\uff09\u3002 \u793a\u4f8b \u8f93\u5165 \uff1a \u4efb\u52a1\u65f6\u95f4\uff1a [2, 14, 4, 16, 6, 5] \u5904\u7406\u673a\u6570\u91cf\uff1a 3 \u5206\u914d\u8fc7\u7a0b \uff1a \u4efb\u52a1\u6392\u5e8f \uff1a \u6309\u4efb\u52a1\u65f6\u95f4\u964d\u5e8f\u6392\u5217\uff1a [16, 14, 6, 5, 4, 2] \u521d\u59cb\u5316 \uff1a \u5904\u7406\u673a\u521d\u59cb\u8d1f\u8f7d\uff1a [0, 0, 0] \u4efb\u52a1\u5206\u914d \uff1a \u5206\u914d\u4efb\u52a1 16 \uff1a [16, 0, 0] \u5206\u914d\u4efb\u52a1 14 \uff1a [16, 14, 0] \u5206\u914d\u4efb\u52a1 6 \uff1a [16, 14, 6] \u5206\u914d\u4efb\u52a1 5 \uff1a [16, 14, 11] \u5206\u914d\u4efb\u52a1 4 \uff1a [16, 14, 15] \u5206\u914d\u4efb\u52a1 2 \uff1a [16, 16, 15] \u7ed3\u679c \uff1a \u6700\u5927\u5b8c\u6210\u65f6\u95f4\uff08Makespan\uff09\uff1a 16 \u8d2a\u5fc3\u7b97\u6cd5\u7684\u4f18\u70b9 \u7b80\u5355\u9ad8\u6548 \uff1a \u6bcf\u6b21\u9009\u62e9\u5f53\u524d\u6700\u4f18\u7684\u5206\u914d\u7b56\u7565\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4f4e\u3002 \u63a5\u8fd1\u6700\u4f18\u89e3 \uff1a \u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u7ed3\u679c\u901a\u5e38\u63a5\u8fd1\u6700\u4f18\u89e3\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u7684\u5c40\u9650\u6027 \u8d2a\u5fc3\u7b97\u6cd5\u4e0d\u80fd\u4fdd\u8bc1\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u6b21\u4f18\u89e3\u3002 \u603b\u7ed3 \u8d2a\u5fc3\u7b97\u6cd5\u901a\u8fc7\u4f18\u5148\u5206\u914d\u8f83\u5927\u7684\u4efb\u52a1\uff0c\u5e76\u5c06\u4efb\u52a1\u5206\u914d\u7ed9\u5f53\u524d\u8d1f\u8f7d\u6700\u5c0f\u7684\u5904\u7406\u673a\uff0c\u5c3d\u91cf\u5e73\u8861\u5404\u5904\u7406\u673a\u7684\u8d1f\u8f7d\uff0c\u4ece\u800c\u63a5\u8fd1\u6700\u5c0f\u5316\u6700\u5927\u5b8c\u6210\u65f6\u95f4\u7684\u76ee\u6807\u3002\u8fd9\u79cd\u65b9\u6cd5\u7b80\u5355\u76f4\u89c2\uff0c\u9002\u7528\u4e8e\u5b9e\u9645\u573a\u666f\u4e2d\u7684\u591a\u5904\u7406\u673a\u8c03\u5ea6\u95ee\u9898\u3002 \u6709\u597d\u7684\u7b97\u6cd5\u4e00\u5b9a\u6c42\u51fa\u6700\u4f18\u8c03\u5ea6\u987a\u5e8f\u5417 \u8d2a\u5fc3\u7b97\u6cd5\u867d\u7136\u7b80\u5355\u9ad8\u6548\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8bc1\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u80fd\u9009\u51fa\u6700\u4f18\u8c03\u5ea6\u987a\u5e8f\u3002\u5bf9\u4e8e\u591a\u5904\u7406\u673a\u8c03\u5ea6\u95ee\u9898\uff08\u7279\u522b\u662f \u6700\u5c0f\u5316\u6700\u5927\u5b8c\u6210\u65f6\u95f4 \u7684\u95ee\u9898\uff09\uff0c\u8fd9\u662f\u4e00\u4e2a NP\u96be\u95ee\u9898 \uff0c\u76ee\u524d\u6ca1\u6709\u5df2\u77e5\u7684\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\u53ef\u4ee5\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\u3002 \u4e0d\u8fc7\uff0c\u6709\u4e00\u4e9b\u7b97\u6cd5\u548c\u65b9\u6cd5\u53ef\u4ee5\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\uff0c\u4f46\u5b83\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u9002\u5408\u4efb\u52a1\u6570\u91cf\u8f83\u5c11\u7684\u60c5\u51b5\uff1a 1. \u52a8\u6001\u89c4\u5212\uff08Dynamic Programming\uff09 \u601d\u60f3 \uff1a \u4f7f\u7528\u52a8\u6001\u89c4\u5212\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u4efb\u52a1\u5206\u914d\u65b9\u5f0f\uff0c\u8ba1\u7b97\u6bcf\u79cd\u5206\u914d\u65b9\u5f0f\u7684\u6700\u5927\u5b8c\u6210\u65f6\u95f4\uff0c\u5e76\u9009\u62e9\u6700\u5c0f\u7684\u5b8c\u6210\u65f6\u95f4\u4f5c\u4e3a\u6700\u4f18\u89e3\u3002 \u4f18\u70b9 \uff1a \u53ef\u4ee5\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\u3002 \u7f3a\u70b9 \uff1a \u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u901a\u5e38\u4e3a\u6307\u6570\u7ea7\uff0c\u9002\u5408\u4efb\u52a1\u6570\u91cf\u8f83\u5c11\u7684\u60c5\u51b5\u3002 2. \u5206\u652f\u9650\u754c\u6cd5\uff08Branch and Bound\uff09 \u601d\u60f3 \uff1a \u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u4efb\u52a1\u5206\u914d\u65b9\u5f0f\uff0c\u4f46\u901a\u8fc7\u526a\u679d\uff08\u9650\u5236\u4e0d\u53ef\u80fd\u7684\u5206\u652f\uff09\u51cf\u5c11\u641c\u7d22\u7a7a\u95f4\u3002 \u4f8b\u5982\uff0c\u5f53\u67d0\u4e2a\u5206\u914d\u65b9\u5f0f\u7684\u5b8c\u6210\u65f6\u95f4\u5df2\u7ecf\u8d85\u8fc7\u5f53\u524d\u5df2\u77e5\u7684\u6700\u4f18\u89e3\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u526a\u679d\u3002 \u4f18\u70b9 \uff1a \u53ef\u4ee5\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\u3002 \u7f3a\u70b9 \uff1a \u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u7136\u8f83\u9ad8\uff0c\u4f46\u6bd4\u66b4\u529b\u679a\u4e3e\u66f4\u9ad8\u6548\u3002 3. \u5b8c\u5168\u679a\u4e3e\uff08Exhaustive Search\uff09 \u601d\u60f3 \uff1a \u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u4efb\u52a1\u5206\u914d\u65b9\u5f0f\uff0c\u8ba1\u7b97\u6bcf\u79cd\u5206\u914d\u65b9\u5f0f\u7684\u6700\u5927\u5b8c\u6210\u65f6\u95f4\uff0c\u5e76\u9009\u62e9\u6700\u5c0f\u7684\u5b8c\u6210\u65f6\u95f4\u3002 \u4f18\u70b9 \uff1a \u53ef\u4ee5\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\u3002 \u7f3a\u70b9 \uff1a \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(m^n) \uff08 m \u662f\u5904\u7406\u673a\u6570\u91cf\uff0c n \u662f\u4efb\u52a1\u6570\u91cf\uff09\uff0c\u4efb\u52a1\u6570\u91cf\u8f83\u591a\u65f6\u4e0d\u53ef\u884c\u3002 4. \u7ebf\u6027\u89c4\u5212\uff08Linear Programming\uff09 \u601d\u60f3 \uff1a \u5c06\u591a\u5904\u7406\u673a\u8c03\u5ea6\u95ee\u9898\u5efa\u6a21\u4e3a\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff0c\u901a\u8fc7\u7ebf\u6027\u89c4\u5212\u6c42\u89e3\u6700\u4f18\u89e3\u3002 \u4f18\u70b9 \uff1a \u53ef\u4ee5\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\u3002 \u7f3a\u70b9 \uff1a \u9700\u8981\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u7ebf\u6027\u89c4\u5212\u6a21\u578b\uff0c\u590d\u6742\u5ea6\u8f83\u9ad8\u3002 5. \u7279\u6b8a\u60c5\u51b5\u7684\u4f18\u5316\u7b97\u6cd5 \u5bf9\u4e8e\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\uff08\u5982\u4efb\u52a1\u65f6\u95f4\u6ee1\u8db3\u67d0\u4e9b\u7279\u5b9a\u6761\u4ef6\uff09\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u4e13\u95e8\u7684\u4f18\u5316\u7b97\u6cd5\u6765\u6c42\u89e3\u6700\u4f18\u89e3\u3002 \u4f8b\u5982\uff1a \u5982\u679c\u6240\u6709\u4efb\u52a1\u7684\u5904\u7406\u65f6\u95f4\u76f8\u7b49\uff0c\u53ef\u4ee5\u76f4\u63a5\u5747\u5300\u5206\u914d\u4efb\u52a1\u3002 \u5982\u679c\u4efb\u52a1\u6570\u91cf\u8fdc\u5927\u4e8e\u5904\u7406\u673a\u6570\u91cf\uff0c\u53ef\u4ee5\u4f7f\u7528\u7279\u5b9a\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002 6. \u8fd1\u4f3c\u7b97\u6cd5 \u867d\u7136\u8fd1\u4f3c\u7b97\u6cd5\u4e0d\u80fd\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\uff0c\u4f46\u5b83\u4eec\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u975e\u5e38\u6709\u6548\uff0c\u5c24\u5176\u662f\u5f53\u4efb\u52a1\u6570\u91cf\u8f83\u591a\u65f6\uff1a - \u8d2a\u5fc3\u7b97\u6cd5 \uff1a\u7b80\u5355\u9ad8\u6548\uff0c\u63a5\u8fd1\u6700\u4f18\u89e3\u3002 - List Scheduling \uff1a\u4e00\u79cd\u6539\u8fdb\u7684\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u7ed3\u5408\u4efb\u52a1\u4f18\u5148\u7ea7\u8fdb\u884c\u8c03\u5ea6\u3002 \u603b\u7ed3 \u5982\u679c\u4efb\u52a1\u6570\u91cf\u8f83\u5c11\uff0c\u53ef\u4ee5\u4f7f\u7528 \u52a8\u6001\u89c4\u5212 \u6216 \u5206\u652f\u9650\u754c\u6cd5 \u6765\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\u3002 \u5982\u679c\u4efb\u52a1\u6570\u91cf\u8f83\u591a\uff0c\u53ef\u4ee5\u4f7f\u7528 \u8d2a\u5fc3\u7b97\u6cd5 \u6216\u5176\u4ed6\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u867d\u7136\u4e0d\u80fd\u4fdd\u8bc1\u6700\u4f18\u89e3\uff0c\u4f46\u53ef\u4ee5\u5feb\u901f\u5f97\u5230\u63a5\u8fd1\u6700\u4f18\u7684\u89e3\u3002 \u591a\u5904\u7406\u673a\u8c03\u5ea6\u95ee\u9898\u662f\u4e00\u4e2a\u7ecf\u5178\u7684 NP \u96be\u95ee\u9898\uff0c\u5b9e\u9645\u5e94\u7528\u4e2d\u901a\u5e38\u4f1a\u5728\u6548\u7387\u548c\u7cbe\u5ea6\u4e4b\u95f4\u8fdb\u884c\u6743\u8861\u3002","title":"\u591a\u5904\u7406\u673a\u8c03\u5ea6\u95ee\u9898"},{"location":"Algorithm/greedy/Scheduling/#_1","text":"\u591a\u5904\u7406\u673a\u8c03\u5ea6\u95ee\u9898\u7684\u76ee\u6807\u662f\u5c06\u4efb\u52a1\u5206\u914d\u5230\u591a\u4e2a\u5904\u7406\u673a\u4e0a\uff0c\u4f7f\u5f97\u6240\u6709\u4efb\u52a1\u5b8c\u6210\u7684 \u6700\u5927\u65f6\u95f4\uff08Makespan\uff09 \u6700\u5c0f\u3002\u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u7b80\u5355\u4e14\u9ad8\u6548\u7684\u8fd1\u4f3c\u65b9\u6cd5\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u5982\u4e0b\uff1a","title":"\u591a\u5904\u7406\u673a\u8c03\u5ea6\u7684\u8d2a\u5fc3\u7b97\u6cd5\u601d\u60f3"},{"location":"Algorithm/greedy/Scheduling/#_2","text":"\u4efb\u52a1\u6392\u5e8f \uff1a \u5c06\u6240\u6709\u4efb\u52a1\u6309\u7167\u5904\u7406\u65f6\u95f4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002 \u4f18\u5148\u5206\u914d\u8f83\u5927\u7684\u4efb\u52a1\uff0c\u5c3d\u91cf\u51cf\u5c11\u5bf9\u540e\u7eed\u4efb\u52a1\u7684\u5f71\u54cd\u3002 \u5206\u914d\u7b56\u7565 \uff1a \u6bcf\u6b21\u5c06\u5f53\u524d\u4efb\u52a1\u5206\u914d\u7ed9 \u5f53\u524d\u8d1f\u8f7d\u6700\u5c0f\u7684\u5904\u7406\u673a \u3002 \u8fd9\u6837\u53ef\u4ee5\u5c3d\u91cf\u5e73\u8861\u5404\u5904\u7406\u673a\u7684\u8d1f\u8f7d\uff0c\u907f\u514d\u67d0\u4e2a\u5904\u7406\u673a\u8d1f\u8f7d\u8fc7\u9ad8\u3002 \u66f4\u65b0\u8d1f\u8f7d \uff1a \u5206\u914d\u4efb\u52a1\u540e\uff0c\u66f4\u65b0\u8be5\u5904\u7406\u673a\u7684\u8d1f\u8f7d\u3002 \u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u76f4\u5230\u6240\u6709\u4efb\u52a1\u5206\u914d\u5b8c\u6210\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5\u7684\u6838\u5fc3\u601d\u60f3"},{"location":"Algorithm/greedy/Scheduling/#_3","text":"\u521d\u59cb\u5316 \uff1a \u5c06\u6240\u6709\u5904\u7406\u673a\u7684\u521d\u59cb\u8d1f\u8f7d\u8bbe\u7f6e\u4e3a 0\u3002 \u4efb\u52a1\u5206\u914d \uff1a \u6309\u4efb\u52a1\u65f6\u95f4\u4ece\u5927\u5230\u5c0f\u4f9d\u6b21\u5206\u914d\u4efb\u52a1\u3002 \u6bcf\u6b21\u5c06\u4efb\u52a1\u5206\u914d\u7ed9\u5f53\u524d\u8d1f\u8f7d\u6700\u5c0f\u7684\u5904\u7406\u673a\u3002 \u5b8c\u6210 \uff1a \u6240\u6709\u4efb\u52a1\u5206\u914d\u5b8c\u6210\u540e\uff0c\u5904\u7406\u673a\u7684\u6700\u5927\u8d1f\u8f7d\u5373\u4e3a\u6700\u7ec8\u7684\u6700\u5927\u5b8c\u6210\u65f6\u95f4\uff08Makespan\uff09\u3002","title":"\u7b97\u6cd5\u6b65\u9aa4"},{"location":"Algorithm/greedy/Scheduling/#_4","text":"","title":"\u793a\u4f8b"},{"location":"Algorithm/greedy/Scheduling/#_5","text":"\u4efb\u52a1\u65f6\u95f4\uff1a [2, 14, 4, 16, 6, 5] \u5904\u7406\u673a\u6570\u91cf\uff1a 3","title":"\u8f93\u5165\uff1a"},{"location":"Algorithm/greedy/Scheduling/#_6","text":"\u4efb\u52a1\u6392\u5e8f \uff1a \u6309\u4efb\u52a1\u65f6\u95f4\u964d\u5e8f\u6392\u5217\uff1a [16, 14, 6, 5, 4, 2] \u521d\u59cb\u5316 \uff1a \u5904\u7406\u673a\u521d\u59cb\u8d1f\u8f7d\uff1a [0, 0, 0] \u4efb\u52a1\u5206\u914d \uff1a \u5206\u914d\u4efb\u52a1 16 \uff1a [16, 0, 0] \u5206\u914d\u4efb\u52a1 14 \uff1a [16, 14, 0] \u5206\u914d\u4efb\u52a1 6 \uff1a [16, 14, 6] \u5206\u914d\u4efb\u52a1 5 \uff1a [16, 14, 11] \u5206\u914d\u4efb\u52a1 4 \uff1a [16, 14, 15] \u5206\u914d\u4efb\u52a1 2 \uff1a [16, 16, 15] \u7ed3\u679c \uff1a \u6700\u5927\u5b8c\u6210\u65f6\u95f4\uff08Makespan\uff09\uff1a 16","title":"\u5206\u914d\u8fc7\u7a0b\uff1a"},{"location":"Algorithm/greedy/Scheduling/#_7","text":"\u7b80\u5355\u9ad8\u6548 \uff1a \u6bcf\u6b21\u9009\u62e9\u5f53\u524d\u6700\u4f18\u7684\u5206\u914d\u7b56\u7565\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4f4e\u3002 \u63a5\u8fd1\u6700\u4f18\u89e3 \uff1a \u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u7ed3\u679c\u901a\u5e38\u63a5\u8fd1\u6700\u4f18\u89e3\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5\u7684\u4f18\u70b9"},{"location":"Algorithm/greedy/Scheduling/#_8","text":"\u8d2a\u5fc3\u7b97\u6cd5\u4e0d\u80fd\u4fdd\u8bc1\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u6b21\u4f18\u89e3\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5\u7684\u5c40\u9650\u6027"},{"location":"Algorithm/greedy/Scheduling/#_9","text":"\u8d2a\u5fc3\u7b97\u6cd5\u901a\u8fc7\u4f18\u5148\u5206\u914d\u8f83\u5927\u7684\u4efb\u52a1\uff0c\u5e76\u5c06\u4efb\u52a1\u5206\u914d\u7ed9\u5f53\u524d\u8d1f\u8f7d\u6700\u5c0f\u7684\u5904\u7406\u673a\uff0c\u5c3d\u91cf\u5e73\u8861\u5404\u5904\u7406\u673a\u7684\u8d1f\u8f7d\uff0c\u4ece\u800c\u63a5\u8fd1\u6700\u5c0f\u5316\u6700\u5927\u5b8c\u6210\u65f6\u95f4\u7684\u76ee\u6807\u3002\u8fd9\u79cd\u65b9\u6cd5\u7b80\u5355\u76f4\u89c2\uff0c\u9002\u7528\u4e8e\u5b9e\u9645\u573a\u666f\u4e2d\u7684\u591a\u5904\u7406\u673a\u8c03\u5ea6\u95ee\u9898\u3002","title":"\u603b\u7ed3"},{"location":"Algorithm/greedy/Scheduling/#_10","text":"\u8d2a\u5fc3\u7b97\u6cd5\u867d\u7136\u7b80\u5355\u9ad8\u6548\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8bc1\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u80fd\u9009\u51fa\u6700\u4f18\u8c03\u5ea6\u987a\u5e8f\u3002\u5bf9\u4e8e\u591a\u5904\u7406\u673a\u8c03\u5ea6\u95ee\u9898\uff08\u7279\u522b\u662f \u6700\u5c0f\u5316\u6700\u5927\u5b8c\u6210\u65f6\u95f4 \u7684\u95ee\u9898\uff09\uff0c\u8fd9\u662f\u4e00\u4e2a NP\u96be\u95ee\u9898 \uff0c\u76ee\u524d\u6ca1\u6709\u5df2\u77e5\u7684\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\u53ef\u4ee5\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\u3002 \u4e0d\u8fc7\uff0c\u6709\u4e00\u4e9b\u7b97\u6cd5\u548c\u65b9\u6cd5\u53ef\u4ee5\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\uff0c\u4f46\u5b83\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u9002\u5408\u4efb\u52a1\u6570\u91cf\u8f83\u5c11\u7684\u60c5\u51b5\uff1a","title":"\u6709\u597d\u7684\u7b97\u6cd5\u4e00\u5b9a\u6c42\u51fa\u6700\u4f18\u8c03\u5ea6\u987a\u5e8f\u5417"},{"location":"Algorithm/greedy/Scheduling/#1-dynamic-programming","text":"\u601d\u60f3 \uff1a \u4f7f\u7528\u52a8\u6001\u89c4\u5212\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u4efb\u52a1\u5206\u914d\u65b9\u5f0f\uff0c\u8ba1\u7b97\u6bcf\u79cd\u5206\u914d\u65b9\u5f0f\u7684\u6700\u5927\u5b8c\u6210\u65f6\u95f4\uff0c\u5e76\u9009\u62e9\u6700\u5c0f\u7684\u5b8c\u6210\u65f6\u95f4\u4f5c\u4e3a\u6700\u4f18\u89e3\u3002 \u4f18\u70b9 \uff1a \u53ef\u4ee5\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\u3002 \u7f3a\u70b9 \uff1a \u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u901a\u5e38\u4e3a\u6307\u6570\u7ea7\uff0c\u9002\u5408\u4efb\u52a1\u6570\u91cf\u8f83\u5c11\u7684\u60c5\u51b5\u3002","title":"1. \u52a8\u6001\u89c4\u5212\uff08Dynamic Programming\uff09"},{"location":"Algorithm/greedy/Scheduling/#2-branch-and-bound","text":"\u601d\u60f3 \uff1a \u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u4efb\u52a1\u5206\u914d\u65b9\u5f0f\uff0c\u4f46\u901a\u8fc7\u526a\u679d\uff08\u9650\u5236\u4e0d\u53ef\u80fd\u7684\u5206\u652f\uff09\u51cf\u5c11\u641c\u7d22\u7a7a\u95f4\u3002 \u4f8b\u5982\uff0c\u5f53\u67d0\u4e2a\u5206\u914d\u65b9\u5f0f\u7684\u5b8c\u6210\u65f6\u95f4\u5df2\u7ecf\u8d85\u8fc7\u5f53\u524d\u5df2\u77e5\u7684\u6700\u4f18\u89e3\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u526a\u679d\u3002 \u4f18\u70b9 \uff1a \u53ef\u4ee5\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\u3002 \u7f3a\u70b9 \uff1a \u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u7136\u8f83\u9ad8\uff0c\u4f46\u6bd4\u66b4\u529b\u679a\u4e3e\u66f4\u9ad8\u6548\u3002","title":"2. \u5206\u652f\u9650\u754c\u6cd5\uff08Branch and Bound\uff09"},{"location":"Algorithm/greedy/Scheduling/#3-exhaustive-search","text":"\u601d\u60f3 \uff1a \u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u4efb\u52a1\u5206\u914d\u65b9\u5f0f\uff0c\u8ba1\u7b97\u6bcf\u79cd\u5206\u914d\u65b9\u5f0f\u7684\u6700\u5927\u5b8c\u6210\u65f6\u95f4\uff0c\u5e76\u9009\u62e9\u6700\u5c0f\u7684\u5b8c\u6210\u65f6\u95f4\u3002 \u4f18\u70b9 \uff1a \u53ef\u4ee5\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\u3002 \u7f3a\u70b9 \uff1a \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(m^n) \uff08 m \u662f\u5904\u7406\u673a\u6570\u91cf\uff0c n \u662f\u4efb\u52a1\u6570\u91cf\uff09\uff0c\u4efb\u52a1\u6570\u91cf\u8f83\u591a\u65f6\u4e0d\u53ef\u884c\u3002","title":"3. \u5b8c\u5168\u679a\u4e3e\uff08Exhaustive Search\uff09"},{"location":"Algorithm/greedy/Scheduling/#4-linear-programming","text":"\u601d\u60f3 \uff1a \u5c06\u591a\u5904\u7406\u673a\u8c03\u5ea6\u95ee\u9898\u5efa\u6a21\u4e3a\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff0c\u901a\u8fc7\u7ebf\u6027\u89c4\u5212\u6c42\u89e3\u6700\u4f18\u89e3\u3002 \u4f18\u70b9 \uff1a \u53ef\u4ee5\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\u3002 \u7f3a\u70b9 \uff1a \u9700\u8981\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u7ebf\u6027\u89c4\u5212\u6a21\u578b\uff0c\u590d\u6742\u5ea6\u8f83\u9ad8\u3002","title":"4. \u7ebf\u6027\u89c4\u5212\uff08Linear Programming\uff09"},{"location":"Algorithm/greedy/Scheduling/#5","text":"\u5bf9\u4e8e\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\uff08\u5982\u4efb\u52a1\u65f6\u95f4\u6ee1\u8db3\u67d0\u4e9b\u7279\u5b9a\u6761\u4ef6\uff09\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u4e13\u95e8\u7684\u4f18\u5316\u7b97\u6cd5\u6765\u6c42\u89e3\u6700\u4f18\u89e3\u3002 \u4f8b\u5982\uff1a \u5982\u679c\u6240\u6709\u4efb\u52a1\u7684\u5904\u7406\u65f6\u95f4\u76f8\u7b49\uff0c\u53ef\u4ee5\u76f4\u63a5\u5747\u5300\u5206\u914d\u4efb\u52a1\u3002 \u5982\u679c\u4efb\u52a1\u6570\u91cf\u8fdc\u5927\u4e8e\u5904\u7406\u673a\u6570\u91cf\uff0c\u53ef\u4ee5\u4f7f\u7528\u7279\u5b9a\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\u3002","title":"5. \u7279\u6b8a\u60c5\u51b5\u7684\u4f18\u5316\u7b97\u6cd5"},{"location":"Algorithm/greedy/Scheduling/#6","text":"\u867d\u7136\u8fd1\u4f3c\u7b97\u6cd5\u4e0d\u80fd\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\uff0c\u4f46\u5b83\u4eec\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u975e\u5e38\u6709\u6548\uff0c\u5c24\u5176\u662f\u5f53\u4efb\u52a1\u6570\u91cf\u8f83\u591a\u65f6\uff1a - \u8d2a\u5fc3\u7b97\u6cd5 \uff1a\u7b80\u5355\u9ad8\u6548\uff0c\u63a5\u8fd1\u6700\u4f18\u89e3\u3002 - List Scheduling \uff1a\u4e00\u79cd\u6539\u8fdb\u7684\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u7ed3\u5408\u4efb\u52a1\u4f18\u5148\u7ea7\u8fdb\u884c\u8c03\u5ea6\u3002","title":"6. \u8fd1\u4f3c\u7b97\u6cd5"},{"location":"Algorithm/greedy/Scheduling/#_11","text":"\u5982\u679c\u4efb\u52a1\u6570\u91cf\u8f83\u5c11\uff0c\u53ef\u4ee5\u4f7f\u7528 \u52a8\u6001\u89c4\u5212 \u6216 \u5206\u652f\u9650\u754c\u6cd5 \u6765\u4fdd\u8bc1\u6c42\u51fa\u6700\u4f18\u89e3\u3002 \u5982\u679c\u4efb\u52a1\u6570\u91cf\u8f83\u591a\uff0c\u53ef\u4ee5\u4f7f\u7528 \u8d2a\u5fc3\u7b97\u6cd5 \u6216\u5176\u4ed6\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u867d\u7136\u4e0d\u80fd\u4fdd\u8bc1\u6700\u4f18\u89e3\uff0c\u4f46\u53ef\u4ee5\u5feb\u901f\u5f97\u5230\u63a5\u8fd1\u6700\u4f18\u7684\u89e3\u3002 \u591a\u5904\u7406\u673a\u8c03\u5ea6\u95ee\u9898\u662f\u4e00\u4e2a\u7ecf\u5178\u7684 NP \u96be\u95ee\u9898\uff0c\u5b9e\u9645\u5e94\u7528\u4e2d\u901a\u5e38\u4f1a\u5728\u6548\u7387\u548c\u7cbe\u5ea6\u4e4b\u95f4\u8fdb\u884c\u6743\u8861\u3002","title":"\u603b\u7ed3"},{"location":"Algorithm/greedy/delete_number/","text":"\u5220\u9664\u6570\u5b57\u95ee\u9898 \u7ed9\u5b9a\u4e00\u4e2a\u7531\u6570\u5b57\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u8981\u6c42\u901a\u8fc7\u5220\u9664\u5176\u4e2d\u7684\u67d0\u4e9b\u6570\u5b57\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u6570\u5b57\u7ec4\u6210\u7684\u6570\u6700\u5c0f\u3002\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a 1. \u5220\u9664\u7684\u6570\u5b57\u4e2a\u6570\u4e3a k \u3002 2. \u4fdd\u6301\u5269\u4f59\u6570\u5b57\u7684\u76f8\u5bf9\u987a\u5e8f\u4e0d\u53d8\u3002 3. \u5982\u679c\u6700\u7ec8\u7ed3\u679c\u6709\u524d\u5bfc\u96f6\uff0c\u9700\u8981\u53bb\u6389\u524d\u5bfc\u96f6\u3002 \u8f93\u5165\u8f93\u51fa \u8f93\u5165 \uff1a \u4e00\u4e2a\u5b57\u7b26\u4e32 num \uff0c\u8868\u793a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u3002 \u4e00\u4e2a\u6574\u6570 k \uff0c\u8868\u793a\u9700\u8981\u5220\u9664\u7684\u6570\u5b57\u4e2a\u6570\u3002 \u8f93\u51fa \uff1a \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u5220\u9664 k \u4e2a\u6570\u5b57\u540e\u7ec4\u6210\u7684\u6700\u5c0f\u6570\u3002 \u6211\u9009\u62e9\u7528 string \u8bfb\u53d6\u8f93\u5165\uff0c\u7136\u540e\u5c06\u5b57\u7b26\u4e32\u9010\u4f4d\u62c6\u5206\u540e\u8fde\u5e26\u4e0b\u6807\u5b58\u5165 vector<pair<int,int>> nums \u6570\u7ec4,\u6700\u540e\u6309\u7167 nums[i].second \u7531\u5927\u5230\u5c0f\u6392\u5e8f\uff0c \u6700\u540e\u7528 vector<bool> isout \u6765\u5b58\u50a8\u4e0b\u6807\u4e3a i \u7684\u6570\u662f\u5426\u8f93\u51fa\uff0c\u5c06\u6392\u5e8f\u540e\u524dk\u4e2a\u6570\u7684\u4e0b\u6807\u6807\u8bb0\u4e3a\u4e0d\u8f93\u51fa\u3002 int main () { vector < pair < int , int >> nums ; // \u5b9a\u4e49\u4e00\u4e2a pair \u7c7b\u578b\u6570\u7ec4\uff0c\u5b58\u5165\u8f93\u5165\u7684\u6bcf\u4e2a\u6570\u4e0b\u6807\u548c\u6570\u5b57 string input ; // \u7528\u5b57\u7b26\u4e32\u8bfb\u53d6\u8f93\u5165 int k = 0 ; // \u5b58\u5165\u8981\u5220\u9664\u7684\u4f4d\u6570 cout << \"\u8f93\u5165\u6570\u5b57: \" ; cin >> input ; // \u8bfb\u53d6\u6574\u4e2a\u6570\u5b57\u4f5c\u4e3a\u5b57\u7b26\u4e32 cout << \"\u8f93\u5165\u8981\u5220\u9664\u7684\u4f4d\u6570k: \" ; cin >> k ; // \u5c06\u5b57\u7b26\u4e32\u9010\u4f4d\u62c6\u5206\u6210\u6570\u5b57\u5e76\u5b58\u5165 nums for ( int i = 0 ; i < input . size (); i ++ ) { nums . push_back ({ i , input [ i ] - '0' }); // \u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u6574\u6570 } // \u521b\u5efa\u4e00\u4e2a\u526f\u672c\uff0c\u7528\u4e8e\u6392\u5e8f vector < pair < int , int >> numx = nums ; sort ( numx . begin (), numx . end (), []( const pair < int , int >& a , const pair < int , int >& b ) { return a . second > b . second ; // \u6309\u7167\u6570\u5b57\u4ece\u5927\u5230\u5c0f\u6392\u5e8f }); // \u5b58\u53d6\u4e0b\u6807\u4e3a i \u7684\u6570\u5b57\u662f\u5426\u8f93\u51fa vector < bool > isout ( nums . size (), true ); // \u627e\u5230\u524d k \u4e2a\u6570\u7684\u4e0b\u6807 i\uff0c\u5c06 isout[i] = false for ( int i = 0 ; i < k ; i ++ ) { isout [ numx [ i ]. first ] = false ; // \u4ece\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u627e\u5230\u524d k \u4e2a\u8981\u5220\u9664\u7684\u6570 } // \u8f93\u51fa\u6700\u4f18\u89e3 cout << \"\u6700\u4f18\u89e3\u4e3a: \" ; for ( int i = 0 ; i < nums . size (); i ++ ) { if ( isout [ i ]) { cout << nums [ i ]. second ; } } cout << endl ; // \u8f93\u51fa\u5220\u9664\u7684\u6570\u5b57 cout << \"\u5220\u9664\u7684\u6570\u5b57\u4e3a: \" ; for ( int i = 0 ; i < nums . size (); i ++ ) { if ( ! isout [ i ]) { cout << nums [ i ]. second ; } } cout << endl ; return 0 ; }","title":"\u5220\u9664\u6570\u5b57\u95ee\u9898"},{"location":"Algorithm/greedy/delete_number/#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u7531\u6570\u5b57\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u8981\u6c42\u901a\u8fc7\u5220\u9664\u5176\u4e2d\u7684\u67d0\u4e9b\u6570\u5b57\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u6570\u5b57\u7ec4\u6210\u7684\u6570\u6700\u5c0f\u3002\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a 1. \u5220\u9664\u7684\u6570\u5b57\u4e2a\u6570\u4e3a k \u3002 2. \u4fdd\u6301\u5269\u4f59\u6570\u5b57\u7684\u76f8\u5bf9\u987a\u5e8f\u4e0d\u53d8\u3002 3. \u5982\u679c\u6700\u7ec8\u7ed3\u679c\u6709\u524d\u5bfc\u96f6\uff0c\u9700\u8981\u53bb\u6389\u524d\u5bfc\u96f6\u3002","title":"\u5220\u9664\u6570\u5b57\u95ee\u9898"},{"location":"Algorithm/greedy/delete_number/#_2","text":"\u8f93\u5165 \uff1a \u4e00\u4e2a\u5b57\u7b26\u4e32 num \uff0c\u8868\u793a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u3002 \u4e00\u4e2a\u6574\u6570 k \uff0c\u8868\u793a\u9700\u8981\u5220\u9664\u7684\u6570\u5b57\u4e2a\u6570\u3002 \u8f93\u51fa \uff1a \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u5220\u9664 k \u4e2a\u6570\u5b57\u540e\u7ec4\u6210\u7684\u6700\u5c0f\u6570\u3002 \u6211\u9009\u62e9\u7528 string \u8bfb\u53d6\u8f93\u5165\uff0c\u7136\u540e\u5c06\u5b57\u7b26\u4e32\u9010\u4f4d\u62c6\u5206\u540e\u8fde\u5e26\u4e0b\u6807\u5b58\u5165 vector<pair<int,int>> nums \u6570\u7ec4,\u6700\u540e\u6309\u7167 nums[i].second \u7531\u5927\u5230\u5c0f\u6392\u5e8f\uff0c \u6700\u540e\u7528 vector<bool> isout \u6765\u5b58\u50a8\u4e0b\u6807\u4e3a i \u7684\u6570\u662f\u5426\u8f93\u51fa\uff0c\u5c06\u6392\u5e8f\u540e\u524dk\u4e2a\u6570\u7684\u4e0b\u6807\u6807\u8bb0\u4e3a\u4e0d\u8f93\u51fa\u3002 int main () { vector < pair < int , int >> nums ; // \u5b9a\u4e49\u4e00\u4e2a pair \u7c7b\u578b\u6570\u7ec4\uff0c\u5b58\u5165\u8f93\u5165\u7684\u6bcf\u4e2a\u6570\u4e0b\u6807\u548c\u6570\u5b57 string input ; // \u7528\u5b57\u7b26\u4e32\u8bfb\u53d6\u8f93\u5165 int k = 0 ; // \u5b58\u5165\u8981\u5220\u9664\u7684\u4f4d\u6570 cout << \"\u8f93\u5165\u6570\u5b57: \" ; cin >> input ; // \u8bfb\u53d6\u6574\u4e2a\u6570\u5b57\u4f5c\u4e3a\u5b57\u7b26\u4e32 cout << \"\u8f93\u5165\u8981\u5220\u9664\u7684\u4f4d\u6570k: \" ; cin >> k ; // \u5c06\u5b57\u7b26\u4e32\u9010\u4f4d\u62c6\u5206\u6210\u6570\u5b57\u5e76\u5b58\u5165 nums for ( int i = 0 ; i < input . size (); i ++ ) { nums . push_back ({ i , input [ i ] - '0' }); // \u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u6574\u6570 } // \u521b\u5efa\u4e00\u4e2a\u526f\u672c\uff0c\u7528\u4e8e\u6392\u5e8f vector < pair < int , int >> numx = nums ; sort ( numx . begin (), numx . end (), []( const pair < int , int >& a , const pair < int , int >& b ) { return a . second > b . second ; // \u6309\u7167\u6570\u5b57\u4ece\u5927\u5230\u5c0f\u6392\u5e8f }); // \u5b58\u53d6\u4e0b\u6807\u4e3a i \u7684\u6570\u5b57\u662f\u5426\u8f93\u51fa vector < bool > isout ( nums . size (), true ); // \u627e\u5230\u524d k \u4e2a\u6570\u7684\u4e0b\u6807 i\uff0c\u5c06 isout[i] = false for ( int i = 0 ; i < k ; i ++ ) { isout [ numx [ i ]. first ] = false ; // \u4ece\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u627e\u5230\u524d k \u4e2a\u8981\u5220\u9664\u7684\u6570 } // \u8f93\u51fa\u6700\u4f18\u89e3 cout << \"\u6700\u4f18\u89e3\u4e3a: \" ; for ( int i = 0 ; i < nums . size (); i ++ ) { if ( isout [ i ]) { cout << nums [ i ]. second ; } } cout << endl ; // \u8f93\u51fa\u5220\u9664\u7684\u6570\u5b57 cout << \"\u5220\u9664\u7684\u6570\u5b57\u4e3a: \" ; for ( int i = 0 ; i < nums . size (); i ++ ) { if ( ! isout [ i ]) { cout << nums [ i ]. second ; } } cout << endl ; return 0 ; }","title":"\u8f93\u5165\u8f93\u51fa"},{"location":"Algorithm/greedy/meeting-arrangement/","text":"\u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a n \u4e2a\u6d3b\u52a8\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u6709\u4e00\u4e2a\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u3002 \u5728\u540c\u4e00\u4e2a\u4f1a\u573a\u4e2d\uff0c\u4e24\u4e2a\u6d3b\u52a8\u4e0d\u80fd\u91cd\u53e0\u3002 \u9700\u8981\u9009\u62e9\u6700\u5c11\u7684\u4f1a\u573a\u6570\u91cf\u80fd\u591f\u5168\u90e8\u5b89\u6392\u8fd9\u4e9b\u6d3b\u52a8\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff08 \u9700\u8981\u9009\u62e9\u6700\u5c11\u7684\u4f1a\u573a\u6570\u91cf\u80fd\u591f\u5168\u90e8\u5b89\u6392\u8fd9\u4e9b\u6d3b\u52a8 \uff09\uff0c\u5e94\u8be5\u6309\u7167 \u6d3b\u52a8\u7684\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f \u3002 \u539f\u56e0 \u6838\u5fc3\u76ee\u6807 \uff1a \u6211\u4eec\u9700\u8981\u627e\u5230\u6700\u5c11\u7684\u4f1a\u573a\u6570\u91cf\u6765\u5b89\u6392\u6240\u6709\u6d3b\u52a8\u3002 \u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\u540e\uff0c\u53ef\u4ee5\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u4f9d\u6b21\u5904\u7406\u6bcf\u4e2a\u6d3b\u52a8\uff0c\u52a8\u6001\u5206\u914d\u4f1a\u573a\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a \u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\u540e\uff0c\u4f9d\u6b21\u68c0\u67e5\u6bcf\u4e2a\u6d3b\u52a8\u662f\u5426\u53ef\u4ee5\u653e\u5165\u5f53\u524d\u5df2\u6709\u7684\u4f1a\u573a\u3002 \u5982\u679c\u5f53\u524d\u6d3b\u52a8\u7684\u5f00\u59cb\u65f6\u95f4\u65e9\u4e8e\u67d0\u4e2a\u4f1a\u573a\u4e2d\u6700\u540e\u4e00\u4e2a\u6d3b\u52a8\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u5219\u9700\u8981\u5f00\u4e00\u4e2a\u65b0\u4f1a\u573a\u3002 \u5982\u679c\u5f53\u524d\u6d3b\u52a8\u7684\u5f00\u59cb\u65f6\u95f4\u665a\u4e8e\u6216\u7b49\u4e8e\u67d0\u4e2a\u4f1a\u573a\u4e2d\u6700\u540e\u4e00\u4e2a\u6d3b\u52a8\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u5219\u53ef\u4ee5\u5c06\u8be5\u6d3b\u52a8\u5b89\u6392\u5230\u8be5\u4f1a\u573a\u3002 \u7b97\u6cd5\u6b65\u9aa4 \u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f \uff1a \u5c06\u6240\u6709\u6d3b\u52a8\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002 \u4f7f\u7528\u6700\u5c0f\u5806\uff08\u4f18\u5148\u961f\u5217\uff09\u7ba1\u7406\u4f1a\u573a \uff1a \u6700\u5c0f\u5806\u5b58\u50a8\u6bcf\u4e2a\u4f1a\u573a\u4e2d\u6700\u540e\u4e00\u4e2a\u6d3b\u52a8\u7684\u7ed3\u675f\u65f6\u95f4\u3002 \u6bcf\u6b21\u5904\u7406\u4e00\u4e2a\u6d3b\u52a8\u65f6\uff1a \u5982\u679c\u6d3b\u52a8\u7684\u5f00\u59cb\u65f6\u95f4\u5927\u4e8e\u6216\u7b49\u4e8e\u5806\u9876\uff08\u6700\u65e9\u7ed3\u675f\u7684\u4f1a\u573a\u7684\u7ed3\u675f\u65f6\u95f4\uff09\uff0c\u5219\u590d\u7528\u8be5\u4f1a\u573a\uff08\u66f4\u65b0\u5806\u9876\uff09\u3002 \u5426\u5219\uff0c\u5f00\u4e00\u4e2a\u65b0\u4f1a\u573a\uff08\u5c06\u6d3b\u52a8\u7684\u7ed3\u675f\u65f6\u95f4\u52a0\u5165\u5806\uff09\u3002 \u5806\u7684\u5927\u5c0f\u5373\u4e3a\u6240\u9700\u7684\u6700\u5c11\u4f1a\u573a\u6570\u91cf \u3002 \u793a\u4f8b \u8f93\u5165 \uff1a \u6d3b\u52a8\u96c6\u5408\uff1a [(1, 4), (2, 3), (3, 5), (7, 8)] \u6b65\u9aa4 \uff1a \u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff1a [(1, 4), (2, 3), (3, 5), (7, 8)] \u5206\u914d\u4f1a\u573a\uff1a \u6d3b\u52a8 (1, 4) \uff1a\u5f00\u4e00\u4e2a\u65b0\u4f1a\u573a\uff0c\u4f1a\u573a\u7ed3\u675f\u65f6\u95f4\u4e3a [4] \u3002 \u6d3b\u52a8 (2, 3) \uff1a\u9700\u8981\u65b0\u4f1a\u573a\uff0c\u4f1a\u573a\u7ed3\u675f\u65f6\u95f4\u4e3a [3, 4] \u3002 \u6d3b\u52a8 (3, 5) \uff1a\u590d\u7528\u4f1a\u573a\uff08\u7ed3\u675f\u65f6\u95f4\u4e3a 3 \u7684\u4f1a\u573a\uff09\uff0c\u66f4\u65b0\u7ed3\u675f\u65f6\u95f4\u4e3a [4, 5] \u3002 \u6d3b\u52a8 (7, 8) \uff1a\u590d\u7528\u4f1a\u573a\uff08\u7ed3\u675f\u65f6\u95f4\u4e3a 4 \u7684\u4f1a\u573a\uff09\uff0c\u66f4\u65b0\u7ed3\u675f\u65f6\u95f4\u4e3a [5, 8] \u3002 \u6700\u7ec8\u5806\u7684\u5927\u5c0f\u4e3a 2 \uff0c\u5373\u9700\u8981 2 \u4e2a\u4f1a\u573a\u3002 \u603b\u7ed3 \u6392\u5e8f\u4f9d\u636e \uff1a\u6309\u6d3b\u52a8\u7684 \u5f00\u59cb\u65f6\u95f4 \u6392\u5e8f\u3002 \u5206\u914d\u7b56\u7565 \uff1a\u4f7f\u7528\u6700\u5c0f\u5806\u52a8\u6001\u7ba1\u7406\u4f1a\u573a\u7684\u7ed3\u675f\u65f6\u95f4\u3002 \u7ed3\u679c \uff1a\u5806\u7684\u5927\u5c0f\u5373\u4e3a\u6240\u9700\u7684\u6700\u5c11\u4f1a\u573a\u6570\u91cf\u3002 \u8fd9\u79cd\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n) \uff0c\u5176\u4e2d\u6392\u5e8f\u9700\u8981 O(n log n) \uff0c\u5806\u64cd\u4f5c\u9700\u8981 O(n log k) \uff08 k \u662f\u4f1a\u573a\u6570\u91cf\uff09\u3002 \u6211\u7684\u7b97\u6cd5 \u8d2a\u5fc3\u7b56\u7565 \u6309\u6d3b\u52a8\u7684\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f \uff1a \u4f18\u5148\u9009\u62e9\u5f00\u59cb\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\uff0c\u8fd9\u6837\u53ef\u4ee5\u4e3a\u540e\u7eed\u6d3b\u52a8\u7559\u51fa\u66f4\u591a\u7684\u65f6\u95f4\u3002 \u9009\u62e9\u6d3b\u52a8 \uff1a \u4ece\u7b2c\u4e00\u4e2a\u6d3b\u52a8\u5f00\u59cb\uff0c\u4f9d\u6b21\u9009\u62e9\u4e0e\u5f53\u524d\u6d3b\u52a8\u4e0d\u51b2\u7a81\u7684\u4e0b\u4e00\u4e2a\u6d3b\u52a8\u3002 \u5e94\u7528\u573a\u666f \u4f1a\u8bae\u5ba4\u5b89\u6392\u3002 \u4efb\u52a1\u8c03\u5ea6\u3002 \u533a\u95f4\u9009\u62e9\u95ee\u9898\u3002 \u8fd9\u79cd\u95ee\u9898\u7684\u6838\u5fc3\u662f\u901a\u8fc7\u8d2a\u5fc3\u7b56\u7565\uff0c\u786e\u4fdd\u6bcf\u4e00\u6b65\u7684\u9009\u62e9\u90fd\u662f\u5c40\u90e8\u6700\u4f18\uff0c\u4ece\u800c\u8fbe\u5230\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u6211\u7684\u89e3\u6cd5 \u5148\u7528 c++ \u91cc\u9762\u7684 vector<pair<int,int>> \u6765\u5b58\u50a8\u8fd9\u4e9b\u4f1a\u8bae\uff0c\u5f00\u59cb\u7ed3\u675f\u65f6\u95f4\u6309\u7167\u4e00\u5bf9\u503c\u5b58\u50a8\uff0c\u7136\u540e\u7528 sort() \u548clambda\u51fd\u6570\u5bf9\u8fd9\u4e2a\u5f00\u59cb\u65f6\u95f4\u5bf9\u5347\u5e8f\u6392\u5217\uff0c\u6700\u540e\u7528\u4e00\u4e2a vector<vector<pair<int,int>>> \u4e8c\u7ef4\u6570\u7ec4\u5b58\u50a8\u4e0d\u540c\u7684\u4f1a\u573a\u3002 vector < vector < pair < int , int >>> room ; // \u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u4f1a\u573a for ( const auto & act : activities ) { bool placed = false ; for ( auto & r : room ) { if ( r . back (). second <= act . first ) { r . push_back ( act ); placed = true ; break ; } } if ( ! placed ) { // \u6240\u6709\u5df2\u6709\u4f1a\u573a\u90fd\u4e0d\u6ee1\u8db3\uff0c\u5f00\u65b0\u4f1a\u573a room . push_back ({ act }); } } \u5047\u5982\u6709n\u4e2a\u6d3b\u52a8\uff0c\u4f46\u662f\u53ea\u6709\u4e00\u4e2a\u4f1a\u573a\uff0c\u8981\u6c42\u5c3d\u53ef\u80fd\u591a\u5730\u5b89\u6392\u6d3b\u52a8 \u5728\u6d3b\u52a8\u5b89\u6392\u95ee\u9898\u4e2d\uff0c \u6309\u7167\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f \u662f\u8d2a\u5fc3\u7b97\u6cd5\u7684\u6838\u5fc3\u7b56\u7565\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u5c3d\u53ef\u80fd\u591a\u5730\u5b89\u6392\u6d3b\u52a8\u3002\u4ee5\u4e0b\u662f\u539f\u56e0\u548c\u8be6\u7ec6\u89e3\u91ca\uff1a 1. \u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\u7684\u610f\u4e49 \u8d2a\u5fc3\u7b56\u7565 \uff1a \u4f18\u5148\u9009\u62e9 \u7ed3\u675f\u65f6\u95f4\u6700\u65e9 \u7684\u6d3b\u52a8\uff0c\u8fd9\u6837\u53ef\u4ee5\u4e3a\u540e\u7eed\u6d3b\u52a8\u7559\u51fa\u66f4\u591a\u7684\u65f6\u95f4\u3002 \u901a\u8fc7\u5c3d\u65e9\u7ed3\u675f\u5f53\u524d\u6d3b\u52a8\uff0c\u53ef\u4ee5\u6700\u5927\u5316\u5269\u4f59\u65f6\u95f4\u6bb5\u7684\u5229\u7528\u7387\uff0c\u4ece\u800c\u5b89\u6392\u66f4\u591a\u7684\u6d3b\u52a8\u3002 \u5c40\u90e8\u6700\u4f18 \uff1a \u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\u662f\u5c40\u90e8\u6700\u4f18\u7684\u9009\u62e9\u3002 \u8fd9\u79cd\u9009\u62e9\u4e3a\u540e\u7eed\u6d3b\u52a8\u7684\u5b89\u6392\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u53ef\u80fd\u6027\uff0c\u4ece\u800c\u8fbe\u5230\u5168\u5c40\u6700\u4f18\u3002 2. \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff1f \u5982\u679c\u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff0c\u53ef\u80fd\u4f1a\u4f18\u5148\u9009\u62e9\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\u8f83\u957f\u7684\u6d3b\u52a8\uff0c\u4ece\u800c\u5360\u7528\u66f4\u591a\u7684\u65f6\u95f4\u6bb5\uff0c\u5bfc\u81f4\u540e\u7eed\u6d3b\u52a8\u65e0\u6cd5\u5b89\u6392\u3002 \u4f8b\u5982\uff1a \u6d3b\u52a8\u96c6\u5408\uff1a [(1, 4), (2, 3), (3, 5)] \u5982\u679c\u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\u5e76\u9009\u62e9 (1, 4) \uff0c\u540e\u7eed\u6d3b\u52a8 (2, 3) \u548c (3, 5) \u90fd\u65e0\u6cd5\u5b89\u6392\u3002 \u5982\u679c\u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\u5e76\u9009\u62e9 (2, 3) \uff0c\u540e\u7eed\u53ef\u4ee5\u5b89\u6392 (3, 5) \uff0c\u4ece\u800c\u5b89\u6392\u66f4\u591a\u6d3b\u52a8\u3002 3. \u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\u7684\u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \u6392\u5e8f \uff1a \u5c06\u6240\u6709\u6d3b\u52a8\u6309\u7167\u7ed3\u675f\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002 \u9009\u62e9\u6d3b\u52a8 \uff1a \u4ece\u7b2c\u4e00\u4e2a\u6d3b\u52a8\u5f00\u59cb\uff0c\u9009\u62e9\u4e0e\u5f53\u524d\u6d3b\u52a8\u4e0d\u51b2\u7a81\u7684\u4e0b\u4e00\u4e2a\u6d3b\u52a8\u3002 \u5224\u65ad\u6761\u4ef6\uff1a\u5f53\u524d\u6d3b\u52a8\u7684\u7ed3\u675f\u65f6\u95f4 \u2264 \u4e0b\u4e00\u4e2a\u6d3b\u52a8\u7684\u5f00\u59cb\u65f6\u95f4\u3002 4. \u793a\u4f8b \u8f93\u5165 \uff1a \u6d3b\u52a8\u96c6\u5408\uff1a [(1, 4), (3, 5), (0, 6), (5, 7), (3, 8), (5, 9), (6, 10), (8, 11), (8, 12), (2, 13), (12, 14)] \u6b65\u9aa4 \uff1a \u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\uff1a [(1, 4), (3, 5), (0, 6), (5, 7), (3, 8), (5, 9), (6, 10), (8, 11), (8, 12), (2, 13), (12, 14)] \u9009\u62e9\u6d3b\u52a8\uff1a \u9009\u62e9 (1, 4) \uff0c\u56e0\u4e3a\u5b83\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u3002 \u9009\u62e9 (5, 7) \uff0c\u56e0\u4e3a\u5b83\u4e0e (1, 4) \u4e0d\u51b2\u7a81\u3002 \u9009\u62e9 (8, 11) \uff0c\u56e0\u4e3a\u5b83\u4e0e (5, 7) \u4e0d\u51b2\u7a81\u3002 \u9009\u62e9 (12, 14) \uff0c\u56e0\u4e3a\u5b83\u4e0e (8, 11) \u4e0d\u51b2\u7a81\u3002 \u8f93\u51fa \uff1a \u6700\u5927\u53ef\u5b89\u6392\u6d3b\u52a8\u6570\uff1a 4 \uff0c\u9009\u62e9\u7684\u6d3b\u52a8\u4e3a\uff1a [(1, 4), (5, 7), (8, 11), (12, 14)] 5. \u603b\u7ed3 \u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\u7684\u6838\u5fc3\u76ee\u7684\u662f \u5c3d\u53ef\u80fd\u591a\u5730\u5b89\u6392\u6d3b\u52a8 \u3002 \u901a\u8fc7\u4f18\u5148\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\uff0c\u53ef\u4ee5\u4e3a\u540e\u7eed\u6d3b\u52a8\u7559\u51fa\u66f4\u591a\u7684\u65f6\u95f4\u6bb5\uff0c\u4ece\u800c\u5b9e\u73b0\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u8fd9\u79cd\u8d2a\u5fc3\u7b56\u7565\u7b80\u5355\u9ad8\u6548\uff0c\u9002\u7528\u4e8e\u4f1a\u573a\u5b89\u6392\u3001\u533a\u95f4\u9009\u62e9\u7b49\u7c7b\u4f3c\u95ee\u9898\u3002","title":"\u4f1a\u573a\u5b89\u6392\u95ee\u9898"},{"location":"Algorithm/greedy/meeting-arrangement/#_1","text":"\u7ed9\u5b9a n \u4e2a\u6d3b\u52a8\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u6709\u4e00\u4e2a\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u3002 \u5728\u540c\u4e00\u4e2a\u4f1a\u573a\u4e2d\uff0c\u4e24\u4e2a\u6d3b\u52a8\u4e0d\u80fd\u91cd\u53e0\u3002 \u9700\u8981\u9009\u62e9\u6700\u5c11\u7684\u4f1a\u573a\u6570\u91cf\u80fd\u591f\u5168\u90e8\u5b89\u6392\u8fd9\u4e9b\u6d3b\u52a8\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff08 \u9700\u8981\u9009\u62e9\u6700\u5c11\u7684\u4f1a\u573a\u6570\u91cf\u80fd\u591f\u5168\u90e8\u5b89\u6392\u8fd9\u4e9b\u6d3b\u52a8 \uff09\uff0c\u5e94\u8be5\u6309\u7167 \u6d3b\u52a8\u7684\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"Algorithm/greedy/meeting-arrangement/#_2","text":"\u6838\u5fc3\u76ee\u6807 \uff1a \u6211\u4eec\u9700\u8981\u627e\u5230\u6700\u5c11\u7684\u4f1a\u573a\u6570\u91cf\u6765\u5b89\u6392\u6240\u6709\u6d3b\u52a8\u3002 \u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\u540e\uff0c\u53ef\u4ee5\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u4f9d\u6b21\u5904\u7406\u6bcf\u4e2a\u6d3b\u52a8\uff0c\u52a8\u6001\u5206\u914d\u4f1a\u573a\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a \u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\u540e\uff0c\u4f9d\u6b21\u68c0\u67e5\u6bcf\u4e2a\u6d3b\u52a8\u662f\u5426\u53ef\u4ee5\u653e\u5165\u5f53\u524d\u5df2\u6709\u7684\u4f1a\u573a\u3002 \u5982\u679c\u5f53\u524d\u6d3b\u52a8\u7684\u5f00\u59cb\u65f6\u95f4\u65e9\u4e8e\u67d0\u4e2a\u4f1a\u573a\u4e2d\u6700\u540e\u4e00\u4e2a\u6d3b\u52a8\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u5219\u9700\u8981\u5f00\u4e00\u4e2a\u65b0\u4f1a\u573a\u3002 \u5982\u679c\u5f53\u524d\u6d3b\u52a8\u7684\u5f00\u59cb\u65f6\u95f4\u665a\u4e8e\u6216\u7b49\u4e8e\u67d0\u4e2a\u4f1a\u573a\u4e2d\u6700\u540e\u4e00\u4e2a\u6d3b\u52a8\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u5219\u53ef\u4ee5\u5c06\u8be5\u6d3b\u52a8\u5b89\u6392\u5230\u8be5\u4f1a\u573a\u3002","title":"\u539f\u56e0"},{"location":"Algorithm/greedy/meeting-arrangement/#_3","text":"\u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f \uff1a \u5c06\u6240\u6709\u6d3b\u52a8\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002 \u4f7f\u7528\u6700\u5c0f\u5806\uff08\u4f18\u5148\u961f\u5217\uff09\u7ba1\u7406\u4f1a\u573a \uff1a \u6700\u5c0f\u5806\u5b58\u50a8\u6bcf\u4e2a\u4f1a\u573a\u4e2d\u6700\u540e\u4e00\u4e2a\u6d3b\u52a8\u7684\u7ed3\u675f\u65f6\u95f4\u3002 \u6bcf\u6b21\u5904\u7406\u4e00\u4e2a\u6d3b\u52a8\u65f6\uff1a \u5982\u679c\u6d3b\u52a8\u7684\u5f00\u59cb\u65f6\u95f4\u5927\u4e8e\u6216\u7b49\u4e8e\u5806\u9876\uff08\u6700\u65e9\u7ed3\u675f\u7684\u4f1a\u573a\u7684\u7ed3\u675f\u65f6\u95f4\uff09\uff0c\u5219\u590d\u7528\u8be5\u4f1a\u573a\uff08\u66f4\u65b0\u5806\u9876\uff09\u3002 \u5426\u5219\uff0c\u5f00\u4e00\u4e2a\u65b0\u4f1a\u573a\uff08\u5c06\u6d3b\u52a8\u7684\u7ed3\u675f\u65f6\u95f4\u52a0\u5165\u5806\uff09\u3002 \u5806\u7684\u5927\u5c0f\u5373\u4e3a\u6240\u9700\u7684\u6700\u5c11\u4f1a\u573a\u6570\u91cf \u3002","title":"\u7b97\u6cd5\u6b65\u9aa4"},{"location":"Algorithm/greedy/meeting-arrangement/#_4","text":"","title":"\u793a\u4f8b"},{"location":"Algorithm/greedy/meeting-arrangement/#_5","text":"\u6d3b\u52a8\u96c6\u5408\uff1a [(1, 4), (2, 3), (3, 5), (7, 8)]","title":"\u8f93\u5165\uff1a"},{"location":"Algorithm/greedy/meeting-arrangement/#_6","text":"\u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff1a [(1, 4), (2, 3), (3, 5), (7, 8)] \u5206\u914d\u4f1a\u573a\uff1a \u6d3b\u52a8 (1, 4) \uff1a\u5f00\u4e00\u4e2a\u65b0\u4f1a\u573a\uff0c\u4f1a\u573a\u7ed3\u675f\u65f6\u95f4\u4e3a [4] \u3002 \u6d3b\u52a8 (2, 3) \uff1a\u9700\u8981\u65b0\u4f1a\u573a\uff0c\u4f1a\u573a\u7ed3\u675f\u65f6\u95f4\u4e3a [3, 4] \u3002 \u6d3b\u52a8 (3, 5) \uff1a\u590d\u7528\u4f1a\u573a\uff08\u7ed3\u675f\u65f6\u95f4\u4e3a 3 \u7684\u4f1a\u573a\uff09\uff0c\u66f4\u65b0\u7ed3\u675f\u65f6\u95f4\u4e3a [4, 5] \u3002 \u6d3b\u52a8 (7, 8) \uff1a\u590d\u7528\u4f1a\u573a\uff08\u7ed3\u675f\u65f6\u95f4\u4e3a 4 \u7684\u4f1a\u573a\uff09\uff0c\u66f4\u65b0\u7ed3\u675f\u65f6\u95f4\u4e3a [5, 8] \u3002 \u6700\u7ec8\u5806\u7684\u5927\u5c0f\u4e3a 2 \uff0c\u5373\u9700\u8981 2 \u4e2a\u4f1a\u573a\u3002","title":"\u6b65\u9aa4\uff1a"},{"location":"Algorithm/greedy/meeting-arrangement/#_7","text":"\u6392\u5e8f\u4f9d\u636e \uff1a\u6309\u6d3b\u52a8\u7684 \u5f00\u59cb\u65f6\u95f4 \u6392\u5e8f\u3002 \u5206\u914d\u7b56\u7565 \uff1a\u4f7f\u7528\u6700\u5c0f\u5806\u52a8\u6001\u7ba1\u7406\u4f1a\u573a\u7684\u7ed3\u675f\u65f6\u95f4\u3002 \u7ed3\u679c \uff1a\u5806\u7684\u5927\u5c0f\u5373\u4e3a\u6240\u9700\u7684\u6700\u5c11\u4f1a\u573a\u6570\u91cf\u3002 \u8fd9\u79cd\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n) \uff0c\u5176\u4e2d\u6392\u5e8f\u9700\u8981 O(n log n) \uff0c\u5806\u64cd\u4f5c\u9700\u8981 O(n log k) \uff08 k \u662f\u4f1a\u573a\u6570\u91cf\uff09\u3002","title":"\u603b\u7ed3"},{"location":"Algorithm/greedy/meeting-arrangement/#_8","text":"","title":"\u6211\u7684\u7b97\u6cd5"},{"location":"Algorithm/greedy/meeting-arrangement/#_9","text":"\u6309\u6d3b\u52a8\u7684\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f \uff1a \u4f18\u5148\u9009\u62e9\u5f00\u59cb\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\uff0c\u8fd9\u6837\u53ef\u4ee5\u4e3a\u540e\u7eed\u6d3b\u52a8\u7559\u51fa\u66f4\u591a\u7684\u65f6\u95f4\u3002 \u9009\u62e9\u6d3b\u52a8 \uff1a \u4ece\u7b2c\u4e00\u4e2a\u6d3b\u52a8\u5f00\u59cb\uff0c\u4f9d\u6b21\u9009\u62e9\u4e0e\u5f53\u524d\u6d3b\u52a8\u4e0d\u51b2\u7a81\u7684\u4e0b\u4e00\u4e2a\u6d3b\u52a8\u3002","title":"\u8d2a\u5fc3\u7b56\u7565"},{"location":"Algorithm/greedy/meeting-arrangement/#_10","text":"\u4f1a\u8bae\u5ba4\u5b89\u6392\u3002 \u4efb\u52a1\u8c03\u5ea6\u3002 \u533a\u95f4\u9009\u62e9\u95ee\u9898\u3002 \u8fd9\u79cd\u95ee\u9898\u7684\u6838\u5fc3\u662f\u901a\u8fc7\u8d2a\u5fc3\u7b56\u7565\uff0c\u786e\u4fdd\u6bcf\u4e00\u6b65\u7684\u9009\u62e9\u90fd\u662f\u5c40\u90e8\u6700\u4f18\uff0c\u4ece\u800c\u8fbe\u5230\u5168\u5c40\u6700\u4f18\u89e3\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"Algorithm/greedy/meeting-arrangement/#_11","text":"\u5148\u7528 c++ \u91cc\u9762\u7684 vector<pair<int,int>> \u6765\u5b58\u50a8\u8fd9\u4e9b\u4f1a\u8bae\uff0c\u5f00\u59cb\u7ed3\u675f\u65f6\u95f4\u6309\u7167\u4e00\u5bf9\u503c\u5b58\u50a8\uff0c\u7136\u540e\u7528 sort() \u548clambda\u51fd\u6570\u5bf9\u8fd9\u4e2a\u5f00\u59cb\u65f6\u95f4\u5bf9\u5347\u5e8f\u6392\u5217\uff0c\u6700\u540e\u7528\u4e00\u4e2a vector<vector<pair<int,int>>> \u4e8c\u7ef4\u6570\u7ec4\u5b58\u50a8\u4e0d\u540c\u7684\u4f1a\u573a\u3002 vector < vector < pair < int , int >>> room ; // \u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u4f1a\u573a for ( const auto & act : activities ) { bool placed = false ; for ( auto & r : room ) { if ( r . back (). second <= act . first ) { r . push_back ( act ); placed = true ; break ; } } if ( ! placed ) { // \u6240\u6709\u5df2\u6709\u4f1a\u573a\u90fd\u4e0d\u6ee1\u8db3\uff0c\u5f00\u65b0\u4f1a\u573a room . push_back ({ act }); } }","title":"\u6211\u7684\u89e3\u6cd5"},{"location":"Algorithm/greedy/meeting-arrangement/#n","text":"\u5728\u6d3b\u52a8\u5b89\u6392\u95ee\u9898\u4e2d\uff0c \u6309\u7167\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f \u662f\u8d2a\u5fc3\u7b97\u6cd5\u7684\u6838\u5fc3\u7b56\u7565\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u5c3d\u53ef\u80fd\u591a\u5730\u5b89\u6392\u6d3b\u52a8\u3002\u4ee5\u4e0b\u662f\u539f\u56e0\u548c\u8be6\u7ec6\u89e3\u91ca\uff1a","title":"\u5047\u5982\u6709n\u4e2a\u6d3b\u52a8\uff0c\u4f46\u662f\u53ea\u6709\u4e00\u4e2a\u4f1a\u573a\uff0c\u8981\u6c42\u5c3d\u53ef\u80fd\u591a\u5730\u5b89\u6392\u6d3b\u52a8"},{"location":"Algorithm/greedy/meeting-arrangement/#1","text":"\u8d2a\u5fc3\u7b56\u7565 \uff1a \u4f18\u5148\u9009\u62e9 \u7ed3\u675f\u65f6\u95f4\u6700\u65e9 \u7684\u6d3b\u52a8\uff0c\u8fd9\u6837\u53ef\u4ee5\u4e3a\u540e\u7eed\u6d3b\u52a8\u7559\u51fa\u66f4\u591a\u7684\u65f6\u95f4\u3002 \u901a\u8fc7\u5c3d\u65e9\u7ed3\u675f\u5f53\u524d\u6d3b\u52a8\uff0c\u53ef\u4ee5\u6700\u5927\u5316\u5269\u4f59\u65f6\u95f4\u6bb5\u7684\u5229\u7528\u7387\uff0c\u4ece\u800c\u5b89\u6392\u66f4\u591a\u7684\u6d3b\u52a8\u3002 \u5c40\u90e8\u6700\u4f18 \uff1a \u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\u662f\u5c40\u90e8\u6700\u4f18\u7684\u9009\u62e9\u3002 \u8fd9\u79cd\u9009\u62e9\u4e3a\u540e\u7eed\u6d3b\u52a8\u7684\u5b89\u6392\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u53ef\u80fd\u6027\uff0c\u4ece\u800c\u8fbe\u5230\u5168\u5c40\u6700\u4f18\u3002","title":"1. \u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\u7684\u610f\u4e49"},{"location":"Algorithm/greedy/meeting-arrangement/#2","text":"\u5982\u679c\u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff0c\u53ef\u80fd\u4f1a\u4f18\u5148\u9009\u62e9\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\u8f83\u957f\u7684\u6d3b\u52a8\uff0c\u4ece\u800c\u5360\u7528\u66f4\u591a\u7684\u65f6\u95f4\u6bb5\uff0c\u5bfc\u81f4\u540e\u7eed\u6d3b\u52a8\u65e0\u6cd5\u5b89\u6392\u3002 \u4f8b\u5982\uff1a \u6d3b\u52a8\u96c6\u5408\uff1a [(1, 4), (2, 3), (3, 5)] \u5982\u679c\u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\u5e76\u9009\u62e9 (1, 4) \uff0c\u540e\u7eed\u6d3b\u52a8 (2, 3) \u548c (3, 5) \u90fd\u65e0\u6cd5\u5b89\u6392\u3002 \u5982\u679c\u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\u5e76\u9009\u62e9 (2, 3) \uff0c\u540e\u7eed\u53ef\u4ee5\u5b89\u6392 (3, 5) \uff0c\u4ece\u800c\u5b89\u6392\u66f4\u591a\u6d3b\u52a8\u3002","title":"2. \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u6309\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff1f"},{"location":"Algorithm/greedy/meeting-arrangement/#3","text":"\u6392\u5e8f \uff1a \u5c06\u6240\u6709\u6d3b\u52a8\u6309\u7167\u7ed3\u675f\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002 \u9009\u62e9\u6d3b\u52a8 \uff1a \u4ece\u7b2c\u4e00\u4e2a\u6d3b\u52a8\u5f00\u59cb\uff0c\u9009\u62e9\u4e0e\u5f53\u524d\u6d3b\u52a8\u4e0d\u51b2\u7a81\u7684\u4e0b\u4e00\u4e2a\u6d3b\u52a8\u3002 \u5224\u65ad\u6761\u4ef6\uff1a\u5f53\u524d\u6d3b\u52a8\u7684\u7ed3\u675f\u65f6\u95f4 \u2264 \u4e0b\u4e00\u4e2a\u6d3b\u52a8\u7684\u5f00\u59cb\u65f6\u95f4\u3002","title":"3. \u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\u7684\u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4"},{"location":"Algorithm/greedy/meeting-arrangement/#4","text":"","title":"4. \u793a\u4f8b"},{"location":"Algorithm/greedy/meeting-arrangement/#_12","text":"\u6d3b\u52a8\u96c6\u5408\uff1a [(1, 4), (3, 5), (0, 6), (5, 7), (3, 8), (5, 9), (6, 10), (8, 11), (8, 12), (2, 13), (12, 14)]","title":"\u8f93\u5165\uff1a"},{"location":"Algorithm/greedy/meeting-arrangement/#_13","text":"\u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\uff1a [(1, 4), (3, 5), (0, 6), (5, 7), (3, 8), (5, 9), (6, 10), (8, 11), (8, 12), (2, 13), (12, 14)] \u9009\u62e9\u6d3b\u52a8\uff1a \u9009\u62e9 (1, 4) \uff0c\u56e0\u4e3a\u5b83\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u3002 \u9009\u62e9 (5, 7) \uff0c\u56e0\u4e3a\u5b83\u4e0e (1, 4) \u4e0d\u51b2\u7a81\u3002 \u9009\u62e9 (8, 11) \uff0c\u56e0\u4e3a\u5b83\u4e0e (5, 7) \u4e0d\u51b2\u7a81\u3002 \u9009\u62e9 (12, 14) \uff0c\u56e0\u4e3a\u5b83\u4e0e (8, 11) \u4e0d\u51b2\u7a81\u3002","title":"\u6b65\u9aa4\uff1a"},{"location":"Algorithm/greedy/meeting-arrangement/#_14","text":"\u6700\u5927\u53ef\u5b89\u6392\u6d3b\u52a8\u6570\uff1a 4 \uff0c\u9009\u62e9\u7684\u6d3b\u52a8\u4e3a\uff1a [(1, 4), (5, 7), (8, 11), (12, 14)]","title":"\u8f93\u51fa\uff1a"},{"location":"Algorithm/greedy/meeting-arrangement/#5","text":"\u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\u7684\u6838\u5fc3\u76ee\u7684\u662f \u5c3d\u53ef\u80fd\u591a\u5730\u5b89\u6392\u6d3b\u52a8 \u3002 \u901a\u8fc7\u4f18\u5148\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\uff0c\u53ef\u4ee5\u4e3a\u540e\u7eed\u6d3b\u52a8\u7559\u51fa\u66f4\u591a\u7684\u65f6\u95f4\u6bb5\uff0c\u4ece\u800c\u5b9e\u73b0\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u8fd9\u79cd\u8d2a\u5fc3\u7b56\u7565\u7b80\u5355\u9ad8\u6548\uff0c\u9002\u7528\u4e8e\u4f1a\u573a\u5b89\u6392\u3001\u533a\u95f4\u9009\u62e9\u7b49\u7c7b\u4f3c\u95ee\u9898\u3002","title":"5. \u603b\u7ed3"},{"location":"Algorithm/greedy/service/","text":"\u95ee\u9898\u63cf\u8ff0 \u8f93\u5165 \uff1a n \uff1a\u987e\u5ba2\u7684\u6570\u91cf\u3002 s \uff1a\u670d\u52a1\u70b9\u7684\u6570\u91cf\u3002 t[i] \uff1a\u7b2c i \u4e2a\u987e\u5ba2\u6240\u9700\u7684\u670d\u52a1\u65f6\u95f4\u3002 \u76ee\u6807 \uff1a \u5b89\u6392\u987e\u5ba2\u7684\u670d\u52a1\u987a\u5e8f\uff0c\u4f7f\u5f97\u6240\u6709\u987e\u5ba2\u7684 \u5e73\u5747\u7b49\u5f85\u65f6\u95f4 \u6700\u5c0f\u3002 \u89e3\u51b3\u65b9\u6cd5 \u4e3a\u4e86\u8ba9\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\u6700\u5c0f\uff0c\u5e94\u8be5\u6309\u7167\u987e\u5ba2\u7684\u670d\u52a1\u65f6\u95f4 t[i] \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff08\u8d2a\u5fc3\u7b56\u7565\uff09\u3002\u8fd9\u6837\u53ef\u4ee5\u4f18\u5148\u670d\u52a1\u8017\u65f6\u8f83\u77ed\u7684\u987e\u5ba2\uff0c\u51cf\u5c11\u540e\u7eed\u987e\u5ba2\u7684\u7b49\u5f85\u65f6\u95f4\u3002 \u89e3\u6cd5 \u53ef\u4ee5\u5148\u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53 Customer \u4fdd\u5b58\u987e\u5ba2\u7684\u7f16\u53f7\u548c\u7b49\u5f85\u65f6\u95f4\uff0c\u4ee5\u4fbf\u4e8e\u540e\u9762\u6392\u5e8f struct Customer { int time ; int index ; }; \u7136\u540e\u5b9a\u4e49\u4e00\u4e2a\u5411\u91cf\u5b58\u5165\u6bcf\u4e2a\u987e\u5ba2\u7684\u670d\u52a1\u65f6\u95f4\uff0c\u6700\u540e\u6839\u636e\u670d\u52a1\u65f6\u95f4\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002 \u63a5\u7740\u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e2a\u670d\u52a1\u70b9\u7684\u987e\u5ba2\u5217\u8868 vector < vector < Customer >> room ( s ); \u63a5\u7740\u5c31\u662f\u4e0d\u505c\u7684\u4ece\u6392\u5e8f\u597d\u7684\u4eba\u91cc\u9762\u62bd\u53d6\u653e\u5165\u8fd9\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u4e2a\u670d\u52a1\u70b9\uff0c\u5f53\u7a7a\u95f2\u4e86\u5c31\u52a0\u5165\u7b49\u5f85\u7684\u987e\u5ba2\u5230\u670d\u52a1\u70b9\uff0c\u611f\u89c9\u8fd9\u4e2a\u6709\u70b9\u50cf\u64cd\u4f5c\u7cfb\u7edf\u7684\u8fdb\u7a0b\u8c03\u5ea6\u4e00\u6837\u3002","title":"\u591a\u5904\u6700\u4f18\u670d\u52a1\u6b21\u5e8f\u95ee\u9898"},{"location":"Algorithm/greedy/service/#_1","text":"\u8f93\u5165 \uff1a n \uff1a\u987e\u5ba2\u7684\u6570\u91cf\u3002 s \uff1a\u670d\u52a1\u70b9\u7684\u6570\u91cf\u3002 t[i] \uff1a\u7b2c i \u4e2a\u987e\u5ba2\u6240\u9700\u7684\u670d\u52a1\u65f6\u95f4\u3002 \u76ee\u6807 \uff1a \u5b89\u6392\u987e\u5ba2\u7684\u670d\u52a1\u987a\u5e8f\uff0c\u4f7f\u5f97\u6240\u6709\u987e\u5ba2\u7684 \u5e73\u5747\u7b49\u5f85\u65f6\u95f4 \u6700\u5c0f\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"Algorithm/greedy/service/#_2","text":"\u4e3a\u4e86\u8ba9\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\u6700\u5c0f\uff0c\u5e94\u8be5\u6309\u7167\u987e\u5ba2\u7684\u670d\u52a1\u65f6\u95f4 t[i] \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff08\u8d2a\u5fc3\u7b56\u7565\uff09\u3002\u8fd9\u6837\u53ef\u4ee5\u4f18\u5148\u670d\u52a1\u8017\u65f6\u8f83\u77ed\u7684\u987e\u5ba2\uff0c\u51cf\u5c11\u540e\u7eed\u987e\u5ba2\u7684\u7b49\u5f85\u65f6\u95f4\u3002","title":"\u89e3\u51b3\u65b9\u6cd5"},{"location":"Algorithm/greedy/service/#_3","text":"\u53ef\u4ee5\u5148\u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53 Customer \u4fdd\u5b58\u987e\u5ba2\u7684\u7f16\u53f7\u548c\u7b49\u5f85\u65f6\u95f4\uff0c\u4ee5\u4fbf\u4e8e\u540e\u9762\u6392\u5e8f struct Customer { int time ; int index ; }; \u7136\u540e\u5b9a\u4e49\u4e00\u4e2a\u5411\u91cf\u5b58\u5165\u6bcf\u4e2a\u987e\u5ba2\u7684\u670d\u52a1\u65f6\u95f4\uff0c\u6700\u540e\u6839\u636e\u670d\u52a1\u65f6\u95f4\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002 \u63a5\u7740\u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e2a\u670d\u52a1\u70b9\u7684\u987e\u5ba2\u5217\u8868 vector < vector < Customer >> room ( s ); \u63a5\u7740\u5c31\u662f\u4e0d\u505c\u7684\u4ece\u6392\u5e8f\u597d\u7684\u4eba\u91cc\u9762\u62bd\u53d6\u653e\u5165\u8fd9\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u4e2a\u670d\u52a1\u70b9\uff0c\u5f53\u7a7a\u95f2\u4e86\u5c31\u52a0\u5165\u7b49\u5f85\u7684\u987e\u5ba2\u5230\u670d\u52a1\u70b9\uff0c\u611f\u89c9\u8fd9\u4e2a\u6709\u70b9\u50cf\u64cd\u4f5c\u7cfb\u7edf\u7684\u8fdb\u7a0b\u8c03\u5ea6\u4e00\u6837\u3002","title":"\u89e3\u6cd5"},{"location":"Algorithm/leetcode/LRU/","text":"LRU\uff08Least Recently Used\uff09\u7f13\u5b58\u673a\u5236 \u662f\u4e00\u79cd\u7f13\u5b58\u6dd8\u6c70\u7b56\u7565\uff0c\u7528\u4e8e\u5728\u7f13\u5b58\u7a7a\u95f4\u6709\u9650\u7684\u60c5\u51b5\u4e0b\uff0c\u51b3\u5b9a\u54ea\u4e9b\u6570\u636e\u9700\u8981\u88ab\u79fb\u9664\uff0c\u4ee5\u4fbf\u4e3a\u65b0\u6570\u636e\u817e\u51fa\u7a7a\u95f4\u3002 \u57fa\u672c\u601d\u60f3 LRU \u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a \u4f18\u5148\u6dd8\u6c70\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u6570\u636e \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u67d0\u4e2a\u6570\u636e\u6700\u8fd1\u88ab\u8bbf\u95ee\u8fc7\uff0c\u90a3\u4e48\u5b83\u5728\u672a\u6765\u88ab\u8bbf\u95ee\u7684\u53ef\u80fd\u6027\u66f4\u9ad8\uff0c\u800c\u90a3\u4e9b\u5f88\u4e45\u6ca1\u6709\u88ab\u8bbf\u95ee\u7684\u6570\u636e\u4f1a\u88ab\u4f18\u5148\u79fb\u9664\u3002 \u5de5\u4f5c\u539f\u7406 \u7f13\u5b58\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u636e\u7ed3\u6784\uff08\u901a\u5e38\u662f\u94fe\u8868\u6216\u54c8\u5e0c\u8868+\u53cc\u5411\u94fe\u8868\uff09\u3002 \u6bcf\u6b21\u8bbf\u95ee\u6570\u636e\u65f6\uff1a \u5982\u679c\u6570\u636e\u5df2\u7ecf\u5728\u7f13\u5b58\u4e2d\uff0c\u5219\u5c06\u5176\u6807\u8bb0\u4e3a\u6700\u8fd1\u4f7f\u7528\uff08\u901a\u5e38\u79fb\u52a8\u5230\u94fe\u8868\u5934\u90e8\uff09\u3002 \u5982\u679c\u6570\u636e\u4e0d\u5728\u7f13\u5b58\u4e2d\uff1a \u5982\u679c\u7f13\u5b58\u672a\u6ee1\uff0c\u5219\u5c06\u6570\u636e\u63d2\u5165\u7f13\u5b58\u3002 \u5982\u679c\u7f13\u5b58\u5df2\u6ee1\uff0c\u5219\u79fb\u9664\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u6570\u636e\uff08\u94fe\u8868\u5c3e\u90e8\uff09\uff0c\u7136\u540e\u63d2\u5165\u65b0\u6570\u636e\u3002 \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u7f13\u5b58\u59cb\u7ec8\u4fdd\u6301\u6700\u8fd1\u4f7f\u7528\u7684\u6570\u636e\u5728\u524d\uff0c\u6700\u5c11\u4f7f\u7528\u7684\u6570\u636e\u5728\u540e\u3002 \u5b9e\u73b0\u65b9\u5f0f LRU \u901a\u5e38\u4f7f\u7528\u4ee5\u4e0b\u4e24\u79cd\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\uff1a 1. \u53cc\u5411\u94fe\u8868 \uff1a\u7528\u4e8e\u7ef4\u62a4\u6570\u636e\u7684\u8bbf\u95ee\u987a\u5e8f\u3002 2. \u54c8\u5e0c\u8868 \uff1a\u7528\u4e8e\u5feb\u901f\u5b9a\u4f4d\u6570\u636e\u662f\u5426\u5728\u7f13\u5b58\u4e2d\u3002 \u4f2a\u4ee3\u7801 \u4ee5\u4e0b\u662f LRU \u7f13\u5b58\u7684\u57fa\u672c\u64cd\u4f5c\uff1a - get(key) \uff1a\u83b7\u53d6\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u3002 - put(key, value) \uff1a\u63d2\u5165\u6216\u66f4\u65b0\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u3002 class LRUCache { private : int capacity ; list < pair < int , int >> cache ; // \u53cc\u5411\u94fe\u8868\u5b58\u50a8\u952e\u503c\u5bf9 unordered_map < int , list < pair < int , int >>:: iterator > map ; // \u54c8\u5e0c\u8868\u5b58\u50a8\u952e\u53ca\u5176\u5728\u94fe\u8868\u4e2d\u7684\u4f4d\u7f6e public : LRUCache ( int capacity ) : capacity ( capacity ) {} int get ( int key ) { if ( map . find ( key ) == map . end ()) return -1 ; // \u4e0d\u5b58\u5728 // \u5c06\u8bbf\u95ee\u7684\u8282\u70b9\u79fb\u5230\u94fe\u8868\u5934\u90e8 cache . splice ( cache . begin (), cache , map [ key ]); return map [ key ] -> second ; } void put ( int key , int value ) { if ( map . find ( key ) != map . end ()) { // \u5982\u679c\u952e\u5df2\u5b58\u5728\uff0c\u66f4\u65b0\u503c\u5e76\u79fb\u5230\u94fe\u8868\u5934\u90e8 map [ key ] -> second = value ; cache . splice ( cache . begin (), cache , map [ key ]); } else { // \u5982\u679c\u952e\u4e0d\u5b58\u5728\uff0c\u68c0\u67e5\u5bb9\u91cf if ( cache . size () == capacity ) { // \u79fb\u9664\u94fe\u8868\u5c3e\u90e8\u8282\u70b9 map . erase ( cache . back (). first ); cache . pop_back (); } // \u63d2\u5165\u65b0\u8282\u70b9\u5230\u94fe\u8868\u5934\u90e8 cache . emplace_front ( key , value ); map [ key ] = cache . begin (); } } }; \u5e94\u7528\u573a\u666f \u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u5b58\u7ba1\u7406 \uff1a\u5982\u9875\u9762\u7f6e\u6362\u7b97\u6cd5\u3002 \u6570\u636e\u5e93\u7f13\u5b58 \uff1a\u5982 Redis \u7684\u7f13\u5b58\u6dd8\u6c70\u7b56\u7565\u3002 Web \u7f13\u5b58 \uff1a\u6d4f\u89c8\u5668\u7f13\u5b58\u4e2d\u7ecf\u5e38\u4f7f\u7528 LRU \u7b56\u7565\u3002 LRU \u662f\u4e00\u79cd\u7b80\u5355\u4e14\u9ad8\u6548\u7684\u7f13\u5b58\u6dd8\u6c70\u7b56\u7565\uff0c\u9002\u7528\u4e8e\u5927\u591a\u6570\u9700\u8981\u7f13\u5b58\u7684\u573a\u666f\u3002 \u54c8\u5e0c\u8868\uff08Hash Table\uff09 \u662f\u4e00\u79cd\u57fa\u4e8e\u54c8\u5e0c\u51fd\u6570\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u4ee5\u5e38\u6570\u65f6\u95f4\u590d\u6742\u5ea6 ( O(1) ) \u5b9e\u73b0\u5feb\u901f\u7684\u6570\u636e\u5b58\u50a8\u548c\u67e5\u627e\u3002\u5b83\u901a\u8fc7\u5c06\u952e\u503c\u5bf9\u6620\u5c04\u5230\u4e00\u4e2a\u6570\u7ec4\u7684\u7d22\u5f15\u4f4d\u7f6e\u6765\u5b58\u50a8\u6570\u636e\u3002 \u57fa\u672c\u539f\u7406 \u54c8\u5e0c\u51fd\u6570 \uff1a \u54c8\u5e0c\u8868\u4f7f\u7528\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570\u5c06\u952e\uff08Key\uff09\u6620\u5c04\u5230\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\u3002 [ index = hash(key) ] \u54c8\u5e0c\u51fd\u6570\u7684\u76ee\u6807\u662f\u5c06\u4e0d\u540c\u7684\u952e\u5c3d\u53ef\u80fd\u5747\u5300\u5730\u5206\u5e03\u5230\u6570\u7ec4\u4e2d\u3002 \u5b58\u50a8\u7ed3\u6784 \uff1a \u54c8\u5e0c\u8868\u901a\u5e38\u7531\u4e00\u4e2a\u6570\u7ec4\u548c\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570\u7ec4\u6210\uff0c\u6570\u7ec4\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u79f0\u4e3a\u4e00\u4e2a\u201c\u6876\u201d\uff08Bucket\uff09\u3002 \u51b2\u7a81\u5904\u7406 \uff1a \u5f53\u4e24\u4e2a\u952e\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u6620\u5c04\u5230\u76f8\u540c\u7684\u7d22\u5f15\u4f4d\u7f6e\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u51b2\u7a81\u3002\u5e38\u89c1\u7684\u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5\u6709\uff1a \u94fe\u5730\u5740\u6cd5 \uff1a\u6bcf\u4e2a\u6876\u5b58\u50a8\u4e00\u4e2a\u94fe\u8868\uff0c\u51b2\u7a81\u7684\u5143\u7d20\u5b58\u50a8\u5728\u94fe\u8868\u4e2d\u3002 \u5f00\u653e\u5730\u5740\u6cd5 \uff1a\u5f53\u53d1\u751f\u51b2\u7a81\u65f6\uff0c\u5bfb\u627e\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u4f4d\u7f6e\u5b58\u50a8\u6570\u636e\u3002 \u64cd\u4f5c \u63d2\u5165\uff08Insert\uff09 \uff1a \u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u952e\u7684\u7d22\u5f15\uff0c\u5c06\u6570\u636e\u5b58\u50a8\u5230\u5bf9\u5e94\u7684\u6876\u4e2d\u3002 \u67e5\u627e\uff08Search\uff09 \uff1a \u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u952e\u7684\u7d22\u5f15\uff0c\u76f4\u63a5\u8bbf\u95ee\u5bf9\u5e94\u7684\u6876\u3002 \u5220\u9664\uff08Delete\uff09 \uff1a \u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u5b9a\u4f4d\u6570\u636e\u6240\u5728\u7684\u6876\uff0c\u7136\u540e\u5220\u9664\u3002 \u4f18\u70b9 \u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u63a5\u8fd1 ( O(1) )\u3002 \u9002\u5408\u5feb\u901f\u67e5\u627e\u548c\u5b58\u50a8\u5927\u91cf\u6570\u636e\u3002 \u7f3a\u70b9 \u54c8\u5e0c\u51fd\u6570\u8bbe\u8ba1\u4e0d\u5f53\u53ef\u80fd\u5bfc\u81f4\u51b2\u7a81\u8fc7\u591a\uff0c\u5f71\u54cd\u6027\u80fd\u3002 \u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4\u6765\u5b58\u50a8\u6876\u548c\u94fe\u8868\u3002 \u4e0d\u652f\u6301\u6709\u5e8f\u6570\u636e\u5b58\u50a8\u3002 \u5e94\u7528\u573a\u666f \u7f13\u5b58 \uff1a\u5982 LRU \u7f13\u5b58\u673a\u5236\u4e2d\u7684\u5feb\u901f\u67e5\u627e\u3002 \u6570\u636e\u5e93\u7d22\u5f15 \uff1a\u7528\u4e8e\u5feb\u901f\u5b9a\u4f4d\u6570\u636e\u3002 \u96c6\u5408\u548c\u6620\u5c04 \uff1a\u5982 C++ \u4e2d\u7684 std::unordered_map \u548c std::unordered_set \u3002 \u54c8\u5e0c\u8868\u662f\u73b0\u4ee3\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u9700\u8981\u5feb\u901f\u67e5\u627e\u7684\u573a\u666f\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684 C++ \u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u4f7f\u7528\u94fe\u5730\u5740\u6cd5\uff08\u94fe\u8868\uff09\u6765\u5904\u7406\u54c8\u5e0c\u51b2\u7a81\uff1a #include <iostream> #include <list> #include <vector> #include <string> class HashTable { private : // \u54c8\u5e0c\u8868\u7684\u5927\u5c0f int capacity ; // \u4f7f\u7528\u5411\u91cf\u5b58\u50a8\u94fe\u8868\uff0c\u6bcf\u4e2a\u94fe\u8868\u662f\u4e00\u4e2a\u6876 std :: vector < std :: list < std :: pair < std :: string , int >>> table ; // \u54c8\u5e0c\u51fd\u6570\uff1a\u5c06\u5b57\u7b26\u4e32\u952e\u6620\u5c04\u5230\u7d22\u5f15 int hashFunction ( const std :: string & key ) { int hash = 0 ; for ( char ch : key ) { hash = ( hash * 31 + ch ) % capacity ; // \u7b80\u5355\u7684\u54c8\u5e0c\u7b97\u6cd5 } return hash ; } public : // \u6784\u9020\u51fd\u6570\uff0c\u521d\u59cb\u5316\u54c8\u5e0c\u8868 HashTable ( int size ) : capacity ( size ), table ( size ) {} // \u63d2\u5165\u952e\u503c\u5bf9 void insert ( const std :: string & key , int value ) { int index = hashFunction ( key ); for ( auto & pair : table [ index ]) { if ( pair . first == key ) { pair . second = value ; // \u5982\u679c\u952e\u5df2\u5b58\u5728\uff0c\u66f4\u65b0\u503c return ; } } table [ index ]. emplace_back ( key , value ); // \u63d2\u5165\u65b0\u952e\u503c\u5bf9 } // \u67e5\u627e\u952e\u5bf9\u5e94\u7684\u503c int search ( const std :: string & key ) { int index = hashFunction ( key ); for ( const auto & pair : table [ index ]) { if ( pair . first == key ) { return pair . second ; // \u627e\u5230\u952e\uff0c\u8fd4\u56de\u503c } } return -1 ; // \u672a\u627e\u5230\uff0c\u8fd4\u56de -1 } // \u5220\u9664\u952e\u503c\u5bf9 void remove ( const std :: string & key ) { int index = hashFunction ( key ); for ( auto it = table [ index ]. begin (); it != table [ index ]. end (); ++ it ) { if ( it -> first == key ) { table [ index ]. erase ( it ); // \u5220\u9664\u952e\u503c\u5bf9 return ; } } } // \u6253\u5370\u54c8\u5e0c\u8868\u5185\u5bb9\uff08\u7528\u4e8e\u8c03\u8bd5\uff09 void print () { for ( int i = 0 ; i < capacity ; ++ i ) { std :: cout << \"Bucket \" << i << \": \" ; for ( const auto & pair : table [ i ]) { std :: cout << \"[\" << pair . first << \": \" << pair . second << \"] \" ; } std :: cout << \" \\n \" ; } } }; int main () { HashTable hashTable ( 10 ); // \u521b\u5efa\u4e00\u4e2a\u5927\u5c0f\u4e3a 10 \u7684\u54c8\u5e0c\u8868 // \u63d2\u5165\u952e\u503c\u5bf9 hashTable . insert ( \"Alice\" , 25 ); hashTable . insert ( \"Bob\" , 30 ); hashTable . insert ( \"Charlie\" , 35 ); // \u6253\u5370\u54c8\u5e0c\u8868 hashTable . print (); // \u67e5\u627e\u952e std :: cout << \"Value for 'Alice': \" << hashTable . search ( \"Alice\" ) << \" \\n \" ; std :: cout << \"Value for 'Bob': \" << hashTable . search ( \"Bob\" ) << \" \\n \" ; // \u5220\u9664\u952e hashTable . remove ( \"Alice\" ); hashTable . print (); return 0 ; } \u4ee3\u7801\u8bf4\u660e \u54c8\u5e0c\u51fd\u6570 \uff1a \u4f7f\u7528\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u54c8\u5e0c\u7b97\u6cd5\uff0c\u5c06\u5b57\u7b26\u4e32\u952e\u6620\u5c04\u5230\u54c8\u5e0c\u8868\u7684\u7d22\u5f15\u3002 \u901a\u8fc7 % capacity \u786e\u4fdd\u7d22\u5f15\u5728\u8868\u7684\u8303\u56f4\u5185\u3002 \u94fe\u5730\u5740\u6cd5 \uff1a \u6bcf\u4e2a\u6876\u662f\u4e00\u4e2a\u94fe\u8868\uff0c\u7528\u4e8e\u5b58\u50a8\u51b2\u7a81\u7684\u952e\u503c\u5bf9\u3002 \u63d2\u5165\u3001\u67e5\u627e\u548c\u5220\u9664\u64cd\u4f5c\u90fd\u5728\u94fe\u8868\u4e2d\u8fdb\u884c\u3002 \u4e3b\u8981\u64cd\u4f5c \uff1a insert \uff1a\u63d2\u5165\u952e\u503c\u5bf9\uff0c\u5982\u679c\u952e\u5df2\u5b58\u5728\u5219\u66f4\u65b0\u503c\u3002 search \uff1a\u67e5\u627e\u952e\u5bf9\u5e94\u7684\u503c\uff0c\u672a\u627e\u5230\u8fd4\u56de -1 \u3002 remove \uff1a\u5220\u9664\u6307\u5b9a\u952e\u7684\u952e\u503c\u5bf9\u3002 \u8c03\u8bd5\u529f\u80fd \uff1a print \u65b9\u6cd5\u6253\u5370\u54c8\u5e0c\u8868\u7684\u5185\u5bb9\uff0c\u4fbf\u4e8e\u89c2\u5bdf\u54c8\u5e0c\u8868\u7684\u72b6\u6001\u3002 \u8fd0\u884c\u7ed3\u679c\u793a\u4f8b Bucket 0: Bucket 1: Bucket 2: Bucket 3: [Charlie: 35] Bucket 4: Bucket 5: Bucket 6: [Alice: 25] Bucket 7: [Bob: 30] Bucket 8: Bucket 9: Value for 'Alice': 25 Value for 'Bob': 30 Bucket 0: Bucket 1: Bucket 2: Bucket 3: [Charlie: 35] Bucket 4: Bucket 5: Bucket 6: Bucket 7: [Bob: 30] Bucket 8: Bucket 9: \u4f60\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8c03\u6574\u54c8\u5e0c\u8868\u7684\u5927\u5c0f\u6216\u4f18\u5316\u54c8\u5e0c\u51fd\u6570\u4ee5\u9002\u5e94\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\u3002","title":"LRU\u7f13\u5b58\u673a\u5236"},{"location":"Algorithm/leetcode/LRU/#_1","text":"LRU \u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a \u4f18\u5148\u6dd8\u6c70\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u6570\u636e \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u67d0\u4e2a\u6570\u636e\u6700\u8fd1\u88ab\u8bbf\u95ee\u8fc7\uff0c\u90a3\u4e48\u5b83\u5728\u672a\u6765\u88ab\u8bbf\u95ee\u7684\u53ef\u80fd\u6027\u66f4\u9ad8\uff0c\u800c\u90a3\u4e9b\u5f88\u4e45\u6ca1\u6709\u88ab\u8bbf\u95ee\u7684\u6570\u636e\u4f1a\u88ab\u4f18\u5148\u79fb\u9664\u3002","title":"\u57fa\u672c\u601d\u60f3"},{"location":"Algorithm/leetcode/LRU/#_2","text":"\u7f13\u5b58\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u636e\u7ed3\u6784\uff08\u901a\u5e38\u662f\u94fe\u8868\u6216\u54c8\u5e0c\u8868+\u53cc\u5411\u94fe\u8868\uff09\u3002 \u6bcf\u6b21\u8bbf\u95ee\u6570\u636e\u65f6\uff1a \u5982\u679c\u6570\u636e\u5df2\u7ecf\u5728\u7f13\u5b58\u4e2d\uff0c\u5219\u5c06\u5176\u6807\u8bb0\u4e3a\u6700\u8fd1\u4f7f\u7528\uff08\u901a\u5e38\u79fb\u52a8\u5230\u94fe\u8868\u5934\u90e8\uff09\u3002 \u5982\u679c\u6570\u636e\u4e0d\u5728\u7f13\u5b58\u4e2d\uff1a \u5982\u679c\u7f13\u5b58\u672a\u6ee1\uff0c\u5219\u5c06\u6570\u636e\u63d2\u5165\u7f13\u5b58\u3002 \u5982\u679c\u7f13\u5b58\u5df2\u6ee1\uff0c\u5219\u79fb\u9664\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u6570\u636e\uff08\u94fe\u8868\u5c3e\u90e8\uff09\uff0c\u7136\u540e\u63d2\u5165\u65b0\u6570\u636e\u3002 \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u7f13\u5b58\u59cb\u7ec8\u4fdd\u6301\u6700\u8fd1\u4f7f\u7528\u7684\u6570\u636e\u5728\u524d\uff0c\u6700\u5c11\u4f7f\u7528\u7684\u6570\u636e\u5728\u540e\u3002","title":"\u5de5\u4f5c\u539f\u7406"},{"location":"Algorithm/leetcode/LRU/#_3","text":"LRU \u901a\u5e38\u4f7f\u7528\u4ee5\u4e0b\u4e24\u79cd\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\uff1a 1. \u53cc\u5411\u94fe\u8868 \uff1a\u7528\u4e8e\u7ef4\u62a4\u6570\u636e\u7684\u8bbf\u95ee\u987a\u5e8f\u3002 2. \u54c8\u5e0c\u8868 \uff1a\u7528\u4e8e\u5feb\u901f\u5b9a\u4f4d\u6570\u636e\u662f\u5426\u5728\u7f13\u5b58\u4e2d\u3002","title":"\u5b9e\u73b0\u65b9\u5f0f"},{"location":"Algorithm/leetcode/LRU/#_4","text":"\u4ee5\u4e0b\u662f LRU \u7f13\u5b58\u7684\u57fa\u672c\u64cd\u4f5c\uff1a - get(key) \uff1a\u83b7\u53d6\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u3002 - put(key, value) \uff1a\u63d2\u5165\u6216\u66f4\u65b0\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u3002 class LRUCache { private : int capacity ; list < pair < int , int >> cache ; // \u53cc\u5411\u94fe\u8868\u5b58\u50a8\u952e\u503c\u5bf9 unordered_map < int , list < pair < int , int >>:: iterator > map ; // \u54c8\u5e0c\u8868\u5b58\u50a8\u952e\u53ca\u5176\u5728\u94fe\u8868\u4e2d\u7684\u4f4d\u7f6e public : LRUCache ( int capacity ) : capacity ( capacity ) {} int get ( int key ) { if ( map . find ( key ) == map . end ()) return -1 ; // \u4e0d\u5b58\u5728 // \u5c06\u8bbf\u95ee\u7684\u8282\u70b9\u79fb\u5230\u94fe\u8868\u5934\u90e8 cache . splice ( cache . begin (), cache , map [ key ]); return map [ key ] -> second ; } void put ( int key , int value ) { if ( map . find ( key ) != map . end ()) { // \u5982\u679c\u952e\u5df2\u5b58\u5728\uff0c\u66f4\u65b0\u503c\u5e76\u79fb\u5230\u94fe\u8868\u5934\u90e8 map [ key ] -> second = value ; cache . splice ( cache . begin (), cache , map [ key ]); } else { // \u5982\u679c\u952e\u4e0d\u5b58\u5728\uff0c\u68c0\u67e5\u5bb9\u91cf if ( cache . size () == capacity ) { // \u79fb\u9664\u94fe\u8868\u5c3e\u90e8\u8282\u70b9 map . erase ( cache . back (). first ); cache . pop_back (); } // \u63d2\u5165\u65b0\u8282\u70b9\u5230\u94fe\u8868\u5934\u90e8 cache . emplace_front ( key , value ); map [ key ] = cache . begin (); } } };","title":"\u4f2a\u4ee3\u7801"},{"location":"Algorithm/leetcode/LRU/#_5","text":"\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u5b58\u7ba1\u7406 \uff1a\u5982\u9875\u9762\u7f6e\u6362\u7b97\u6cd5\u3002 \u6570\u636e\u5e93\u7f13\u5b58 \uff1a\u5982 Redis \u7684\u7f13\u5b58\u6dd8\u6c70\u7b56\u7565\u3002 Web \u7f13\u5b58 \uff1a\u6d4f\u89c8\u5668\u7f13\u5b58\u4e2d\u7ecf\u5e38\u4f7f\u7528 LRU \u7b56\u7565\u3002 LRU \u662f\u4e00\u79cd\u7b80\u5355\u4e14\u9ad8\u6548\u7684\u7f13\u5b58\u6dd8\u6c70\u7b56\u7565\uff0c\u9002\u7528\u4e8e\u5927\u591a\u6570\u9700\u8981\u7f13\u5b58\u7684\u573a\u666f\u3002 \u54c8\u5e0c\u8868\uff08Hash Table\uff09 \u662f\u4e00\u79cd\u57fa\u4e8e\u54c8\u5e0c\u51fd\u6570\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u4ee5\u5e38\u6570\u65f6\u95f4\u590d\u6742\u5ea6 ( O(1) ) \u5b9e\u73b0\u5feb\u901f\u7684\u6570\u636e\u5b58\u50a8\u548c\u67e5\u627e\u3002\u5b83\u901a\u8fc7\u5c06\u952e\u503c\u5bf9\u6620\u5c04\u5230\u4e00\u4e2a\u6570\u7ec4\u7684\u7d22\u5f15\u4f4d\u7f6e\u6765\u5b58\u50a8\u6570\u636e\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"Algorithm/leetcode/LRU/#_6","text":"\u54c8\u5e0c\u51fd\u6570 \uff1a \u54c8\u5e0c\u8868\u4f7f\u7528\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570\u5c06\u952e\uff08Key\uff09\u6620\u5c04\u5230\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\u3002 [ index = hash(key) ] \u54c8\u5e0c\u51fd\u6570\u7684\u76ee\u6807\u662f\u5c06\u4e0d\u540c\u7684\u952e\u5c3d\u53ef\u80fd\u5747\u5300\u5730\u5206\u5e03\u5230\u6570\u7ec4\u4e2d\u3002 \u5b58\u50a8\u7ed3\u6784 \uff1a \u54c8\u5e0c\u8868\u901a\u5e38\u7531\u4e00\u4e2a\u6570\u7ec4\u548c\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570\u7ec4\u6210\uff0c\u6570\u7ec4\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u79f0\u4e3a\u4e00\u4e2a\u201c\u6876\u201d\uff08Bucket\uff09\u3002 \u51b2\u7a81\u5904\u7406 \uff1a \u5f53\u4e24\u4e2a\u952e\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u6620\u5c04\u5230\u76f8\u540c\u7684\u7d22\u5f15\u4f4d\u7f6e\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u51b2\u7a81\u3002\u5e38\u89c1\u7684\u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5\u6709\uff1a \u94fe\u5730\u5740\u6cd5 \uff1a\u6bcf\u4e2a\u6876\u5b58\u50a8\u4e00\u4e2a\u94fe\u8868\uff0c\u51b2\u7a81\u7684\u5143\u7d20\u5b58\u50a8\u5728\u94fe\u8868\u4e2d\u3002 \u5f00\u653e\u5730\u5740\u6cd5 \uff1a\u5f53\u53d1\u751f\u51b2\u7a81\u65f6\uff0c\u5bfb\u627e\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u4f4d\u7f6e\u5b58\u50a8\u6570\u636e\u3002","title":"\u57fa\u672c\u539f\u7406"},{"location":"Algorithm/leetcode/LRU/#_7","text":"\u63d2\u5165\uff08Insert\uff09 \uff1a \u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u952e\u7684\u7d22\u5f15\uff0c\u5c06\u6570\u636e\u5b58\u50a8\u5230\u5bf9\u5e94\u7684\u6876\u4e2d\u3002 \u67e5\u627e\uff08Search\uff09 \uff1a \u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u952e\u7684\u7d22\u5f15\uff0c\u76f4\u63a5\u8bbf\u95ee\u5bf9\u5e94\u7684\u6876\u3002 \u5220\u9664\uff08Delete\uff09 \uff1a \u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u5b9a\u4f4d\u6570\u636e\u6240\u5728\u7684\u6876\uff0c\u7136\u540e\u5220\u9664\u3002","title":"\u64cd\u4f5c"},{"location":"Algorithm/leetcode/LRU/#_8","text":"\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u63a5\u8fd1 ( O(1) )\u3002 \u9002\u5408\u5feb\u901f\u67e5\u627e\u548c\u5b58\u50a8\u5927\u91cf\u6570\u636e\u3002","title":"\u4f18\u70b9"},{"location":"Algorithm/leetcode/LRU/#_9","text":"\u54c8\u5e0c\u51fd\u6570\u8bbe\u8ba1\u4e0d\u5f53\u53ef\u80fd\u5bfc\u81f4\u51b2\u7a81\u8fc7\u591a\uff0c\u5f71\u54cd\u6027\u80fd\u3002 \u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4\u6765\u5b58\u50a8\u6876\u548c\u94fe\u8868\u3002 \u4e0d\u652f\u6301\u6709\u5e8f\u6570\u636e\u5b58\u50a8\u3002","title":"\u7f3a\u70b9"},{"location":"Algorithm/leetcode/LRU/#_10","text":"\u7f13\u5b58 \uff1a\u5982 LRU \u7f13\u5b58\u673a\u5236\u4e2d\u7684\u5feb\u901f\u67e5\u627e\u3002 \u6570\u636e\u5e93\u7d22\u5f15 \uff1a\u7528\u4e8e\u5feb\u901f\u5b9a\u4f4d\u6570\u636e\u3002 \u96c6\u5408\u548c\u6620\u5c04 \uff1a\u5982 C++ \u4e2d\u7684 std::unordered_map \u548c std::unordered_set \u3002 \u54c8\u5e0c\u8868\u662f\u73b0\u4ee3\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u9700\u8981\u5feb\u901f\u67e5\u627e\u7684\u573a\u666f\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684 C++ \u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u4f7f\u7528\u94fe\u5730\u5740\u6cd5\uff08\u94fe\u8868\uff09\u6765\u5904\u7406\u54c8\u5e0c\u51b2\u7a81\uff1a #include <iostream> #include <list> #include <vector> #include <string> class HashTable { private : // \u54c8\u5e0c\u8868\u7684\u5927\u5c0f int capacity ; // \u4f7f\u7528\u5411\u91cf\u5b58\u50a8\u94fe\u8868\uff0c\u6bcf\u4e2a\u94fe\u8868\u662f\u4e00\u4e2a\u6876 std :: vector < std :: list < std :: pair < std :: string , int >>> table ; // \u54c8\u5e0c\u51fd\u6570\uff1a\u5c06\u5b57\u7b26\u4e32\u952e\u6620\u5c04\u5230\u7d22\u5f15 int hashFunction ( const std :: string & key ) { int hash = 0 ; for ( char ch : key ) { hash = ( hash * 31 + ch ) % capacity ; // \u7b80\u5355\u7684\u54c8\u5e0c\u7b97\u6cd5 } return hash ; } public : // \u6784\u9020\u51fd\u6570\uff0c\u521d\u59cb\u5316\u54c8\u5e0c\u8868 HashTable ( int size ) : capacity ( size ), table ( size ) {} // \u63d2\u5165\u952e\u503c\u5bf9 void insert ( const std :: string & key , int value ) { int index = hashFunction ( key ); for ( auto & pair : table [ index ]) { if ( pair . first == key ) { pair . second = value ; // \u5982\u679c\u952e\u5df2\u5b58\u5728\uff0c\u66f4\u65b0\u503c return ; } } table [ index ]. emplace_back ( key , value ); // \u63d2\u5165\u65b0\u952e\u503c\u5bf9 } // \u67e5\u627e\u952e\u5bf9\u5e94\u7684\u503c int search ( const std :: string & key ) { int index = hashFunction ( key ); for ( const auto & pair : table [ index ]) { if ( pair . first == key ) { return pair . second ; // \u627e\u5230\u952e\uff0c\u8fd4\u56de\u503c } } return -1 ; // \u672a\u627e\u5230\uff0c\u8fd4\u56de -1 } // \u5220\u9664\u952e\u503c\u5bf9 void remove ( const std :: string & key ) { int index = hashFunction ( key ); for ( auto it = table [ index ]. begin (); it != table [ index ]. end (); ++ it ) { if ( it -> first == key ) { table [ index ]. erase ( it ); // \u5220\u9664\u952e\u503c\u5bf9 return ; } } } // \u6253\u5370\u54c8\u5e0c\u8868\u5185\u5bb9\uff08\u7528\u4e8e\u8c03\u8bd5\uff09 void print () { for ( int i = 0 ; i < capacity ; ++ i ) { std :: cout << \"Bucket \" << i << \": \" ; for ( const auto & pair : table [ i ]) { std :: cout << \"[\" << pair . first << \": \" << pair . second << \"] \" ; } std :: cout << \" \\n \" ; } } }; int main () { HashTable hashTable ( 10 ); // \u521b\u5efa\u4e00\u4e2a\u5927\u5c0f\u4e3a 10 \u7684\u54c8\u5e0c\u8868 // \u63d2\u5165\u952e\u503c\u5bf9 hashTable . insert ( \"Alice\" , 25 ); hashTable . insert ( \"Bob\" , 30 ); hashTable . insert ( \"Charlie\" , 35 ); // \u6253\u5370\u54c8\u5e0c\u8868 hashTable . print (); // \u67e5\u627e\u952e std :: cout << \"Value for 'Alice': \" << hashTable . search ( \"Alice\" ) << \" \\n \" ; std :: cout << \"Value for 'Bob': \" << hashTable . search ( \"Bob\" ) << \" \\n \" ; // \u5220\u9664\u952e hashTable . remove ( \"Alice\" ); hashTable . print (); return 0 ; }","title":"\u5e94\u7528\u573a\u666f"},{"location":"Algorithm/leetcode/LRU/#_11","text":"\u54c8\u5e0c\u51fd\u6570 \uff1a \u4f7f\u7528\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u54c8\u5e0c\u7b97\u6cd5\uff0c\u5c06\u5b57\u7b26\u4e32\u952e\u6620\u5c04\u5230\u54c8\u5e0c\u8868\u7684\u7d22\u5f15\u3002 \u901a\u8fc7 % capacity \u786e\u4fdd\u7d22\u5f15\u5728\u8868\u7684\u8303\u56f4\u5185\u3002 \u94fe\u5730\u5740\u6cd5 \uff1a \u6bcf\u4e2a\u6876\u662f\u4e00\u4e2a\u94fe\u8868\uff0c\u7528\u4e8e\u5b58\u50a8\u51b2\u7a81\u7684\u952e\u503c\u5bf9\u3002 \u63d2\u5165\u3001\u67e5\u627e\u548c\u5220\u9664\u64cd\u4f5c\u90fd\u5728\u94fe\u8868\u4e2d\u8fdb\u884c\u3002 \u4e3b\u8981\u64cd\u4f5c \uff1a insert \uff1a\u63d2\u5165\u952e\u503c\u5bf9\uff0c\u5982\u679c\u952e\u5df2\u5b58\u5728\u5219\u66f4\u65b0\u503c\u3002 search \uff1a\u67e5\u627e\u952e\u5bf9\u5e94\u7684\u503c\uff0c\u672a\u627e\u5230\u8fd4\u56de -1 \u3002 remove \uff1a\u5220\u9664\u6307\u5b9a\u952e\u7684\u952e\u503c\u5bf9\u3002 \u8c03\u8bd5\u529f\u80fd \uff1a print \u65b9\u6cd5\u6253\u5370\u54c8\u5e0c\u8868\u7684\u5185\u5bb9\uff0c\u4fbf\u4e8e\u89c2\u5bdf\u54c8\u5e0c\u8868\u7684\u72b6\u6001\u3002","title":"\u4ee3\u7801\u8bf4\u660e"},{"location":"Algorithm/leetcode/LRU/#_12","text":"Bucket 0: Bucket 1: Bucket 2: Bucket 3: [Charlie: 35] Bucket 4: Bucket 5: Bucket 6: [Alice: 25] Bucket 7: [Bob: 30] Bucket 8: Bucket 9: Value for 'Alice': 25 Value for 'Bob': 30 Bucket 0: Bucket 1: Bucket 2: Bucket 3: [Charlie: 35] Bucket 4: Bucket 5: Bucket 6: Bucket 7: [Bob: 30] Bucket 8: Bucket 9: \u4f60\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8c03\u6574\u54c8\u5e0c\u8868\u7684\u5927\u5c0f\u6216\u4f18\u5316\u54c8\u5e0c\u51fd\u6570\u4ee5\u9002\u5e94\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\u3002","title":"\u8fd0\u884c\u7ed3\u679c\u793a\u4f8b"},{"location":"Blog/Apple/macbookair/","text":"macbook \u9009\u8d2d\u6307\u5357 \u7ed9\u5927\u5bb6\u63a8\u8350\u4e00\u4e2a\u7f51\u5740\uff1a Apple \u82f9\u679c\u4ea7\u54c1\u53c2\u6570\u4e2d\u5fc3 \u53ef\u4ee5\u5728\u4e0a\u9762\u7814\u7a76\u81ea\u5df1\u9884\u7b97\u5185\u7684\u578b\u53f7\u53c2\u6570\u5bf9\u6bd4","title":"MacbookAir"},{"location":"Blog/Apple/macbookair/#macbook","text":"\u7ed9\u5927\u5bb6\u63a8\u8350\u4e00\u4e2a\u7f51\u5740\uff1a Apple \u82f9\u679c\u4ea7\u54c1\u53c2\u6570\u4e2d\u5fc3 \u53ef\u4ee5\u5728\u4e0a\u9762\u7814\u7a76\u81ea\u5df1\u9884\u7b97\u5185\u7684\u578b\u53f7\u53c2\u6570\u5bf9\u6bd4","title":"macbook \u9009\u8d2d\u6307\u5357"},{"location":"Blog/DJI/air2s/","text":"\u5927\u7586air2s","title":"air2s"},{"location":"Blog/DJI/air2s/#air2s","text":"","title":"\u5927\u7586air2s"},{"location":"Blog/DJI/mavic2pro/","text":"\u5927\u7586\u5fa12pro","title":"\u5fa12pro"},{"location":"Blog/DJI/mavic2pro/#2pro","text":"","title":"\u5927\u7586\u5fa12pro"},{"location":"Blog/DJI/mini2/","text":"\u5927\u7586mini2","title":"mini2"},{"location":"Blog/DJI/mini2/#mini2","text":"","title":"\u5927\u7586mini2"},{"location":"Blog/DJI/mini3pro/","text":"\u5927\u7586mini3pro","title":"mini3pro"},{"location":"Blog/DJI/mini3pro/#mini3pro","text":"","title":"\u5927\u7586mini3pro"},{"location":"Blog/DJI/osmo6/","text":"\u5927\u7586\u624b\u6301\u4e91\u53f0osmo6","title":"\u624b\u673a\u4e91\u53f0osmo6"},{"location":"Blog/DJI/osmo6/#osmo6","text":"","title":"\u5927\u7586\u624b\u6301\u4e91\u53f0osmo6"},{"location":"Blog/others/python_env/","text":"\u7528python\u6765\u7ba1\u7406\u4e0d\u540c\u73af\u5883 \u865a\u62df\u73af\u5883\u7684\u6240\u6709\u6587\u4ef6\u90fd\u5b58\u653e\u5728\u5b83\u7684\u6587\u4ef6\u5939\u4e2d\u3002\u5c06\u865a\u62df\u73af\u5883\u653e\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\uff08\u4f8b\u5982 venv\uff09\uff0c\u8981\u5220\u9664\u865a\u62df\u73af\u5883\u65f6\uff0c\u53ea\u9700\u76f4\u63a5\u5220\u9664\u8be5\u6587\u4ef6\u5939\u5373\u53ef\uff0c\u865a\u62df\u73af\u5883\u5c31\u4f1a\u88ab\u5b8c\u5168\u79fb\u9664\u3002 \u521b\u5efa\u865a\u62df\u73af\u5883\uff1a python -m venv venv source venv/bin/activate pip install -r requirements.txt \u9000\u51fa\u865a\u62df\u73af\u5883\uff1a deactivate","title":"python\u73af\u5883\u7ba1\u7406"},{"location":"Blog/others/python_env/#python","text":"\u865a\u62df\u73af\u5883\u7684\u6240\u6709\u6587\u4ef6\u90fd\u5b58\u653e\u5728\u5b83\u7684\u6587\u4ef6\u5939\u4e2d\u3002\u5c06\u865a\u62df\u73af\u5883\u653e\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\uff08\u4f8b\u5982 venv\uff09\uff0c\u8981\u5220\u9664\u865a\u62df\u73af\u5883\u65f6\uff0c\u53ea\u9700\u76f4\u63a5\u5220\u9664\u8be5\u6587\u4ef6\u5939\u5373\u53ef\uff0c\u865a\u62df\u73af\u5883\u5c31\u4f1a\u88ab\u5b8c\u5168\u79fb\u9664\u3002 \u521b\u5efa\u865a\u62df\u73af\u5883\uff1a python -m venv venv source venv/bin/activate pip install -r requirements.txt \u9000\u51fa\u865a\u62df\u73af\u5883\uff1a deactivate","title":"\u7528python\u6765\u7ba1\u7406\u4e0d\u540c\u73af\u5883"},{"location":"C%2B%2B/direction/","text":"C++ \u5728\u5927\u5382\u91cc\u4ecd\u7136\u6709\u5f88\u5f3a\u7684\u751f\u547d\u529b\uff0c\u867d\u7136\u4e0d\u50cf Java/Web \u90a3\u6837\u804c\u4f4d\u5e7f\u6cdb\uff0c\u4f46\u5728 \u5173\u952e\u6838\u5fc3\u7cfb\u7edf\u3001\u5e95\u5c42\u5f00\u53d1\u3001\u9ad8\u6027\u80fd\u8ba1\u7b97\u65b9\u5411 \u4e0a\uff0cC++ \u662f\u4e0d\u53ef\u66ff\u4ee3\u7684\u8bed\u8a00\u3002\u53ea\u8981\u4f60\u65b9\u5411\u9009\u5f97\u597d\uff0cC++ \u4f9d\u7136\u80fd\u8fdb\u5927\u5382\u3001\u62ff\u9ad8\u85aa\u3002 \ud83d\udcbc \u4e00\u3001C++ \u7a33\u5b9a\u9700\u6c42\u5c97\u4f4d\uff08\u5927\u5382\u5e38\u89c1\uff09 \u5c97\u4f4d\u65b9\u5411 \u7528 C++ \u7684\u539f\u56e0\u4e0e\u7279\u70b9 \u5e38\u89c1\u516c\u53f8\uff08\u5927\u5382\uff09 \u6e38\u620f\u5ba2\u6237\u7aef/\u5f15\u64ce\u5f00\u53d1 \u6027\u80fd\u8981\u6c42\u9ad8\uff0c\u63a5\u8fd1\u786c\u4ef6\uff0c\u56fe\u5f62\u63a5\u53e3\u591a\u7528 C++ \u817e\u8baf\u6e38\u620f\u3001\u7f51\u6613\u3001\u7c73\u54c8\u6e38\u3001\u5b57\u8282\u6e38\u620f\u4e8b\u4e1a\u90e8 \u540e\u53f0\u670d\u52a1\u5668/\u9ad8\u5e76\u53d1\u7cfb\u7edf \u9ad8\u9891\u4ea4\u6613\u3001\u6e38\u620f\u670d\u52a1\u5668\u3001\u5206\u5e03\u5f0f\u7cfb\u7edf\u5e38\u7528 C++ \u5b57\u8282\u8df3\u52a8\u3001\u817e\u8baf\u3001\u7f51\u6613\u3001\u5feb\u624b\u3001\u534e\u4e3a \u97f3\u89c6\u9891/\u591a\u5a92\u4f53\u5904\u7406 \u89c6\u9891\u7f16\u89e3\u7801\u3001\u97f3\u9891\u5904\u7406\u5e93\u3001\u64ad\u653e\u5668\u7b49\u5e38\u7528 FFmpeg\uff08C++\uff09 \u5b57\u8282\u8df3\u52a8\u3001\u5feb\u624b\u3001\u7231\u5947\u827a\u3001Bilibili \u56fe\u5f62\u56fe\u50cf/\u89c6\u89c9\u65b9\u5411 OpenCV\u3001\u56fe\u50cf\u6e32\u67d3\u3001\u56fe\u5f62\u7b97\u6cd5 \u767e\u5ea6\u3001\u5546\u6c64\u3001\u65f7\u89c6\u3001\u534e\u4e3a\u3001\u963f\u91cc\u8fbe\u6469\u9662 \u5d4c\u5165\u5f0f/\u82af\u7247\u76f8\u5173\u5f00\u53d1 IoT\u3001\u82af\u7247\u9a71\u52a8\u3001\u5e95\u5c42\u901a\u4fe1 \u534e\u4e3a\u3001\u6bd4\u4e9a\u8fea\u3001\u5bd2\u6b66\u7eaa\u3001\u4e2d\u5174\u3001OPPO \u91d1\u878d\u9ad8\u9891\u4ea4\u6613/\u91cf\u5316 \u7eb3\u79d2\u7ea7\u5ef6\u8fdf\u8981\u6c42\uff0c\u9ad8\u6027\u80fd\u7cfb\u7edf\u901a\u5e38\u7528 C++ \u6469\u6839\u58eb\u4e39\u5229\u3001\u9ad8\u76db\u3001\u62db\u5546\u8bc1\u5238\u3001\u5b57\u8282\u8df3\u52a8\u91cf\u5316\u7ec4 \u7b97\u6cd5\u5c97\uff08\u53ef\u9009 C++\uff09 \u6bd4\u5982 CV\u3001SLAM\u3001\u673a\u5668\u4eba\u8def\u5f84\u89c4\u5212\u7b49\u4ecd\u6709 C++ \u5b9e\u73b0 \u767e\u5ea6\u81ea\u52a8\u9a7e\u9a76\u3001\u6ef4\u6ef4\u81ea\u52a8\u9a7e\u9a76\u3001\u817e\u8baf Robotics X \ud83e\udde0 \u4e8c\u3001\u4f60\u8981\u638c\u63e1\u4ec0\u4e48\u624d\u80fd\u8fdb\u5165\u5927\u5382\u505a C++\uff1f \u2705 \u8bed\u8a00\u80fd\u529b\uff08\u57fa\u7840\uff09 C++11/14/17 \u7279\u6027\uff08\u53f3\u503c\u5f15\u7528\u3001\u667a\u80fd\u6307\u9488\u3001lambda\u3001thread\uff09 STL \u5bb9\u5668\u4e0e\u7b97\u6cd5\u6e90\u7801\u7406\u89e3 \u591a\u7ebf\u7a0b\u4e0e\u9501\uff08mutex\u3001condition_variable\uff09 \u2705 \u7b97\u6cd5\u80fd\u529b\uff08\u5237\u9898\uff09 \u529b\u6263\u4e2d\u9ad8\u96be\u9898\u3001\u9762\u8bd5\u5e38\u89c1\u52a8\u6001\u89c4\u5212\u3001\u641c\u7d22\u3001\u56fe\u8bba \u5927\u5382\u4f1a\u624b\u5199 B+ \u6811\u3001LRU\u3001\u5185\u5b58\u6c60\u4e4b\u7c7b\u7684\u7cfb\u7edf\u9898 \u2705 \u7cfb\u7edf\u80fd\u529b\uff08\u5173\u952e\uff09 \u64cd\u4f5c\u7cfb\u7edf\u57fa\u7840\uff08\u8fdb\u7a0b\u7ebf\u7a0b\u3001\u5185\u5b58\u7ba1\u7406\u3001IO \u591a\u8def\u590d\u7528\uff09 Linux \u73af\u5883\u7f16\u7a0b\uff08epoll\u3001fork\u3001\u7ba1\u9053\u3001\u5171\u4eab\u5185\u5b58\uff09 \u7f51\u7edc\u7f16\u7a0b\uff08TCP/UDP\u3001\u4e09\u6b21\u63e1\u624b\u3001select/epoll\uff09 \ud83d\udeaa \u4e09\u3001\u5927\u5382\u7684 C++ \u5c97\u4f4d\u62db\u8058\u6e20\u9053\uff08\u79cb\u62db / \u793e\u62db\uff09 \u4f60\u53ef\u4ee5\u5173\u6ce8\u4ee5\u4e0b\u6e20\u9053\uff1a \u6e20\u9053 \u63a8\u8350\u516c\u53f8/\u5165\u53e3 \u725b\u5ba2\u7f51 / \u529b\u6263\u62db\u8058 \u641c\u201cC++ \u540e\u53f0\u5f00\u53d1\u201d\u3001\u201cC++\u670d\u52a1\u7aef\u201d \u5404\u5927\u5b98\u7f51\u6821\u62db\uff08\u79cb\u62db\u9875\u9762\uff09 \u817e\u8baf\u3001\u5b57\u8282\u3001\u767e\u5ea6\u3001\u534e\u4e3a\u3001\u7f51\u6613\u7b49 \u5185\u63a8\uff08\u6700\u6709\u6548\uff09 \u52a0 C++ \u7fa4 / GitHub \u5f00\u6e90\u9879\u76ee\u7ed3\u8bc6\u524d\u8f88 \u5b9e\u4e60\u8f6c\u6b63 \u5982\u679c\u4f60\u73b0\u5728\u662f\u5927\u4e09\uff0c\u9a6c\u4e0a\u6295\u6691\u671f\u5b9e\u4e60 \ud83d\udcb0 \u56db\u3001C++ \u5de5\u8d44\u5f85\u9047\uff08\u771f\u5b9e\u533a\u95f4\uff09 \u516c\u53f8/\u5e73\u53f0 \u672c\u79d1\u8d77\u85aa\uff08\u9884\u4f30\uff09 \u7855\u58eb\u8d77\u85aa \u5c97\u4f4d\u5907\u6ce8 \u5b57\u8282\u8df3\u52a8 25K * 16 30K * 16 \u540e\u53f0\u5f00\u53d1 / CV\u7b97\u6cd5 \u817e\u8baf\uff08T3\uff09 20K-25K * 16 28K * 16 \u6e38\u620f / \u670d\u52a1\u7aef \u5feb\u624b 22K * 15 26K * 15 \u591a\u5a92\u4f53 / \u540e\u53f0 \u5c0f\u7c73 / OPPO 18K-20K * 14 22K-25K \u5d4c\u5165\u5f0f / \u7cfb\u7edf B\u7ad9 / \u7231\u5947\u827a 16K-20K * 13 20K+ \u89c6\u9891\u5904\u7406 / \u97f3\u89c6\u9891 \u2705 \u603b\u7ed3\uff1aC++ \u662f\u5426\u503c\u5f97\u5b66\uff1f\u80fd\u8fdb\u5927\u5382\u5417\uff1f \u9879\u76ee \u7b54\u6848 \u73b0\u5728 C++ \u5e02\u573a\u9700\u6c42 \u867d\u7136\u5c97\u4f4d\u6ca1 Java \u5e7f\uff0c\u4f46 \u975e\u5e38\u786c\u6838+\u9ad8\u8d28\u91cf+\u9ad8\u85aa \u662f\u5426\u80fd\u8fdb\u5927\u5382 \u80fd\uff01\u5c24\u5176\u662f\u5728\u6e38\u620f\u3001\u97f3\u89c6\u9891\u3001\u7cfb\u7edf\u65b9\u5411 C++ \u662f\u521a\u9700 \u672c\u79d1\u751f\u9002\u5408\u5417 \u5982\u679c\u4f60\u6709\u5237\u9898\u3001\u9879\u76ee\u7ecf\u5386\uff0c \u672c\u79d1\u4e5f\u80fd\u51b2 \uff08\u5efa\u8bae\u505a\u4e00\u4e24\u4e2a\u7cfb\u7edf\u9879\u76ee\uff09 \u6210\u957f\u6027 \u975e\u5e38\u5f3a\u3002\u80fd\u5b66\u4f1a C++ \u7684\u4eba\uff0c \u8f6c Java / Go / Rust \u90fd\u5feb C++ \u9879\u76ee\uff08\u6bd4\u5982 Redis \u7cbe\u7b80\u7248 / HTTP \u670d\u52a1\u5668\uff09 C++\u9879\u76ee \ud83d\udd27 \u7cfb\u7edf/\u5e95\u5c42\u7c7b\u9879\u76ee 1. \u7b80\u6613\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff08Mini OS\uff09 \u6280\u672f\u70b9 \uff1aC/C++\uff0cx86\u6c47\u7f16\uff0c\u5185\u5b58\u7ba1\u7406\uff0c\u8fdb\u7a0b\u8c03\u5ea6\uff0c\u4e2d\u65ad\u5904\u7406 \u7b80\u5386\u5199\u6cd5 \uff1a \u4f7f\u7528 C/C++ \u548c\u6c47\u7f16\u8bed\u8a00\u7f16\u5199\u7b80\u6613\u64cd\u4f5c\u7cfb\u7edf\uff0c\u652f\u6301\u57fa\u7840\u8fdb\u7a0b\u8c03\u5ea6\u548c\u5185\u5b58\u5206\u9875\uff0c\u638c\u63e1\u4e2d\u65ad\u7ba1\u7406\u673a\u5236\u4e0e\u865a\u62df\u5185\u5b58\u6a21\u578b 2. Shell\u89e3\u91ca\u5668\uff08Mini Shell\uff09 \u6280\u672f\u70b9 \uff1a\u8fdb\u7a0b\u63a7\u5236\u3001fork/exec/wait\u3001\u6587\u4ef6\u63cf\u8ff0\u7b26\u3001\u7ba1\u9053\u91cd\u5b9a\u5411 \u7b80\u5386\u5199\u6cd5 \uff1a \u57fa\u4e8e C++ \u5b9e\u73b0\u7c7b Unix Shell\uff0c\u652f\u6301\u591a\u547d\u4ee4\u6267\u884c\u3001\u7ba1\u9053\u548c I/O \u91cd\u5b9a\u5411\uff0c\u589e\u5f3a\u5bf9\u8fdb\u7a0b\u7ba1\u7406\u4e0e\u7cfb\u7edf\u8c03\u7528\u7684\u7406\u89e3 \ud83d\udd17 \u7f51\u7edc\u7c7b\u9879\u76ee 3. \u9ad8\u6027\u80fd Web \u670d\u52a1\u5668 \u6280\u672f\u70b9 \uff1aC++11/14\uff0cEPOLL\uff0cReactor \u6a21\u578b\uff0c\u591a\u7ebf\u7a0b\uff0c\u72b6\u6001\u673a\u89e3\u6790 HTTP \u7b80\u5386\u5199\u6cd5 \uff1a \u72ec\u7acb\u5f00\u53d1\u652f\u6301\u5e76\u53d1\u8fde\u63a5\u7684 Web \u670d\u52a1\u5668\uff0c\u91c7\u7528 EPOLL + \u7ebf\u7a0b\u6c60 + \u72b6\u6001\u673a\u6a21\u578b\uff0c\u652f\u6301\u9759\u6001\u8d44\u6e90\u8bbf\u95ee\u548c\u7b80\u5355 CGI \u52a8\u6001\u4ea4\u4e92 4. \u7b80\u6613 TCP/UDP \u804a\u5929\u5de5\u5177 \u6280\u672f\u70b9 \uff1aSocket \u7f16\u7a0b\u3001Select/EPOLL\u3001\u7f51\u7edc\u534f\u8bae \u7b80\u5386\u5199\u6cd5 \uff1a \u4f7f\u7528 C++ \u7f16\u5199\u5ba2\u6237\u7aef/\u670d\u52a1\u7aef\u804a\u5929\u5de5\u5177\uff0c\u652f\u6301\u591a\u5ba2\u6237\u7aef\u5e76\u53d1\u901a\u4fe1\u548c\u6d88\u606f\u8f6c\u53d1\uff0c\u638c\u63e1 TCP/UDP \u5957\u63a5\u5b57\u7f16\u7a0b\u548c\u901a\u4fe1\u534f\u8bae\u8bbe\u8ba1 \ud83d\udce6 \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u7c7b\u9879\u76ee 5. \u7ea2\u9ed1\u6811 / \u54c8\u5e0c\u8868 / \u8df3\u8868\u5e93 \u6280\u672f\u70b9 \uff1a\u6307\u9488\u64cd\u4f5c\u3001\u6a21\u677f\u7f16\u7a0b\u3001\u5185\u5b58\u7ba1\u7406 \u7b80\u5386\u5199\u6cd5 \uff1a \u7528 C++ \u5b9e\u73b0\u9ad8\u6027\u80fd\u901a\u7528\u7ea2\u9ed1\u6811\u6a21\u677f\u7c7b\uff0c\u652f\u6301\u6cdb\u578b\u952e\u503c\u5b58\u50a8\u4e0e\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\uff0c\u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\u8d85\u8fc7 90% 6. C++ STL \u4eff\u5199\uff08miniSTL\uff09 \u6280\u672f\u70b9 \uff1a\u6a21\u677f\u7f16\u7a0b\uff0c\u8fed\u4ee3\u5668\uff0c\u5206\u914d\u5668 \u7b80\u5386\u5199\u6cd5 \uff1a \u590d\u523b\u90e8\u5206 STL \u5bb9\u5668\u5982 vector/map/set\uff0c\u652f\u6301\u8fed\u4ee3\u5668\u548c\u5185\u5b58\u5206\u914d\u5668\uff0c\u6df1\u5165\u7406\u89e3\u6cdb\u578b\u7f16\u7a0b\u539f\u7406\u4e0e STL \u5b9e\u73b0\u673a\u5236 \ud83d\udcbb \u5de5\u5177/\u5b9e\u7528\u7c7b\u9879\u76ee 7. \u56fe\u50cf\u5904\u7406\u5de5\u5177\uff08Mini PS\uff09 \u6280\u672f\u70b9 \uff1aOpenCV + C++\uff0c\u56fe\u50cf\u6ee4\u955c\u3001\u8fb9\u7f18\u68c0\u6d4b\u3001\u7070\u5ea6\u53d8\u6362 \u7b80\u5386\u5199\u6cd5 \uff1a \u57fa\u4e8e C++ \u548c OpenCV \u5b9e\u73b0\u56fe\u50cf\u7f16\u8f91\u5de5\u5177\uff0c\u652f\u6301\u591a\u79cd\u56fe\u50cf\u6ee4\u955c\u548c\u5377\u79ef\u53d8\u6362\uff0c\u638c\u63e1\u56fe\u50cf\u5904\u7406\u6838\u5fc3\u7b97\u6cd5 8. JSON/YAML \u89e3\u6790\u5668 \u6280\u672f\u70b9 \uff1a\u72b6\u6001\u673a\uff0c\u9012\u5f52\u4e0b\u964d\u89e3\u6790\uff0c\u6b63\u5219\uff0cC++\u7c7b\u8bbe\u8ba1 \u7b80\u5386\u5199\u6cd5 \uff1a \u5b9e\u73b0\u8f7b\u91cf\u7ea7 JSON/YAML \u89e3\u6790\u5668\uff0c\u652f\u6301\u8bed\u6cd5\u68c0\u67e5\u3001AST \u6784\u9020\u548c\u5e8f\u5217\u5316\u529f\u80fd\uff0c\u63d0\u5347\u5bf9\u7f16\u8bd1\u539f\u7406\u548c\u6587\u672c\u534f\u8bae\u7406\u89e3 \ud83d\udd12 \u5b89\u5168/\u5bc6\u7801\u5b66\u7c7b\u9879\u76ee\uff08\u52a0\u5206\u9879\uff09 9. RSA/AES \u52a0\u89e3\u5bc6\u5de5\u5177 \u6280\u672f\u70b9 \uff1a\u5927\u6574\u6570\u8fd0\u7b97\u3001\u6a21\u8fd0\u7b97\u3001\u6b27\u62c9\u51fd\u6570\u3001C++\u7c7b\u5c01\u88c5 \u7b80\u5386\u5199\u6cd5 \uff1a \u4f7f\u7528 C++ \u5b9e\u73b0 RSA \u975e\u5bf9\u79f0\u52a0\u89e3\u5bc6\u7b97\u6cd5\uff0c\u652f\u6301\u5bc6\u94a5\u751f\u6210\u548c\u6587\u672c\u52a0\u89e3\u5bc6\uff0c\u638c\u63e1\u57fa\u7840\u6570\u8bba\u4e0e\u5bc6\u7801\u534f\u8bae\u539f\u7406 \ud83e\udde0 AI / \u5de5\u7a0b\u7ed3\u5408\u7c7b\u9879\u76ee 10. C++ \u8c03\u7528 ONNX Runtime \u8fdb\u884c AI \u63a8\u7406 \u6280\u672f\u70b9 \uff1aCMake\uff0cONNX Runtime API\uff0c\u56fe\u50cf\u9884\u5904\u7406 \u7b80\u5386\u5199\u6cd5 \uff1a \u5728 C++ \u4e2d\u96c6\u6210 ONNX Runtime\uff0c\u52a0\u8f7d\u5e76\u63a8\u7406\u56fe\u50cf\u5206\u7c7b\u6a21\u578b\uff0c\u652f\u6301\u56fe\u50cf\u9884\u5904\u7406\u548c\u7ed3\u679c\u53ef\u89c6\u5316\u5c55\u793a\uff0c\u719f\u6089 AI \u5de5\u7a0b\u90e8\u7f72\u6d41\u7a0b \u2705 \u5efa\u8bae\u9009\u9898\u65b9\u5411\uff08\u6839\u636e\u4f60\u7684\u80cc\u666f\uff09 \u4f60\u64c5\u957f Linux\u3001Verilog\u3001Python\u3001Shell\u3001DevOps \u65b9\u5411\uff0c\u5efa\u8bae\u4f18\u5148\u9009\u62e9\uff1a \u9ad8\u6027\u80fd Web Server miniSTL \u5b9e\u73b0 Shell \u89e3\u91ca\u5668 \u7f51\u7edc\u901a\u4fe1\u5de5\u5177 \u7f16\u8bd1\u5668\u524d\u7aef/\u89e3\u6790\u5668 OpenAI API + C++ \u5de5\u5177\uff08\u7ed3\u5408\u4f60\u7684 testpilot \u9879\u76ee\uff09","title":"C++\u5c97\u4f4d"},{"location":"C%2B%2B/direction/#c","text":"\u5c97\u4f4d\u65b9\u5411 \u7528 C++ \u7684\u539f\u56e0\u4e0e\u7279\u70b9 \u5e38\u89c1\u516c\u53f8\uff08\u5927\u5382\uff09 \u6e38\u620f\u5ba2\u6237\u7aef/\u5f15\u64ce\u5f00\u53d1 \u6027\u80fd\u8981\u6c42\u9ad8\uff0c\u63a5\u8fd1\u786c\u4ef6\uff0c\u56fe\u5f62\u63a5\u53e3\u591a\u7528 C++ \u817e\u8baf\u6e38\u620f\u3001\u7f51\u6613\u3001\u7c73\u54c8\u6e38\u3001\u5b57\u8282\u6e38\u620f\u4e8b\u4e1a\u90e8 \u540e\u53f0\u670d\u52a1\u5668/\u9ad8\u5e76\u53d1\u7cfb\u7edf \u9ad8\u9891\u4ea4\u6613\u3001\u6e38\u620f\u670d\u52a1\u5668\u3001\u5206\u5e03\u5f0f\u7cfb\u7edf\u5e38\u7528 C++ \u5b57\u8282\u8df3\u52a8\u3001\u817e\u8baf\u3001\u7f51\u6613\u3001\u5feb\u624b\u3001\u534e\u4e3a \u97f3\u89c6\u9891/\u591a\u5a92\u4f53\u5904\u7406 \u89c6\u9891\u7f16\u89e3\u7801\u3001\u97f3\u9891\u5904\u7406\u5e93\u3001\u64ad\u653e\u5668\u7b49\u5e38\u7528 FFmpeg\uff08C++\uff09 \u5b57\u8282\u8df3\u52a8\u3001\u5feb\u624b\u3001\u7231\u5947\u827a\u3001Bilibili \u56fe\u5f62\u56fe\u50cf/\u89c6\u89c9\u65b9\u5411 OpenCV\u3001\u56fe\u50cf\u6e32\u67d3\u3001\u56fe\u5f62\u7b97\u6cd5 \u767e\u5ea6\u3001\u5546\u6c64\u3001\u65f7\u89c6\u3001\u534e\u4e3a\u3001\u963f\u91cc\u8fbe\u6469\u9662 \u5d4c\u5165\u5f0f/\u82af\u7247\u76f8\u5173\u5f00\u53d1 IoT\u3001\u82af\u7247\u9a71\u52a8\u3001\u5e95\u5c42\u901a\u4fe1 \u534e\u4e3a\u3001\u6bd4\u4e9a\u8fea\u3001\u5bd2\u6b66\u7eaa\u3001\u4e2d\u5174\u3001OPPO \u91d1\u878d\u9ad8\u9891\u4ea4\u6613/\u91cf\u5316 \u7eb3\u79d2\u7ea7\u5ef6\u8fdf\u8981\u6c42\uff0c\u9ad8\u6027\u80fd\u7cfb\u7edf\u901a\u5e38\u7528 C++ \u6469\u6839\u58eb\u4e39\u5229\u3001\u9ad8\u76db\u3001\u62db\u5546\u8bc1\u5238\u3001\u5b57\u8282\u8df3\u52a8\u91cf\u5316\u7ec4 \u7b97\u6cd5\u5c97\uff08\u53ef\u9009 C++\uff09 \u6bd4\u5982 CV\u3001SLAM\u3001\u673a\u5668\u4eba\u8def\u5f84\u89c4\u5212\u7b49\u4ecd\u6709 C++ \u5b9e\u73b0 \u767e\u5ea6\u81ea\u52a8\u9a7e\u9a76\u3001\u6ef4\u6ef4\u81ea\u52a8\u9a7e\u9a76\u3001\u817e\u8baf Robotics X","title":"\ud83d\udcbc \u4e00\u3001C++ \u7a33\u5b9a\u9700\u6c42\u5c97\u4f4d\uff08\u5927\u5382\u5e38\u89c1\uff09"},{"location":"C%2B%2B/direction/#c_1","text":"","title":"\ud83e\udde0 \u4e8c\u3001\u4f60\u8981\u638c\u63e1\u4ec0\u4e48\u624d\u80fd\u8fdb\u5165\u5927\u5382\u505a C++\uff1f"},{"location":"C%2B%2B/direction/#_1","text":"C++11/14/17 \u7279\u6027\uff08\u53f3\u503c\u5f15\u7528\u3001\u667a\u80fd\u6307\u9488\u3001lambda\u3001thread\uff09 STL \u5bb9\u5668\u4e0e\u7b97\u6cd5\u6e90\u7801\u7406\u89e3 \u591a\u7ebf\u7a0b\u4e0e\u9501\uff08mutex\u3001condition_variable\uff09","title":"\u2705 \u8bed\u8a00\u80fd\u529b\uff08\u57fa\u7840\uff09"},{"location":"C%2B%2B/direction/#_2","text":"\u529b\u6263\u4e2d\u9ad8\u96be\u9898\u3001\u9762\u8bd5\u5e38\u89c1\u52a8\u6001\u89c4\u5212\u3001\u641c\u7d22\u3001\u56fe\u8bba \u5927\u5382\u4f1a\u624b\u5199 B+ \u6811\u3001LRU\u3001\u5185\u5b58\u6c60\u4e4b\u7c7b\u7684\u7cfb\u7edf\u9898","title":"\u2705 \u7b97\u6cd5\u80fd\u529b\uff08\u5237\u9898\uff09"},{"location":"C%2B%2B/direction/#_3","text":"\u64cd\u4f5c\u7cfb\u7edf\u57fa\u7840\uff08\u8fdb\u7a0b\u7ebf\u7a0b\u3001\u5185\u5b58\u7ba1\u7406\u3001IO \u591a\u8def\u590d\u7528\uff09 Linux \u73af\u5883\u7f16\u7a0b\uff08epoll\u3001fork\u3001\u7ba1\u9053\u3001\u5171\u4eab\u5185\u5b58\uff09 \u7f51\u7edc\u7f16\u7a0b\uff08TCP/UDP\u3001\u4e09\u6b21\u63e1\u624b\u3001select/epoll\uff09","title":"\u2705 \u7cfb\u7edf\u80fd\u529b\uff08\u5173\u952e\uff09"},{"location":"C%2B%2B/direction/#c_2","text":"\u4f60\u53ef\u4ee5\u5173\u6ce8\u4ee5\u4e0b\u6e20\u9053\uff1a \u6e20\u9053 \u63a8\u8350\u516c\u53f8/\u5165\u53e3 \u725b\u5ba2\u7f51 / \u529b\u6263\u62db\u8058 \u641c\u201cC++ \u540e\u53f0\u5f00\u53d1\u201d\u3001\u201cC++\u670d\u52a1\u7aef\u201d \u5404\u5927\u5b98\u7f51\u6821\u62db\uff08\u79cb\u62db\u9875\u9762\uff09 \u817e\u8baf\u3001\u5b57\u8282\u3001\u767e\u5ea6\u3001\u534e\u4e3a\u3001\u7f51\u6613\u7b49 \u5185\u63a8\uff08\u6700\u6709\u6548\uff09 \u52a0 C++ \u7fa4 / GitHub \u5f00\u6e90\u9879\u76ee\u7ed3\u8bc6\u524d\u8f88 \u5b9e\u4e60\u8f6c\u6b63 \u5982\u679c\u4f60\u73b0\u5728\u662f\u5927\u4e09\uff0c\u9a6c\u4e0a\u6295\u6691\u671f\u5b9e\u4e60","title":"\ud83d\udeaa \u4e09\u3001\u5927\u5382\u7684 C++ \u5c97\u4f4d\u62db\u8058\u6e20\u9053\uff08\u79cb\u62db / \u793e\u62db\uff09"},{"location":"C%2B%2B/direction/#c_3","text":"\u516c\u53f8/\u5e73\u53f0 \u672c\u79d1\u8d77\u85aa\uff08\u9884\u4f30\uff09 \u7855\u58eb\u8d77\u85aa \u5c97\u4f4d\u5907\u6ce8 \u5b57\u8282\u8df3\u52a8 25K * 16 30K * 16 \u540e\u53f0\u5f00\u53d1 / CV\u7b97\u6cd5 \u817e\u8baf\uff08T3\uff09 20K-25K * 16 28K * 16 \u6e38\u620f / \u670d\u52a1\u7aef \u5feb\u624b 22K * 15 26K * 15 \u591a\u5a92\u4f53 / \u540e\u53f0 \u5c0f\u7c73 / OPPO 18K-20K * 14 22K-25K \u5d4c\u5165\u5f0f / \u7cfb\u7edf B\u7ad9 / \u7231\u5947\u827a 16K-20K * 13 20K+ \u89c6\u9891\u5904\u7406 / \u97f3\u89c6\u9891","title":"\ud83d\udcb0 \u56db\u3001C++ \u5de5\u8d44\u5f85\u9047\uff08\u771f\u5b9e\u533a\u95f4\uff09"},{"location":"C%2B%2B/direction/#c_4","text":"\u9879\u76ee \u7b54\u6848 \u73b0\u5728 C++ \u5e02\u573a\u9700\u6c42 \u867d\u7136\u5c97\u4f4d\u6ca1 Java \u5e7f\uff0c\u4f46 \u975e\u5e38\u786c\u6838+\u9ad8\u8d28\u91cf+\u9ad8\u85aa \u662f\u5426\u80fd\u8fdb\u5927\u5382 \u80fd\uff01\u5c24\u5176\u662f\u5728\u6e38\u620f\u3001\u97f3\u89c6\u9891\u3001\u7cfb\u7edf\u65b9\u5411 C++ \u662f\u521a\u9700 \u672c\u79d1\u751f\u9002\u5408\u5417 \u5982\u679c\u4f60\u6709\u5237\u9898\u3001\u9879\u76ee\u7ecf\u5386\uff0c \u672c\u79d1\u4e5f\u80fd\u51b2 \uff08\u5efa\u8bae\u505a\u4e00\u4e24\u4e2a\u7cfb\u7edf\u9879\u76ee\uff09 \u6210\u957f\u6027 \u975e\u5e38\u5f3a\u3002\u80fd\u5b66\u4f1a C++ \u7684\u4eba\uff0c \u8f6c Java / Go / Rust \u90fd\u5feb C++ \u9879\u76ee\uff08\u6bd4\u5982 Redis \u7cbe\u7b80\u7248 / HTTP \u670d\u52a1\u5668\uff09","title":"\u2705 \u603b\u7ed3\uff1aC++ \u662f\u5426\u503c\u5f97\u5b66\uff1f\u80fd\u8fdb\u5927\u5382\u5417\uff1f"},{"location":"C%2B%2B/direction/#c_5","text":"","title":"C++\u9879\u76ee"},{"location":"C%2B%2B/direction/#_4","text":"","title":"\ud83d\udd27 \u7cfb\u7edf/\u5e95\u5c42\u7c7b\u9879\u76ee"},{"location":"C%2B%2B/direction/#1-mini-os","text":"\u6280\u672f\u70b9 \uff1aC/C++\uff0cx86\u6c47\u7f16\uff0c\u5185\u5b58\u7ba1\u7406\uff0c\u8fdb\u7a0b\u8c03\u5ea6\uff0c\u4e2d\u65ad\u5904\u7406 \u7b80\u5386\u5199\u6cd5 \uff1a \u4f7f\u7528 C/C++ \u548c\u6c47\u7f16\u8bed\u8a00\u7f16\u5199\u7b80\u6613\u64cd\u4f5c\u7cfb\u7edf\uff0c\u652f\u6301\u57fa\u7840\u8fdb\u7a0b\u8c03\u5ea6\u548c\u5185\u5b58\u5206\u9875\uff0c\u638c\u63e1\u4e2d\u65ad\u7ba1\u7406\u673a\u5236\u4e0e\u865a\u62df\u5185\u5b58\u6a21\u578b","title":"1. \u7b80\u6613\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff08Mini OS\uff09"},{"location":"C%2B%2B/direction/#2-shellmini-shell","text":"\u6280\u672f\u70b9 \uff1a\u8fdb\u7a0b\u63a7\u5236\u3001fork/exec/wait\u3001\u6587\u4ef6\u63cf\u8ff0\u7b26\u3001\u7ba1\u9053\u91cd\u5b9a\u5411 \u7b80\u5386\u5199\u6cd5 \uff1a \u57fa\u4e8e C++ \u5b9e\u73b0\u7c7b Unix Shell\uff0c\u652f\u6301\u591a\u547d\u4ee4\u6267\u884c\u3001\u7ba1\u9053\u548c I/O \u91cd\u5b9a\u5411\uff0c\u589e\u5f3a\u5bf9\u8fdb\u7a0b\u7ba1\u7406\u4e0e\u7cfb\u7edf\u8c03\u7528\u7684\u7406\u89e3","title":"2. Shell\u89e3\u91ca\u5668\uff08Mini Shell\uff09"},{"location":"C%2B%2B/direction/#_5","text":"","title":"\ud83d\udd17 \u7f51\u7edc\u7c7b\u9879\u76ee"},{"location":"C%2B%2B/direction/#3-web","text":"\u6280\u672f\u70b9 \uff1aC++11/14\uff0cEPOLL\uff0cReactor \u6a21\u578b\uff0c\u591a\u7ebf\u7a0b\uff0c\u72b6\u6001\u673a\u89e3\u6790 HTTP \u7b80\u5386\u5199\u6cd5 \uff1a \u72ec\u7acb\u5f00\u53d1\u652f\u6301\u5e76\u53d1\u8fde\u63a5\u7684 Web \u670d\u52a1\u5668\uff0c\u91c7\u7528 EPOLL + \u7ebf\u7a0b\u6c60 + \u72b6\u6001\u673a\u6a21\u578b\uff0c\u652f\u6301\u9759\u6001\u8d44\u6e90\u8bbf\u95ee\u548c\u7b80\u5355 CGI \u52a8\u6001\u4ea4\u4e92","title":"3. \u9ad8\u6027\u80fd Web \u670d\u52a1\u5668"},{"location":"C%2B%2B/direction/#4-tcpudp","text":"\u6280\u672f\u70b9 \uff1aSocket \u7f16\u7a0b\u3001Select/EPOLL\u3001\u7f51\u7edc\u534f\u8bae \u7b80\u5386\u5199\u6cd5 \uff1a \u4f7f\u7528 C++ \u7f16\u5199\u5ba2\u6237\u7aef/\u670d\u52a1\u7aef\u804a\u5929\u5de5\u5177\uff0c\u652f\u6301\u591a\u5ba2\u6237\u7aef\u5e76\u53d1\u901a\u4fe1\u548c\u6d88\u606f\u8f6c\u53d1\uff0c\u638c\u63e1 TCP/UDP \u5957\u63a5\u5b57\u7f16\u7a0b\u548c\u901a\u4fe1\u534f\u8bae\u8bbe\u8ba1","title":"4. \u7b80\u6613 TCP/UDP \u804a\u5929\u5de5\u5177"},{"location":"C%2B%2B/direction/#_6","text":"","title":"\ud83d\udce6 \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u7c7b\u9879\u76ee"},{"location":"C%2B%2B/direction/#5","text":"\u6280\u672f\u70b9 \uff1a\u6307\u9488\u64cd\u4f5c\u3001\u6a21\u677f\u7f16\u7a0b\u3001\u5185\u5b58\u7ba1\u7406 \u7b80\u5386\u5199\u6cd5 \uff1a \u7528 C++ \u5b9e\u73b0\u9ad8\u6027\u80fd\u901a\u7528\u7ea2\u9ed1\u6811\u6a21\u677f\u7c7b\uff0c\u652f\u6301\u6cdb\u578b\u952e\u503c\u5b58\u50a8\u4e0e\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\uff0c\u5355\u5143\u6d4b\u8bd5\u8986\u76d6\u7387\u8d85\u8fc7 90%","title":"5. \u7ea2\u9ed1\u6811 / \u54c8\u5e0c\u8868 / \u8df3\u8868\u5e93"},{"location":"C%2B%2B/direction/#6-c-stl-ministl","text":"\u6280\u672f\u70b9 \uff1a\u6a21\u677f\u7f16\u7a0b\uff0c\u8fed\u4ee3\u5668\uff0c\u5206\u914d\u5668 \u7b80\u5386\u5199\u6cd5 \uff1a \u590d\u523b\u90e8\u5206 STL \u5bb9\u5668\u5982 vector/map/set\uff0c\u652f\u6301\u8fed\u4ee3\u5668\u548c\u5185\u5b58\u5206\u914d\u5668\uff0c\u6df1\u5165\u7406\u89e3\u6cdb\u578b\u7f16\u7a0b\u539f\u7406\u4e0e STL \u5b9e\u73b0\u673a\u5236","title":"6. C++ STL \u4eff\u5199\uff08miniSTL\uff09"},{"location":"C%2B%2B/direction/#_7","text":"","title":"\ud83d\udcbb \u5de5\u5177/\u5b9e\u7528\u7c7b\u9879\u76ee"},{"location":"C%2B%2B/direction/#7-mini-ps","text":"\u6280\u672f\u70b9 \uff1aOpenCV + C++\uff0c\u56fe\u50cf\u6ee4\u955c\u3001\u8fb9\u7f18\u68c0\u6d4b\u3001\u7070\u5ea6\u53d8\u6362 \u7b80\u5386\u5199\u6cd5 \uff1a \u57fa\u4e8e C++ \u548c OpenCV \u5b9e\u73b0\u56fe\u50cf\u7f16\u8f91\u5de5\u5177\uff0c\u652f\u6301\u591a\u79cd\u56fe\u50cf\u6ee4\u955c\u548c\u5377\u79ef\u53d8\u6362\uff0c\u638c\u63e1\u56fe\u50cf\u5904\u7406\u6838\u5fc3\u7b97\u6cd5","title":"7. \u56fe\u50cf\u5904\u7406\u5de5\u5177\uff08Mini PS\uff09"},{"location":"C%2B%2B/direction/#8-jsonyaml","text":"\u6280\u672f\u70b9 \uff1a\u72b6\u6001\u673a\uff0c\u9012\u5f52\u4e0b\u964d\u89e3\u6790\uff0c\u6b63\u5219\uff0cC++\u7c7b\u8bbe\u8ba1 \u7b80\u5386\u5199\u6cd5 \uff1a \u5b9e\u73b0\u8f7b\u91cf\u7ea7 JSON/YAML \u89e3\u6790\u5668\uff0c\u652f\u6301\u8bed\u6cd5\u68c0\u67e5\u3001AST \u6784\u9020\u548c\u5e8f\u5217\u5316\u529f\u80fd\uff0c\u63d0\u5347\u5bf9\u7f16\u8bd1\u539f\u7406\u548c\u6587\u672c\u534f\u8bae\u7406\u89e3","title":"8. JSON/YAML \u89e3\u6790\u5668"},{"location":"C%2B%2B/direction/#_8","text":"","title":"\ud83d\udd12 \u5b89\u5168/\u5bc6\u7801\u5b66\u7c7b\u9879\u76ee\uff08\u52a0\u5206\u9879\uff09"},{"location":"C%2B%2B/direction/#9-rsaaes","text":"\u6280\u672f\u70b9 \uff1a\u5927\u6574\u6570\u8fd0\u7b97\u3001\u6a21\u8fd0\u7b97\u3001\u6b27\u62c9\u51fd\u6570\u3001C++\u7c7b\u5c01\u88c5 \u7b80\u5386\u5199\u6cd5 \uff1a \u4f7f\u7528 C++ \u5b9e\u73b0 RSA \u975e\u5bf9\u79f0\u52a0\u89e3\u5bc6\u7b97\u6cd5\uff0c\u652f\u6301\u5bc6\u94a5\u751f\u6210\u548c\u6587\u672c\u52a0\u89e3\u5bc6\uff0c\u638c\u63e1\u57fa\u7840\u6570\u8bba\u4e0e\u5bc6\u7801\u534f\u8bae\u539f\u7406","title":"9. RSA/AES \u52a0\u89e3\u5bc6\u5de5\u5177"},{"location":"C%2B%2B/direction/#ai","text":"","title":"\ud83e\udde0 AI / \u5de5\u7a0b\u7ed3\u5408\u7c7b\u9879\u76ee"},{"location":"C%2B%2B/direction/#10-c-onnx-runtime-ai","text":"\u6280\u672f\u70b9 \uff1aCMake\uff0cONNX Runtime API\uff0c\u56fe\u50cf\u9884\u5904\u7406 \u7b80\u5386\u5199\u6cd5 \uff1a \u5728 C++ \u4e2d\u96c6\u6210 ONNX Runtime\uff0c\u52a0\u8f7d\u5e76\u63a8\u7406\u56fe\u50cf\u5206\u7c7b\u6a21\u578b\uff0c\u652f\u6301\u56fe\u50cf\u9884\u5904\u7406\u548c\u7ed3\u679c\u53ef\u89c6\u5316\u5c55\u793a\uff0c\u719f\u6089 AI \u5de5\u7a0b\u90e8\u7f72\u6d41\u7a0b","title":"10. C++ \u8c03\u7528 ONNX Runtime \u8fdb\u884c AI \u63a8\u7406"},{"location":"C%2B%2B/direction/#_9","text":"\u4f60\u64c5\u957f Linux\u3001Verilog\u3001Python\u3001Shell\u3001DevOps \u65b9\u5411\uff0c\u5efa\u8bae\u4f18\u5148\u9009\u62e9\uff1a \u9ad8\u6027\u80fd Web Server miniSTL \u5b9e\u73b0 Shell \u89e3\u91ca\u5668 \u7f51\u7edc\u901a\u4fe1\u5de5\u5177 \u7f16\u8bd1\u5668\u524d\u7aef/\u89e3\u6790\u5668 OpenAI API + C++ \u5de5\u5177\uff08\u7ed3\u5408\u4f60\u7684 testpilot \u9879\u76ee\uff09","title":"\u2705 \u5efa\u8bae\u9009\u9898\u65b9\u5411\uff08\u6839\u636e\u4f60\u7684\u80cc\u666f\uff09"},{"location":"C%2B%2B/g%2B%2B/","text":"g++ \u662f GCC \u7684 C++ \u7f16\u8bd1\u5668\uff0c\u652f\u6301\u591a\u79cd\u7f16\u8bd1\u9009\u9879\uff0c\u7528\u4e8e\u63a7\u5236\u7f16\u8bd1\u3001\u94fe\u63a5\u3001\u4f18\u5316\u3001\u8c03\u8bd5\u7b49\u884c\u4e3a\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684 g++ \u53c2\u6570\u53ca\u5176\u4f5c\u7528\uff1a 1. \u7f16\u8bd1\u76f8\u5173\u9009\u9879 \u9009\u9879 \u4f5c\u7528 -c \u53ea\u7f16\u8bd1\u6e90\u6587\u4ef6\u4e3a\u76ee\u6807\u6587\u4ef6\uff08 .o \u6587\u4ef6\uff09\uff0c\u4e0d\u8fdb\u884c\u94fe\u63a5\u3002 -o <file> \u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u79f0\u3002 -I<dir> \u6307\u5b9a\u5934\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\u3002 -L<dir> \u6307\u5b9a\u5e93\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\u3002 -l<lib> \u94fe\u63a5\u6307\u5b9a\u7684\u5e93\uff0c\u4f8b\u5982 -lm \u94fe\u63a5\u6570\u5b66\u5e93 libm.so \u3002 -std=<standard> \u6307\u5b9a C++ \u6807\u51c6\u7248\u672c\uff08\u5982 -std=c++11 \u3001 -std=c++17 \u3001 -std=c++20 \uff09\u3002 -fPIC \u751f\u6210\u4f4d\u7f6e\u65e0\u5173\u4ee3\u7801\uff08\u901a\u5e38\u7528\u4e8e\u52a8\u6001\u5e93\uff09\u3002 -shared \u751f\u6210\u5171\u4eab\u5e93\uff08\u52a8\u6001\u5e93\uff09\u3002 -static \u5f3a\u5236\u8fdb\u884c\u9759\u6001\u94fe\u63a5\u3002 2. \u4f18\u5316\u76f8\u5173\u9009\u9879 \u9009\u9879 \u4f5c\u7528 -O0 \u4e0d\u8fdb\u884c\u4f18\u5316\uff08\u9ed8\u8ba4\uff09\u3002 -O1 \u542f\u7528\u57fa\u672c\u4f18\u5316\u3002 -O2 \u542f\u7528\u66f4\u591a\u4f18\u5316\uff08\u5982\u5faa\u73af\u4f18\u5316\u3001\u5185\u8054\u51fd\u6570\u7b49\uff09\u3002 -O3 \u542f\u7528\u6700\u9ad8\u7ea7\u522b\u7684\u4f18\u5316\uff08\u5305\u62ec\u5faa\u73af\u5c55\u5f00\u3001\u51fd\u6570\u5185\u8054\u7b49\uff09\u3002 -Os \u4f18\u5316\u4ee3\u7801\u5927\u5c0f\uff0c\u9002\u5408\u5d4c\u5165\u5f0f\u7cfb\u7edf\u3002 -Og \u4e3a\u8c03\u8bd5\u4f18\u5316\uff0c\u4fdd\u7559\u8c03\u8bd5\u4fe1\u606f\u7684\u540c\u65f6\u8fdb\u884c\u9002\u5ea6\u4f18\u5316\u3002 -march=<arch> \u4e3a\u6307\u5b9a\u7684 CPU \u67b6\u6784\u751f\u6210\u4f18\u5316\u4ee3\u7801\uff08\u5982 -march=native \uff09\u3002 -funroll-loops \u5c55\u5f00\u5faa\u73af\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002 3. \u8c03\u8bd5\u76f8\u5173\u9009\u9879 \u9009\u9879 \u4f5c\u7528 -g \u751f\u6210\u8c03\u8bd5\u4fe1\u606f\uff0c\u7528\u4e8e\u8c03\u8bd5\u5668\uff08\u5982 gdb \uff09\u3002 -ggdb \u751f\u6210\u4e0e gdb \u517c\u5bb9\u7684\u8c03\u8bd5\u4fe1\u606f\u3002 -fno-omit-frame-pointer \u4fdd\u7559\u5e27\u6307\u9488\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u548c\u6027\u80fd\u5206\u6790\u3002 4. \u94fe\u63a5\u76f8\u5173\u9009\u9879 \u9009\u9879 \u4f5c\u7528 -pthread \u94fe\u63a5\u7ebf\u7a0b\u5e93\uff0c\u652f\u6301\u591a\u7ebf\u7a0b\u7f16\u7a0b\u3002 -static \u5f3a\u5236\u8fdb\u884c\u9759\u6001\u94fe\u63a5\u3002 -shared \u751f\u6210\u52a8\u6001\u5e93\uff08\u5171\u4eab\u5e93\uff09\u3002 -rdynamic \u5bfc\u51fa\u6240\u6709\u7b26\u53f7\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u5668\u6216\u52a8\u6001\u52a0\u8f7d\u5668\u4f7f\u7528\u3002 5. \u8b66\u544a\u548c\u9519\u8bef\u76f8\u5173\u9009\u9879 \u9009\u9879 \u4f5c\u7528 -Wall \u542f\u7528\u6240\u6709\u5e38\u89c1\u7684\u8b66\u544a\u3002 -Wextra \u542f\u7528\u989d\u5916\u7684\u8b66\u544a\u3002 -Werror \u5c06\u6240\u6709\u8b66\u544a\u89c6\u4e3a\u9519\u8bef\u3002 -pedantic \u5f3a\u5236\u9075\u5faa\u6807\u51c6\uff0c\u62a5\u544a\u6240\u6709\u975e\u6807\u51c6\u7684\u4ee3\u7801\u3002 6. \u9884\u5904\u7406\u76f8\u5173\u9009\u9879 \u9009\u9879 \u4f5c\u7528 -E \u4ec5\u8fd0\u884c\u9884\u5904\u7406\u5668\uff0c\u4e0d\u8fdb\u884c\u7f16\u8bd1\u3002 -D<macro> \u5b9a\u4e49\u5b8f\uff0c\u4f8b\u5982 -DDEBUG \u3002 -U<macro> \u53d6\u6d88\u5b9a\u4e49\u5b8f\u3002 7. \u8f93\u51fa\u76f8\u5173\u9009\u9879 \u9009\u9879 \u4f5c\u7528 -v \u663e\u793a\u8be6\u7ec6\u7684\u7f16\u8bd1\u8fc7\u7a0b\u4fe1\u606f\u3002 -save-temps \u4fdd\u5b58\u4e2d\u95f4\u6587\u4ef6\uff08\u5982\u9884\u5904\u7406\u6587\u4ef6\u3001\u6c47\u7f16\u6587\u4ef6\uff09\u3002 -M \u751f\u6210\u4f9d\u8d56\u6587\u4ef6\uff0c\u7528\u4e8e\u6784\u5efa\u7cfb\u7edf\uff08\u5982 make \uff09\u3002 8. \u8bed\u8a00\u76f8\u5173\u9009\u9879 \u9009\u9879 \u4f5c\u7528 -std=c++11 \u4f7f\u7528 C++11 \u6807\u51c6\u3002 -std=c++17 \u4f7f\u7528 C++17 \u6807\u51c6\u3002 -fno-exceptions \u7981\u7528\u5f02\u5e38\u652f\u6301\u3002 -fno-rtti \u7981\u7528\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff08RTTI\uff09\u3002 9. \u793a\u4f8b \u7f16\u8bd1\u5e76\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6 g++ main.cpp -o program \u542f\u7528\u8c03\u8bd5\u4fe1\u606f g++ main.cpp -o program -g \u542f\u7528\u4f18\u5316 g++ main.cpp -o program -O2 \u94fe\u63a5\u52a8\u6001\u5e93 g++ main.cpp -o program -L/usr/lib -lmylib \u751f\u6210\u9759\u6001\u5e93 g++ -c mylib.cpp -o mylib.o ar rcs libmylib.a mylib.o \u751f\u6210\u52a8\u6001\u5e93 g++ -shared -fPIC mylib.cpp -o libmylib.so \u603b\u7ed3 g++ \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u9009\u9879\uff0c\u7528\u4e8e\u63a7\u5236\u7f16\u8bd1\u3001\u4f18\u5316\u3001\u8c03\u8bd5\u548c\u94fe\u63a5\u7b49\u8fc7\u7a0b\u3002 \u5e38\u7528\u9009\u9879\u5305\u62ec -O \uff08\u4f18\u5316\uff09\u3001 -g \uff08\u8c03\u8bd5\u4fe1\u606f\uff09\u3001 -Wall \uff08\u8b66\u544a\uff09\u548c -pthread \uff08\u591a\u7ebf\u7a0b\u652f\u6301\uff09\u3002 \u6839\u636e\u9879\u76ee\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u9009\u9879\uff0c\u53ef\u4ee5\u63d0\u9ad8\u7f16\u8bd1\u6548\u7387\u548c\u7a0b\u5e8f\u6027\u80fd\u3002 \u4ee5\u4e0b\u662f\u6587\u4e2d\u63d0\u5230\u7684\u82f1\u6587\u5b57\u6bcd\u7f29\u5199\u53ca\u5176\u5168\u79f0\u548c\u542b\u4e49\uff1a 1. \u7f16\u8bd1\u76f8\u5173\u9009\u9879 \u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -c Compile \u53ea\u7f16\u8bd1\u6e90\u6587\u4ef6\u4e3a\u76ee\u6807\u6587\u4ef6\uff08 .o \u6587\u4ef6\uff09\uff0c\u4e0d\u8fdb\u884c\u94fe\u63a5\u3002 -o Output \u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u79f0\u3002 -I Include \u6307\u5b9a\u5934\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\u3002 -L Library \u6307\u5b9a\u5e93\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\u3002 -l Library \u94fe\u63a5\u6307\u5b9a\u7684\u5e93\uff0c\u4f8b\u5982 -lm \u94fe\u63a5\u6570\u5b66\u5e93 libm.so \u3002 -std Standard \u6307\u5b9a C++ \u6807\u51c6\u7248\u672c\uff08\u5982 -std=c++11 \u3001 -std=c++17 \uff09\u3002 -fPIC Position Independent Code \u751f\u6210\u4f4d\u7f6e\u65e0\u5173\u4ee3\u7801\uff08\u901a\u5e38\u7528\u4e8e\u52a8\u6001\u5e93\uff09\u3002 -shared Shared \u751f\u6210\u5171\u4eab\u5e93\uff08\u52a8\u6001\u5e93\uff09\u3002 -static Static \u5f3a\u5236\u8fdb\u884c\u9759\u6001\u94fe\u63a5\u3002 2. \u4f18\u5316\u76f8\u5173\u9009\u9879 \u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -O Optimization \u63a7\u5236\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7ea7\u522b\uff08\u5982 -O0 \u3001 -O2 \u3001 -O3 \uff09\u3002 -Os Optimize for Size \u4f18\u5316\u4ee3\u7801\u5927\u5c0f\uff0c\u9002\u5408\u5d4c\u5165\u5f0f\u7cfb\u7edf\u3002 -Og Optimize for Debugging \u4e3a\u8c03\u8bd5\u4f18\u5316\uff0c\u4fdd\u7559\u8c03\u8bd5\u4fe1\u606f\u7684\u540c\u65f6\u8fdb\u884c\u9002\u5ea6\u4f18\u5316\u3002 -march Machine Architecture \u4e3a\u6307\u5b9a\u7684 CPU \u67b6\u6784\u751f\u6210\u4f18\u5316\u4ee3\u7801\uff08\u5982 -march=native \uff09\u3002 -funroll-loops Unroll Loops \u5c55\u5f00\u5faa\u73af\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002 3. \u8c03\u8bd5\u76f8\u5173\u9009\u9879 \u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -g Debug \u751f\u6210\u8c03\u8bd5\u4fe1\u606f\uff0c\u7528\u4e8e\u8c03\u8bd5\u5668\uff08\u5982 gdb \uff09\u3002 -ggdb GNU Debugger \u751f\u6210\u4e0e gdb \u517c\u5bb9\u7684\u8c03\u8bd5\u4fe1\u606f\u3002 -fno-omit-frame-pointer Frame Pointer \u4fdd\u7559\u5e27\u6307\u9488\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u548c\u6027\u80fd\u5206\u6790\u3002 4. \u94fe\u63a5\u76f8\u5173\u9009\u9879 \u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -pthread POSIX Thread \u94fe\u63a5\u7ebf\u7a0b\u5e93\uff0c\u652f\u6301\u591a\u7ebf\u7a0b\u7f16\u7a0b\u3002 -static Static \u5f3a\u5236\u8fdb\u884c\u9759\u6001\u94fe\u63a5\u3002 -shared Shared \u751f\u6210\u52a8\u6001\u5e93\uff08\u5171\u4eab\u5e93\uff09\u3002 -rdynamic Runtime Dynamic \u5bfc\u51fa\u6240\u6709\u7b26\u53f7\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u5668\u6216\u52a8\u6001\u52a0\u8f7d\u5668\u4f7f\u7528\u3002 5. \u8b66\u544a\u548c\u9519\u8bef\u76f8\u5173\u9009\u9879 \u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -Wall All Warnings \u542f\u7528\u6240\u6709\u5e38\u89c1\u7684\u8b66\u544a\u3002 -Wextra Extra Warnings \u542f\u7528\u989d\u5916\u7684\u8b66\u544a\u3002 -Werror Warnings as Errors \u5c06\u6240\u6709\u8b66\u544a\u89c6\u4e3a\u9519\u8bef\u3002 -pedantic Pedantic \u5f3a\u5236\u9075\u5faa\u6807\u51c6\uff0c\u62a5\u544a\u6240\u6709\u975e\u6807\u51c6\u7684\u4ee3\u7801\u3002 6. \u9884\u5904\u7406\u76f8\u5173\u9009\u9879 \u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -E Preprocess Only \u4ec5\u8fd0\u884c\u9884\u5904\u7406\u5668\uff0c\u4e0d\u8fdb\u884c\u7f16\u8bd1\u3002 -D Define \u5b9a\u4e49\u5b8f\uff0c\u4f8b\u5982 -DDEBUG \u3002 -U Undefine \u53d6\u6d88\u5b9a\u4e49\u5b8f\u3002 7. \u8f93\u51fa\u76f8\u5173\u9009\u9879 \u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -v Verbose \u663e\u793a\u8be6\u7ec6\u7684\u7f16\u8bd1\u8fc7\u7a0b\u4fe1\u606f\u3002 -save-temps Save Temporary Files \u4fdd\u5b58\u4e2d\u95f4\u6587\u4ef6\uff08\u5982\u9884\u5904\u7406\u6587\u4ef6\u3001\u6c47\u7f16\u6587\u4ef6\uff09\u3002 -M Makefile Dependencies \u751f\u6210\u4f9d\u8d56\u6587\u4ef6\uff0c\u7528\u4e8e\u6784\u5efa\u7cfb\u7edf\uff08\u5982 make \uff09\u3002 8. \u8bed\u8a00\u76f8\u5173\u9009\u9879 \u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -std Standard \u6307\u5b9a C++ \u6807\u51c6\u7248\u672c\uff08\u5982 -std=c++11 \u3001 -std=c++17 \uff09\u3002 -fno-exceptions No Exceptions \u7981\u7528\u5f02\u5e38\u652f\u6301\u3002 -fno-rtti No Run-Time Type Info \u7981\u7528\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff08RTTI\uff09\u3002 \u603b\u7ed3 \u8fd9\u4e9b\u9009\u9879\u7684\u7f29\u5199\u5927\u591a\u6765\u6e90\u4e8e\u5176\u529f\u80fd\u7684\u82f1\u6587\u5355\u8bcd\u9996\u5b57\u6bcd\u6216\u7f29\u5199\u5f62\u5f0f\uff0c\u4fbf\u4e8e\u5f00\u53d1\u8005\u5feb\u901f\u7406\u89e3\u548c\u4f7f\u7528\u3002","title":"g++\u7f16\u8bd1\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#1","text":"\u9009\u9879 \u4f5c\u7528 -c \u53ea\u7f16\u8bd1\u6e90\u6587\u4ef6\u4e3a\u76ee\u6807\u6587\u4ef6\uff08 .o \u6587\u4ef6\uff09\uff0c\u4e0d\u8fdb\u884c\u94fe\u63a5\u3002 -o <file> \u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u79f0\u3002 -I<dir> \u6307\u5b9a\u5934\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\u3002 -L<dir> \u6307\u5b9a\u5e93\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\u3002 -l<lib> \u94fe\u63a5\u6307\u5b9a\u7684\u5e93\uff0c\u4f8b\u5982 -lm \u94fe\u63a5\u6570\u5b66\u5e93 libm.so \u3002 -std=<standard> \u6307\u5b9a C++ \u6807\u51c6\u7248\u672c\uff08\u5982 -std=c++11 \u3001 -std=c++17 \u3001 -std=c++20 \uff09\u3002 -fPIC \u751f\u6210\u4f4d\u7f6e\u65e0\u5173\u4ee3\u7801\uff08\u901a\u5e38\u7528\u4e8e\u52a8\u6001\u5e93\uff09\u3002 -shared \u751f\u6210\u5171\u4eab\u5e93\uff08\u52a8\u6001\u5e93\uff09\u3002 -static \u5f3a\u5236\u8fdb\u884c\u9759\u6001\u94fe\u63a5\u3002","title":"1. \u7f16\u8bd1\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#2","text":"\u9009\u9879 \u4f5c\u7528 -O0 \u4e0d\u8fdb\u884c\u4f18\u5316\uff08\u9ed8\u8ba4\uff09\u3002 -O1 \u542f\u7528\u57fa\u672c\u4f18\u5316\u3002 -O2 \u542f\u7528\u66f4\u591a\u4f18\u5316\uff08\u5982\u5faa\u73af\u4f18\u5316\u3001\u5185\u8054\u51fd\u6570\u7b49\uff09\u3002 -O3 \u542f\u7528\u6700\u9ad8\u7ea7\u522b\u7684\u4f18\u5316\uff08\u5305\u62ec\u5faa\u73af\u5c55\u5f00\u3001\u51fd\u6570\u5185\u8054\u7b49\uff09\u3002 -Os \u4f18\u5316\u4ee3\u7801\u5927\u5c0f\uff0c\u9002\u5408\u5d4c\u5165\u5f0f\u7cfb\u7edf\u3002 -Og \u4e3a\u8c03\u8bd5\u4f18\u5316\uff0c\u4fdd\u7559\u8c03\u8bd5\u4fe1\u606f\u7684\u540c\u65f6\u8fdb\u884c\u9002\u5ea6\u4f18\u5316\u3002 -march=<arch> \u4e3a\u6307\u5b9a\u7684 CPU \u67b6\u6784\u751f\u6210\u4f18\u5316\u4ee3\u7801\uff08\u5982 -march=native \uff09\u3002 -funroll-loops \u5c55\u5f00\u5faa\u73af\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002","title":"2. \u4f18\u5316\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#3","text":"\u9009\u9879 \u4f5c\u7528 -g \u751f\u6210\u8c03\u8bd5\u4fe1\u606f\uff0c\u7528\u4e8e\u8c03\u8bd5\u5668\uff08\u5982 gdb \uff09\u3002 -ggdb \u751f\u6210\u4e0e gdb \u517c\u5bb9\u7684\u8c03\u8bd5\u4fe1\u606f\u3002 -fno-omit-frame-pointer \u4fdd\u7559\u5e27\u6307\u9488\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u548c\u6027\u80fd\u5206\u6790\u3002","title":"3. \u8c03\u8bd5\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#4","text":"\u9009\u9879 \u4f5c\u7528 -pthread \u94fe\u63a5\u7ebf\u7a0b\u5e93\uff0c\u652f\u6301\u591a\u7ebf\u7a0b\u7f16\u7a0b\u3002 -static \u5f3a\u5236\u8fdb\u884c\u9759\u6001\u94fe\u63a5\u3002 -shared \u751f\u6210\u52a8\u6001\u5e93\uff08\u5171\u4eab\u5e93\uff09\u3002 -rdynamic \u5bfc\u51fa\u6240\u6709\u7b26\u53f7\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u5668\u6216\u52a8\u6001\u52a0\u8f7d\u5668\u4f7f\u7528\u3002","title":"4. \u94fe\u63a5\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#5","text":"\u9009\u9879 \u4f5c\u7528 -Wall \u542f\u7528\u6240\u6709\u5e38\u89c1\u7684\u8b66\u544a\u3002 -Wextra \u542f\u7528\u989d\u5916\u7684\u8b66\u544a\u3002 -Werror \u5c06\u6240\u6709\u8b66\u544a\u89c6\u4e3a\u9519\u8bef\u3002 -pedantic \u5f3a\u5236\u9075\u5faa\u6807\u51c6\uff0c\u62a5\u544a\u6240\u6709\u975e\u6807\u51c6\u7684\u4ee3\u7801\u3002","title":"5. \u8b66\u544a\u548c\u9519\u8bef\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#6","text":"\u9009\u9879 \u4f5c\u7528 -E \u4ec5\u8fd0\u884c\u9884\u5904\u7406\u5668\uff0c\u4e0d\u8fdb\u884c\u7f16\u8bd1\u3002 -D<macro> \u5b9a\u4e49\u5b8f\uff0c\u4f8b\u5982 -DDEBUG \u3002 -U<macro> \u53d6\u6d88\u5b9a\u4e49\u5b8f\u3002","title":"6. \u9884\u5904\u7406\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#7","text":"\u9009\u9879 \u4f5c\u7528 -v \u663e\u793a\u8be6\u7ec6\u7684\u7f16\u8bd1\u8fc7\u7a0b\u4fe1\u606f\u3002 -save-temps \u4fdd\u5b58\u4e2d\u95f4\u6587\u4ef6\uff08\u5982\u9884\u5904\u7406\u6587\u4ef6\u3001\u6c47\u7f16\u6587\u4ef6\uff09\u3002 -M \u751f\u6210\u4f9d\u8d56\u6587\u4ef6\uff0c\u7528\u4e8e\u6784\u5efa\u7cfb\u7edf\uff08\u5982 make \uff09\u3002","title":"7. \u8f93\u51fa\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#8","text":"\u9009\u9879 \u4f5c\u7528 -std=c++11 \u4f7f\u7528 C++11 \u6807\u51c6\u3002 -std=c++17 \u4f7f\u7528 C++17 \u6807\u51c6\u3002 -fno-exceptions \u7981\u7528\u5f02\u5e38\u652f\u6301\u3002 -fno-rtti \u7981\u7528\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff08RTTI\uff09\u3002","title":"8. \u8bed\u8a00\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#9","text":"","title":"9. \u793a\u4f8b"},{"location":"C%2B%2B/g%2B%2B/#_1","text":"g++ main.cpp -o program","title":"\u7f16\u8bd1\u5e76\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6"},{"location":"C%2B%2B/g%2B%2B/#_2","text":"g++ main.cpp -o program -g","title":"\u542f\u7528\u8c03\u8bd5\u4fe1\u606f"},{"location":"C%2B%2B/g%2B%2B/#_3","text":"g++ main.cpp -o program -O2","title":"\u542f\u7528\u4f18\u5316"},{"location":"C%2B%2B/g%2B%2B/#_4","text":"g++ main.cpp -o program -L/usr/lib -lmylib","title":"\u94fe\u63a5\u52a8\u6001\u5e93"},{"location":"C%2B%2B/g%2B%2B/#_5","text":"g++ -c mylib.cpp -o mylib.o ar rcs libmylib.a mylib.o","title":"\u751f\u6210\u9759\u6001\u5e93"},{"location":"C%2B%2B/g%2B%2B/#_6","text":"g++ -shared -fPIC mylib.cpp -o libmylib.so","title":"\u751f\u6210\u52a8\u6001\u5e93"},{"location":"C%2B%2B/g%2B%2B/#_7","text":"g++ \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u9009\u9879\uff0c\u7528\u4e8e\u63a7\u5236\u7f16\u8bd1\u3001\u4f18\u5316\u3001\u8c03\u8bd5\u548c\u94fe\u63a5\u7b49\u8fc7\u7a0b\u3002 \u5e38\u7528\u9009\u9879\u5305\u62ec -O \uff08\u4f18\u5316\uff09\u3001 -g \uff08\u8c03\u8bd5\u4fe1\u606f\uff09\u3001 -Wall \uff08\u8b66\u544a\uff09\u548c -pthread \uff08\u591a\u7ebf\u7a0b\u652f\u6301\uff09\u3002 \u6839\u636e\u9879\u76ee\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u9009\u9879\uff0c\u53ef\u4ee5\u63d0\u9ad8\u7f16\u8bd1\u6548\u7387\u548c\u7a0b\u5e8f\u6027\u80fd\u3002 \u4ee5\u4e0b\u662f\u6587\u4e2d\u63d0\u5230\u7684\u82f1\u6587\u5b57\u6bcd\u7f29\u5199\u53ca\u5176\u5168\u79f0\u548c\u542b\u4e49\uff1a","title":"\u603b\u7ed3"},{"location":"C%2B%2B/g%2B%2B/#1_1","text":"\u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -c Compile \u53ea\u7f16\u8bd1\u6e90\u6587\u4ef6\u4e3a\u76ee\u6807\u6587\u4ef6\uff08 .o \u6587\u4ef6\uff09\uff0c\u4e0d\u8fdb\u884c\u94fe\u63a5\u3002 -o Output \u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u7684\u540d\u79f0\u3002 -I Include \u6307\u5b9a\u5934\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\u3002 -L Library \u6307\u5b9a\u5e93\u6587\u4ef6\u7684\u641c\u7d22\u8def\u5f84\u3002 -l Library \u94fe\u63a5\u6307\u5b9a\u7684\u5e93\uff0c\u4f8b\u5982 -lm \u94fe\u63a5\u6570\u5b66\u5e93 libm.so \u3002 -std Standard \u6307\u5b9a C++ \u6807\u51c6\u7248\u672c\uff08\u5982 -std=c++11 \u3001 -std=c++17 \uff09\u3002 -fPIC Position Independent Code \u751f\u6210\u4f4d\u7f6e\u65e0\u5173\u4ee3\u7801\uff08\u901a\u5e38\u7528\u4e8e\u52a8\u6001\u5e93\uff09\u3002 -shared Shared \u751f\u6210\u5171\u4eab\u5e93\uff08\u52a8\u6001\u5e93\uff09\u3002 -static Static \u5f3a\u5236\u8fdb\u884c\u9759\u6001\u94fe\u63a5\u3002","title":"1. \u7f16\u8bd1\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#2_1","text":"\u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -O Optimization \u63a7\u5236\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7ea7\u522b\uff08\u5982 -O0 \u3001 -O2 \u3001 -O3 \uff09\u3002 -Os Optimize for Size \u4f18\u5316\u4ee3\u7801\u5927\u5c0f\uff0c\u9002\u5408\u5d4c\u5165\u5f0f\u7cfb\u7edf\u3002 -Og Optimize for Debugging \u4e3a\u8c03\u8bd5\u4f18\u5316\uff0c\u4fdd\u7559\u8c03\u8bd5\u4fe1\u606f\u7684\u540c\u65f6\u8fdb\u884c\u9002\u5ea6\u4f18\u5316\u3002 -march Machine Architecture \u4e3a\u6307\u5b9a\u7684 CPU \u67b6\u6784\u751f\u6210\u4f18\u5316\u4ee3\u7801\uff08\u5982 -march=native \uff09\u3002 -funroll-loops Unroll Loops \u5c55\u5f00\u5faa\u73af\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002","title":"2. \u4f18\u5316\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#3_1","text":"\u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -g Debug \u751f\u6210\u8c03\u8bd5\u4fe1\u606f\uff0c\u7528\u4e8e\u8c03\u8bd5\u5668\uff08\u5982 gdb \uff09\u3002 -ggdb GNU Debugger \u751f\u6210\u4e0e gdb \u517c\u5bb9\u7684\u8c03\u8bd5\u4fe1\u606f\u3002 -fno-omit-frame-pointer Frame Pointer \u4fdd\u7559\u5e27\u6307\u9488\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u548c\u6027\u80fd\u5206\u6790\u3002","title":"3. \u8c03\u8bd5\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#4_1","text":"\u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -pthread POSIX Thread \u94fe\u63a5\u7ebf\u7a0b\u5e93\uff0c\u652f\u6301\u591a\u7ebf\u7a0b\u7f16\u7a0b\u3002 -static Static \u5f3a\u5236\u8fdb\u884c\u9759\u6001\u94fe\u63a5\u3002 -shared Shared \u751f\u6210\u52a8\u6001\u5e93\uff08\u5171\u4eab\u5e93\uff09\u3002 -rdynamic Runtime Dynamic \u5bfc\u51fa\u6240\u6709\u7b26\u53f7\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u5668\u6216\u52a8\u6001\u52a0\u8f7d\u5668\u4f7f\u7528\u3002","title":"4. \u94fe\u63a5\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#5_1","text":"\u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -Wall All Warnings \u542f\u7528\u6240\u6709\u5e38\u89c1\u7684\u8b66\u544a\u3002 -Wextra Extra Warnings \u542f\u7528\u989d\u5916\u7684\u8b66\u544a\u3002 -Werror Warnings as Errors \u5c06\u6240\u6709\u8b66\u544a\u89c6\u4e3a\u9519\u8bef\u3002 -pedantic Pedantic \u5f3a\u5236\u9075\u5faa\u6807\u51c6\uff0c\u62a5\u544a\u6240\u6709\u975e\u6807\u51c6\u7684\u4ee3\u7801\u3002","title":"5. \u8b66\u544a\u548c\u9519\u8bef\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#6_1","text":"\u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -E Preprocess Only \u4ec5\u8fd0\u884c\u9884\u5904\u7406\u5668\uff0c\u4e0d\u8fdb\u884c\u7f16\u8bd1\u3002 -D Define \u5b9a\u4e49\u5b8f\uff0c\u4f8b\u5982 -DDEBUG \u3002 -U Undefine \u53d6\u6d88\u5b9a\u4e49\u5b8f\u3002","title":"6. \u9884\u5904\u7406\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#7_1","text":"\u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -v Verbose \u663e\u793a\u8be6\u7ec6\u7684\u7f16\u8bd1\u8fc7\u7a0b\u4fe1\u606f\u3002 -save-temps Save Temporary Files \u4fdd\u5b58\u4e2d\u95f4\u6587\u4ef6\uff08\u5982\u9884\u5904\u7406\u6587\u4ef6\u3001\u6c47\u7f16\u6587\u4ef6\uff09\u3002 -M Makefile Dependencies \u751f\u6210\u4f9d\u8d56\u6587\u4ef6\uff0c\u7528\u4e8e\u6784\u5efa\u7cfb\u7edf\uff08\u5982 make \uff09\u3002","title":"7. \u8f93\u51fa\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#8_1","text":"\u7f29\u5199 \u5168\u79f0 \u542b\u4e49 -std Standard \u6307\u5b9a C++ \u6807\u51c6\u7248\u672c\uff08\u5982 -std=c++11 \u3001 -std=c++17 \uff09\u3002 -fno-exceptions No Exceptions \u7981\u7528\u5f02\u5e38\u652f\u6301\u3002 -fno-rtti No Run-Time Type Info \u7981\u7528\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff08RTTI\uff09\u3002","title":"8. \u8bed\u8a00\u76f8\u5173\u9009\u9879"},{"location":"C%2B%2B/g%2B%2B/#_8","text":"\u8fd9\u4e9b\u9009\u9879\u7684\u7f29\u5199\u5927\u591a\u6765\u6e90\u4e8e\u5176\u529f\u80fd\u7684\u82f1\u6587\u5355\u8bcd\u9996\u5b57\u6bcd\u6216\u7f29\u5199\u5f62\u5f0f\uff0c\u4fbf\u4e8e\u5f00\u53d1\u8005\u5feb\u901f\u7406\u89e3\u548c\u4f7f\u7528\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/lambda/","text":"C++ Lambda \u51fd\u6570\u7528\u6cd5 \u4ec0\u4e48\u662f Lambda \u51fd\u6570\uff1f Lambda \u51fd\u6570\u662f C++11 \u5f15\u5165\u7684\u4e00\u79cd\u533f\u540d\u51fd\u6570\uff0c\u901a\u5e38\u7528\u4e8e\u7b80\u5316\u4ee3\u7801\u3002 \u5b83\u53ef\u4ee5\u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u5e76\u76f4\u63a5\u4f7f\u7528\uff0c\u800c\u65e0\u9700\u5355\u72ec\u58f0\u660e\u3002 \u57fa\u672c\u8bed\u6cd5 [ \u6355\u83b7\u5217\u8868 ]( \u53c2\u6570\u5217\u8868 ) -> \u8fd4\u56de\u7c7b\u578b { \u51fd\u6570\u4f53 }; \u6355\u83b7\u5217\u8868 \uff1a\u5b9a\u4e49 Lambda \u51fd\u6570\u5982\u4f55\u6355\u83b7\u5916\u90e8\u53d8\u91cf\u3002 \u53c2\u6570\u5217\u8868 \uff1a\u4f20\u9012\u7ed9 Lambda \u51fd\u6570\u7684\u53c2\u6570\u3002 \u8fd4\u56de\u7c7b\u578b \uff1a\u53ef\u9009\uff0c\u901a\u5e38\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u63a8\u5bfc\u3002 \u51fd\u6570\u4f53 \uff1aLambda \u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\u3002 \u6355\u83b7\u5217\u8868\u8be6\u89e3 \u6309\u503c\u6355\u83b7 \uff1a [x] \u6355\u83b7\u5916\u90e8\u53d8\u91cf x \u7684\u503c\u3002 \u6309\u5f15\u7528\u6355\u83b7 \uff1a [&x] \u6355\u83b7\u5916\u90e8\u53d8\u91cf x \u7684\u5f15\u7528\u3002 \u5168\u90e8\u6309\u503c\u6355\u83b7 \uff1a [=] \u6355\u83b7\u6240\u6709\u5916\u90e8\u53d8\u91cf\u7684\u503c\u3002 \u5168\u90e8\u6309\u5f15\u7528\u6355\u83b7 \uff1a [&] \u6355\u83b7\u6240\u6709\u5916\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u3002 \u6df7\u5408\u6355\u83b7 \uff1a [x, &y] \u6309\u503c\u6355\u83b7 x \uff0c\u6309\u5f15\u7528\u6355\u83b7 y \u3002 \u5728 std::sort \u4e2d\u7684\u7528\u6cd5 \u7528 Lambda \u51fd\u6570\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219 std::sort \u662f C++ \u6807\u51c6\u5e93\u4e2d\u7684\u6392\u5e8f\u51fd\u6570\uff0c\u652f\u6301\u901a\u8fc7 Lambda \u51fd\u6570\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\u3002 std::sort \u4f1a\u4f9d\u6b21\u53d6\u51fa\u5bb9\u5668\u4e2d\u7684\u4e24\u4e2a\u5143\u7d20 a \u548c b \u3002 \u4f7f\u7528 Lambda \u51fd\u6570 [](int a, int b) { return a < b; } \u6bd4\u8f83\u8fd9\u4e24\u4e2a\u5143\u7d20\u3002 \u5982\u679c\u8fd4\u56de\u503c\u4e3a true \uff0c\u5219 a \u6392\u5728 b \u524d\u9762\uff1b\u5426\u5219\uff0c b \u6392\u5728 a \u524d\u9762\u3002 \u6700\u7ec8\uff0c\u5bb9\u5668 A \u6309\u5347\u5e8f\u6392\u5217\u3002 \u603b\u7ed3 Lambda \u51fd\u6570\u7684\u4f18\u70b9 \uff1a \u7b80\u6d01\u3001\u7075\u6d3b\uff0c\u9002\u5408\u4e34\u65f6\u4f7f\u7528\u7684\u51fd\u6570\u3002 \u53ef\u4ee5\u6355\u83b7\u5916\u90e8\u53d8\u91cf\uff0c\u65b9\u4fbf\u5728\u5c40\u90e8\u8303\u56f4\u5185\u4f7f\u7528\u3002 \u5728 std::sort \u4e2d\u7684\u5e94\u7528 \uff1a \u4f7f\u7528 Lambda \u51fd\u6570\u53ef\u4ee5\u8f7b\u677e\u5b9a\u4e49\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\u3002 \u4f8b\u5982\uff0c\u6309\u5347\u5e8f\u3001\u964d\u5e8f\u6216\u57fa\u4e8e\u67d0\u4e9b\u6761\u4ef6\u6392\u5e8f\u3002 sort ( A . begin (), A . end (),[]( int a , int b ){ return a < b ;});","title":"lambda\u51fd\u6570"},{"location":"C%2B%2B/lambda/#c-lambda","text":"","title":"C++ Lambda \u51fd\u6570\u7528\u6cd5"},{"location":"C%2B%2B/lambda/#lambda","text":"Lambda \u51fd\u6570\u662f C++11 \u5f15\u5165\u7684\u4e00\u79cd\u533f\u540d\u51fd\u6570\uff0c\u901a\u5e38\u7528\u4e8e\u7b80\u5316\u4ee3\u7801\u3002 \u5b83\u53ef\u4ee5\u5728\u51fd\u6570\u5185\u90e8\u5b9a\u4e49\u5e76\u76f4\u63a5\u4f7f\u7528\uff0c\u800c\u65e0\u9700\u5355\u72ec\u58f0\u660e\u3002","title":"\u4ec0\u4e48\u662f Lambda \u51fd\u6570\uff1f"},{"location":"C%2B%2B/lambda/#_1","text":"[ \u6355\u83b7\u5217\u8868 ]( \u53c2\u6570\u5217\u8868 ) -> \u8fd4\u56de\u7c7b\u578b { \u51fd\u6570\u4f53 }; \u6355\u83b7\u5217\u8868 \uff1a\u5b9a\u4e49 Lambda \u51fd\u6570\u5982\u4f55\u6355\u83b7\u5916\u90e8\u53d8\u91cf\u3002 \u53c2\u6570\u5217\u8868 \uff1a\u4f20\u9012\u7ed9 Lambda \u51fd\u6570\u7684\u53c2\u6570\u3002 \u8fd4\u56de\u7c7b\u578b \uff1a\u53ef\u9009\uff0c\u901a\u5e38\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u63a8\u5bfc\u3002 \u51fd\u6570\u4f53 \uff1aLambda \u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\u3002","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"C%2B%2B/lambda/#_2","text":"\u6309\u503c\u6355\u83b7 \uff1a [x] \u6355\u83b7\u5916\u90e8\u53d8\u91cf x \u7684\u503c\u3002 \u6309\u5f15\u7528\u6355\u83b7 \uff1a [&x] \u6355\u83b7\u5916\u90e8\u53d8\u91cf x \u7684\u5f15\u7528\u3002 \u5168\u90e8\u6309\u503c\u6355\u83b7 \uff1a [=] \u6355\u83b7\u6240\u6709\u5916\u90e8\u53d8\u91cf\u7684\u503c\u3002 \u5168\u90e8\u6309\u5f15\u7528\u6355\u83b7 \uff1a [&] \u6355\u83b7\u6240\u6709\u5916\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u3002 \u6df7\u5408\u6355\u83b7 \uff1a [x, &y] \u6309\u503c\u6355\u83b7 x \uff0c\u6309\u5f15\u7528\u6355\u83b7 y \u3002","title":"\u6355\u83b7\u5217\u8868\u8be6\u89e3"},{"location":"C%2B%2B/lambda/#stdsort","text":"","title":"\u5728 std::sort \u4e2d\u7684\u7528\u6cd5"},{"location":"C%2B%2B/lambda/#lambda_1","text":"std::sort \u662f C++ \u6807\u51c6\u5e93\u4e2d\u7684\u6392\u5e8f\u51fd\u6570\uff0c\u652f\u6301\u901a\u8fc7 Lambda \u51fd\u6570\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\u3002 std::sort \u4f1a\u4f9d\u6b21\u53d6\u51fa\u5bb9\u5668\u4e2d\u7684\u4e24\u4e2a\u5143\u7d20 a \u548c b \u3002 \u4f7f\u7528 Lambda \u51fd\u6570 [](int a, int b) { return a < b; } \u6bd4\u8f83\u8fd9\u4e24\u4e2a\u5143\u7d20\u3002 \u5982\u679c\u8fd4\u56de\u503c\u4e3a true \uff0c\u5219 a \u6392\u5728 b \u524d\u9762\uff1b\u5426\u5219\uff0c b \u6392\u5728 a \u524d\u9762\u3002 \u6700\u7ec8\uff0c\u5bb9\u5668 A \u6309\u5347\u5e8f\u6392\u5217\u3002","title":"\u7528 Lambda \u51fd\u6570\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219"},{"location":"C%2B%2B/lambda/#_3","text":"Lambda \u51fd\u6570\u7684\u4f18\u70b9 \uff1a \u7b80\u6d01\u3001\u7075\u6d3b\uff0c\u9002\u5408\u4e34\u65f6\u4f7f\u7528\u7684\u51fd\u6570\u3002 \u53ef\u4ee5\u6355\u83b7\u5916\u90e8\u53d8\u91cf\uff0c\u65b9\u4fbf\u5728\u5c40\u90e8\u8303\u56f4\u5185\u4f7f\u7528\u3002 \u5728 std::sort \u4e2d\u7684\u5e94\u7528 \uff1a \u4f7f\u7528 Lambda \u51fd\u6570\u53ef\u4ee5\u8f7b\u677e\u5b9a\u4e49\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\u3002 \u4f8b\u5982\uff0c\u6309\u5347\u5e8f\u3001\u964d\u5e8f\u6216\u57fa\u4e8e\u67d0\u4e9b\u6761\u4ef6\u6392\u5e8f\u3002 sort ( A . begin (), A . end (),[]( int a , int b ){ return a < b ;});","title":"\u603b\u7ed3"},{"location":"C%2B%2B/mixed/","text":"c++\u77e5\u8bc6\u70b9\u6742\u8c08 \u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570 \u8981\u5728 C++ \u4e2d\u8f93\u51fa\u6307\u5b9a\u4f4d\u6570\u7684\u5c0f\u6570\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a \u6b65\u9aa4 1\uff1a\u5305\u542b\u5934\u6587\u4ef6 \u9700\u8981\u5305\u542b <iomanip> \u5934\u6587\u4ef6\uff1a #include <iomanip> \u6b65\u9aa4 2\uff1a\u4f7f\u7528 fixed \u548c setprecision fixed \uff1a\u5f3a\u5236\u4ee5\u56fa\u5b9a\u7684\u5c0f\u6570\u70b9\u683c\u5f0f\u8f93\u51fa\uff0c\u800c\u4e0d\u662f\u79d1\u5b66\u8ba1\u6570\u6cd5\u3002 setprecision(n) \uff1a\u8bbe\u7f6e\u5c0f\u6570\u70b9\u540e\u4fdd\u7559 n \u4f4d\u3002 \u793a\u4f8b\uff1a #include <iostream> #include <iomanip> using namespace std ; int main () { double value = 3.14159 ; cout << fixed << setprecision ( 2 ) << value << endl ; // \u8f93\u51fa 3.14 return 0 ; } \u6b65\u9aa4 3\uff1a\u5168\u5c40\u8bbe\u7f6e\uff08\u53ef\u9009\uff09 \u5982\u679c\u9700\u8981\u5168\u5c40\u8bbe\u7f6e\u5c0f\u6570\u70b9\u683c\u5f0f\uff0c\u53ef\u4ee5\u5728\u7a0b\u5e8f\u5f00\u5934\u8bbe\u7f6e\u4e00\u6b21\uff1a cout << fixed << setprecision ( 2 ); \u4e4b\u540e\u6240\u6709\u6d6e\u70b9\u6570\u8f93\u51fa\u90fd\u4f1a\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\u3002 \u6ce8\u610f\u4e8b\u9879 fixed \u5fc5\u987b\u4e0e setprecision \u4e00\u8d77\u4f7f\u7528 \uff1a \u5982\u679c\u53ea\u4f7f\u7528 setprecision \uff0c\u4f1a\u8bbe\u7f6e\u6d6e\u70b9\u6570\u7684\u603b\u6709\u6548\u6570\u5b57\uff0c\u800c\u4e0d\u662f\u5c0f\u6570\u70b9\u540e\u7684\u4f4d\u6570\u3002 \u786e\u4fdd\u5305\u542b <iomanip> \uff1a \u5982\u679c\u672a\u5305\u542b <iomanip> \uff0c setprecision \u548c fixed \u65e0\u6cd5\u4f7f\u7528\u3002 ++x \u548c x++ 1. ++x \uff08\u524d\u7f6e\u81ea\u589e\uff09 \u5b9a\u4e49 \uff1a\u524d\u7f6e\u81ea\u589e\u8fd0\u7b97\u7b26\u4f1a\u5148\u5c06\u53d8\u91cf\u7684\u503c\u52a0 1\uff0c\u7136\u540e\u8fd4\u56de\u52a0 1 \u540e\u7684\u503c\u3002 \u6267\u884c\u987a\u5e8f \uff1a \u53d8\u91cf\u7684\u503c\u5148\u81ea\u589e\u3002 \u8fd4\u56de\u81ea\u589e\u540e\u7684\u503c\u3002 \u6548\u7387 \uff1a\u901a\u5e38\u6bd4\u540e\u7f6e\u81ea\u589e\u6548\u7387\u66f4\u9ad8\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u521b\u5efa\u4e34\u65f6\u5bf9\u8c61\u3002 \u793a\u4f8b int x = 5 ; int y = ++ x ; // x \u5148\u52a0 1\uff0c\u7136\u540e\u5c06\u52a0 1 \u540e\u7684\u503c\u8d4b\u7ed9 y cout << \"x = \" << x << \", y = \" << y << endl ; \u8f93\u51fa \uff1a x = 6, y = 6 2. x++ \uff08\u540e\u7f6e\u81ea\u589e\uff09 \u5b9a\u4e49 \uff1a\u540e\u7f6e\u81ea\u589e\u8fd0\u7b97\u7b26\u4f1a\u5148\u8fd4\u56de\u53d8\u91cf\u7684\u5f53\u524d\u503c\uff0c\u7136\u540e\u518d\u5c06\u53d8\u91cf\u7684\u503c\u52a0 1\u3002 \u6267\u884c\u987a\u5e8f \uff1a \u8fd4\u56de\u53d8\u91cf\u7684\u5f53\u524d\u503c\u3002 \u53d8\u91cf\u7684\u503c\u518d\u81ea\u589e\u3002 \u6548\u7387 \uff1a\u901a\u5e38\u6bd4\u524d\u7f6e\u81ea\u589e\u7a0d\u6162\uff0c\u56e0\u4e3a\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\u6765\u4fdd\u5b58\u53d8\u91cf\u7684\u539f\u59cb\u503c\u3002 \u793a\u4f8b int x = 5 ; int y = x ++ ; // \u5148\u5c06 x \u7684\u5f53\u524d\u503c\u8d4b\u7ed9 y\uff0c\u7136\u540e x \u518d\u52a0 1 cout << \"x = \" << x << \", y = \" << y << endl ; \u8f93\u51fa \uff1a x = 6, y = 5 3. \u524d\u7f6e\u548c\u540e\u7f6e\u81ea\u589e\u7684\u5b9e\u73b0 \u5728 C++ \u4e2d\uff0c\u81ea\u589e\u8fd0\u7b97\u7b26\u53ef\u4ee5\u901a\u8fc7\u8fd0\u7b97\u7b26\u91cd\u8f7d\u6765\u5b9e\u73b0\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a \u524d\u7f6e\u81ea\u589e\uff08 ++x \uff09 class Counter { private : int value ; public : Counter ( int v ) : value ( v ) {} // \u524d\u7f6e\u81ea\u589e Counter & operator ++ () { ++ value ; // \u5148\u81ea\u589e return * this ; // \u8fd4\u56de\u81ea\u589e\u540e\u7684\u5f53\u524d\u5bf9\u8c61 } void display () const { cout << \"Value: \" << value << endl ; } }; \u540e\u7f6e\u81ea\u589e\uff08 x++ \uff09 class Counter { private : int value ; public : Counter ( int v ) : value ( v ) {} // \u540e\u7f6e\u81ea\u589e Counter operator ++ ( int ) { Counter temp = * this ; // \u4fdd\u5b58\u5f53\u524d\u5bf9\u8c61\u7684\u526f\u672c ++ value ; // \u81ea\u589e return temp ; // \u8fd4\u56de\u539f\u59cb\u503c\uff08\u526f\u672c\uff09 } void display () const { cout << \"Value: \" << value << endl ; } }; 4. \u793a\u4f8b\u5bf9\u6bd4 #include <iostream> using namespace std ; class Counter { private : int value ; public : Counter ( int v ) : value ( v ) {} // \u524d\u7f6e\u81ea\u589e Counter & operator ++ () { ++ value ; return * this ; } // \u540e\u7f6e\u81ea\u589e Counter operator ++ ( int ) { Counter temp = * this ; ++ value ; return temp ; } void display () const { cout << \"Value: \" << value << endl ; } }; int main () { Counter c ( 5 ); cout << \"Using ++c (\u524d\u7f6e\u81ea\u589e):\" << endl ; ++ c ; // \u524d\u7f6e\u81ea\u589e c . display (); cout << \"Using c++ (\u540e\u7f6e\u81ea\u589e):\" << endl ; c ++ ; // \u540e\u7f6e\u81ea\u589e c . display (); return 0 ; } \u8f93\u51fa \uff1a Using ++c (\u524d\u7f6e\u81ea\u589e): Value: 6 Using c++ (\u540e\u7f6e\u81ea\u589e): Value: 7 5. \u603b\u7ed3 \u7279\u6027 \u524d\u7f6e\u81ea\u589e\uff08 ++x \uff09 \u540e\u7f6e\u81ea\u589e\uff08 x++ \uff09 \u6267\u884c\u987a\u5e8f \u5148\u81ea\u589e\uff0c\u518d\u8fd4\u56de\u81ea\u589e\u540e\u7684\u503c \u5148\u8fd4\u56de\u5f53\u524d\u503c\uff0c\u518d\u81ea\u589e \u8fd4\u56de\u503c \u81ea\u589e\u540e\u7684\u503c \u81ea\u589e\u524d\u7684\u503c \u6548\u7387 \u901a\u5e38\u66f4\u9ad8\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u521b\u5efa\u4e34\u65f6\u5bf9\u8c61 \u901a\u5e38\u7a0d\u6162\uff0c\u56e0\u4e3a\u9700\u8981\u521b\u5efa\u4e34\u65f6\u5bf9\u8c61 \u9002\u7528\u573a\u666f \u66f4\u9002\u5408\u9700\u8981\u7acb\u5373\u4f7f\u7528\u81ea\u589e\u540e\u7684\u503c\u7684\u573a\u666f \u66f4\u9002\u5408\u9700\u8981\u4fdd\u7559\u81ea\u589e\u524d\u503c\u7684\u573a\u666f \u6839\u636e\u5177\u4f53\u9700\u6c42\u9009\u62e9\u4f7f\u7528 ++x \u6216 x++ \uff0c\u5728\u6027\u80fd\u654f\u611f\u7684\u573a\u666f\u4e0b\uff0c\u4f18\u5148\u8003\u8651\u4f7f\u7528\u524d\u7f6e\u81ea\u589e\uff08 ++x \uff09\u3002 \u7f16\u8bd1\u5668\u600e\u4e48\u533a\u5206\u8c03\u7528\u524d\u7f6e\u81ea\u589e\u8fd8\u662f\u540e\u7f6e\u81ea\u589e 1. \u524d\u7f6e\u81ea\u589e\uff08 ++x \uff09 \u8c03\u7528\u8bed\u6cd5 \uff1a ++x \u51fd\u6570\u7b7e\u540d \uff1a Counter & operator ++ (); \u7279\u70b9 \uff1a \u4e0d\u5e26\u53c2\u6570\u3002 \u7f16\u8bd1\u5668\u4f1a\u5339\u914d\u5230\u6ca1\u6709\u53c2\u6570\u7684 operator++() \u51fd\u6570\u3002 2. \u540e\u7f6e\u81ea\u589e\uff08 x++ \uff09 \u8c03\u7528\u8bed\u6cd5 \uff1a x++ \u51fd\u6570\u7b7e\u540d \uff1a Counter operator ++ ( int ); \u7279\u70b9 \uff1a \u5e26\u4e00\u4e2a int \u7c7b\u578b\u7684 \u54d1\u53c2\u6570 \u3002 \u7f16\u8bd1\u5668\u4f1a\u5339\u914d\u5230\u5e26\u6709 int \u53c2\u6570\u7684 operator++(int) \u51fd\u6570\u3002 \u8fd9\u4e2a int \u53c2\u6570\u4ec5\u7528\u4e8e\u533a\u5206\u540e\u7f6e\u81ea\u589e\uff0c\u8c03\u7528\u65f6\u4e0d\u4f1a\u4f20\u9012\u5b9e\u9645\u7684\u503c\u3002 3. \u7f16\u8bd1\u5668\u5982\u4f55\u533a\u5206\uff1f \u8c03\u7528 ++x \uff08\u524d\u7f6e\u81ea\u589e\uff09 \u5f53\u7f16\u8bd1\u5668\u770b\u5230 ++x \u65f6\uff1a \u5b83\u4f1a\u67e5\u627e operator++() \u51fd\u6570\uff08\u4e0d\u5e26\u53c2\u6570\uff09\u3002 \u5982\u679c\u627e\u5230\u5339\u914d\u7684\u51fd\u6570\uff0c\u5c31\u8c03\u7528\u5b83\u3002 \u8c03\u7528 x++ \uff08\u540e\u7f6e\u81ea\u589e\uff09 \u5f53\u7f16\u8bd1\u5668\u770b\u5230 x++ \u65f6\uff1a \u5b83\u4f1a\u67e5\u627e operator++(int) \u51fd\u6570\uff08\u5e26\u4e00\u4e2a int \u53c2\u6570\uff09\u3002 \u5982\u679c\u627e\u5230\u5339\u914d\u7684\u51fd\u6570\uff0c\u5c31\u8c03\u7528\u5b83\u3002 \u5185\u5b58\u6cc4\u6f0f\u548c\u6307\u9488\u60ac\u6302\u5e38\u53d1\u751f\u5728\u54ea\u4e9b\u60c5\u51b5\uff0c\u4f1a\u6709\u4ec0\u4e48\u5371\u5bb3 1. \u5185\u5b58\u6cc4\u6f0f \u5b9a\u4e49 \u5185\u5b58\u6cc4\u6f0f\u662f\u6307\u7a0b\u5e8f\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u672a\u88ab\u91ca\u653e\uff0c\u5bfc\u81f4\u5185\u5b58\u8d44\u6e90\u65e0\u6cd5\u88ab\u56de\u6536\u548c\u91cd\u7528\u3002 \u5e38\u89c1\u60c5\u51b5 \u52a8\u6001\u5206\u914d\u5185\u5b58\u672a\u91ca\u653e \u4f7f\u7528 new \u6216 malloc \u5206\u914d\u7684\u5185\u5b58\u6ca1\u6709\u4f7f\u7528 delete \u6216 free \u91ca\u653e\u3002 int * ptr = new int ( 10 ); // \u5fd8\u8bb0 delete ptr\uff0c\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f \u5f02\u5e38\u5bfc\u81f4\u672a\u91ca\u653e \u5728\u52a8\u6001\u5206\u914d\u5185\u5b58\u540e\uff0c\u7a0b\u5e8f\u629b\u51fa\u5f02\u5e38\uff0c\u5bfc\u81f4\u91ca\u653e\u5185\u5b58\u7684\u4ee3\u7801\u672a\u88ab\u6267\u884c\u3002 int * ptr = new int ( 10 ); throw std :: runtime_error ( \"Error\" ); // \u672a\u91ca\u653e ptr \u5faa\u73af\u5f15\u7528\uff08\u667a\u80fd\u6307\u9488\uff09 \u4f7f\u7528 std::shared_ptr \u65f6\uff0c\u4e24\u4e2a\u5bf9\u8c61\u4e92\u76f8\u5f15\u7528\uff0c\u5bfc\u81f4\u5f15\u7528\u8ba1\u6570\u65e0\u6cd5\u5f52\u96f6\uff0c\u5185\u5b58\u65e0\u6cd5\u91ca\u653e\u3002 struct Node { std :: shared_ptr < Node > next ; }; \u672a\u91ca\u653e\u5bb9\u5668\u4e2d\u7684\u52a8\u6001\u5185\u5b58 \u5bb9\u5668\u4e2d\u5b58\u50a8\u4e86\u52a8\u6001\u5206\u914d\u7684\u6307\u9488\uff0c\u4f46\u5728\u5bb9\u5668\u9500\u6bc1\u65f6\u672a\u91ca\u653e\u8fd9\u4e9b\u6307\u9488\u3002 std :: vector < int *> vec ; vec . push_back ( new int ( 10 )); // \u672a\u91ca\u653e vec \u4e2d\u7684\u6307\u9488 \u5371\u5bb3 \u5185\u5b58\u5360\u7528\u589e\u52a0 \uff1a\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\u8d8a\u957f\uff0c\u672a\u91ca\u653e\u7684\u5185\u5b58\u8d8a\u591a\uff0c\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edf\u5185\u5b58\u8017\u5c3d\u3002 \u6027\u80fd\u4e0b\u964d \uff1a\u5185\u5b58\u6cc4\u6f0f\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u9891\u7e41\u8fdb\u884c\u5185\u5b58\u5206\u914d\u548c\u56de\u6536\uff0c\u964d\u4f4e\u6027\u80fd\u3002 \u7a0b\u5e8f\u5d29\u6e83 \uff1a\u5f53\u7cfb\u7edf\u5185\u5b58\u8017\u5c3d\u65f6\uff0c\u7a0b\u5e8f\u53ef\u80fd\u65e0\u6cd5\u7ee7\u7eed\u8fd0\u884c\u3002 2. \u6307\u9488\u60ac\u6302 \u5b9a\u4e49 \u6307\u9488\u60ac\u6302\u662f\u6307\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u5df2\u7ecf\u88ab\u91ca\u653e\u6216\u8d85\u51fa\u4f5c\u7528\u57df\uff0c\u4f46\u6307\u9488\u4ecd\u7136\u4fdd\u7559\u539f\u6765\u7684\u5730\u5740\u3002 \u5e38\u89c1\u60c5\u51b5 \u91ca\u653e\u5185\u5b58\u540e\u672a\u5c06\u6307\u9488\u7f6e\u7a7a \u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u88ab\u91ca\u653e\u540e\uff0c\u6307\u9488\u4ecd\u7136\u6307\u5411\u539f\u6765\u7684\u5730\u5740\u3002 int * ptr = new int ( 10 ); delete ptr ; // ptr \u4ecd\u7136\u6307\u5411\u5df2\u91ca\u653e\u7684\u5185\u5b58 \u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740 \u51fd\u6570\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u51fd\u6570\u7ed3\u675f\u540e\u88ab\u9500\u6bc1\u3002 int * func () { int x = 10 ; return & x ; // \u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u5730\u5740 } \u591a\u6307\u9488\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58 \u591a\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\uff0c\u5176\u4e2d\u4e00\u4e2a\u6307\u9488\u91ca\u653e\u4e86\u5185\u5b58\uff0c\u5176\u4ed6\u6307\u9488\u53d8\u4e3a\u60ac\u6302\u6307\u9488\u3002 int * ptr1 = new int ( 10 ); int * ptr2 = ptr1 ; delete ptr1 ; // ptr2 \u6210\u4e3a\u60ac\u6302\u6307\u9488 \u5bb9\u5668\u4e2d\u5b58\u50a8\u7684\u6307\u9488\u88ab\u91ca\u653e \u5bb9\u5668\u4e2d\u5b58\u50a8\u7684\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u88ab\u91ca\u653e\uff0c\u4f46\u5bb9\u5668\u4e2d\u7684\u6307\u9488\u4ecd\u7136\u5b58\u5728\u3002 std :: vector < int *> vec ; int * ptr = new int ( 10 ); vec . push_back ( ptr ); delete ptr ; // vec \u4e2d\u7684\u6307\u9488\u60ac\u6302 \u5371\u5bb3 \u672a\u5b9a\u4e49\u884c\u4e3a \uff1a\u8bbf\u95ee\u60ac\u6302\u6307\u9488\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u6216\u4ea7\u751f\u4e0d\u53ef\u9884\u6d4b\u7684\u884c\u4e3a\u3002 \u6570\u636e\u635f\u574f \uff1a\u60ac\u6302\u6307\u9488\u53ef\u80fd\u6307\u5411\u5df2\u88ab\u5176\u4ed6\u5bf9\u8c61\u4f7f\u7528\u7684\u5185\u5b58\uff0c\u5bfc\u81f4\u6570\u636e\u88ab\u610f\u5916\u4fee\u6539\u3002 \u8c03\u8bd5\u56f0\u96be \uff1a\u60ac\u6302\u6307\u9488\u7684\u95ee\u9898\u901a\u5e38\u96be\u4ee5\u5b9a\u4f4d\uff0c\u53ef\u80fd\u5728\u7a0b\u5e8f\u8fd0\u884c\u7684\u67d0\u4e2a\u968f\u673a\u65f6\u523b\u89e6\u53d1\u3002 \u5982\u4f55\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u548c\u6307\u9488\u60ac\u6302 1. \u907f\u514d\u5185\u5b58\u6cc4\u6f0f \u4f7f\u7528\u667a\u80fd\u6307\u9488 \uff1a \u4f7f\u7528 std::unique_ptr \u6216 std::shared_ptr \u7ba1\u7406\u52a8\u6001\u5185\u5b58\uff0c\u907f\u514d\u624b\u52a8\u91ca\u653e\u3002 std :: unique_ptr < int > ptr = std :: make_unique < int > ( 10 ); \u53ca\u65f6\u91ca\u653e\u5185\u5b58 \uff1a \u5728\u52a8\u6001\u5206\u914d\u5185\u5b58\u540e\uff0c\u786e\u4fdd\u5728\u9002\u5f53\u7684\u65f6\u673a\u91ca\u653e\u5185\u5b58\u3002 int * ptr = new int ( 10 ); delete ptr ; \u4f7f\u7528 RAII\uff08\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316\uff09 \uff1a \u5c06\u8d44\u6e90\u7684\u5206\u914d\u548c\u91ca\u653e\u5c01\u88c5\u5728\u7c7b\u4e2d\uff0c\u5229\u7528\u6790\u6784\u51fd\u6570\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\u3002 class Resource { int * ptr ; public : Resource () : ptr ( new int ( 10 )) {} ~ Resource () { delete ptr ; } }; 2. \u907f\u514d\u6307\u9488\u60ac\u6302 \u91ca\u653e\u540e\u7f6e\u7a7a \uff1a \u5728\u91ca\u653e\u52a8\u6001\u5185\u5b58\u540e\uff0c\u5c06\u6307\u9488\u7f6e\u4e3a nullptr \u3002 int * ptr = new int ( 10 ); delete ptr ; ptr = nullptr ; \u907f\u514d\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740 \uff1a \u5982\u679c\u9700\u8981\u8fd4\u56de\u6570\u636e\uff0c\u4f7f\u7528\u52a8\u6001\u5206\u914d\u6216\u4f20\u9012\u5f15\u7528\u3002 int * func () { return new int ( 10 ); // \u8fd4\u56de\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58 } \u4f7f\u7528\u667a\u80fd\u6307\u9488 \uff1a \u667a\u80fd\u6307\u9488\u4f1a\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u907f\u514d\u60ac\u6302\u6307\u9488\u95ee\u9898\u3002 std :: shared_ptr < int > ptr1 = std :: make_shared < int > ( 10 ); std :: shared_ptr < int > ptr2 = ptr1 ; // \u81ea\u52a8\u7ba1\u7406\u5f15\u7528\u8ba1\u6570 \u603b\u7ed3 \u95ee\u9898 \u5e38\u89c1\u60c5\u51b5 \u5371\u5bb3 \u5185\u5b58\u6cc4\u6f0f \u52a8\u6001\u5206\u914d\u672a\u91ca\u653e\u3001\u5f02\u5e38\u4e2d\u65ad\u3001\u5faa\u73af\u5f15\u7528\u3001\u5bb9\u5668\u4e2d\u52a8\u6001\u5185\u5b58\u672a\u91ca\u653e \u5185\u5b58\u5360\u7528\u589e\u52a0\u3001\u6027\u80fd\u4e0b\u964d\u3001\u7a0b\u5e8f\u5d29\u6e83 \u6307\u9488\u60ac\u6302 \u91ca\u653e\u540e\u672a\u7f6e\u7a7a\u3001\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u5730\u5740\u3001\u591a\u6307\u9488\u6307\u5411\u540c\u4e00\u5185\u5b58\u3001\u5bb9\u5668\u4e2d\u6307\u9488\u88ab\u91ca\u653e \u672a\u5b9a\u4e49\u884c\u4e3a\u3001\u6570\u636e\u635f\u574f\u3001\u8c03\u8bd5\u56f0\u96be \u901a\u8fc7\u4f7f\u7528\u667a\u80fd\u6307\u9488\u3001RAII \u548c\u826f\u597d\u7684\u7f16\u7801\u4e60\u60ef\uff0c\u53ef\u4ee5\u6709\u6548\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u548c\u6307\u9488\u60ac\u6302\u95ee\u9898\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u7a33\u5b9a\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002","title":"C++\u77e5\u8bc6\u70b9\u6742\u8c08"},{"location":"C%2B%2B/mixed/#c","text":"","title":"c++\u77e5\u8bc6\u70b9\u6742\u8c08"},{"location":"C%2B%2B/mixed/#_1","text":"\u8981\u5728 C++ \u4e2d\u8f93\u51fa\u6307\u5b9a\u4f4d\u6570\u7684\u5c0f\u6570\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a","title":"\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570"},{"location":"C%2B%2B/mixed/#1","text":"\u9700\u8981\u5305\u542b <iomanip> \u5934\u6587\u4ef6\uff1a #include <iomanip>","title":"\u6b65\u9aa4 1\uff1a\u5305\u542b\u5934\u6587\u4ef6"},{"location":"C%2B%2B/mixed/#2-fixed-setprecision","text":"fixed \uff1a\u5f3a\u5236\u4ee5\u56fa\u5b9a\u7684\u5c0f\u6570\u70b9\u683c\u5f0f\u8f93\u51fa\uff0c\u800c\u4e0d\u662f\u79d1\u5b66\u8ba1\u6570\u6cd5\u3002 setprecision(n) \uff1a\u8bbe\u7f6e\u5c0f\u6570\u70b9\u540e\u4fdd\u7559 n \u4f4d\u3002 \u793a\u4f8b\uff1a #include <iostream> #include <iomanip> using namespace std ; int main () { double value = 3.14159 ; cout << fixed << setprecision ( 2 ) << value << endl ; // \u8f93\u51fa 3.14 return 0 ; }","title":"\u6b65\u9aa4 2\uff1a\u4f7f\u7528 fixed \u548c setprecision"},{"location":"C%2B%2B/mixed/#3","text":"\u5982\u679c\u9700\u8981\u5168\u5c40\u8bbe\u7f6e\u5c0f\u6570\u70b9\u683c\u5f0f\uff0c\u53ef\u4ee5\u5728\u7a0b\u5e8f\u5f00\u5934\u8bbe\u7f6e\u4e00\u6b21\uff1a cout << fixed << setprecision ( 2 ); \u4e4b\u540e\u6240\u6709\u6d6e\u70b9\u6570\u8f93\u51fa\u90fd\u4f1a\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\u3002","title":"\u6b65\u9aa4 3\uff1a\u5168\u5c40\u8bbe\u7f6e\uff08\u53ef\u9009\uff09"},{"location":"C%2B%2B/mixed/#_2","text":"fixed \u5fc5\u987b\u4e0e setprecision \u4e00\u8d77\u4f7f\u7528 \uff1a \u5982\u679c\u53ea\u4f7f\u7528 setprecision \uff0c\u4f1a\u8bbe\u7f6e\u6d6e\u70b9\u6570\u7684\u603b\u6709\u6548\u6570\u5b57\uff0c\u800c\u4e0d\u662f\u5c0f\u6570\u70b9\u540e\u7684\u4f4d\u6570\u3002 \u786e\u4fdd\u5305\u542b <iomanip> \uff1a \u5982\u679c\u672a\u5305\u542b <iomanip> \uff0c setprecision \u548c fixed \u65e0\u6cd5\u4f7f\u7528\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/mixed/#x-x","text":"","title":"++x \u548c x++"},{"location":"C%2B%2B/mixed/#1-x","text":"\u5b9a\u4e49 \uff1a\u524d\u7f6e\u81ea\u589e\u8fd0\u7b97\u7b26\u4f1a\u5148\u5c06\u53d8\u91cf\u7684\u503c\u52a0 1\uff0c\u7136\u540e\u8fd4\u56de\u52a0 1 \u540e\u7684\u503c\u3002 \u6267\u884c\u987a\u5e8f \uff1a \u53d8\u91cf\u7684\u503c\u5148\u81ea\u589e\u3002 \u8fd4\u56de\u81ea\u589e\u540e\u7684\u503c\u3002 \u6548\u7387 \uff1a\u901a\u5e38\u6bd4\u540e\u7f6e\u81ea\u589e\u6548\u7387\u66f4\u9ad8\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u521b\u5efa\u4e34\u65f6\u5bf9\u8c61\u3002","title":"1. ++x\uff08\u524d\u7f6e\u81ea\u589e\uff09"},{"location":"C%2B%2B/mixed/#_3","text":"int x = 5 ; int y = ++ x ; // x \u5148\u52a0 1\uff0c\u7136\u540e\u5c06\u52a0 1 \u540e\u7684\u503c\u8d4b\u7ed9 y cout << \"x = \" << x << \", y = \" << y << endl ; \u8f93\u51fa \uff1a x = 6, y = 6","title":"\u793a\u4f8b"},{"location":"C%2B%2B/mixed/#2-x","text":"\u5b9a\u4e49 \uff1a\u540e\u7f6e\u81ea\u589e\u8fd0\u7b97\u7b26\u4f1a\u5148\u8fd4\u56de\u53d8\u91cf\u7684\u5f53\u524d\u503c\uff0c\u7136\u540e\u518d\u5c06\u53d8\u91cf\u7684\u503c\u52a0 1\u3002 \u6267\u884c\u987a\u5e8f \uff1a \u8fd4\u56de\u53d8\u91cf\u7684\u5f53\u524d\u503c\u3002 \u53d8\u91cf\u7684\u503c\u518d\u81ea\u589e\u3002 \u6548\u7387 \uff1a\u901a\u5e38\u6bd4\u524d\u7f6e\u81ea\u589e\u7a0d\u6162\uff0c\u56e0\u4e3a\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\u6765\u4fdd\u5b58\u53d8\u91cf\u7684\u539f\u59cb\u503c\u3002","title":"2. x++\uff08\u540e\u7f6e\u81ea\u589e\uff09"},{"location":"C%2B%2B/mixed/#_4","text":"int x = 5 ; int y = x ++ ; // \u5148\u5c06 x \u7684\u5f53\u524d\u503c\u8d4b\u7ed9 y\uff0c\u7136\u540e x \u518d\u52a0 1 cout << \"x = \" << x << \", y = \" << y << endl ; \u8f93\u51fa \uff1a x = 6, y = 5","title":"\u793a\u4f8b"},{"location":"C%2B%2B/mixed/#3_1","text":"\u5728 C++ \u4e2d\uff0c\u81ea\u589e\u8fd0\u7b97\u7b26\u53ef\u4ee5\u901a\u8fc7\u8fd0\u7b97\u7b26\u91cd\u8f7d\u6765\u5b9e\u73b0\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a","title":"3. \u524d\u7f6e\u548c\u540e\u7f6e\u81ea\u589e\u7684\u5b9e\u73b0"},{"location":"C%2B%2B/mixed/#x","text":"class Counter { private : int value ; public : Counter ( int v ) : value ( v ) {} // \u524d\u7f6e\u81ea\u589e Counter & operator ++ () { ++ value ; // \u5148\u81ea\u589e return * this ; // \u8fd4\u56de\u81ea\u589e\u540e\u7684\u5f53\u524d\u5bf9\u8c61 } void display () const { cout << \"Value: \" << value << endl ; } };","title":"\u524d\u7f6e\u81ea\u589e\uff08++x\uff09"},{"location":"C%2B%2B/mixed/#x_1","text":"class Counter { private : int value ; public : Counter ( int v ) : value ( v ) {} // \u540e\u7f6e\u81ea\u589e Counter operator ++ ( int ) { Counter temp = * this ; // \u4fdd\u5b58\u5f53\u524d\u5bf9\u8c61\u7684\u526f\u672c ++ value ; // \u81ea\u589e return temp ; // \u8fd4\u56de\u539f\u59cb\u503c\uff08\u526f\u672c\uff09 } void display () const { cout << \"Value: \" << value << endl ; } };","title":"\u540e\u7f6e\u81ea\u589e\uff08x++\uff09"},{"location":"C%2B%2B/mixed/#4","text":"#include <iostream> using namespace std ; class Counter { private : int value ; public : Counter ( int v ) : value ( v ) {} // \u524d\u7f6e\u81ea\u589e Counter & operator ++ () { ++ value ; return * this ; } // \u540e\u7f6e\u81ea\u589e Counter operator ++ ( int ) { Counter temp = * this ; ++ value ; return temp ; } void display () const { cout << \"Value: \" << value << endl ; } }; int main () { Counter c ( 5 ); cout << \"Using ++c (\u524d\u7f6e\u81ea\u589e):\" << endl ; ++ c ; // \u524d\u7f6e\u81ea\u589e c . display (); cout << \"Using c++ (\u540e\u7f6e\u81ea\u589e):\" << endl ; c ++ ; // \u540e\u7f6e\u81ea\u589e c . display (); return 0 ; } \u8f93\u51fa \uff1a Using ++c (\u524d\u7f6e\u81ea\u589e): Value: 6 Using c++ (\u540e\u7f6e\u81ea\u589e): Value: 7","title":"4. \u793a\u4f8b\u5bf9\u6bd4"},{"location":"C%2B%2B/mixed/#5","text":"\u7279\u6027 \u524d\u7f6e\u81ea\u589e\uff08 ++x \uff09 \u540e\u7f6e\u81ea\u589e\uff08 x++ \uff09 \u6267\u884c\u987a\u5e8f \u5148\u81ea\u589e\uff0c\u518d\u8fd4\u56de\u81ea\u589e\u540e\u7684\u503c \u5148\u8fd4\u56de\u5f53\u524d\u503c\uff0c\u518d\u81ea\u589e \u8fd4\u56de\u503c \u81ea\u589e\u540e\u7684\u503c \u81ea\u589e\u524d\u7684\u503c \u6548\u7387 \u901a\u5e38\u66f4\u9ad8\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u521b\u5efa\u4e34\u65f6\u5bf9\u8c61 \u901a\u5e38\u7a0d\u6162\uff0c\u56e0\u4e3a\u9700\u8981\u521b\u5efa\u4e34\u65f6\u5bf9\u8c61 \u9002\u7528\u573a\u666f \u66f4\u9002\u5408\u9700\u8981\u7acb\u5373\u4f7f\u7528\u81ea\u589e\u540e\u7684\u503c\u7684\u573a\u666f \u66f4\u9002\u5408\u9700\u8981\u4fdd\u7559\u81ea\u589e\u524d\u503c\u7684\u573a\u666f \u6839\u636e\u5177\u4f53\u9700\u6c42\u9009\u62e9\u4f7f\u7528 ++x \u6216 x++ \uff0c\u5728\u6027\u80fd\u654f\u611f\u7684\u573a\u666f\u4e0b\uff0c\u4f18\u5148\u8003\u8651\u4f7f\u7528\u524d\u7f6e\u81ea\u589e\uff08 ++x \uff09\u3002","title":"5. \u603b\u7ed3"},{"location":"C%2B%2B/mixed/#_5","text":"","title":"\u7f16\u8bd1\u5668\u600e\u4e48\u533a\u5206\u8c03\u7528\u524d\u7f6e\u81ea\u589e\u8fd8\u662f\u540e\u7f6e\u81ea\u589e"},{"location":"C%2B%2B/mixed/#1-x_1","text":"\u8c03\u7528\u8bed\u6cd5 \uff1a ++x \u51fd\u6570\u7b7e\u540d \uff1a Counter & operator ++ (); \u7279\u70b9 \uff1a \u4e0d\u5e26\u53c2\u6570\u3002 \u7f16\u8bd1\u5668\u4f1a\u5339\u914d\u5230\u6ca1\u6709\u53c2\u6570\u7684 operator++() \u51fd\u6570\u3002","title":"1. \u524d\u7f6e\u81ea\u589e\uff08++x\uff09"},{"location":"C%2B%2B/mixed/#2-x_1","text":"\u8c03\u7528\u8bed\u6cd5 \uff1a x++ \u51fd\u6570\u7b7e\u540d \uff1a Counter operator ++ ( int ); \u7279\u70b9 \uff1a \u5e26\u4e00\u4e2a int \u7c7b\u578b\u7684 \u54d1\u53c2\u6570 \u3002 \u7f16\u8bd1\u5668\u4f1a\u5339\u914d\u5230\u5e26\u6709 int \u53c2\u6570\u7684 operator++(int) \u51fd\u6570\u3002 \u8fd9\u4e2a int \u53c2\u6570\u4ec5\u7528\u4e8e\u533a\u5206\u540e\u7f6e\u81ea\u589e\uff0c\u8c03\u7528\u65f6\u4e0d\u4f1a\u4f20\u9012\u5b9e\u9645\u7684\u503c\u3002","title":"2. \u540e\u7f6e\u81ea\u589e\uff08x++\uff09"},{"location":"C%2B%2B/mixed/#3_2","text":"","title":"3. \u7f16\u8bd1\u5668\u5982\u4f55\u533a\u5206\uff1f"},{"location":"C%2B%2B/mixed/#x_2","text":"\u5f53\u7f16\u8bd1\u5668\u770b\u5230 ++x \u65f6\uff1a \u5b83\u4f1a\u67e5\u627e operator++() \u51fd\u6570\uff08\u4e0d\u5e26\u53c2\u6570\uff09\u3002 \u5982\u679c\u627e\u5230\u5339\u914d\u7684\u51fd\u6570\uff0c\u5c31\u8c03\u7528\u5b83\u3002","title":"\u8c03\u7528 ++x\uff08\u524d\u7f6e\u81ea\u589e\uff09"},{"location":"C%2B%2B/mixed/#x_3","text":"\u5f53\u7f16\u8bd1\u5668\u770b\u5230 x++ \u65f6\uff1a \u5b83\u4f1a\u67e5\u627e operator++(int) \u51fd\u6570\uff08\u5e26\u4e00\u4e2a int \u53c2\u6570\uff09\u3002 \u5982\u679c\u627e\u5230\u5339\u914d\u7684\u51fd\u6570\uff0c\u5c31\u8c03\u7528\u5b83\u3002","title":"\u8c03\u7528 x++\uff08\u540e\u7f6e\u81ea\u589e\uff09"},{"location":"C%2B%2B/mixed/#_6","text":"","title":"\u5185\u5b58\u6cc4\u6f0f\u548c\u6307\u9488\u60ac\u6302\u5e38\u53d1\u751f\u5728\u54ea\u4e9b\u60c5\u51b5\uff0c\u4f1a\u6709\u4ec0\u4e48\u5371\u5bb3"},{"location":"C%2B%2B/mixed/#1_1","text":"","title":"1. \u5185\u5b58\u6cc4\u6f0f"},{"location":"C%2B%2B/mixed/#_7","text":"\u5185\u5b58\u6cc4\u6f0f\u662f\u6307\u7a0b\u5e8f\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u672a\u88ab\u91ca\u653e\uff0c\u5bfc\u81f4\u5185\u5b58\u8d44\u6e90\u65e0\u6cd5\u88ab\u56de\u6536\u548c\u91cd\u7528\u3002","title":"\u5b9a\u4e49"},{"location":"C%2B%2B/mixed/#_8","text":"\u52a8\u6001\u5206\u914d\u5185\u5b58\u672a\u91ca\u653e \u4f7f\u7528 new \u6216 malloc \u5206\u914d\u7684\u5185\u5b58\u6ca1\u6709\u4f7f\u7528 delete \u6216 free \u91ca\u653e\u3002 int * ptr = new int ( 10 ); // \u5fd8\u8bb0 delete ptr\uff0c\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f \u5f02\u5e38\u5bfc\u81f4\u672a\u91ca\u653e \u5728\u52a8\u6001\u5206\u914d\u5185\u5b58\u540e\uff0c\u7a0b\u5e8f\u629b\u51fa\u5f02\u5e38\uff0c\u5bfc\u81f4\u91ca\u653e\u5185\u5b58\u7684\u4ee3\u7801\u672a\u88ab\u6267\u884c\u3002 int * ptr = new int ( 10 ); throw std :: runtime_error ( \"Error\" ); // \u672a\u91ca\u653e ptr \u5faa\u73af\u5f15\u7528\uff08\u667a\u80fd\u6307\u9488\uff09 \u4f7f\u7528 std::shared_ptr \u65f6\uff0c\u4e24\u4e2a\u5bf9\u8c61\u4e92\u76f8\u5f15\u7528\uff0c\u5bfc\u81f4\u5f15\u7528\u8ba1\u6570\u65e0\u6cd5\u5f52\u96f6\uff0c\u5185\u5b58\u65e0\u6cd5\u91ca\u653e\u3002 struct Node { std :: shared_ptr < Node > next ; }; \u672a\u91ca\u653e\u5bb9\u5668\u4e2d\u7684\u52a8\u6001\u5185\u5b58 \u5bb9\u5668\u4e2d\u5b58\u50a8\u4e86\u52a8\u6001\u5206\u914d\u7684\u6307\u9488\uff0c\u4f46\u5728\u5bb9\u5668\u9500\u6bc1\u65f6\u672a\u91ca\u653e\u8fd9\u4e9b\u6307\u9488\u3002 std :: vector < int *> vec ; vec . push_back ( new int ( 10 )); // \u672a\u91ca\u653e vec \u4e2d\u7684\u6307\u9488","title":"\u5e38\u89c1\u60c5\u51b5"},{"location":"C%2B%2B/mixed/#_9","text":"\u5185\u5b58\u5360\u7528\u589e\u52a0 \uff1a\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\u8d8a\u957f\uff0c\u672a\u91ca\u653e\u7684\u5185\u5b58\u8d8a\u591a\uff0c\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edf\u5185\u5b58\u8017\u5c3d\u3002 \u6027\u80fd\u4e0b\u964d \uff1a\u5185\u5b58\u6cc4\u6f0f\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u9891\u7e41\u8fdb\u884c\u5185\u5b58\u5206\u914d\u548c\u56de\u6536\uff0c\u964d\u4f4e\u6027\u80fd\u3002 \u7a0b\u5e8f\u5d29\u6e83 \uff1a\u5f53\u7cfb\u7edf\u5185\u5b58\u8017\u5c3d\u65f6\uff0c\u7a0b\u5e8f\u53ef\u80fd\u65e0\u6cd5\u7ee7\u7eed\u8fd0\u884c\u3002","title":"\u5371\u5bb3"},{"location":"C%2B%2B/mixed/#2","text":"","title":"2. \u6307\u9488\u60ac\u6302"},{"location":"C%2B%2B/mixed/#_10","text":"\u6307\u9488\u60ac\u6302\u662f\u6307\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u5df2\u7ecf\u88ab\u91ca\u653e\u6216\u8d85\u51fa\u4f5c\u7528\u57df\uff0c\u4f46\u6307\u9488\u4ecd\u7136\u4fdd\u7559\u539f\u6765\u7684\u5730\u5740\u3002","title":"\u5b9a\u4e49"},{"location":"C%2B%2B/mixed/#_11","text":"\u91ca\u653e\u5185\u5b58\u540e\u672a\u5c06\u6307\u9488\u7f6e\u7a7a \u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u88ab\u91ca\u653e\u540e\uff0c\u6307\u9488\u4ecd\u7136\u6307\u5411\u539f\u6765\u7684\u5730\u5740\u3002 int * ptr = new int ( 10 ); delete ptr ; // ptr \u4ecd\u7136\u6307\u5411\u5df2\u91ca\u653e\u7684\u5185\u5b58 \u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740 \u51fd\u6570\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\uff0c\u5c40\u90e8\u53d8\u91cf\u5728\u51fd\u6570\u7ed3\u675f\u540e\u88ab\u9500\u6bc1\u3002 int * func () { int x = 10 ; return & x ; // \u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u5730\u5740 } \u591a\u6307\u9488\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58 \u591a\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\uff0c\u5176\u4e2d\u4e00\u4e2a\u6307\u9488\u91ca\u653e\u4e86\u5185\u5b58\uff0c\u5176\u4ed6\u6307\u9488\u53d8\u4e3a\u60ac\u6302\u6307\u9488\u3002 int * ptr1 = new int ( 10 ); int * ptr2 = ptr1 ; delete ptr1 ; // ptr2 \u6210\u4e3a\u60ac\u6302\u6307\u9488 \u5bb9\u5668\u4e2d\u5b58\u50a8\u7684\u6307\u9488\u88ab\u91ca\u653e \u5bb9\u5668\u4e2d\u5b58\u50a8\u7684\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u88ab\u91ca\u653e\uff0c\u4f46\u5bb9\u5668\u4e2d\u7684\u6307\u9488\u4ecd\u7136\u5b58\u5728\u3002 std :: vector < int *> vec ; int * ptr = new int ( 10 ); vec . push_back ( ptr ); delete ptr ; // vec \u4e2d\u7684\u6307\u9488\u60ac\u6302","title":"\u5e38\u89c1\u60c5\u51b5"},{"location":"C%2B%2B/mixed/#_12","text":"\u672a\u5b9a\u4e49\u884c\u4e3a \uff1a\u8bbf\u95ee\u60ac\u6302\u6307\u9488\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u6216\u4ea7\u751f\u4e0d\u53ef\u9884\u6d4b\u7684\u884c\u4e3a\u3002 \u6570\u636e\u635f\u574f \uff1a\u60ac\u6302\u6307\u9488\u53ef\u80fd\u6307\u5411\u5df2\u88ab\u5176\u4ed6\u5bf9\u8c61\u4f7f\u7528\u7684\u5185\u5b58\uff0c\u5bfc\u81f4\u6570\u636e\u88ab\u610f\u5916\u4fee\u6539\u3002 \u8c03\u8bd5\u56f0\u96be \uff1a\u60ac\u6302\u6307\u9488\u7684\u95ee\u9898\u901a\u5e38\u96be\u4ee5\u5b9a\u4f4d\uff0c\u53ef\u80fd\u5728\u7a0b\u5e8f\u8fd0\u884c\u7684\u67d0\u4e2a\u968f\u673a\u65f6\u523b\u89e6\u53d1\u3002","title":"\u5371\u5bb3"},{"location":"C%2B%2B/mixed/#_13","text":"","title":"\u5982\u4f55\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u548c\u6307\u9488\u60ac\u6302"},{"location":"C%2B%2B/mixed/#1_2","text":"\u4f7f\u7528\u667a\u80fd\u6307\u9488 \uff1a \u4f7f\u7528 std::unique_ptr \u6216 std::shared_ptr \u7ba1\u7406\u52a8\u6001\u5185\u5b58\uff0c\u907f\u514d\u624b\u52a8\u91ca\u653e\u3002 std :: unique_ptr < int > ptr = std :: make_unique < int > ( 10 ); \u53ca\u65f6\u91ca\u653e\u5185\u5b58 \uff1a \u5728\u52a8\u6001\u5206\u914d\u5185\u5b58\u540e\uff0c\u786e\u4fdd\u5728\u9002\u5f53\u7684\u65f6\u673a\u91ca\u653e\u5185\u5b58\u3002 int * ptr = new int ( 10 ); delete ptr ; \u4f7f\u7528 RAII\uff08\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316\uff09 \uff1a \u5c06\u8d44\u6e90\u7684\u5206\u914d\u548c\u91ca\u653e\u5c01\u88c5\u5728\u7c7b\u4e2d\uff0c\u5229\u7528\u6790\u6784\u51fd\u6570\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\u3002 class Resource { int * ptr ; public : Resource () : ptr ( new int ( 10 )) {} ~ Resource () { delete ptr ; } };","title":"1. \u907f\u514d\u5185\u5b58\u6cc4\u6f0f"},{"location":"C%2B%2B/mixed/#2_1","text":"\u91ca\u653e\u540e\u7f6e\u7a7a \uff1a \u5728\u91ca\u653e\u52a8\u6001\u5185\u5b58\u540e\uff0c\u5c06\u6307\u9488\u7f6e\u4e3a nullptr \u3002 int * ptr = new int ( 10 ); delete ptr ; ptr = nullptr ; \u907f\u514d\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740 \uff1a \u5982\u679c\u9700\u8981\u8fd4\u56de\u6570\u636e\uff0c\u4f7f\u7528\u52a8\u6001\u5206\u914d\u6216\u4f20\u9012\u5f15\u7528\u3002 int * func () { return new int ( 10 ); // \u8fd4\u56de\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58 } \u4f7f\u7528\u667a\u80fd\u6307\u9488 \uff1a \u667a\u80fd\u6307\u9488\u4f1a\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u907f\u514d\u60ac\u6302\u6307\u9488\u95ee\u9898\u3002 std :: shared_ptr < int > ptr1 = std :: make_shared < int > ( 10 ); std :: shared_ptr < int > ptr2 = ptr1 ; // \u81ea\u52a8\u7ba1\u7406\u5f15\u7528\u8ba1\u6570","title":"2. \u907f\u514d\u6307\u9488\u60ac\u6302"},{"location":"C%2B%2B/mixed/#_14","text":"\u95ee\u9898 \u5e38\u89c1\u60c5\u51b5 \u5371\u5bb3 \u5185\u5b58\u6cc4\u6f0f \u52a8\u6001\u5206\u914d\u672a\u91ca\u653e\u3001\u5f02\u5e38\u4e2d\u65ad\u3001\u5faa\u73af\u5f15\u7528\u3001\u5bb9\u5668\u4e2d\u52a8\u6001\u5185\u5b58\u672a\u91ca\u653e \u5185\u5b58\u5360\u7528\u589e\u52a0\u3001\u6027\u80fd\u4e0b\u964d\u3001\u7a0b\u5e8f\u5d29\u6e83 \u6307\u9488\u60ac\u6302 \u91ca\u653e\u540e\u672a\u7f6e\u7a7a\u3001\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u5730\u5740\u3001\u591a\u6307\u9488\u6307\u5411\u540c\u4e00\u5185\u5b58\u3001\u5bb9\u5668\u4e2d\u6307\u9488\u88ab\u91ca\u653e \u672a\u5b9a\u4e49\u884c\u4e3a\u3001\u6570\u636e\u635f\u574f\u3001\u8c03\u8bd5\u56f0\u96be \u901a\u8fc7\u4f7f\u7528\u667a\u80fd\u6307\u9488\u3001RAII \u548c\u826f\u597d\u7684\u7f16\u7801\u4e60\u60ef\uff0c\u53ef\u4ee5\u6709\u6548\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u548c\u6307\u9488\u60ac\u6302\u95ee\u9898\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u7a33\u5b9a\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/overload/","text":"\u5728 C++ \u4e2d\uff0c \u91cd\u8f7d\uff08Overloading\uff09 \u662f\u6307\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\uff0c\u5141\u8bb8\u591a\u4e2a\u51fd\u6570\u6216\u8fd0\u7b97\u7b26\u5177\u6709\u76f8\u540c\u7684\u540d\u5b57\uff0c\u4f46\u53c2\u6570\u5217\u8868\u6216\u64cd\u4f5c\u6570\u4e0d\u540c\u7684\u7279\u6027\u3002\u91cd\u8f7d\u53ef\u4ee5\u5206\u4e3a \u51fd\u6570\u91cd\u8f7d \u548c \u8fd0\u7b97\u7b26\u91cd\u8f7d \u3002 1. \u51fd\u6570\u91cd\u8f7d \u51fd\u6570\u91cd\u8f7d\u662f\u6307\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u4f46\u5b83\u4eec\u7684\u53c2\u6570\u5217\u8868\uff08\u53c2\u6570\u7684\u6570\u91cf\u3001\u7c7b\u578b\u6216\u987a\u5e8f\uff09\u5fc5\u987b\u4e0d\u540c\u3002\u7f16\u8bd1\u5668\u901a\u8fc7\u53c2\u6570\u5217\u8868\u6765\u533a\u5206\u8c03\u7528\u7684\u662f\u54ea\u4e2a\u51fd\u6570\u3002 \u793a\u4f8b\uff1a\u51fd\u6570\u91cd\u8f7d #include <iostream> using namespace std ; // \u51fd\u6570\u91cd\u8f7d\u793a\u4f8b void print ( int i ) { cout << \"\u6574\u6570: \" << i << endl ; } void print ( double d ) { cout << \"\u6d6e\u70b9\u6570: \" << d << endl ; } void print ( const string & s ) { cout << \"\u5b57\u7b26\u4e32: \" << s << endl ; } int main () { print ( 10 ); // \u8c03\u7528 print(int) print ( 3.14 ); // \u8c03\u7528 print(double) print ( \"Hello\" ); // \u8c03\u7528 print(const string&) return 0 ; } \u6ce8\u610f\u4e8b\u9879 \u51fd\u6570\u540d\u76f8\u540c\uff0c\u4f46\u53c2\u6570\u5217\u8868\u5fc5\u987b\u4e0d\u540c\u3002 \u8fd4\u56de\u503c\u7c7b\u578b\u4e0d\u80fd\u4f5c\u4e3a\u51fd\u6570\u91cd\u8f7d\u7684\u552f\u4e00\u4f9d\u636e\u3002 2. \u8fd0\u7b97\u7b26\u91cd\u8f7d \u8fd0\u7b97\u7b26\u91cd\u8f7d\u662f\u6307\u4e3a\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u578b\uff08\u5982\u7c7b\uff09\u91cd\u65b0\u5b9a\u4e49 C++ \u8fd0\u7b97\u7b26\u7684\u884c\u4e3a\u3002\u901a\u8fc7\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0c\u53ef\u4ee5\u8ba9\u8fd0\u7b97\u7b26\u4f5c\u7528\u4e8e\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002 \u793a\u4f8b\uff1a\u8fd0\u7b97\u7b26\u91cd\u8f7d #include <iostream> using namespace std ; class Complex { private : double real , imag ; public : Complex ( double r , double i ) : real ( r ), imag ( i ) {} // \u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 Complex operator + ( const Complex & other ) { return Complex ( real + other . real , imag + other . imag ); } void display () const { cout << real << \" + \" << imag << \"i\" << endl ; } }; int main () { Complex c1 ( 1.0 , 2.0 ), c2 ( 3.0 , 4.0 ); Complex c3 = c1 + c2 ; // \u4f7f\u7528\u91cd\u8f7d\u7684\u52a0\u6cd5\u8fd0\u7b97\u7b26 c3 . display (); // \u8f93\u51fa: 4.0 + 6.0i return 0 ; } \u6ce8\u610f\u4e8b\u9879 \u8fd0\u7b97\u7b26\u91cd\u8f7d\u5fc5\u987b\u662f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u6216\u53cb\u5143\u51fd\u6570\u3002 \u4e0d\u80fd\u91cd\u8f7d\u4ee5\u4e0b\u8fd0\u7b97\u7b26\uff1a :: \u3001 . \u3001 .* \u3001 sizeof \u3001 typeid \u3002 \u91cd\u8f7d\u7684\u4f18\u70b9 \u4ee3\u7801\u53ef\u8bfb\u6027 \uff1a\u901a\u8fc7\u91cd\u8f7d\uff0c\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u51fd\u6570\u540d\u6216\u8fd0\u7b97\u7b26\u5b8c\u6210\u4e0d\u540c\u7684\u4efb\u52a1\uff0c\u589e\u5f3a\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002 \u7075\u6d3b\u6027 \uff1a\u5141\u8bb8\u5f00\u53d1\u8005\u6839\u636e\u4e0d\u540c\u7684\u53c2\u6570\u7c7b\u578b\u6216\u6570\u91cf\u5b9e\u73b0\u4e0d\u540c\u7684\u529f\u80fd\u3002 \u603b\u7ed3 \u51fd\u6570\u91cd\u8f7d \uff1a\u540c\u540d\u51fd\u6570\uff0c\u53c2\u6570\u5217\u8868\u4e0d\u540c\u3002 \u8fd0\u7b97\u7b26\u91cd\u8f7d \uff1a\u4e3a\u81ea\u5b9a\u4e49\u7c7b\u578b\u91cd\u65b0\u5b9a\u4e49\u8fd0\u7b97\u7b26\u7684\u884c\u4e3a\u3002 \u91cd\u8f7d\u662f C++ \u63d0\u4f9b\u7684\u4e00\u79cd\u591a\u6001\u6027\uff08\u7f16\u8bd1\u65f6\u591a\u6001\uff09\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002 \u5728 C++ \u4e2d\uff0c \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u662f\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u7528\u540c\u7c7b\u7684\u53e6\u4e00\u4e2a\u5bf9\u8c61\u6765\u521d\u59cb\u5316\u5b83\u7684\u7279\u6b8a\u6784\u9020\u51fd\u6570\u3002 \u5b9a\u4e49 \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u4f5c\u7528\u662f\u901a\u8fc7\u5df2\u6709\u5bf9\u8c61\u7684\u503c\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u3002\u5b83\u7684\u51fd\u6570\u7b7e\u540d\u901a\u5e38\u662f\uff1a ClassName ( const ClassName & other ); - ClassName \u662f\u7c7b\u540d\u3002 - const ClassName& other \u662f\u5bf9\u540c\u7c7b\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u3002 \u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u5982\u679c\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u9ed8\u8ba4\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4f1a\u9010\u6210\u5458\u5730\u590d\u5236\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u3002 \u793a\u4f8b\uff1a\u62f7\u8d1d\u6784\u9020\u51fd\u6570 #include <iostream> using namespace std ; class Person { private : string name ; int age ; public : // \u6784\u9020\u51fd\u6570 Person ( string n , int a ) : name ( n ), age ( a ) {} // \u62f7\u8d1d\u6784\u9020\u51fd\u6570 Person ( const Person & other ) { name = other . name ; age = other . age ; cout << \"\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\" << endl ; } void display () const { cout << \"Name: \" << name << \", Age: \" << age << endl ; } }; int main () { Person p1 ( \"Alice\" , 25 ); // \u8c03\u7528\u666e\u901a\u6784\u9020\u51fd\u6570 Person p2 = p1 ; // \u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 p2 . display (); return 0 ; } \u8f93\u51fa \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528 Name: Alice, Age: 25 \u4ec0\u4e48\u65f6\u5019\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff1f \u7528\u4e00\u4e2a\u5bf9\u8c61\u521d\u59cb\u5316\u53e6\u4e00\u4e2a\u5bf9\u8c61 \uff1a Person p2 = p1 ; \u5bf9\u8c61\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f20\u9012\uff08\u6309\u503c\u4f20\u9012\uff09 \uff1a void func ( Person p ); \u51fd\u6570\u8fd4\u56de\u5bf9\u8c61\uff08\u6309\u503c\u8fd4\u56de\uff09 \uff1a Person func (); \u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u5fc5\u8981\u6027 \u5982\u679c\u7c7b\u4e2d\u6709\u6307\u9488\u6216\u52a8\u6001\u5206\u914d\u7684\u8d44\u6e90\uff0c\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u53ef\u80fd\u4f1a\u5bfc\u81f4 \u6d45\u62f7\u8d1d \u95ee\u9898\uff08\u591a\u4e2a\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\uff09\u3002\u6b64\u65f6\u9700\u8981\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8fdb\u884c \u6df1\u62f7\u8d1d \u3002 \u793a\u4f8b\uff1a\u6df1\u62f7\u8d1d class MyClass { private : int * data ; public : // \u6784\u9020\u51fd\u6570 MyClass ( int value ) { data = new int ( value ); } // \u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u6df1\u62f7\u8d1d\uff09 MyClass ( const MyClass & other ) { data = new int ( * other . data ); // \u5206\u914d\u65b0\u5185\u5b58\u5e76\u590d\u5236\u503c } ~ MyClass () { delete data ; // \u91ca\u653e\u5185\u5b58 } }; \u603b\u7ed3 \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u7528\u4e8e\u901a\u8fc7\u5df2\u6709\u5bf9\u8c61\u521d\u59cb\u5316\u65b0\u5bf9\u8c61\u3002 \u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u9002\u7528\u4e8e\u7b80\u5355\u7c7b\uff0c\u4f46\u5bf9\u4e8e\u52a8\u6001\u5206\u914d\u8d44\u6e90\u7684\u7c7b\uff0c\u9700\u8981\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4ee5\u907f\u514d\u6d45\u62f7\u8d1d\u95ee\u9898\u3002 \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f C++ \u63d0\u4f9b\u7684\u4e00\u79cd\u91cd\u8981\u673a\u5236\uff0c\u7528\u4e8e\u5b9e\u73b0\u5bf9\u8c61\u7684\u5b89\u5168\u62f7\u8d1d\u3002 \u4e3a\u4ec0\u4e48\u8981\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5462\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u6d45\u62f7\u8d1d \u4e3a\u4ec0\u4e48\u8981\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff1f \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u4e3b\u8981\u4f5c\u7528\u662f \u901a\u8fc7\u5df2\u6709\u5bf9\u8c61\u521d\u59cb\u5316\u65b0\u5bf9\u8c61 \uff0c\u5b83\u5728\u4ee5\u4e0b\u573a\u666f\u4e2d\u975e\u5e38\u91cd\u8981\uff1a \u5bf9\u8c61\u521d\u59cb\u5316 \uff1a \u5f53\u9700\u8981\u7528\u4e00\u4e2a\u5bf9\u8c61\u7684\u503c\u6765\u521b\u5efa\u53e6\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u786e\u4fdd\u65b0\u5bf9\u8c61\u6b63\u786e\u5730\u590d\u5236\u539f\u5bf9\u8c61\u7684\u5185\u5bb9\u3002 Person p2 = p1 ; // \u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u6309\u503c\u4f20\u9012\u5bf9\u8c61 \uff1a \u5f53\u5bf9\u8c61\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u6309\u503c\u4f20\u9012\u65f6\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\uff0c\u786e\u4fdd\u51fd\u6570\u63a5\u6536\u5230\u7684\u662f\u539f\u5bf9\u8c61\u7684\u526f\u672c\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u64cd\u4f5c\u539f\u5bf9\u8c61\u3002 void func ( Person p ); // \u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u6309\u503c\u8fd4\u56de\u5bf9\u8c61 \uff1a \u5f53\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\uff0c\u786e\u4fdd\u8fd4\u56de\u7684\u5bf9\u8c61\u662f\u539f\u5bf9\u8c61\u7684\u526f\u672c\u3002 Person func () { Person p ( \"Alice\" , 25 ); return p ; // \u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 } \u52a8\u6001\u8d44\u6e90\u7ba1\u7406 \uff1a \u5982\u679c\u7c7b\u4e2d\u6709\u52a8\u6001\u5206\u914d\u7684\u8d44\u6e90\uff08\u5982\u6307\u9488\uff09\uff0c\u9700\u8981\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6765\u907f\u514d\u8d44\u6e90\u5171\u4eab\u95ee\u9898\uff08\u6d45\u62f7\u8d1d\u95ee\u9898\uff09\u3002 \u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u6d45\u62f7\u8d1d\uff1f \u6d45\u62f7\u8d1d \u662f\u6307\u5728\u62f7\u8d1d\u5bf9\u8c61\u65f6\uff0c\u4ec5\u590d\u5236\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u7684\u503c\uff0c\u800c\u4e0d\u5206\u914d\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u8fd9\u79cd\u62f7\u8d1d\u65b9\u5f0f\u5bf9\u666e\u901a\u53d8\u91cf\uff08\u5982\u6574\u6570\u3001\u6d6e\u70b9\u6570\uff09\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u5bf9\u4e8e\u6307\u9488\u6216\u52a8\u6001\u5206\u914d\u7684\u8d44\u6e90\uff0c\u4f1a\u5bfc\u81f4\u591a\u4e2a\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\u3002 \u6d45\u62f7\u8d1d\u7684\u98ce\u9669 \u8d44\u6e90\u5171\u4eab\u95ee\u9898 \uff1a \u5982\u679c\u4e24\u4e2a\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u4fee\u6539\u8be5\u5185\u5b58\u65f6\uff0c\u53e6\u4e00\u4e2a\u5bf9\u8c61\u7684\u5185\u5bb9\u4e5f\u4f1a\u88ab\u4fee\u6539\u3002 \u91cd\u590d\u91ca\u653e\u95ee\u9898 \uff1a \u5f53\u4e24\u4e2a\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\u65f6\uff0c\u6790\u6784\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\u4e24\u6b21\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002 \u793a\u4f8b\uff1a\u6d45\u62f7\u8d1d\u95ee\u9898 #include <iostream> using namespace std ; class MyClass { private : int * data ; public : // \u6784\u9020\u51fd\u6570 MyClass ( int value ) { data = new int ( value ); } // \u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u6d45\u62f7\u8d1d\uff09 MyClass ( const MyClass & other ) { data = other . data ; // \u4ec5\u590d\u5236\u6307\u9488\u5730\u5740 } ~ MyClass () { delete data ; // \u91ca\u653e\u5185\u5b58 } void display () const { cout << \"Value: \" << * data << endl ; } }; int main () { MyClass obj1 ( 10 ); MyClass obj2 = obj1 ; // \u8c03\u7528\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u6d45\u62f7\u8d1d\uff09 obj2 . display (); // \u5f53\u6790\u6784\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0cobj1 \u548c obj2 \u4f1a\u5c1d\u8bd5\u91ca\u653e\u540c\u4e00\u5757\u5185\u5b58\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83 return 0 ; } \u8f93\u51fa \u7a0b\u5e8f\u53ef\u80fd\u5d29\u6e83\uff0c\u539f\u56e0\u662f obj1 \u548c obj2 \u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\uff0c\u6790\u6784\u51fd\u6570\u4f1a\u91cd\u590d\u91ca\u653e\u8fd9\u5757\u5185\u5b58\u3002 \u5982\u4f55\u907f\u514d\u6d45\u62f7\u8d1d\uff1f \u901a\u8fc7\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5b9e\u73b0 \u6df1\u62f7\u8d1d \uff0c\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u5206\u914d\u72ec\u7acb\u7684\u5185\u5b58\u3002 \u6df1\u62f7\u8d1d\u793a\u4f8b class MyClass { private : int * data ; public : // \u6784\u9020\u51fd\u6570 MyClass ( int value ) { data = new int ( value ); } // \u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u6df1\u62f7\u8d1d\uff09 MyClass ( const MyClass & other ) { data = new int ( * other . data ); // \u5206\u914d\u65b0\u5185\u5b58\u5e76\u590d\u5236\u503c } ~ MyClass () { delete data ; // \u91ca\u653e\u5185\u5b58 } void display () const { cout << \"Value: \" << * data << endl ; } }; int main () { MyClass obj1 ( 10 ); MyClass obj2 = obj1 ; // \u8c03\u7528\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u6df1\u62f7\u8d1d\uff09 obj2 . display (); // \u8f93\u51fa: Value: 10 return 0 ; } \u8f93\u51fa Value: 10 \u5728\u6df1\u62f7\u8d1d\u4e2d\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u72ec\u7acb\u7684\u5185\u5b58\uff0c\u907f\u514d\u4e86\u8d44\u6e90\u5171\u4eab\u548c\u91cd\u590d\u91ca\u653e\u7684\u95ee\u9898\u3002 \u603b\u7ed3 \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u7528\u4e8e\u5728\u5bf9\u8c61\u521d\u59cb\u5316\u3001\u6309\u503c\u4f20\u9012\u6216\u8fd4\u56de\u65f6\uff0c\u786e\u4fdd\u5bf9\u8c61\u7684\u6b63\u786e\u62f7\u8d1d\u3002 \u6d45\u62f7\u8d1d \u4f1a\u5bfc\u81f4\u8d44\u6e90\u5171\u4eab\u548c\u91cd\u590d\u91ca\u653e\u95ee\u9898\uff0c\u5c24\u5176\u662f\u5728\u7c7b\u4e2d\u6709\u52a8\u6001\u5206\u914d\u8d44\u6e90\u65f6\u3002 \u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0 \u6df1\u62f7\u8d1d \uff0c\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u5206\u914d\u72ec\u7acb\u7684\u5185\u5b58\uff0c\u907f\u514d\u6d45\u62f7\u8d1d\u7684\u98ce\u9669\u3002 \u8bfe\u540e\u9898 Homework class vector { private : int * v ; int size ; public : vector ( int i ) { size = i ; v = new int [ i ]; } ~ vector () { delete [] v ; } }; 1. Define the copy constructor of the class vector; Overload the \"=\"(assignment), \"+\"(plus), \"*\" dot product operators for the class vector. \u4ee5\u4e0b\u662f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u4ee3\u7801\u5b9e\u73b0\uff0c\u5305\u62ec\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u5b9e\u73b0\uff1a #include <iostream> using namespace std ; class vector { private : int * v ; // \u52a8\u6001\u5206\u914d\u7684\u6570\u7ec4 int size ; // \u6570\u7ec4\u5927\u5c0f public : // \u6784\u9020\u51fd\u6570 vector ( int i ) { size = i ; v = new int [ i ]; for ( int j = 0 ; j < i ; j ++ ) { v [ j ] = 0 ; // \u521d\u59cb\u5316\u6570\u7ec4\u5143\u7d20\u4e3a 0 } } // \u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u6df1\u62f7\u8d1d\uff09 vector ( const vector & other ) { size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } } // \u91cd\u8f7d\u8d4b\u503c\u8fd0\u7b97\u7b26 \"=\" vector & operator = ( const vector & other ) { if ( this == & other ) { return * this ; // \u9632\u6b62\u81ea\u8d4b\u503c } delete [] v ; // \u91ca\u653e\u539f\u6709\u5185\u5b58 size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } return * this ; } // \u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 \"+\" vector operator + ( const vector & other ) { if ( size != other . size ) { throw invalid_argument ( \"Vectors must have the same size for addition.\" ); } vector result ( size ); for ( int i = 0 ; i < size ; i ++ ) { result . v [ i ] = v [ i ] + other . v [ i ]; } return result ; } // \u91cd\u8f7d\u70b9\u79ef\u8fd0\u7b97\u7b26 \"*\" int operator * ( const vector & other ) { if ( size != other . size ) { throw invalid_argument ( \"Vectors must have the same size for dot product.\" ); } int dotProduct = 0 ; for ( int i = 0 ; i < size ; i ++ ) { dotProduct += v [ i ] * other . v [ i ]; } return dotProduct ; } // \u6253\u5370\u5411\u91cf void display () const { for ( int i = 0 ; i < size ; i ++ ) { cout << v [ i ] << \" \" ; } cout << endl ; } // \u6790\u6784\u51fd\u6570 ~ vector () { delete [] v ; } }; int main () { vector v1 ( 3 ); // \u521b\u5efa\u5927\u5c0f\u4e3a 3 \u7684\u5411\u91cf vector v2 ( 3 ); // \u521d\u59cb\u5316\u5411\u91cf v1 = vector ( 3 ); v2 = vector ( 3 ); v1 = v2 ; // \u6d4b\u8bd5\u8d4b\u503c\u8fd0\u7b97\u7b26 // \u6d4b\u8bd5\u52a0\u6cd5\u8fd0\u7b97\u7b26 vector v3 = v1 + v2 ; v3 . display (); // \u6d4b\u8bd5\u70b9\u79ef\u8fd0\u7b97\u7b26 int dotProduct = v1 * v2 ; cout << \"Dot product: \" << dotProduct << endl ; return 0 ; } \u4ee3\u7801\u8bf4\u660e \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \uff1a \u5b9e\u73b0\u6df1\u62f7\u8d1d\uff0c\u5206\u914d\u65b0\u7684\u5185\u5b58\u5e76\u590d\u5236\u539f\u5bf9\u8c61\u7684\u5185\u5bb9\u3002 vector ( const vector & other ) { size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } } \u8d4b\u503c\u8fd0\u7b97\u7b26 = \uff1a \u91ca\u653e\u539f\u6709\u5185\u5b58\uff0c\u5206\u914d\u65b0\u5185\u5b58\u5e76\u590d\u5236\u5185\u5bb9\u3002 \u9632\u6b62\u81ea\u8d4b\u503c\u3002 vector & operator = ( const vector & other ) { if ( this == & other ) { return * this ; // \u9632\u6b62\u81ea\u8d4b\u503c } delete [] v ; // \u91ca\u653e\u539f\u6709\u5185\u5b58 size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } return * this ; } \u52a0\u6cd5\u8fd0\u7b97\u7b26 + \uff1a \u4e24\u4e2a\u5411\u91cf\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5143\u7d20\u76f8\u52a0\uff0c\u8fd4\u56de\u4e00\u4e2a\u65b0\u5411\u91cf\u3002 \u5982\u679c\u5411\u91cf\u5927\u5c0f\u4e0d\u540c\uff0c\u629b\u51fa\u5f02\u5e38\u3002 vector operator + ( const vector & other ) { if ( size != other . size ) { throw invalid_argument ( \"Vectors must have the same size for addition.\" ); } vector result ( size ); for ( int i = 0 ; i < size ; i ++ ) { result . v [ i ] = v [ i ] + other . v [ i ]; } return result ; } \u70b9\u79ef\u8fd0\u7b97\u7b26 * \uff1a \u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u70b9\u79ef\u3002 \u5982\u679c\u5411\u91cf\u5927\u5c0f\u4e0d\u540c\uff0c\u629b\u51fa\u5f02\u5e38\u3002 int operator * ( const vector & other ) { if ( size != other . size ) { throw invalid_argument ( \"Vectors must have the same size for dot product.\" ); } int dotProduct = 0 ; for ( int i = 0 ; i < size ; i ++ ) { dotProduct += v [ i ] * other . v [ i ]; } return dotProduct ; } \u6790\u6784\u51fd\u6570 \uff1a \u91ca\u653e\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002 ~ vector () { delete [] v ; } \u6d4b\u8bd5\u7ed3\u679c \u52a0\u6cd5\u8fd0\u7b97\u7b26 + \uff1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u5411\u91cf\uff0c\u5176\u5143\u7d20\u662f\u4e24\u4e2a\u5411\u91cf\u5bf9\u5e94\u4f4d\u7f6e\u5143\u7d20\u7684\u548c\u3002 \u70b9\u79ef\u8fd0\u7b97\u7b26 * \uff1a\u8fd4\u56de\u4e24\u4e2a\u5411\u91cf\u7684\u70b9\u79ef\uff08\u6807\u91cf\u503c\uff09\u3002 \u8d4b\u503c\u8fd0\u7b97\u7b26 = \uff1a\u6b63\u786e\u590d\u5236\u5411\u91cf\u5185\u5bb9\uff0c\u907f\u514d\u6d45\u62f7\u8d1d\u95ee\u9898\u3002 \u6ce8\u610f\u4e8b\u9879 \u786e\u4fdd\u4e24\u4e2a\u5411\u91cf\u7684\u5927\u5c0f\u76f8\u540c\uff0c\u5426\u5219\u629b\u51fa\u5f02\u5e38\u3002 \u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5efa\u8bae\u6dfb\u52a0\u66f4\u591a\u8fb9\u754c\u68c0\u67e5\u548c\u9519\u8bef\u5904\u7406\u903b\u8f91\u3002 \u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9a\u4e49\u89c4\u5219\u53cathis\u6307\u9488 \u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u8bed\u6cd5 \u8fd0\u7b97\u7b26\u91cd\u8f7d\u662f\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e2a\u7279\u6b8a\u7684\u6210\u5458\u51fd\u6570\u6216\u53cb\u5143\u51fd\u6570\uff0c\u91cd\u65b0\u5b9a\u4e49\u8fd0\u7b97\u7b26\u7684\u884c\u4e3a\u3002\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a \u6210\u5458\u51fd\u6570\u5f62\u5f0f ReturnType operator\u7b26\u53f7 ( \u53c2\u6570\u5217\u8868 ) { // \u8fd0\u7b97\u7b26\u7684\u5b9e\u73b0 } \u53cb\u5143\u51fd\u6570\u5f62\u5f0f friend ReturnType operator\u7b26\u53f7 ( const ClassName & lhs , const ClassName & rhs ) { // \u8fd0\u7b97\u7b26\u7684\u5b9e\u73b0 } \u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u89c4\u5219 \u5fc5\u987b\u662f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u6216\u53cb\u5143\u51fd\u6570 \u3002 \u4e0d\u80fd\u91cd\u8f7d\u4ee5\u4e0b\u8fd0\u7b97\u7b26 \uff1a :: \uff08\u4f5c\u7528\u57df\u89e3\u6790\u8fd0\u7b97\u7b26\uff09 . \uff08\u6210\u5458\u8bbf\u95ee\u8fd0\u7b97\u7b26\uff09 .* \uff08\u6210\u5458\u6307\u9488\u8bbf\u95ee\u8fd0\u7b97\u7b26\uff09 sizeof \uff08\u5927\u5c0f\u8fd0\u7b97\u7b26\uff09 typeid \uff08\u7c7b\u578b\u4fe1\u606f\u8fd0\u7b97\u7b26\uff09 \u8fd4\u56de\u503c\u7c7b\u578b \u548c \u53c2\u6570\u5217\u8868 \u6839\u636e\u8fd0\u7b97\u7b26\u7684\u529f\u80fd\u51b3\u5b9a\u3002 \u793a\u4f8b\uff1a\u91cd\u8f7d\u8d4b\u503c\u8fd0\u7b97\u7b26 = \u8d4b\u503c\u8fd0\u7b97\u7b26\u901a\u5e38\u9700\u8981\u5904\u7406\u6df1\u62f7\u8d1d\uff0c\u907f\u514d\u6d45\u62f7\u8d1d\u95ee\u9898\u3002 \u4ee3\u7801 vector & operator = ( const vector & other ) { if ( this == & other ) { // \u68c0\u67e5\u81ea\u8d4b\u503c return * this ; } delete [] v ; // \u91ca\u653e\u539f\u6709\u5185\u5b58 size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } return * this ; // \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528 } \u89e3\u91ca this \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u5f53\u524d\u5bf9\u8c61\u3002 this == &other \u7528\u4e8e\u68c0\u67e5\u662f\u5426\u662f\u81ea\u8d4b\u503c\uff08\u5373\u5bf9\u8c61\u8d4b\u503c\u7ed9\u81ea\u5df1\uff09\u3002 return *this \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4ee5\u652f\u6301\u94fe\u5f0f\u8d4b\u503c\uff08\u5982 a = b = c \uff09\u3002 \u793a\u4f8b\uff1a\u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 + \u52a0\u6cd5\u8fd0\u7b97\u7b26\u901a\u5e38\u8fd4\u56de\u4e00\u4e2a\u65b0\u5bf9\u8c61\u3002 \u4ee3\u7801 vector operator + ( const vector & other ) { if ( size != other . size ) { throw invalid_argument ( \"Vectors must have the same size for addition.\" ); } vector result ( size ); for ( int i = 0 ; i < size ; i ++ ) { result . v [ i ] = v [ i ] + other . v [ i ]; } return result ; // \u8fd4\u56de\u65b0\u5bf9\u8c61 } \u89e3\u91ca result \u662f\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u7528\u4e8e\u5b58\u50a8\u52a0\u6cd5\u7ed3\u679c\u3002 \u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u4fee\u6539\u5f53\u524d\u5bf9\u8c61\u6216\u53c2\u6570\u5bf9\u8c61\u3002 this \u7684\u4f5c\u7528 this \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u5f53\u524d\u5bf9\u8c61\u3002\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u5305\u62ec\uff1a 1. \u8bbf\u95ee\u5f53\u524d\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u6216\u6210\u5458\u51fd\u6570 \uff1a this -> size = other . size ; \u7b49\u4ef7\u4e8e\uff1a size = other . size ; \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528 \uff1a \u5728\u8d4b\u503c\u8fd0\u7b97\u7b26\u4e2d\uff0c return *this \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4ee5\u652f\u6301\u94fe\u5f0f\u8d4b\u503c\u3002 \u533a\u5206\u6210\u5458\u53d8\u91cf\u548c\u53c2\u6570 \uff1a \u5f53\u6210\u5458\u53d8\u91cf\u548c\u51fd\u6570\u53c2\u6570\u540c\u540d\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 this \u6307\u9488\u533a\u5206\uff1a this -> v = new int [ size ]; \u603b\u7ed3 \u8fd0\u7b97\u7b26\u91cd\u8f7d\u901a\u8fc7 operator \u5173\u952e\u5b57\u5b9e\u73b0\uff0c\u53ef\u4ee5\u662f\u6210\u5458\u51fd\u6570\u6216\u53cb\u5143\u51fd\u6570\u3002 this \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u5f53\u524d\u5bf9\u8c61\uff0c\u7528\u4e8e\u8bbf\u95ee\u6210\u5458\u53d8\u91cf\u6216\u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\u3002 \u5728\u8d4b\u503c\u8fd0\u7b97\u7b26\u4e2d\uff0c this \u7528\u4e8e\u9632\u6b62\u81ea\u8d4b\u503c\u548c\u652f\u6301\u94fe\u5f0f\u8d4b\u503c\u3002 \u4e3a\u4ec0\u4e48\u91cd\u8f7d'='\u524d\u9762\u8981\u52a0\u4e0a'&'\uff0c\u5176\u4ed6\u7684'+'\u548c'*'\u6ca1\u6709\u52a0\u4e0a'&' \u5728 C++ \u4e2d\uff0c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u8bbe\u8ba1\u662f\u6839\u636e\u8fd0\u7b97\u7b26\u7684\u8bed\u4e49\u51b3\u5b9a\u7684\u3002\u5bf9\u4e8e\u8d4b\u503c\u8fd0\u7b97\u7b26 = \uff0c\u8fd4\u56de\u503c\u9700\u8981\u662f\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u800c\u5bf9\u4e8e\u52a0\u6cd5 + \u548c\u4e58\u6cd5 * \uff0c\u8fd4\u56de\u503c\u901a\u5e38\u662f\u4e00\u4e2a\u65b0\u5bf9\u8c61\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8d4b\u503c\u8fd0\u7b97\u7b26\u9700\u8981\u8fd4\u56de\u5f15\u7528\uff0c\u800c\u5176\u4ed6\u8fd0\u7b97\u7b26\u4e0d\u9700\u8981\u3002 1. \u4e3a\u4ec0\u4e48\u8d4b\u503c\u8fd0\u7b97\u7b26 = \u8fd4\u56de\u5f15\u7528\uff08 & \uff09 \u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u8bed\u4e49\u662f\u5c06\u53f3\u4fa7\u5bf9\u8c61\u7684\u503c\u8d4b\u7ed9\u5de6\u4fa7\u5bf9\u8c61\uff0c\u5e76\u8fd4\u56de\u5de6\u4fa7\u5bf9\u8c61\u672c\u8eab\u3002\u8fd4\u56de\u5f15\u7528\u7684\u539f\u56e0\u6709\u4ee5\u4e0b\u51e0\u70b9\uff1a \u652f\u6301\u94fe\u5f0f\u8d4b\u503c \u94fe\u5f0f\u8d4b\u503c\u662f\u6307\u591a\u4e2a\u8d4b\u503c\u64cd\u4f5c\u53ef\u4ee5\u8fde\u5728\u4e00\u8d77\uff0c\u4f8b\u5982\uff1a a = b = c ; \u4e3a\u4e86\u652f\u6301\u8fd9\u79cd\u64cd\u4f5c\uff0c\u8d4b\u503c\u8fd0\u7b97\u7b26\u9700\u8981\u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff08 *this \uff09\uff0c\u8fd9\u6837\u5de6\u4fa7\u7684\u8d4b\u503c\u64cd\u4f5c\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u8fd4\u56de\u7684\u5bf9\u8c61\u3002 \u793a\u4f8b vector & operator = ( const vector & other ) { if ( this == & other ) { // \u9632\u6b62\u81ea\u8d4b\u503c return * this ; } delete [] v ; // \u91ca\u653e\u539f\u6709\u5185\u5b58 size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } return * this ; // \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528 } \u8fd4\u56de\u5f15\u7528\u7684\u597d\u5904 \u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\uff0c\u63d0\u9ad8\u6027\u80fd\u3002 \u652f\u6301\u94fe\u5f0f\u8d4b\u503c\u3002 2. \u4e3a\u4ec0\u4e48\u52a0\u6cd5 + \u548c\u4e58\u6cd5 * \u4e0d\u9700\u8981\u8fd4\u56de\u5f15\u7528 \u52a0\u6cd5\u548c\u4e58\u6cd5\u8fd0\u7b97\u7b26\u7684\u8bed\u4e49\u662f\u751f\u6210\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u4fee\u6539\u5f53\u524d\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u901a\u5e38\u8fd4\u56de\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u5f15\u7528\u3002 \u52a0\u6cd5\u8fd0\u7b97\u7b26 + \u793a\u4f8b vector operator + ( const vector & other ) { if ( size != other . size ) { throw invalid_argument ( \"Vectors must have the same size for addition.\" ); } vector result ( size ); // \u521b\u5efa\u65b0\u5bf9\u8c61 for ( int i = 0 ; i < size ; i ++ ) { result . v [ i ] = v [ i ] + other . v [ i ]; } return result ; // \u8fd4\u56de\u65b0\u5bf9\u8c61 } \u4e58\u6cd5\u8fd0\u7b97\u7b26 * \u793a\u4f8b int operator * ( const vector & other ) { if ( size != other . size ) { throw invalid_argument ( \"Vectors must have the same size for dot product.\" ); } int dotProduct = 0 ; for ( int i = 0 ; i < size ; i ++ ) { dotProduct += v [ i ] * other . v [ i ]; } return dotProduct ; // \u8fd4\u56de\u6807\u91cf\u503c } \u4e3a\u4ec0\u4e48\u4e0d\u8fd4\u56de\u5f15\u7528 \u52a0\u6cd5\u548c\u4e58\u6cd5\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u65b0\u5bf9\u8c61\u6216\u6807\u91cf\u503c\uff0c\u4e0e\u5f53\u524d\u5bf9\u8c61\u65e0\u5173\u3002 \u8fd4\u56de\u5f15\u7528\u4f1a\u5bfc\u81f4\u6f5c\u5728\u7684\u9519\u8bef\uff0c\u56e0\u4e3a\u65b0\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u53ef\u80fd\u4f1a\u5728\u51fd\u6570\u8fd4\u56de\u540e\u7ed3\u675f\u3002 3. \u603b\u7ed3 \u8d4b\u503c\u8fd0\u7b97\u7b26 = \uff1a \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff08 & \uff09\uff0c\u4ee5\u652f\u6301\u94fe\u5f0f\u8d4b\u503c\u548c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u3002 \u8fd4\u56de\u503c\u7c7b\u578b\u4e3a vector& \u3002 \u52a0\u6cd5\u8fd0\u7b97\u7b26 + \u548c\u4e58\u6cd5\u8fd0\u7b97\u7b26 * \uff1a \u8fd4\u56de\u65b0\u5bf9\u8c61\u6216\u6807\u91cf\u503c\uff0c\u4e0d\u9700\u8981\u8fd4\u56de\u5f15\u7528\u3002 \u8fd4\u56de\u503c\u7c7b\u578b\u4e3a vector \u6216 int \u3002 \u8fd9\u79cd\u8bbe\u8ba1\u7b26\u5408\u8fd0\u7b97\u7b26\u7684\u8bed\u4e49\u548c\u4f7f\u7528\u4e60\u60ef\uff0c\u786e\u4fdd\u4ee3\u7801\u7684\u6b63\u786e\u6027\u548c\u6027\u80fd\u3002 \u5728\u8fd0\u7b97\u7b26\u91cd\u8f7d\u65f6\uff0c'='\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u5bf9\u8c61\u600e\u4e48\u4f20\u5165\u51fd\u6570\u53c2\u6570 \u5728\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u51fd\u6570 vector& operator=(const vector& other) \u4e2d\uff1a \u5f53\u524d\u5bf9\u8c61 \uff08\u5de6\u4fa7\u5bf9\u8c61\uff09\uff1a\u901a\u8fc7\u9690\u5f0f\u7684 this \u6307\u9488\u4f20\u5165\uff0c this \u6307\u5411\u5f53\u524d\u5bf9\u8c61\uff08\u5373\u8d4b\u503c\u8fd0\u7b97\u7b26\u5de6\u4fa7\u7684\u5bf9\u8c61\uff09\u3002 \u53f3\u4fa7\u5bf9\u8c61 \uff1a\u901a\u8fc7\u53c2\u6570 other \u663e\u5f0f\u4f20\u5165\uff0c other \u662f\u8d4b\u503c\u8fd0\u7b97\u7b26\u53f3\u4fa7\u7684\u5bf9\u8c61\u3002 \u5177\u4f53\u89e3\u91ca \u5047\u8bbe\u6709\u4ee5\u4e0b\u4ee3\u7801\uff1a vector v1 ( 3 ); // \u5de6\u4fa7\u5bf9\u8c61 vector v2 ( 3 ); // \u53f3\u4fa7\u5bf9\u8c61 v1 = v2 ; // \u8c03\u7528\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d \u5728 v1 = v2; \u4e2d\uff1a 1. \u5f53\u524d\u5bf9\u8c61\uff08\u5de6\u4fa7\u5bf9\u8c61\uff09 \uff1a - v1 \u662f\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u5de6\u4fa7\u5bf9\u8c61\u3002 - \u5728\u51fd\u6570\u5185\u90e8\uff0c this \u6307\u9488\u6307\u5411 v1 \u3002 - \u4f8b\u5982\uff0c this->v \u548c this->size \u8bbf\u95ee\u7684\u662f v1 \u7684\u6210\u5458\u3002 \u53f3\u4fa7\u5bf9\u8c61 \uff1a v2 \u662f\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u53f3\u4fa7\u5bf9\u8c61\u3002 \u5b83\u901a\u8fc7\u53c2\u6570 other \u4f20\u5165\u3002 \u5728\u51fd\u6570\u5185\u90e8\uff0c other.v \u548c other.size \u8bbf\u95ee\u7684\u662f v2 \u7684\u6210\u5458\u3002 \u51fd\u6570\u6267\u884c\u6d41\u7a0b \u4ee5\u4e0b\u662f v1 = v2; \u7684\u6267\u884c\u6d41\u7a0b\uff1a 1. \u68c0\u67e5\u81ea\u8d4b\u503c \uff1a if ( this == & other ) { return * this ; } - this \u662f\u6307\u5411 v1 \u7684\u6307\u9488\u3002 - &other \u662f v2 \u7684\u5730\u5740\u3002 - \u5982\u679c v1 \u548c v2 \u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u907f\u514d\u91cd\u590d\u64cd\u4f5c\u3002 \u91ca\u653e\u5f53\u524d\u5bf9\u8c61\u7684\u65e7\u5185\u5b58 \uff1a delete [] v ; \u91ca\u653e v1 \u4e2d\u539f\u6709\u7684\u52a8\u6001\u5185\u5b58\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002 \u590d\u5236\u53f3\u4fa7\u5bf9\u8c61\u7684\u5185\u5bb9 \uff1a size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } \u5c06 v2 \u7684 size \u548c v \u7684\u5185\u5bb9\u9010\u4e00\u590d\u5236\u5230 v1 \u4e2d\u3002 \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528 \uff1a return * this ; \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\uff08 v1 \uff09\u7684\u5f15\u7528\uff0c\u4ee5\u652f\u6301\u94fe\u5f0f\u8d4b\u503c\u3002 \u603b\u7ed3 \u5f53\u524d\u5bf9\u8c61\uff08\u5de6\u4fa7\u5bf9\u8c61\uff09 \uff1a\u901a\u8fc7 this \u6307\u9488\u9690\u5f0f\u4f20\u5165\uff0c\u8868\u793a\u8d4b\u503c\u8fd0\u7b97\u7b26\u5de6\u4fa7\u7684\u5bf9\u8c61\u3002 \u53f3\u4fa7\u5bf9\u8c61 \uff1a\u901a\u8fc7\u53c2\u6570 other \u663e\u5f0f\u4f20\u5165\uff0c\u8868\u793a\u8d4b\u503c\u8fd0\u7b97\u7b26\u53f3\u4fa7\u7684\u5bf9\u8c61\u3002 \u5728 v1 = v2; \u4e2d\uff1a - this \u6307\u5411 v1 \u3002 - other \u662f v2 \u3002 \u5728\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e3a\u4ec0\u4e48\u91cc\u9762\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u4e0d\u7528this\u6307\u9488\uff0c\u6bd4\u5982this->size \u5728 C++ \u4e2d\uff0c this-> \u662f\u7528\u6765\u663e\u5f0f\u8bbf\u95ee\u5f53\u524d\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u6216\u6210\u5458\u51fd\u6570\u7684\u3002\u7136\u800c\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u4f7f\u7528\u6210\u5458\u53d8\u91cf\u540d\uff08\u5982 v \u548c size \uff09\u5c31\u8db3\u591f\u4e86\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5c06\u5b83\u4eec\u89e3\u6790\u4e3a\u5f53\u524d\u5bf9\u8c61\u7684\u6210\u5458\u3002 \u4e3a\u4ec0\u4e48\u53ef\u4ee5\u7701\u7565 this-> \uff1f \u7f16\u8bd1\u5668\u7684\u9ed8\u8ba4\u884c\u4e3a \uff1a \u5f53\u5728\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e2d\u76f4\u63a5\u4f7f\u7528\u6210\u5458\u53d8\u91cf\u540d\uff08\u5982 v \u548c size \uff09\uff0c\u7f16\u8bd1\u5668\u4f1a\u9ed8\u8ba4\u5c06\u5176\u89e3\u6790\u4e3a\u5f53\u524d\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u3002 \u4f8b\u5982\uff1a v = new int [ size ]; \u7b49\u4ef7\u4e8e\uff1a this -> v = new int [ size ]; \u6ca1\u6709\u547d\u540d\u51b2\u7a81 \uff1a \u5982\u679c\u51fd\u6570\u53c2\u6570\u6216\u5c40\u90e8\u53d8\u91cf\u7684\u540d\u5b57\u4e0e\u6210\u5458\u53d8\u91cf\u4e0d\u540c\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u76f4\u63a5\u533a\u5206\u5b83\u4eec\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u663e\u5f0f\u4f7f\u7528 this-> \u3002 \u5728\u4ee3\u7801\u4e2d\uff0c v \u548c size \u6ca1\u6709\u4e0e\u53c2\u6570\u6216\u5c40\u90e8\u53d8\u91cf\u540c\u540d\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u4f7f\u7528 this-> \uff1f \u6210\u5458\u53d8\u91cf\u4e0e\u53c2\u6570\u540c\u540d \uff1a \u5982\u679c\u51fd\u6570\u53c2\u6570\u7684\u540d\u5b57\u4e0e\u6210\u5458\u53d8\u91cf\u76f8\u540c\uff0c\u7f16\u8bd1\u5668\u4f1a\u4f18\u5148\u89e3\u6790\u4e3a\u51fd\u6570\u53c2\u6570\u3002\u6b64\u65f6\u9700\u8981\u4f7f\u7528 this-> \u6765\u533a\u5206\u6210\u5458\u53d8\u91cf\u3002 \u4f8b\u5982\uff1a class vector { private : int size ; public : void setSize ( int size ) { this -> size = size ; // \u4f7f\u7528 this-> \u8bbf\u95ee\u6210\u5458\u53d8\u91cf } }; \u94fe\u5f0f\u8c03\u7528 \uff1a \u5728\u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\u65f6\uff0c\u901a\u5e38\u9700\u8981\u4f7f\u7528 *this \u3002 \u4f8b\u5982\uff1a return * this ; \u5728\u4ee3\u7801\u4e2d\u7684\u60c5\u51b5 \u5728\u4ee3\u7801\u4e2d\uff1a delete [] v ; // \u91ca\u653e\u5f53\u524d\u5bf9\u8c61\u7684\u65e7\u5185\u5b58 size = other . size ; // \u590d\u5236\u5927\u5c0f v = new int [ size ]; // \u5206\u914d\u65b0\u5185\u5b58 - v \u548c size \u662f\u5f53\u524d\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u3002 - \u5b83\u4eec\u6ca1\u6709\u4e0e\u51fd\u6570\u53c2\u6570\u6216\u5c40\u90e8\u53d8\u91cf\u540c\u540d\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u800c\u4e0d\u9700\u8981\u663e\u5f0f\u5199\u6210 this->v \u548c this->size \u3002 \u603b\u7ed3 \u53ef\u4ee5\u7701\u7565 this-> \uff1a\u5f53\u6210\u5458\u53d8\u91cf\u6ca1\u6709\u4e0e\u51fd\u6570\u53c2\u6570\u6216\u5c40\u90e8\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u76f4\u63a5\u4f7f\u7528\u6210\u5458\u53d8\u91cf\u540d\u5373\u53ef\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u89e3\u6790\u4e3a\u5f53\u524d\u5bf9\u8c61\u7684\u6210\u5458\u3002 \u9700\u8981\u4f7f\u7528 this-> \uff1a\u5f53\u6210\u5458\u53d8\u91cf\u4e0e\u51fd\u6570\u53c2\u6570\u6216\u5c40\u90e8\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528 this-> \u6765\u533a\u5206\u6210\u5458\u53d8\u91cf\u3002 \u5728\u4ee3\u7801\u4e2d\uff0c v \u548c size \u6ca1\u6709\u547d\u540d\u51b2\u7a81\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u800c\u4e0d\u9700\u8981\u5199\u6210 this->v \u548c this->size \u3002 \u603b\u7ed3 \u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u90fd\u662f\u9632\u6b62\u7f16\u8bd1\u5668\u9ed8\u8ba4\u4ea7\u751f\u6d45\u62f7\u8d1d\u884c\u4e3a\u3002 \u5982\u679c\u4e0d\u91cd\u8f7d = \u8fd0\u7b97\u7b26\uff0c\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u4e00\u4e2a\u9ed8\u8ba4\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002\u8fd9\u79cd\u9ed8\u8ba4\u884c\u4e3a\u662f \u6d45\u62f7 \u8d1d\uff0c\u5373\u7b80\u5355\u5730\u590d\u5236\u6210\u5458\u53d8\u91cf\u7684\u503c\u3002\u5982\u679c\u7c7b\u4e2d\u6709\u6307\u9488\u6210\u5458\uff08\u5982 v\uff09\uff0c\u6d45\u62f7\u8d1d\u4f1a\u5bfc\u81f4\u591a\u4e2a \u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\uff0c\u53ef\u80fd\u5f15\u53d1 \u91cd\u590d\u91ca\u653e\u5185\u5b58 \u7684\u95ee\u9898\u3002 \u6210\u5458\u51fd\u6570\u91cd\u8f7d\u4e0e\u53cb\u5143\u51fd\u6570\u91cd\u8f7d \u5728 C++ \u4e2d\uff0c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u53ef\u4ee5\u901a\u8fc7 \u6210\u5458\u51fd\u6570 \u548c \u53cb\u5143\u51fd\u6570 \u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0\u3002\u5b83\u4eec\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u64cd\u4f5c\u6570\u7684\u5904\u7406\u65b9\u5f0f\u548c\u9002\u7528\u573a\u666f\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u5bf9\u6bd4\u548c\u8bf4\u660e\uff1a 1. \u6210\u5458\u51fd\u6570\u5f62\u5f0f \u8bed\u6cd5 ReturnType operator\u7b26\u53f7 ( const ClassName & other ) { // \u5b9e\u73b0\u8fd0\u7b97\u7b26\u903b\u8f91 } \u7279\u70b9 \u5de6\u64cd\u4f5c\u6570 \uff1a\u6210\u5458\u51fd\u6570\u7684\u9690\u5f0f\u53c2\u6570 this \u662f\u8fd0\u7b97\u7b26\u7684\u5de6\u64cd\u4f5c\u6570\u3002 \u53f3\u64cd\u4f5c\u6570 \uff1a\u901a\u8fc7\u51fd\u6570\u53c2\u6570\u4f20\u9012\u3002 \u9002\u7528\u573a\u666f \uff1a\u5f53\u5de6\u64cd\u4f5c\u6570\u5fc5\u987b\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u65f6\uff0c\u4f7f\u7528\u6210\u5458\u51fd\u6570\u5f62\u5f0f\u3002 \u793a\u4f8b\uff1a\u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 + #include <iostream> using namespace std ; class Complex { private : double real , imag ; public : Complex ( double r , double i ) : real ( r ), imag ( i ) {} // \u6210\u5458\u51fd\u6570\u5f62\u5f0f\u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 Complex operator + ( const Complex & other ) { return Complex ( real + other . real , imag + other . imag ); } void display () const { cout << real << \" + \" << imag << \"i\" << endl ; } }; int main () { Complex c1 ( 1.0 , 2.0 ), c2 ( 3.0 , 4.0 ); Complex c3 = c1 + c2 ; // \u5de6\u64cd\u4f5c\u6570\u662f c1\uff0c\u53f3\u64cd\u4f5c\u6570\u662f c2 c3 . display (); // \u8f93\u51fa: 4.0 + 6.0i return 0 ; } 2. \u53cb\u5143\u51fd\u6570\u5f62\u5f0f \u8bed\u6cd5 friend ReturnType operator\u7b26\u53f7 ( const ClassName & lhs , const ClassName & rhs ) { // \u5b9e\u73b0\u8fd0\u7b97\u7b26\u903b\u8f91 } \u7279\u70b9 \u5de6\u64cd\u4f5c\u6570\u548c\u53f3\u64cd\u4f5c\u6570 \uff1a\u53cb\u5143\u51fd\u6570\u7684\u4e24\u4e2a\u64cd\u4f5c\u6570\u90fd\u901a\u8fc7\u53c2\u6570\u4f20\u9012\u3002 \u9002\u7528\u573a\u666f \uff1a\u5f53\u5de6\u64cd\u4f5c\u6570\u4e0d\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528\u53cb\u5143\u51fd\u6570\u5f62\u5f0f\u3002 \u793a\u4f8b\uff1a\u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 + #include <iostream> using namespace std ; class Complex { private : double real , imag ; public : Complex ( double r , double i ) : real ( r ), imag ( i ) {} // \u58f0\u660e\u53cb\u5143\u51fd\u6570 friend Complex operator + ( const Complex & lhs , const Complex & rhs ); void display () const { cout << real << \" + \" << imag << \"i\" << endl ; } }; // \u53cb\u5143\u51fd\u6570\u5f62\u5f0f\u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 Complex operator + ( const Complex & lhs , const Complex & rhs ) { return Complex ( lhs . real + rhs . real , lhs . imag + rhs . imag ); } int main () { Complex c1 ( 1.0 , 2.0 ), c2 ( 3.0 , 4.0 ); Complex c3 = c1 + c2 ; // \u5de6\u64cd\u4f5c\u6570\u662f c1\uff0c\u53f3\u64cd\u4f5c\u6570\u662f c2 c3 . display (); // \u8f93\u51fa: 4.0 + 6.0i return 0 ; } 3. \u6210\u5458\u51fd\u6570\u4e0e\u53cb\u5143\u51fd\u6570\u7684\u533a\u522b \u7279\u6027 \u6210\u5458\u51fd\u6570\u5f62\u5f0f \u53cb\u5143\u51fd\u6570\u5f62\u5f0f \u5de6\u64cd\u4f5c\u6570 \u5fc5\u987b\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61 \u53ef\u4ee5\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u7c7b\u578b\u7684\u5bf9\u8c61 \u53f3\u64cd\u4f5c\u6570 \u901a\u8fc7\u53c2\u6570\u4f20\u9012 \u901a\u8fc7\u53c2\u6570\u4f20\u9012 \u9002\u7528\u573a\u666f \u5de6\u64cd\u4f5c\u6570\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u65f6\u9002\u7528 \u5de6\u64cd\u4f5c\u6570\u4e0d\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u65f6\u5fc5\u987b\u4f7f\u7528 \u8bbf\u95ee\u6743\u9650 \u53ea\u80fd\u8bbf\u95ee\u5f53\u524d\u7c7b\u7684\u516c\u5171\u548c\u53d7\u4fdd\u62a4\u6210\u5458 \u53ef\u4ee5\u8bbf\u95ee\u5f53\u524d\u7c7b\u7684\u79c1\u6709\u548c\u53d7\u4fdd\u62a4\u6210\u5458\uff08\u901a\u8fc7\u53cb\u5143\uff09 \u5b9e\u73b0\u590d\u6742\u5ea6 \u5b9e\u73b0\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 this \u6307\u9488 \u9700\u8981\u663e\u5f0f\u4f20\u9012\u4e24\u4e2a\u64cd\u4f5c\u6570 4. \u793a\u4f8b\u5bf9\u6bd4\uff1a\u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 \u6210\u5458\u51fd\u6570\u5f62\u5f0f Complex operator + ( const Complex & other ) { return Complex ( real + other . real , imag + other . imag ); } - \u5de6\u64cd\u4f5c\u6570\u662f\u5f53\u524d\u5bf9\u8c61\uff08 this \u6307\u9488\uff09\u3002 - \u53f3\u64cd\u4f5c\u6570\u901a\u8fc7\u53c2\u6570 other \u4f20\u9012\u3002 \u53cb\u5143\u51fd\u6570\u5f62\u5f0f friend Complex operator + ( const Complex & lhs , const Complex & rhs ) { return Complex ( lhs . real + rhs . real , lhs . imag + rhs . imag ); } - \u5de6\u64cd\u4f5c\u6570\u548c\u53f3\u64cd\u4f5c\u6570\u90fd\u901a\u8fc7\u53c2\u6570 lhs \u548c rhs \u4f20\u9012\u3002 5. \u7279\u6b8a\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d \u8d4b\u503c\u8fd0\u7b97\u7b26 = \u5fc5\u987b\u4f5c\u4e3a\u6210\u5458\u51fd\u6570\u5b9e\u73b0\uff0c\u56e0\u4e3a\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u5de6\u64cd\u4f5c\u6570\u5fc5\u987b\u662f\u5f53\u524d\u5bf9\u8c61\u3002 \u793a\u4f8b\uff1a vector & operator = ( const vector & other ) { if ( this == & other ) { return * this ; } delete [] v ; size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } return * this ; } \u8f93\u5165\u8f93\u51fa\u8fd0\u7b97\u7b26 >> \u548c << \u901a\u5e38\u4f5c\u4e3a\u53cb\u5143\u51fd\u6570\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5de6\u64cd\u4f5c\u6570\u901a\u5e38\u662f\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u6d41\uff08\u5982 cin \u6216 cout \uff09\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u3002 \u793a\u4f8b\uff1a friend ostream & operator << ( ostream & os , const Complex & c ) { os << c . real << \" + \" << c . imag << \"i\" ; return os ; } 6. \u603b\u7ed3 \u6210\u5458\u51fd\u6570\u5f62\u5f0f \uff1a \u5de6\u64cd\u4f5c\u6570\u5fc5\u987b\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u3002 \u5b9e\u73b0\u7b80\u5355\uff0c\u9002\u7528\u4e8e\u5927\u591a\u6570\u8fd0\u7b97\u7b26\u3002 \u53cb\u5143\u51fd\u6570\u5f62\u5f0f \uff1a \u5de6\u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u5176\u4ed6\u7c7b\u578b\u7684\u5bf9\u8c61\u3002 \u5fc5\u987b\u58f0\u660e\u4e3a\u53cb\u5143\uff0c\u9002\u7528\u4e8e\u8f93\u5165\u8f93\u51fa\u8fd0\u7b97\u7b26\u7b49\u7279\u6b8a\u60c5\u51b5\u3002 \u6839\u636e\u5177\u4f53\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u5982\u679c\u5de6\u64cd\u4f5c\u6570\u4e0d\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\uff0c\u5fc5\u987b\u4f7f\u7528\u53cb\u5143\u51fd\u6570\u5f62\u5f0f\u3002 \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u7684\u4f5c\u7528 \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff08Type Conversion Operator\uff09\u5728 C++ \u4e2d\u7684\u4e3b\u8981\u4f5c\u7528\u662f \u5c06\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u578b\uff08\u5982\u7c7b\u6216\u7ed3\u6784\u4f53\uff09\u8f6c\u6362\u4e3a\u5176\u4ed6\u7c7b\u578b\uff08\u5982\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6216\u5176\u4ed6\u7c7b\u7c7b\u578b\uff09 \u3002\u901a\u8fc7\u91cd\u8f7d\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7c7b\u578b\u8f6c\u6362\u7684\u884c\u4e3a\uff0c\u4f7f\u5f97\u7c7b\u5bf9\u8c61\u80fd\u591f\u66f4\u81ea\u7136\u5730\u4e0e\u5176\u4ed6\u7c7b\u578b\u8fdb\u884c\u4ea4\u4e92\u3002 \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u7684\u7528\u5904 1. \u5c06\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5c06\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff08\u5982 int \u3001 double \u7b49\uff09\uff0c\u4f7f\u5f97\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e\u9700\u8981\u8fd9\u4e9b\u7c7b\u578b\u7684\u573a\u666f\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Counter { private : int value ; public : Counter ( int v ) : value ( v ) {} // \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u5c06 Counter \u8f6c\u6362\u4e3a int operator int () const { return value ; } }; int main () { Counter c ( 10 ); // \u9690\u5f0f\u8c03\u7528\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 int x = c ; cout << \"x = \" << x << endl ; // \u663e\u5f0f\u8c03\u7528\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 cout << \"Value: \" << static_cast < int > ( c ) << endl ; return 0 ; } \u8f93\u51fa \uff1a x = 10 Value: 10 2. \u5c06\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5176\u4ed6\u7c7b\u7c7b\u578b \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5c06\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u7c7b\u7c7b\u578b\uff0c\u65b9\u4fbf\u7c7b\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Celsius { private : double temperature ; public : Celsius ( double temp ) : temperature ( temp ) {} double getTemperature () const { return temperature ; } }; class Fahrenheit { private : double temperature ; public : Fahrenheit ( double temp ) : temperature ( temp ) {} // \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u5c06 Fahrenheit \u8f6c\u6362\u4e3a Celsius operator Celsius () const { return Celsius (( temperature - 32 ) * 5.0 / 9.0 ); } }; int main () { Fahrenheit f ( 98.6 ); // \u534e\u6c0f\u6e29\u5ea6 Celsius c = f ; // \u9690\u5f0f\u8c03\u7528\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 cout << \"Celsius: \" << c . getTemperature () << \"\u00b0C\" << endl ; return 0 ; } \u8f93\u51fa \uff1a Celsius: 37\u00b0C 3. \u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7075\u6d3b\u6027 \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u53ef\u4ee5\u8ba9\u7c7b\u5bf9\u8c61\u5728\u9700\u8981\u8f6c\u6362\u65f6\u81ea\u52a8\u5b8c\u6210\u8f6c\u6362\uff0c\u51cf\u5c11\u663e\u5f0f\u8f6c\u6362\u7684\u4ee3\u7801\u91cf\u3002 \u4f8b\u5982\uff0c\u5c06\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a bool \u7c7b\u578b\uff0c\u7528\u4e8e\u6761\u4ef6\u5224\u65ad\uff1a class Counter { private : int value ; public : Counter ( int v ) : value ( v ) {} // \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u5c06 Counter \u8f6c\u6362\u4e3a bool operator bool () const { return value > 0 ; } }; int main () { Counter c ( 10 ); if ( c ) { cout << \"Counter is positive.\" << endl ; } else { cout << \"Counter is zero or negative.\" << endl ; } return 0 ; } \u8f93\u51fa \uff1a Counter is positive. 4. \u652f\u6301\u4e0e\u6807\u51c6\u5e93\u7684\u4ea4\u4e92 \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u53ef\u4ee5\u8ba9\u7c7b\u5bf9\u8c61\u4e0e\u6807\u51c6\u5e93\u51fd\u6570\u6216\u5bb9\u5668\u66f4\u597d\u5730\u534f\u4f5c\u3002\u4f8b\u5982\uff0c\u5c06\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a std::string \u7c7b\u578b\uff1a #include <iostream> #include <string> using namespace std ; class Person { private : string name ; public : Person ( const string & n ) : name ( n ) {} // \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u5c06 Person \u8f6c\u6362\u4e3a string operator string () const { return name ; } }; int main () { Person p ( \"Alice\" ); // \u9690\u5f0f\u8f6c\u6362\u4e3a string string s = p ; cout << \"Name: \" << s << endl ; return 0 ; } \u8f93\u51fa \uff1a Name: Alice 5. \u81ea\u5b9a\u4e49\u590d\u6742\u7c7b\u578b\u7684\u8f6c\u6362\u903b\u8f91 \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u5141\u8bb8\u5f00\u53d1\u8005\u5b9a\u4e49\u590d\u6742\u7684\u8f6c\u6362\u903b\u8f91\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u503c\u590d\u5236\u3002\u4f8b\u5982\uff0c\u5c06\u4e00\u4e2a\u77e9\u5f62\u7c7b\u8f6c\u6362\u4e3a\u9762\u79ef\u503c\uff1a class Rectangle { private : double width , height ; public : Rectangle ( double w , double h ) : width ( w ), height ( h ) {} // \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u5c06 Rectangle \u8f6c\u6362\u4e3a double\uff08\u9762\u79ef\uff09 operator double () const { return width * height ; } }; int main () { Rectangle rect ( 5.0 , 3.0 ); // \u9690\u5f0f\u8f6c\u6362\u4e3a double double area = rect ; cout << \"Area: \" << area << endl ; return 0 ; } \u8f93\u51fa \uff1a Area: 15 \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u7684\u6ce8\u610f\u4e8b\u9879 \u53ea\u80fd\u662f\u6210\u5458\u51fd\u6570 \uff1a \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u5fc5\u987b\u662f\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u80fd\u662f\u53cb\u5143\u51fd\u6570\u6216\u666e\u901a\u51fd\u6570\u3002 \u6ca1\u6709\u8fd4\u56de\u503c\u7c7b\u578b \uff1a \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u7531\u76ee\u6807\u7c7b\u578b\u51b3\u5b9a\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u663e\u5f0f\u58f0\u660e\u8fd4\u56de\u503c\u7c7b\u578b\u3002 \u907f\u514d\u9690\u5f0f\u8f6c\u6362\u7684\u6b67\u4e49 \uff1a \u5982\u679c\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u5b9a\u4e49\u4e0d\u5408\u7406\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9690\u5f0f\u8f6c\u6362\u65f6\u7684\u6b67\u4e49\u95ee\u9898\u3002 \u4f8b\u5982\uff0c\u591a\u4e2a\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u5668\u65e0\u6cd5\u786e\u5b9a\u4f7f\u7528\u54ea\u4e2a\u8f6c\u6362\u3002 \u663e\u5f0f\u8f6c\u6362\u4f18\u5148 \uff1a \u5982\u679c\u4e0d\u5e0c\u671b\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u88ab\u9690\u5f0f\u8c03\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 explicit \u5173\u952e\u5b57\u9650\u5236\u5176\u53ea\u80fd\u901a\u8fc7\u663e\u5f0f\u8c03\u7528\u89e6\u53d1\uff08C++11 \u5f15\u5165\uff09\u3002 \u793a\u4f8b\uff1a class Counter { private : int value ; public : Counter ( int v ) : value ( v ) {} // \u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 explicit operator int () const { return value ; } }; int main () { Counter c ( 10 ); // int x = c; // \u9519\u8bef\uff1a\u9690\u5f0f\u8c03\u7528\u88ab\u7981\u6b62 int x = static_cast < int > ( c ); // \u663e\u5f0f\u8c03\u7528 cout << \"x = \" << x << endl ; return 0 ; } \u603b\u7ed3 \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u7684\u4f5c\u7528 \uff1a \u5c06\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002 \u5c06\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5176\u4ed6\u7c7b\u7c7b\u578b\u3002 \u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7075\u6d3b\u6027\u3002 \u652f\u6301\u4e0e\u6807\u51c6\u5e93\u7684\u4ea4\u4e92\u3002 \u81ea\u5b9a\u4e49\u590d\u6742\u7c7b\u578b\u7684\u8f6c\u6362\u903b\u8f91\u3002 \u6ce8\u610f\u4e8b\u9879 \uff1a \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u5fc5\u987b\u662f\u6210\u5458\u51fd\u6570\u3002 \u907f\u514d\u9690\u5f0f\u8f6c\u6362\u5f15\u53d1\u7684\u6b67\u4e49\u3002 \u4f7f\u7528 explicit \u9650\u5236\u9690\u5f0f\u8f6c\u6362\u7684\u53d1\u751f\uff08\u5982\u679c\u9700\u8981\uff09\u3002 \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u662f C++ \u63d0\u4f9b\u7684\u4e00\u79cd\u5f3a\u5927\u673a\u5236\uff0c\u80fd\u591f\u8ba9\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u578b\u66f4\u81ea\u7136\u5730\u4e0e\u5176\u4ed6\u7c7b\u578b\u4ea4\u4e92\uff0c\u589e\u5f3a\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u7528\u6027\u3002 \u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26 \u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d \u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d \u662f\u6307\u5728 C++ \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u91cd\u8f7d\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26 () \uff0c\u4f7f\u5f97\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u50cf\u51fd\u6570\u4e00\u6837\u88ab\u8c03\u7528\u3002\u8fd9\u79cd\u91cd\u8f7d\u5141\u8bb8\u7a0b\u5e8f\u5458\u4e3a\u7c7b\u5bf9\u8c61\u5b9a\u4e49\u81ea\u5b9a\u4e49\u7684\u8c03\u7528\u884c\u4e3a\u3002 \u8bed\u6cd5 \u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a ReturnType operator ()( ParameterList ) { // \u5b9e\u73b0\u8c03\u7528\u903b\u8f91 } - ReturnType \uff1a\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u3002 - ParameterList \uff1a\u53c2\u6570\u5217\u8868\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5b9a\u4e49\u4efb\u610f\u6570\u91cf\u548c\u7c7b\u578b\u7684\u53c2\u6570\u3002 - operator() \uff1a\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\u51fd\u6570\u3002 \u7279\u70b9 \u4f7f\u5bf9\u8c61\u50cf\u51fd\u6570\u4e00\u6837\u8c03\u7528 \uff1a \u91cd\u8f7d () \u540e\uff0c\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u50cf\u666e\u901a\u51fd\u6570\u4e00\u6837\u4f7f\u7528\u3002 \u7075\u6d3b\u6027 \uff1a \u53ef\u4ee5\u81ea\u5b9a\u4e49\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u9002\u7528\u4e8e\u5404\u79cd\u573a\u666f\u3002 \u5e38\u89c1\u7528\u9014 \uff1a \u7528\u4e8e\u5b9e\u73b0\u4eff\u51fd\u6570\uff08\u51fd\u6570\u5bf9\u8c61\uff09\u3002 \u7528\u4e8e\u5c01\u88c5\u590d\u6742\u7684\u51fd\u6570\u903b\u8f91\u3002 \u793a\u4f8b 1\uff1a\u7b80\u5355\u7684\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d \u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u91cd\u8f7d () \u8fd0\u7b97\u7b26\uff0c\u4f7f\u5bf9\u8c61\u53ef\u4ee5\u50cf\u51fd\u6570\u4e00\u6837\u8c03\u7528\uff1a #include <iostream> using namespace std ; class Adder { private : int base ; public : Adder ( int b ) : base ( b ) {} // \u91cd\u8f7d\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26 int operator ()( int x ) { return base + x ; } }; int main () { Adder add ( 10 ); // \u521b\u5efa\u5bf9\u8c61\uff0c\u57fa\u503c\u4e3a 10 // \u4f7f\u7528\u5bf9\u8c61\u50cf\u51fd\u6570\u4e00\u6837\u8c03\u7528 cout << \"add(5) = \" << add ( 5 ) << endl ; // \u8f93\u51fa: 15 cout << \"add(20) = \" << add ( 20 ) << endl ; // \u8f93\u51fa: 30 return 0 ; } \u8f93\u51fa add(5) = 15 add(20) = 30 \u793a\u4f8b 2\uff1a\u591a\u53c2\u6570\u7684\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d \u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u53ef\u4ee5\u63a5\u53d7\u591a\u4e2a\u53c2\u6570\uff0c\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u52a0\u6cd5\u5668\uff1a #include <iostream> using namespace std ; class Multiplier { public : // \u91cd\u8f7d\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26 int operator ()( int x , int y ) { return x * y ; } }; int main () { Multiplier multiply ; // \u4f7f\u7528\u5bf9\u8c61\u50cf\u51fd\u6570\u4e00\u6837\u8c03\u7528 cout << \"multiply(3, 4) = \" << multiply ( 3 , 4 ) << endl ; // \u8f93\u51fa: 12 cout << \"multiply(7, 8) = \" << multiply ( 7 , 8 ) << endl ; // \u8f93\u51fa: 56 return 0 ; } \u8f93\u51fa multiply(3, 4) = 12 multiply(7, 8) = 56 \u793a\u4f8b 3\uff1a\u4eff\u51fd\u6570\uff08\u51fd\u6570\u5bf9\u8c61\uff09 \u4eff\u51fd\u6570\u662f\u901a\u8fc7\u91cd\u8f7d () \u8fd0\u7b97\u7b26\u7684\u7c7b\u5bf9\u8c61\uff0c\u901a\u5e38\u7528\u4e8e\u66ff\u4ee3\u666e\u901a\u51fd\u6570\uff0c\u7279\u522b\u662f\u5728\u6807\u51c6\u6a21\u677f\u5e93\uff08STL\uff09\u4e2d\u3002 #include <iostream> #include <vector> #include <algorithm> using namespace std ; class IsEven { public : // \u91cd\u8f7d\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26 bool operator ()( int x ) { return x % 2 == 0 ; } }; int main () { vector < int > nums = { 1 , 2 , 3 , 4 , 5 , 6 }; // \u4f7f\u7528\u4eff\u51fd\u6570\u7b5b\u9009\u5076\u6570 IsEven isEven ; for ( int num : nums ) { if ( isEven ( num )) { cout << num << \" is even.\" << endl ; } } return 0 ; } \u8f93\u51fa 2 is even. 4 is even. 6 is even. \u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u5e94\u7528\u573a\u666f \u4eff\u51fd\u6570\uff08\u51fd\u6570\u5bf9\u8c61\uff09 \uff1a \u5728 STL \u4e2d\uff0c\u4eff\u51fd\u6570\u88ab\u5e7f\u6cdb\u7528\u4e8e\u7b97\u6cd5\uff08\u5982 std::sort \uff09\u4e2d\u3002 \u4f8b\u5982\uff1a struct Compare { bool operator ()( int a , int b ) { return a < b ; } }; std :: sort ( vec . begin (), vec . end (), Compare ()); \u5c01\u88c5\u590d\u6742\u903b\u8f91 \uff1a \u53ef\u4ee5\u5c06\u590d\u6742\u7684\u51fd\u6570\u903b\u8f91\u5c01\u88c5\u5230\u7c7b\u4e2d\uff0c\u901a\u8fc7\u91cd\u8f7d () \u63d0\u4f9b\u7b80\u5355\u7684\u8c03\u7528\u63a5\u53e3\u3002 \u72b6\u6001\u7ba1\u7406 \uff1a \u51fd\u6570\u5bf9\u8c61\u53ef\u4ee5\u4fdd\u5b58\u72b6\u6001\uff0c\u800c\u666e\u901a\u51fd\u6570\u65e0\u6cd5\u505a\u5230\u3002 \u4f8b\u5982\uff1a class Counter { private : int count ; public : Counter () : count ( 0 ) {} int operator ()() { return ++ count ; } }; Counter counter ; cout << counter () << endl ; // \u8f93\u51fa: 1 cout << counter () << endl ; // \u8f93\u51fa: 2 \u52a8\u6001\u884c\u4e3a \uff1a \u53ef\u4ee5\u6839\u636e\u5bf9\u8c61\u7684\u72b6\u6001\u52a8\u6001\u6539\u53d8\u51fd\u6570\u8c03\u7528\u7684\u884c\u4e3a\u3002 \u6ce8\u610f\u4e8b\u9879 \u8fd4\u56de\u503c\u7c7b\u578b\u548c\u53c2\u6570\u5217\u8868 \uff1a \u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u548c\u53c2\u6570\u5217\u8868\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u81ea\u7531\u5b9a\u4e49\u3002 \u652f\u6301\u5e38\u91cf\u5bf9\u8c61 \uff1a \u5982\u679c\u9700\u8981\u652f\u6301\u5e38\u91cf\u5bf9\u8c61\u8c03\u7528\uff0c\u53ef\u4ee5\u5c06 operator() \u58f0\u660e\u4e3a const \uff1a int operator ()( int x ) const { return x * x ; } \u4e0e\u666e\u901a\u51fd\u6570\u7684\u533a\u522b \uff1a \u666e\u901a\u51fd\u6570\u662f\u9759\u6001\u7684\uff0c\u4e0d\u80fd\u4fdd\u5b58\u72b6\u6001\u3002 \u51fd\u6570\u5bf9\u8c61\u53ef\u4ee5\u4fdd\u5b58\u72b6\u6001\uff0c\u63d0\u4f9b\u66f4\u7075\u6d3b\u7684\u529f\u80fd\u3002 \u603b\u7ed3 \u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d \u5141\u8bb8\u7c7b\u7684\u5bf9\u8c61\u50cf\u51fd\u6570\u4e00\u6837\u8c03\u7528\u3002 \u5b83\u901a\u8fc7\u91cd\u8f7d operator() \u5b9e\u73b0\uff0c\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u81ea\u7531\u5b9a\u4e49\u3002 \u5e38\u89c1\u5e94\u7528\u5305\u62ec\u4eff\u51fd\u6570\u3001\u5c01\u88c5\u590d\u6742\u903b\u8f91\u3001\u72b6\u6001\u7ba1\u7406\u7b49\u3002 \u5728 C++ \u6807\u51c6\u5e93\u4e2d\uff0c\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u88ab\u5e7f\u6cdb\u7528\u4e8e STL \u7b97\u6cd5\u548c\u5bb9\u5668\u4e2d\u3002","title":"\u91cd\u8f7d\u548c\u62f7\u8d1d\u6784\u9020\u51fd\u6570"},{"location":"C%2B%2B/overload/#1","text":"\u51fd\u6570\u91cd\u8f7d\u662f\u6307\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u4f46\u5b83\u4eec\u7684\u53c2\u6570\u5217\u8868\uff08\u53c2\u6570\u7684\u6570\u91cf\u3001\u7c7b\u578b\u6216\u987a\u5e8f\uff09\u5fc5\u987b\u4e0d\u540c\u3002\u7f16\u8bd1\u5668\u901a\u8fc7\u53c2\u6570\u5217\u8868\u6765\u533a\u5206\u8c03\u7528\u7684\u662f\u54ea\u4e2a\u51fd\u6570\u3002","title":"1. \u51fd\u6570\u91cd\u8f7d"},{"location":"C%2B%2B/overload/#_1","text":"#include <iostream> using namespace std ; // \u51fd\u6570\u91cd\u8f7d\u793a\u4f8b void print ( int i ) { cout << \"\u6574\u6570: \" << i << endl ; } void print ( double d ) { cout << \"\u6d6e\u70b9\u6570: \" << d << endl ; } void print ( const string & s ) { cout << \"\u5b57\u7b26\u4e32: \" << s << endl ; } int main () { print ( 10 ); // \u8c03\u7528 print(int) print ( 3.14 ); // \u8c03\u7528 print(double) print ( \"Hello\" ); // \u8c03\u7528 print(const string&) return 0 ; }","title":"\u793a\u4f8b\uff1a\u51fd\u6570\u91cd\u8f7d"},{"location":"C%2B%2B/overload/#_2","text":"\u51fd\u6570\u540d\u76f8\u540c\uff0c\u4f46\u53c2\u6570\u5217\u8868\u5fc5\u987b\u4e0d\u540c\u3002 \u8fd4\u56de\u503c\u7c7b\u578b\u4e0d\u80fd\u4f5c\u4e3a\u51fd\u6570\u91cd\u8f7d\u7684\u552f\u4e00\u4f9d\u636e\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/overload/#2","text":"\u8fd0\u7b97\u7b26\u91cd\u8f7d\u662f\u6307\u4e3a\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u578b\uff08\u5982\u7c7b\uff09\u91cd\u65b0\u5b9a\u4e49 C++ \u8fd0\u7b97\u7b26\u7684\u884c\u4e3a\u3002\u901a\u8fc7\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0c\u53ef\u4ee5\u8ba9\u8fd0\u7b97\u7b26\u4f5c\u7528\u4e8e\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002","title":"2. \u8fd0\u7b97\u7b26\u91cd\u8f7d"},{"location":"C%2B%2B/overload/#_3","text":"#include <iostream> using namespace std ; class Complex { private : double real , imag ; public : Complex ( double r , double i ) : real ( r ), imag ( i ) {} // \u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 Complex operator + ( const Complex & other ) { return Complex ( real + other . real , imag + other . imag ); } void display () const { cout << real << \" + \" << imag << \"i\" << endl ; } }; int main () { Complex c1 ( 1.0 , 2.0 ), c2 ( 3.0 , 4.0 ); Complex c3 = c1 + c2 ; // \u4f7f\u7528\u91cd\u8f7d\u7684\u52a0\u6cd5\u8fd0\u7b97\u7b26 c3 . display (); // \u8f93\u51fa: 4.0 + 6.0i return 0 ; }","title":"\u793a\u4f8b\uff1a\u8fd0\u7b97\u7b26\u91cd\u8f7d"},{"location":"C%2B%2B/overload/#_4","text":"\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5fc5\u987b\u662f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u6216\u53cb\u5143\u51fd\u6570\u3002 \u4e0d\u80fd\u91cd\u8f7d\u4ee5\u4e0b\u8fd0\u7b97\u7b26\uff1a :: \u3001 . \u3001 .* \u3001 sizeof \u3001 typeid \u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/overload/#_5","text":"\u4ee3\u7801\u53ef\u8bfb\u6027 \uff1a\u901a\u8fc7\u91cd\u8f7d\uff0c\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u51fd\u6570\u540d\u6216\u8fd0\u7b97\u7b26\u5b8c\u6210\u4e0d\u540c\u7684\u4efb\u52a1\uff0c\u589e\u5f3a\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002 \u7075\u6d3b\u6027 \uff1a\u5141\u8bb8\u5f00\u53d1\u8005\u6839\u636e\u4e0d\u540c\u7684\u53c2\u6570\u7c7b\u578b\u6216\u6570\u91cf\u5b9e\u73b0\u4e0d\u540c\u7684\u529f\u80fd\u3002","title":"\u91cd\u8f7d\u7684\u4f18\u70b9"},{"location":"C%2B%2B/overload/#_6","text":"\u51fd\u6570\u91cd\u8f7d \uff1a\u540c\u540d\u51fd\u6570\uff0c\u53c2\u6570\u5217\u8868\u4e0d\u540c\u3002 \u8fd0\u7b97\u7b26\u91cd\u8f7d \uff1a\u4e3a\u81ea\u5b9a\u4e49\u7c7b\u578b\u91cd\u65b0\u5b9a\u4e49\u8fd0\u7b97\u7b26\u7684\u884c\u4e3a\u3002 \u91cd\u8f7d\u662f C++ \u63d0\u4f9b\u7684\u4e00\u79cd\u591a\u6001\u6027\uff08\u7f16\u8bd1\u65f6\u591a\u6001\uff09\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002 \u5728 C++ \u4e2d\uff0c \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u662f\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u7528\u540c\u7c7b\u7684\u53e6\u4e00\u4e2a\u5bf9\u8c61\u6765\u521d\u59cb\u5316\u5b83\u7684\u7279\u6b8a\u6784\u9020\u51fd\u6570\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/overload/#_7","text":"\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u4f5c\u7528\u662f\u901a\u8fc7\u5df2\u6709\u5bf9\u8c61\u7684\u503c\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u3002\u5b83\u7684\u51fd\u6570\u7b7e\u540d\u901a\u5e38\u662f\uff1a ClassName ( const ClassName & other ); - ClassName \u662f\u7c7b\u540d\u3002 - const ClassName& other \u662f\u5bf9\u540c\u7c7b\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u3002","title":"\u5b9a\u4e49"},{"location":"C%2B%2B/overload/#_8","text":"\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u9ed8\u8ba4\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4f1a\u9010\u6210\u5458\u5730\u590d\u5236\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u3002","title":"\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570"},{"location":"C%2B%2B/overload/#_9","text":"#include <iostream> using namespace std ; class Person { private : string name ; int age ; public : // \u6784\u9020\u51fd\u6570 Person ( string n , int a ) : name ( n ), age ( a ) {} // \u62f7\u8d1d\u6784\u9020\u51fd\u6570 Person ( const Person & other ) { name = other . name ; age = other . age ; cout << \"\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\" << endl ; } void display () const { cout << \"Name: \" << name << \", Age: \" << age << endl ; } }; int main () { Person p1 ( \"Alice\" , 25 ); // \u8c03\u7528\u666e\u901a\u6784\u9020\u51fd\u6570 Person p2 = p1 ; // \u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 p2 . display (); return 0 ; }","title":"\u793a\u4f8b\uff1a\u62f7\u8d1d\u6784\u9020\u51fd\u6570"},{"location":"C%2B%2B/overload/#_10","text":"\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528 Name: Alice, Age: 25","title":"\u8f93\u51fa"},{"location":"C%2B%2B/overload/#_11","text":"\u7528\u4e00\u4e2a\u5bf9\u8c61\u521d\u59cb\u5316\u53e6\u4e00\u4e2a\u5bf9\u8c61 \uff1a Person p2 = p1 ; \u5bf9\u8c61\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f20\u9012\uff08\u6309\u503c\u4f20\u9012\uff09 \uff1a void func ( Person p ); \u51fd\u6570\u8fd4\u56de\u5bf9\u8c61\uff08\u6309\u503c\u8fd4\u56de\uff09 \uff1a Person func ();","title":"\u4ec0\u4e48\u65f6\u5019\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff1f"},{"location":"C%2B%2B/overload/#_12","text":"\u5982\u679c\u7c7b\u4e2d\u6709\u6307\u9488\u6216\u52a8\u6001\u5206\u914d\u7684\u8d44\u6e90\uff0c\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u53ef\u80fd\u4f1a\u5bfc\u81f4 \u6d45\u62f7\u8d1d \u95ee\u9898\uff08\u591a\u4e2a\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\uff09\u3002\u6b64\u65f6\u9700\u8981\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8fdb\u884c \u6df1\u62f7\u8d1d \u3002","title":"\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u5fc5\u8981\u6027"},{"location":"C%2B%2B/overload/#_13","text":"class MyClass { private : int * data ; public : // \u6784\u9020\u51fd\u6570 MyClass ( int value ) { data = new int ( value ); } // \u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u6df1\u62f7\u8d1d\uff09 MyClass ( const MyClass & other ) { data = new int ( * other . data ); // \u5206\u914d\u65b0\u5185\u5b58\u5e76\u590d\u5236\u503c } ~ MyClass () { delete data ; // \u91ca\u653e\u5185\u5b58 } };","title":"\u793a\u4f8b\uff1a\u6df1\u62f7\u8d1d"},{"location":"C%2B%2B/overload/#_14","text":"\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u7528\u4e8e\u901a\u8fc7\u5df2\u6709\u5bf9\u8c61\u521d\u59cb\u5316\u65b0\u5bf9\u8c61\u3002 \u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u9002\u7528\u4e8e\u7b80\u5355\u7c7b\uff0c\u4f46\u5bf9\u4e8e\u52a8\u6001\u5206\u914d\u8d44\u6e90\u7684\u7c7b\uff0c\u9700\u8981\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4ee5\u907f\u514d\u6d45\u62f7\u8d1d\u95ee\u9898\u3002 \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f C++ \u63d0\u4f9b\u7684\u4e00\u79cd\u91cd\u8981\u673a\u5236\uff0c\u7528\u4e8e\u5b9e\u73b0\u5bf9\u8c61\u7684\u5b89\u5168\u62f7\u8d1d\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/overload/#_15","text":"","title":"\u4e3a\u4ec0\u4e48\u8981\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5462\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u6d45\u62f7\u8d1d"},{"location":"C%2B%2B/overload/#_16","text":"\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u4e3b\u8981\u4f5c\u7528\u662f \u901a\u8fc7\u5df2\u6709\u5bf9\u8c61\u521d\u59cb\u5316\u65b0\u5bf9\u8c61 \uff0c\u5b83\u5728\u4ee5\u4e0b\u573a\u666f\u4e2d\u975e\u5e38\u91cd\u8981\uff1a \u5bf9\u8c61\u521d\u59cb\u5316 \uff1a \u5f53\u9700\u8981\u7528\u4e00\u4e2a\u5bf9\u8c61\u7684\u503c\u6765\u521b\u5efa\u53e6\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u786e\u4fdd\u65b0\u5bf9\u8c61\u6b63\u786e\u5730\u590d\u5236\u539f\u5bf9\u8c61\u7684\u5185\u5bb9\u3002 Person p2 = p1 ; // \u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u6309\u503c\u4f20\u9012\u5bf9\u8c61 \uff1a \u5f53\u5bf9\u8c61\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u6309\u503c\u4f20\u9012\u65f6\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\uff0c\u786e\u4fdd\u51fd\u6570\u63a5\u6536\u5230\u7684\u662f\u539f\u5bf9\u8c61\u7684\u526f\u672c\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u64cd\u4f5c\u539f\u5bf9\u8c61\u3002 void func ( Person p ); // \u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u6309\u503c\u8fd4\u56de\u5bf9\u8c61 \uff1a \u5f53\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\uff0c\u786e\u4fdd\u8fd4\u56de\u7684\u5bf9\u8c61\u662f\u539f\u5bf9\u8c61\u7684\u526f\u672c\u3002 Person func () { Person p ( \"Alice\" , 25 ); return p ; // \u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 } \u52a8\u6001\u8d44\u6e90\u7ba1\u7406 \uff1a \u5982\u679c\u7c7b\u4e2d\u6709\u52a8\u6001\u5206\u914d\u7684\u8d44\u6e90\uff08\u5982\u6307\u9488\uff09\uff0c\u9700\u8981\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6765\u907f\u514d\u8d44\u6e90\u5171\u4eab\u95ee\u9898\uff08\u6d45\u62f7\u8d1d\u95ee\u9898\uff09\u3002","title":"\u4e3a\u4ec0\u4e48\u8981\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff1f"},{"location":"C%2B%2B/overload/#_17","text":"\u6d45\u62f7\u8d1d \u662f\u6307\u5728\u62f7\u8d1d\u5bf9\u8c61\u65f6\uff0c\u4ec5\u590d\u5236\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u7684\u503c\uff0c\u800c\u4e0d\u5206\u914d\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u8fd9\u79cd\u62f7\u8d1d\u65b9\u5f0f\u5bf9\u666e\u901a\u53d8\u91cf\uff08\u5982\u6574\u6570\u3001\u6d6e\u70b9\u6570\uff09\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u5bf9\u4e8e\u6307\u9488\u6216\u52a8\u6001\u5206\u914d\u7684\u8d44\u6e90\uff0c\u4f1a\u5bfc\u81f4\u591a\u4e2a\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\u3002","title":"\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u6d45\u62f7\u8d1d\uff1f"},{"location":"C%2B%2B/overload/#_18","text":"\u8d44\u6e90\u5171\u4eab\u95ee\u9898 \uff1a \u5982\u679c\u4e24\u4e2a\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u4fee\u6539\u8be5\u5185\u5b58\u65f6\uff0c\u53e6\u4e00\u4e2a\u5bf9\u8c61\u7684\u5185\u5bb9\u4e5f\u4f1a\u88ab\u4fee\u6539\u3002 \u91cd\u590d\u91ca\u653e\u95ee\u9898 \uff1a \u5f53\u4e24\u4e2a\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\u65f6\uff0c\u6790\u6784\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\u4e24\u6b21\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002","title":"\u6d45\u62f7\u8d1d\u7684\u98ce\u9669"},{"location":"C%2B%2B/overload/#_19","text":"#include <iostream> using namespace std ; class MyClass { private : int * data ; public : // \u6784\u9020\u51fd\u6570 MyClass ( int value ) { data = new int ( value ); } // \u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u6d45\u62f7\u8d1d\uff09 MyClass ( const MyClass & other ) { data = other . data ; // \u4ec5\u590d\u5236\u6307\u9488\u5730\u5740 } ~ MyClass () { delete data ; // \u91ca\u653e\u5185\u5b58 } void display () const { cout << \"Value: \" << * data << endl ; } }; int main () { MyClass obj1 ( 10 ); MyClass obj2 = obj1 ; // \u8c03\u7528\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u6d45\u62f7\u8d1d\uff09 obj2 . display (); // \u5f53\u6790\u6784\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0cobj1 \u548c obj2 \u4f1a\u5c1d\u8bd5\u91ca\u653e\u540c\u4e00\u5757\u5185\u5b58\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83 return 0 ; }","title":"\u793a\u4f8b\uff1a\u6d45\u62f7\u8d1d\u95ee\u9898"},{"location":"C%2B%2B/overload/#_20","text":"\u7a0b\u5e8f\u53ef\u80fd\u5d29\u6e83\uff0c\u539f\u56e0\u662f obj1 \u548c obj2 \u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\uff0c\u6790\u6784\u51fd\u6570\u4f1a\u91cd\u590d\u91ca\u653e\u8fd9\u5757\u5185\u5b58\u3002","title":"\u8f93\u51fa"},{"location":"C%2B%2B/overload/#_21","text":"\u901a\u8fc7\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5b9e\u73b0 \u6df1\u62f7\u8d1d \uff0c\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u5206\u914d\u72ec\u7acb\u7684\u5185\u5b58\u3002","title":"\u5982\u4f55\u907f\u514d\u6d45\u62f7\u8d1d\uff1f"},{"location":"C%2B%2B/overload/#_22","text":"class MyClass { private : int * data ; public : // \u6784\u9020\u51fd\u6570 MyClass ( int value ) { data = new int ( value ); } // \u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u6df1\u62f7\u8d1d\uff09 MyClass ( const MyClass & other ) { data = new int ( * other . data ); // \u5206\u914d\u65b0\u5185\u5b58\u5e76\u590d\u5236\u503c } ~ MyClass () { delete data ; // \u91ca\u653e\u5185\u5b58 } void display () const { cout << \"Value: \" << * data << endl ; } }; int main () { MyClass obj1 ( 10 ); MyClass obj2 = obj1 ; // \u8c03\u7528\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u6df1\u62f7\u8d1d\uff09 obj2 . display (); // \u8f93\u51fa: Value: 10 return 0 ; }","title":"\u6df1\u62f7\u8d1d\u793a\u4f8b"},{"location":"C%2B%2B/overload/#_23","text":"Value: 10 \u5728\u6df1\u62f7\u8d1d\u4e2d\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u72ec\u7acb\u7684\u5185\u5b58\uff0c\u907f\u514d\u4e86\u8d44\u6e90\u5171\u4eab\u548c\u91cd\u590d\u91ca\u653e\u7684\u95ee\u9898\u3002","title":"\u8f93\u51fa"},{"location":"C%2B%2B/overload/#_24","text":"\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u7528\u4e8e\u5728\u5bf9\u8c61\u521d\u59cb\u5316\u3001\u6309\u503c\u4f20\u9012\u6216\u8fd4\u56de\u65f6\uff0c\u786e\u4fdd\u5bf9\u8c61\u7684\u6b63\u786e\u62f7\u8d1d\u3002 \u6d45\u62f7\u8d1d \u4f1a\u5bfc\u81f4\u8d44\u6e90\u5171\u4eab\u548c\u91cd\u590d\u91ca\u653e\u95ee\u9898\uff0c\u5c24\u5176\u662f\u5728\u7c7b\u4e2d\u6709\u52a8\u6001\u5206\u914d\u8d44\u6e90\u65f6\u3002 \u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0 \u6df1\u62f7\u8d1d \uff0c\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u5206\u914d\u72ec\u7acb\u7684\u5185\u5b58\uff0c\u907f\u514d\u6d45\u62f7\u8d1d\u7684\u98ce\u9669\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/overload/#_25","text":"Homework class vector { private : int * v ; int size ; public : vector ( int i ) { size = i ; v = new int [ i ]; } ~ vector () { delete [] v ; } }; 1. Define the copy constructor of the class vector; Overload the \"=\"(assignment), \"+\"(plus), \"*\" dot product operators for the class vector. \u4ee5\u4e0b\u662f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u4ee3\u7801\u5b9e\u73b0\uff0c\u5305\u62ec\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u5b9e\u73b0\uff1a #include <iostream> using namespace std ; class vector { private : int * v ; // \u52a8\u6001\u5206\u914d\u7684\u6570\u7ec4 int size ; // \u6570\u7ec4\u5927\u5c0f public : // \u6784\u9020\u51fd\u6570 vector ( int i ) { size = i ; v = new int [ i ]; for ( int j = 0 ; j < i ; j ++ ) { v [ j ] = 0 ; // \u521d\u59cb\u5316\u6570\u7ec4\u5143\u7d20\u4e3a 0 } } // \u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u6df1\u62f7\u8d1d\uff09 vector ( const vector & other ) { size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } } // \u91cd\u8f7d\u8d4b\u503c\u8fd0\u7b97\u7b26 \"=\" vector & operator = ( const vector & other ) { if ( this == & other ) { return * this ; // \u9632\u6b62\u81ea\u8d4b\u503c } delete [] v ; // \u91ca\u653e\u539f\u6709\u5185\u5b58 size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } return * this ; } // \u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 \"+\" vector operator + ( const vector & other ) { if ( size != other . size ) { throw invalid_argument ( \"Vectors must have the same size for addition.\" ); } vector result ( size ); for ( int i = 0 ; i < size ; i ++ ) { result . v [ i ] = v [ i ] + other . v [ i ]; } return result ; } // \u91cd\u8f7d\u70b9\u79ef\u8fd0\u7b97\u7b26 \"*\" int operator * ( const vector & other ) { if ( size != other . size ) { throw invalid_argument ( \"Vectors must have the same size for dot product.\" ); } int dotProduct = 0 ; for ( int i = 0 ; i < size ; i ++ ) { dotProduct += v [ i ] * other . v [ i ]; } return dotProduct ; } // \u6253\u5370\u5411\u91cf void display () const { for ( int i = 0 ; i < size ; i ++ ) { cout << v [ i ] << \" \" ; } cout << endl ; } // \u6790\u6784\u51fd\u6570 ~ vector () { delete [] v ; } }; int main () { vector v1 ( 3 ); // \u521b\u5efa\u5927\u5c0f\u4e3a 3 \u7684\u5411\u91cf vector v2 ( 3 ); // \u521d\u59cb\u5316\u5411\u91cf v1 = vector ( 3 ); v2 = vector ( 3 ); v1 = v2 ; // \u6d4b\u8bd5\u8d4b\u503c\u8fd0\u7b97\u7b26 // \u6d4b\u8bd5\u52a0\u6cd5\u8fd0\u7b97\u7b26 vector v3 = v1 + v2 ; v3 . display (); // \u6d4b\u8bd5\u70b9\u79ef\u8fd0\u7b97\u7b26 int dotProduct = v1 * v2 ; cout << \"Dot product: \" << dotProduct << endl ; return 0 ; }","title":"\u8bfe\u540e\u9898"},{"location":"C%2B%2B/overload/#_26","text":"\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \uff1a \u5b9e\u73b0\u6df1\u62f7\u8d1d\uff0c\u5206\u914d\u65b0\u7684\u5185\u5b58\u5e76\u590d\u5236\u539f\u5bf9\u8c61\u7684\u5185\u5bb9\u3002 vector ( const vector & other ) { size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } } \u8d4b\u503c\u8fd0\u7b97\u7b26 = \uff1a \u91ca\u653e\u539f\u6709\u5185\u5b58\uff0c\u5206\u914d\u65b0\u5185\u5b58\u5e76\u590d\u5236\u5185\u5bb9\u3002 \u9632\u6b62\u81ea\u8d4b\u503c\u3002 vector & operator = ( const vector & other ) { if ( this == & other ) { return * this ; // \u9632\u6b62\u81ea\u8d4b\u503c } delete [] v ; // \u91ca\u653e\u539f\u6709\u5185\u5b58 size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } return * this ; } \u52a0\u6cd5\u8fd0\u7b97\u7b26 + \uff1a \u4e24\u4e2a\u5411\u91cf\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5143\u7d20\u76f8\u52a0\uff0c\u8fd4\u56de\u4e00\u4e2a\u65b0\u5411\u91cf\u3002 \u5982\u679c\u5411\u91cf\u5927\u5c0f\u4e0d\u540c\uff0c\u629b\u51fa\u5f02\u5e38\u3002 vector operator + ( const vector & other ) { if ( size != other . size ) { throw invalid_argument ( \"Vectors must have the same size for addition.\" ); } vector result ( size ); for ( int i = 0 ; i < size ; i ++ ) { result . v [ i ] = v [ i ] + other . v [ i ]; } return result ; } \u70b9\u79ef\u8fd0\u7b97\u7b26 * \uff1a \u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u70b9\u79ef\u3002 \u5982\u679c\u5411\u91cf\u5927\u5c0f\u4e0d\u540c\uff0c\u629b\u51fa\u5f02\u5e38\u3002 int operator * ( const vector & other ) { if ( size != other . size ) { throw invalid_argument ( \"Vectors must have the same size for dot product.\" ); } int dotProduct = 0 ; for ( int i = 0 ; i < size ; i ++ ) { dotProduct += v [ i ] * other . v [ i ]; } return dotProduct ; } \u6790\u6784\u51fd\u6570 \uff1a \u91ca\u653e\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002 ~ vector () { delete [] v ; }","title":"\u4ee3\u7801\u8bf4\u660e"},{"location":"C%2B%2B/overload/#_27","text":"\u52a0\u6cd5\u8fd0\u7b97\u7b26 + \uff1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u5411\u91cf\uff0c\u5176\u5143\u7d20\u662f\u4e24\u4e2a\u5411\u91cf\u5bf9\u5e94\u4f4d\u7f6e\u5143\u7d20\u7684\u548c\u3002 \u70b9\u79ef\u8fd0\u7b97\u7b26 * \uff1a\u8fd4\u56de\u4e24\u4e2a\u5411\u91cf\u7684\u70b9\u79ef\uff08\u6807\u91cf\u503c\uff09\u3002 \u8d4b\u503c\u8fd0\u7b97\u7b26 = \uff1a\u6b63\u786e\u590d\u5236\u5411\u91cf\u5185\u5bb9\uff0c\u907f\u514d\u6d45\u62f7\u8d1d\u95ee\u9898\u3002","title":"\u6d4b\u8bd5\u7ed3\u679c"},{"location":"C%2B%2B/overload/#_28","text":"\u786e\u4fdd\u4e24\u4e2a\u5411\u91cf\u7684\u5927\u5c0f\u76f8\u540c\uff0c\u5426\u5219\u629b\u51fa\u5f02\u5e38\u3002 \u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5efa\u8bae\u6dfb\u52a0\u66f4\u591a\u8fb9\u754c\u68c0\u67e5\u548c\u9519\u8bef\u5904\u7406\u903b\u8f91\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/overload/#this","text":"","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9a\u4e49\u89c4\u5219\u53cathis\u6307\u9488"},{"location":"C%2B%2B/overload/#_29","text":"\u8fd0\u7b97\u7b26\u91cd\u8f7d\u662f\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e2a\u7279\u6b8a\u7684\u6210\u5458\u51fd\u6570\u6216\u53cb\u5143\u51fd\u6570\uff0c\u91cd\u65b0\u5b9a\u4e49\u8fd0\u7b97\u7b26\u7684\u884c\u4e3a\u3002\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u8bed\u6cd5"},{"location":"C%2B%2B/overload/#_30","text":"ReturnType operator\u7b26\u53f7 ( \u53c2\u6570\u5217\u8868 ) { // \u8fd0\u7b97\u7b26\u7684\u5b9e\u73b0 }","title":"\u6210\u5458\u51fd\u6570\u5f62\u5f0f"},{"location":"C%2B%2B/overload/#_31","text":"friend ReturnType operator\u7b26\u53f7 ( const ClassName & lhs , const ClassName & rhs ) { // \u8fd0\u7b97\u7b26\u7684\u5b9e\u73b0 }","title":"\u53cb\u5143\u51fd\u6570\u5f62\u5f0f"},{"location":"C%2B%2B/overload/#_32","text":"\u5fc5\u987b\u662f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u6216\u53cb\u5143\u51fd\u6570 \u3002 \u4e0d\u80fd\u91cd\u8f7d\u4ee5\u4e0b\u8fd0\u7b97\u7b26 \uff1a :: \uff08\u4f5c\u7528\u57df\u89e3\u6790\u8fd0\u7b97\u7b26\uff09 . \uff08\u6210\u5458\u8bbf\u95ee\u8fd0\u7b97\u7b26\uff09 .* \uff08\u6210\u5458\u6307\u9488\u8bbf\u95ee\u8fd0\u7b97\u7b26\uff09 sizeof \uff08\u5927\u5c0f\u8fd0\u7b97\u7b26\uff09 typeid \uff08\u7c7b\u578b\u4fe1\u606f\u8fd0\u7b97\u7b26\uff09 \u8fd4\u56de\u503c\u7c7b\u578b \u548c \u53c2\u6570\u5217\u8868 \u6839\u636e\u8fd0\u7b97\u7b26\u7684\u529f\u80fd\u51b3\u5b9a\u3002","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u89c4\u5219"},{"location":"C%2B%2B/overload/#_33","text":"\u8d4b\u503c\u8fd0\u7b97\u7b26\u901a\u5e38\u9700\u8981\u5904\u7406\u6df1\u62f7\u8d1d\uff0c\u907f\u514d\u6d45\u62f7\u8d1d\u95ee\u9898\u3002","title":"\u793a\u4f8b\uff1a\u91cd\u8f7d\u8d4b\u503c\u8fd0\u7b97\u7b26 ="},{"location":"C%2B%2B/overload/#_34","text":"vector & operator = ( const vector & other ) { if ( this == & other ) { // \u68c0\u67e5\u81ea\u8d4b\u503c return * this ; } delete [] v ; // \u91ca\u653e\u539f\u6709\u5185\u5b58 size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } return * this ; // \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528 }","title":"\u4ee3\u7801"},{"location":"C%2B%2B/overload/#_35","text":"this \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u5f53\u524d\u5bf9\u8c61\u3002 this == &other \u7528\u4e8e\u68c0\u67e5\u662f\u5426\u662f\u81ea\u8d4b\u503c\uff08\u5373\u5bf9\u8c61\u8d4b\u503c\u7ed9\u81ea\u5df1\uff09\u3002 return *this \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4ee5\u652f\u6301\u94fe\u5f0f\u8d4b\u503c\uff08\u5982 a = b = c \uff09\u3002","title":"\u89e3\u91ca"},{"location":"C%2B%2B/overload/#_36","text":"\u52a0\u6cd5\u8fd0\u7b97\u7b26\u901a\u5e38\u8fd4\u56de\u4e00\u4e2a\u65b0\u5bf9\u8c61\u3002","title":"\u793a\u4f8b\uff1a\u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 +"},{"location":"C%2B%2B/overload/#_37","text":"vector operator + ( const vector & other ) { if ( size != other . size ) { throw invalid_argument ( \"Vectors must have the same size for addition.\" ); } vector result ( size ); for ( int i = 0 ; i < size ; i ++ ) { result . v [ i ] = v [ i ] + other . v [ i ]; } return result ; // \u8fd4\u56de\u65b0\u5bf9\u8c61 }","title":"\u4ee3\u7801"},{"location":"C%2B%2B/overload/#_38","text":"result \u662f\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u7528\u4e8e\u5b58\u50a8\u52a0\u6cd5\u7ed3\u679c\u3002 \u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u4fee\u6539\u5f53\u524d\u5bf9\u8c61\u6216\u53c2\u6570\u5bf9\u8c61\u3002","title":"\u89e3\u91ca"},{"location":"C%2B%2B/overload/#this_1","text":"this \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u5f53\u524d\u5bf9\u8c61\u3002\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u5305\u62ec\uff1a 1. \u8bbf\u95ee\u5f53\u524d\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u6216\u6210\u5458\u51fd\u6570 \uff1a this -> size = other . size ; \u7b49\u4ef7\u4e8e\uff1a size = other . size ; \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528 \uff1a \u5728\u8d4b\u503c\u8fd0\u7b97\u7b26\u4e2d\uff0c return *this \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4ee5\u652f\u6301\u94fe\u5f0f\u8d4b\u503c\u3002 \u533a\u5206\u6210\u5458\u53d8\u91cf\u548c\u53c2\u6570 \uff1a \u5f53\u6210\u5458\u53d8\u91cf\u548c\u51fd\u6570\u53c2\u6570\u540c\u540d\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 this \u6307\u9488\u533a\u5206\uff1a this -> v = new int [ size ];","title":"this \u7684\u4f5c\u7528"},{"location":"C%2B%2B/overload/#_39","text":"\u8fd0\u7b97\u7b26\u91cd\u8f7d\u901a\u8fc7 operator \u5173\u952e\u5b57\u5b9e\u73b0\uff0c\u53ef\u4ee5\u662f\u6210\u5458\u51fd\u6570\u6216\u53cb\u5143\u51fd\u6570\u3002 this \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u5f53\u524d\u5bf9\u8c61\uff0c\u7528\u4e8e\u8bbf\u95ee\u6210\u5458\u53d8\u91cf\u6216\u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\u3002 \u5728\u8d4b\u503c\u8fd0\u7b97\u7b26\u4e2d\uff0c this \u7528\u4e8e\u9632\u6b62\u81ea\u8d4b\u503c\u548c\u652f\u6301\u94fe\u5f0f\u8d4b\u503c\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/overload/#_40","text":"\u5728 C++ \u4e2d\uff0c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u8bbe\u8ba1\u662f\u6839\u636e\u8fd0\u7b97\u7b26\u7684\u8bed\u4e49\u51b3\u5b9a\u7684\u3002\u5bf9\u4e8e\u8d4b\u503c\u8fd0\u7b97\u7b26 = \uff0c\u8fd4\u56de\u503c\u9700\u8981\u662f\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u800c\u5bf9\u4e8e\u52a0\u6cd5 + \u548c\u4e58\u6cd5 * \uff0c\u8fd4\u56de\u503c\u901a\u5e38\u662f\u4e00\u4e2a\u65b0\u5bf9\u8c61\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8d4b\u503c\u8fd0\u7b97\u7b26\u9700\u8981\u8fd4\u56de\u5f15\u7528\uff0c\u800c\u5176\u4ed6\u8fd0\u7b97\u7b26\u4e0d\u9700\u8981\u3002","title":"\u4e3a\u4ec0\u4e48\u91cd\u8f7d'='\u524d\u9762\u8981\u52a0\u4e0a'&amp;'\uff0c\u5176\u4ed6\u7684'+'\u548c'*'\u6ca1\u6709\u52a0\u4e0a'&amp;'"},{"location":"C%2B%2B/overload/#1_1","text":"\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u8bed\u4e49\u662f\u5c06\u53f3\u4fa7\u5bf9\u8c61\u7684\u503c\u8d4b\u7ed9\u5de6\u4fa7\u5bf9\u8c61\uff0c\u5e76\u8fd4\u56de\u5de6\u4fa7\u5bf9\u8c61\u672c\u8eab\u3002\u8fd4\u56de\u5f15\u7528\u7684\u539f\u56e0\u6709\u4ee5\u4e0b\u51e0\u70b9\uff1a","title":"1. \u4e3a\u4ec0\u4e48\u8d4b\u503c\u8fd0\u7b97\u7b26 = \u8fd4\u56de\u5f15\u7528\uff08&amp;\uff09"},{"location":"C%2B%2B/overload/#_41","text":"\u94fe\u5f0f\u8d4b\u503c\u662f\u6307\u591a\u4e2a\u8d4b\u503c\u64cd\u4f5c\u53ef\u4ee5\u8fde\u5728\u4e00\u8d77\uff0c\u4f8b\u5982\uff1a a = b = c ; \u4e3a\u4e86\u652f\u6301\u8fd9\u79cd\u64cd\u4f5c\uff0c\u8d4b\u503c\u8fd0\u7b97\u7b26\u9700\u8981\u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff08 *this \uff09\uff0c\u8fd9\u6837\u5de6\u4fa7\u7684\u8d4b\u503c\u64cd\u4f5c\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u8fd4\u56de\u7684\u5bf9\u8c61\u3002","title":"\u652f\u6301\u94fe\u5f0f\u8d4b\u503c"},{"location":"C%2B%2B/overload/#_42","text":"vector & operator = ( const vector & other ) { if ( this == & other ) { // \u9632\u6b62\u81ea\u8d4b\u503c return * this ; } delete [] v ; // \u91ca\u653e\u539f\u6709\u5185\u5b58 size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } return * this ; // \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528 }","title":"\u793a\u4f8b"},{"location":"C%2B%2B/overload/#_43","text":"\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\uff0c\u63d0\u9ad8\u6027\u80fd\u3002 \u652f\u6301\u94fe\u5f0f\u8d4b\u503c\u3002","title":"\u8fd4\u56de\u5f15\u7528\u7684\u597d\u5904"},{"location":"C%2B%2B/overload/#2_1","text":"\u52a0\u6cd5\u548c\u4e58\u6cd5\u8fd0\u7b97\u7b26\u7684\u8bed\u4e49\u662f\u751f\u6210\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u4fee\u6539\u5f53\u524d\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u901a\u5e38\u8fd4\u56de\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u5f15\u7528\u3002","title":"2. \u4e3a\u4ec0\u4e48\u52a0\u6cd5 + \u548c\u4e58\u6cd5 * \u4e0d\u9700\u8981\u8fd4\u56de\u5f15\u7528"},{"location":"C%2B%2B/overload/#_44","text":"vector operator + ( const vector & other ) { if ( size != other . size ) { throw invalid_argument ( \"Vectors must have the same size for addition.\" ); } vector result ( size ); // \u521b\u5efa\u65b0\u5bf9\u8c61 for ( int i = 0 ; i < size ; i ++ ) { result . v [ i ] = v [ i ] + other . v [ i ]; } return result ; // \u8fd4\u56de\u65b0\u5bf9\u8c61 }","title":"\u52a0\u6cd5\u8fd0\u7b97\u7b26 + \u793a\u4f8b"},{"location":"C%2B%2B/overload/#_45","text":"int operator * ( const vector & other ) { if ( size != other . size ) { throw invalid_argument ( \"Vectors must have the same size for dot product.\" ); } int dotProduct = 0 ; for ( int i = 0 ; i < size ; i ++ ) { dotProduct += v [ i ] * other . v [ i ]; } return dotProduct ; // \u8fd4\u56de\u6807\u91cf\u503c }","title":"\u4e58\u6cd5\u8fd0\u7b97\u7b26 * \u793a\u4f8b"},{"location":"C%2B%2B/overload/#_46","text":"\u52a0\u6cd5\u548c\u4e58\u6cd5\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u65b0\u5bf9\u8c61\u6216\u6807\u91cf\u503c\uff0c\u4e0e\u5f53\u524d\u5bf9\u8c61\u65e0\u5173\u3002 \u8fd4\u56de\u5f15\u7528\u4f1a\u5bfc\u81f4\u6f5c\u5728\u7684\u9519\u8bef\uff0c\u56e0\u4e3a\u65b0\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u53ef\u80fd\u4f1a\u5728\u51fd\u6570\u8fd4\u56de\u540e\u7ed3\u675f\u3002","title":"\u4e3a\u4ec0\u4e48\u4e0d\u8fd4\u56de\u5f15\u7528"},{"location":"C%2B%2B/overload/#3","text":"\u8d4b\u503c\u8fd0\u7b97\u7b26 = \uff1a \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff08 & \uff09\uff0c\u4ee5\u652f\u6301\u94fe\u5f0f\u8d4b\u503c\u548c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u3002 \u8fd4\u56de\u503c\u7c7b\u578b\u4e3a vector& \u3002 \u52a0\u6cd5\u8fd0\u7b97\u7b26 + \u548c\u4e58\u6cd5\u8fd0\u7b97\u7b26 * \uff1a \u8fd4\u56de\u65b0\u5bf9\u8c61\u6216\u6807\u91cf\u503c\uff0c\u4e0d\u9700\u8981\u8fd4\u56de\u5f15\u7528\u3002 \u8fd4\u56de\u503c\u7c7b\u578b\u4e3a vector \u6216 int \u3002 \u8fd9\u79cd\u8bbe\u8ba1\u7b26\u5408\u8fd0\u7b97\u7b26\u7684\u8bed\u4e49\u548c\u4f7f\u7528\u4e60\u60ef\uff0c\u786e\u4fdd\u4ee3\u7801\u7684\u6b63\u786e\u6027\u548c\u6027\u80fd\u3002","title":"3. \u603b\u7ed3"},{"location":"C%2B%2B/overload/#_47","text":"\u5728\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u51fd\u6570 vector& operator=(const vector& other) \u4e2d\uff1a \u5f53\u524d\u5bf9\u8c61 \uff08\u5de6\u4fa7\u5bf9\u8c61\uff09\uff1a\u901a\u8fc7\u9690\u5f0f\u7684 this \u6307\u9488\u4f20\u5165\uff0c this \u6307\u5411\u5f53\u524d\u5bf9\u8c61\uff08\u5373\u8d4b\u503c\u8fd0\u7b97\u7b26\u5de6\u4fa7\u7684\u5bf9\u8c61\uff09\u3002 \u53f3\u4fa7\u5bf9\u8c61 \uff1a\u901a\u8fc7\u53c2\u6570 other \u663e\u5f0f\u4f20\u5165\uff0c other \u662f\u8d4b\u503c\u8fd0\u7b97\u7b26\u53f3\u4fa7\u7684\u5bf9\u8c61\u3002","title":"\u5728\u8fd0\u7b97\u7b26\u91cd\u8f7d\u65f6\uff0c'='\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u5bf9\u8c61\u600e\u4e48\u4f20\u5165\u51fd\u6570\u53c2\u6570"},{"location":"C%2B%2B/overload/#_48","text":"\u5047\u8bbe\u6709\u4ee5\u4e0b\u4ee3\u7801\uff1a vector v1 ( 3 ); // \u5de6\u4fa7\u5bf9\u8c61 vector v2 ( 3 ); // \u53f3\u4fa7\u5bf9\u8c61 v1 = v2 ; // \u8c03\u7528\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d \u5728 v1 = v2; \u4e2d\uff1a 1. \u5f53\u524d\u5bf9\u8c61\uff08\u5de6\u4fa7\u5bf9\u8c61\uff09 \uff1a - v1 \u662f\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u5de6\u4fa7\u5bf9\u8c61\u3002 - \u5728\u51fd\u6570\u5185\u90e8\uff0c this \u6307\u9488\u6307\u5411 v1 \u3002 - \u4f8b\u5982\uff0c this->v \u548c this->size \u8bbf\u95ee\u7684\u662f v1 \u7684\u6210\u5458\u3002 \u53f3\u4fa7\u5bf9\u8c61 \uff1a v2 \u662f\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u53f3\u4fa7\u5bf9\u8c61\u3002 \u5b83\u901a\u8fc7\u53c2\u6570 other \u4f20\u5165\u3002 \u5728\u51fd\u6570\u5185\u90e8\uff0c other.v \u548c other.size \u8bbf\u95ee\u7684\u662f v2 \u7684\u6210\u5458\u3002","title":"\u5177\u4f53\u89e3\u91ca"},{"location":"C%2B%2B/overload/#_49","text":"\u4ee5\u4e0b\u662f v1 = v2; \u7684\u6267\u884c\u6d41\u7a0b\uff1a 1. \u68c0\u67e5\u81ea\u8d4b\u503c \uff1a if ( this == & other ) { return * this ; } - this \u662f\u6307\u5411 v1 \u7684\u6307\u9488\u3002 - &other \u662f v2 \u7684\u5730\u5740\u3002 - \u5982\u679c v1 \u548c v2 \u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u907f\u514d\u91cd\u590d\u64cd\u4f5c\u3002 \u91ca\u653e\u5f53\u524d\u5bf9\u8c61\u7684\u65e7\u5185\u5b58 \uff1a delete [] v ; \u91ca\u653e v1 \u4e2d\u539f\u6709\u7684\u52a8\u6001\u5185\u5b58\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002 \u590d\u5236\u53f3\u4fa7\u5bf9\u8c61\u7684\u5185\u5bb9 \uff1a size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } \u5c06 v2 \u7684 size \u548c v \u7684\u5185\u5bb9\u9010\u4e00\u590d\u5236\u5230 v1 \u4e2d\u3002 \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528 \uff1a return * this ; \u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\uff08 v1 \uff09\u7684\u5f15\u7528\uff0c\u4ee5\u652f\u6301\u94fe\u5f0f\u8d4b\u503c\u3002","title":"\u51fd\u6570\u6267\u884c\u6d41\u7a0b"},{"location":"C%2B%2B/overload/#_50","text":"\u5f53\u524d\u5bf9\u8c61\uff08\u5de6\u4fa7\u5bf9\u8c61\uff09 \uff1a\u901a\u8fc7 this \u6307\u9488\u9690\u5f0f\u4f20\u5165\uff0c\u8868\u793a\u8d4b\u503c\u8fd0\u7b97\u7b26\u5de6\u4fa7\u7684\u5bf9\u8c61\u3002 \u53f3\u4fa7\u5bf9\u8c61 \uff1a\u901a\u8fc7\u53c2\u6570 other \u663e\u5f0f\u4f20\u5165\uff0c\u8868\u793a\u8d4b\u503c\u8fd0\u7b97\u7b26\u53f3\u4fa7\u7684\u5bf9\u8c61\u3002 \u5728 v1 = v2; \u4e2d\uff1a - this \u6307\u5411 v1 \u3002 - other \u662f v2 \u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/overload/#thisthis-size","text":"\u5728 C++ \u4e2d\uff0c this-> \u662f\u7528\u6765\u663e\u5f0f\u8bbf\u95ee\u5f53\u524d\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u6216\u6210\u5458\u51fd\u6570\u7684\u3002\u7136\u800c\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u4f7f\u7528\u6210\u5458\u53d8\u91cf\u540d\uff08\u5982 v \u548c size \uff09\u5c31\u8db3\u591f\u4e86\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u5c06\u5b83\u4eec\u89e3\u6790\u4e3a\u5f53\u524d\u5bf9\u8c61\u7684\u6210\u5458\u3002","title":"\u5728\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e3a\u4ec0\u4e48\u91cc\u9762\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u4e0d\u7528this\u6307\u9488\uff0c\u6bd4\u5982this-&gt;size"},{"location":"C%2B%2B/overload/#this-","text":"\u7f16\u8bd1\u5668\u7684\u9ed8\u8ba4\u884c\u4e3a \uff1a \u5f53\u5728\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e2d\u76f4\u63a5\u4f7f\u7528\u6210\u5458\u53d8\u91cf\u540d\uff08\u5982 v \u548c size \uff09\uff0c\u7f16\u8bd1\u5668\u4f1a\u9ed8\u8ba4\u5c06\u5176\u89e3\u6790\u4e3a\u5f53\u524d\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u3002 \u4f8b\u5982\uff1a v = new int [ size ]; \u7b49\u4ef7\u4e8e\uff1a this -> v = new int [ size ]; \u6ca1\u6709\u547d\u540d\u51b2\u7a81 \uff1a \u5982\u679c\u51fd\u6570\u53c2\u6570\u6216\u5c40\u90e8\u53d8\u91cf\u7684\u540d\u5b57\u4e0e\u6210\u5458\u53d8\u91cf\u4e0d\u540c\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u76f4\u63a5\u533a\u5206\u5b83\u4eec\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u663e\u5f0f\u4f7f\u7528 this-> \u3002 \u5728\u4ee3\u7801\u4e2d\uff0c v \u548c size \u6ca1\u6709\u4e0e\u53c2\u6570\u6216\u5c40\u90e8\u53d8\u91cf\u540c\u540d\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002","title":"\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u7701\u7565 this-&gt;\uff1f"},{"location":"C%2B%2B/overload/#this-_1","text":"\u6210\u5458\u53d8\u91cf\u4e0e\u53c2\u6570\u540c\u540d \uff1a \u5982\u679c\u51fd\u6570\u53c2\u6570\u7684\u540d\u5b57\u4e0e\u6210\u5458\u53d8\u91cf\u76f8\u540c\uff0c\u7f16\u8bd1\u5668\u4f1a\u4f18\u5148\u89e3\u6790\u4e3a\u51fd\u6570\u53c2\u6570\u3002\u6b64\u65f6\u9700\u8981\u4f7f\u7528 this-> \u6765\u533a\u5206\u6210\u5458\u53d8\u91cf\u3002 \u4f8b\u5982\uff1a class vector { private : int size ; public : void setSize ( int size ) { this -> size = size ; // \u4f7f\u7528 this-> \u8bbf\u95ee\u6210\u5458\u53d8\u91cf } }; \u94fe\u5f0f\u8c03\u7528 \uff1a \u5728\u8fd4\u56de\u5f53\u524d\u5bf9\u8c61\u7684\u5f15\u7528\u65f6\uff0c\u901a\u5e38\u9700\u8981\u4f7f\u7528 *this \u3002 \u4f8b\u5982\uff1a return * this ;","title":"\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u4f7f\u7528 this-&gt;\uff1f"},{"location":"C%2B%2B/overload/#_51","text":"\u5728\u4ee3\u7801\u4e2d\uff1a delete [] v ; // \u91ca\u653e\u5f53\u524d\u5bf9\u8c61\u7684\u65e7\u5185\u5b58 size = other . size ; // \u590d\u5236\u5927\u5c0f v = new int [ size ]; // \u5206\u914d\u65b0\u5185\u5b58 - v \u548c size \u662f\u5f53\u524d\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u3002 - \u5b83\u4eec\u6ca1\u6709\u4e0e\u51fd\u6570\u53c2\u6570\u6216\u5c40\u90e8\u53d8\u91cf\u540c\u540d\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u800c\u4e0d\u9700\u8981\u663e\u5f0f\u5199\u6210 this->v \u548c this->size \u3002","title":"\u5728\u4ee3\u7801\u4e2d\u7684\u60c5\u51b5"},{"location":"C%2B%2B/overload/#_52","text":"\u53ef\u4ee5\u7701\u7565 this-> \uff1a\u5f53\u6210\u5458\u53d8\u91cf\u6ca1\u6709\u4e0e\u51fd\u6570\u53c2\u6570\u6216\u5c40\u90e8\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u76f4\u63a5\u4f7f\u7528\u6210\u5458\u53d8\u91cf\u540d\u5373\u53ef\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u89e3\u6790\u4e3a\u5f53\u524d\u5bf9\u8c61\u7684\u6210\u5458\u3002 \u9700\u8981\u4f7f\u7528 this-> \uff1a\u5f53\u6210\u5458\u53d8\u91cf\u4e0e\u51fd\u6570\u53c2\u6570\u6216\u5c40\u90e8\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528 this-> \u6765\u533a\u5206\u6210\u5458\u53d8\u91cf\u3002 \u5728\u4ee3\u7801\u4e2d\uff0c v \u548c size \u6ca1\u6709\u547d\u540d\u51b2\u7a81\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u800c\u4e0d\u9700\u8981\u5199\u6210 this->v \u548c this->size \u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/overload/#_53","text":"\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u90fd\u662f\u9632\u6b62\u7f16\u8bd1\u5668\u9ed8\u8ba4\u4ea7\u751f\u6d45\u62f7\u8d1d\u884c\u4e3a\u3002 \u5982\u679c\u4e0d\u91cd\u8f7d = \u8fd0\u7b97\u7b26\uff0c\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u4e00\u4e2a\u9ed8\u8ba4\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002\u8fd9\u79cd\u9ed8\u8ba4\u884c\u4e3a\u662f \u6d45\u62f7 \u8d1d\uff0c\u5373\u7b80\u5355\u5730\u590d\u5236\u6210\u5458\u53d8\u91cf\u7684\u503c\u3002\u5982\u679c\u7c7b\u4e2d\u6709\u6307\u9488\u6210\u5458\uff08\u5982 v\uff09\uff0c\u6d45\u62f7\u8d1d\u4f1a\u5bfc\u81f4\u591a\u4e2a \u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\uff0c\u53ef\u80fd\u5f15\u53d1 \u91cd\u590d\u91ca\u653e\u5185\u5b58 \u7684\u95ee\u9898\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/overload/#_54","text":"\u5728 C++ \u4e2d\uff0c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u53ef\u4ee5\u901a\u8fc7 \u6210\u5458\u51fd\u6570 \u548c \u53cb\u5143\u51fd\u6570 \u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0\u3002\u5b83\u4eec\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u64cd\u4f5c\u6570\u7684\u5904\u7406\u65b9\u5f0f\u548c\u9002\u7528\u573a\u666f\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u5bf9\u6bd4\u548c\u8bf4\u660e\uff1a","title":"\u6210\u5458\u51fd\u6570\u91cd\u8f7d\u4e0e\u53cb\u5143\u51fd\u6570\u91cd\u8f7d"},{"location":"C%2B%2B/overload/#1_2","text":"","title":"1. \u6210\u5458\u51fd\u6570\u5f62\u5f0f"},{"location":"C%2B%2B/overload/#_55","text":"ReturnType operator\u7b26\u53f7 ( const ClassName & other ) { // \u5b9e\u73b0\u8fd0\u7b97\u7b26\u903b\u8f91 }","title":"\u8bed\u6cd5"},{"location":"C%2B%2B/overload/#_56","text":"\u5de6\u64cd\u4f5c\u6570 \uff1a\u6210\u5458\u51fd\u6570\u7684\u9690\u5f0f\u53c2\u6570 this \u662f\u8fd0\u7b97\u7b26\u7684\u5de6\u64cd\u4f5c\u6570\u3002 \u53f3\u64cd\u4f5c\u6570 \uff1a\u901a\u8fc7\u51fd\u6570\u53c2\u6570\u4f20\u9012\u3002 \u9002\u7528\u573a\u666f \uff1a\u5f53\u5de6\u64cd\u4f5c\u6570\u5fc5\u987b\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u65f6\uff0c\u4f7f\u7528\u6210\u5458\u51fd\u6570\u5f62\u5f0f\u3002","title":"\u7279\u70b9"},{"location":"C%2B%2B/overload/#_57","text":"#include <iostream> using namespace std ; class Complex { private : double real , imag ; public : Complex ( double r , double i ) : real ( r ), imag ( i ) {} // \u6210\u5458\u51fd\u6570\u5f62\u5f0f\u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 Complex operator + ( const Complex & other ) { return Complex ( real + other . real , imag + other . imag ); } void display () const { cout << real << \" + \" << imag << \"i\" << endl ; } }; int main () { Complex c1 ( 1.0 , 2.0 ), c2 ( 3.0 , 4.0 ); Complex c3 = c1 + c2 ; // \u5de6\u64cd\u4f5c\u6570\u662f c1\uff0c\u53f3\u64cd\u4f5c\u6570\u662f c2 c3 . display (); // \u8f93\u51fa: 4.0 + 6.0i return 0 ; }","title":"\u793a\u4f8b\uff1a\u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 +"},{"location":"C%2B%2B/overload/#2_2","text":"","title":"2. \u53cb\u5143\u51fd\u6570\u5f62\u5f0f"},{"location":"C%2B%2B/overload/#_58","text":"friend ReturnType operator\u7b26\u53f7 ( const ClassName & lhs , const ClassName & rhs ) { // \u5b9e\u73b0\u8fd0\u7b97\u7b26\u903b\u8f91 }","title":"\u8bed\u6cd5"},{"location":"C%2B%2B/overload/#_59","text":"\u5de6\u64cd\u4f5c\u6570\u548c\u53f3\u64cd\u4f5c\u6570 \uff1a\u53cb\u5143\u51fd\u6570\u7684\u4e24\u4e2a\u64cd\u4f5c\u6570\u90fd\u901a\u8fc7\u53c2\u6570\u4f20\u9012\u3002 \u9002\u7528\u573a\u666f \uff1a\u5f53\u5de6\u64cd\u4f5c\u6570\u4e0d\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528\u53cb\u5143\u51fd\u6570\u5f62\u5f0f\u3002","title":"\u7279\u70b9"},{"location":"C%2B%2B/overload/#_60","text":"#include <iostream> using namespace std ; class Complex { private : double real , imag ; public : Complex ( double r , double i ) : real ( r ), imag ( i ) {} // \u58f0\u660e\u53cb\u5143\u51fd\u6570 friend Complex operator + ( const Complex & lhs , const Complex & rhs ); void display () const { cout << real << \" + \" << imag << \"i\" << endl ; } }; // \u53cb\u5143\u51fd\u6570\u5f62\u5f0f\u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 Complex operator + ( const Complex & lhs , const Complex & rhs ) { return Complex ( lhs . real + rhs . real , lhs . imag + rhs . imag ); } int main () { Complex c1 ( 1.0 , 2.0 ), c2 ( 3.0 , 4.0 ); Complex c3 = c1 + c2 ; // \u5de6\u64cd\u4f5c\u6570\u662f c1\uff0c\u53f3\u64cd\u4f5c\u6570\u662f c2 c3 . display (); // \u8f93\u51fa: 4.0 + 6.0i return 0 ; }","title":"\u793a\u4f8b\uff1a\u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 +"},{"location":"C%2B%2B/overload/#3_1","text":"\u7279\u6027 \u6210\u5458\u51fd\u6570\u5f62\u5f0f \u53cb\u5143\u51fd\u6570\u5f62\u5f0f \u5de6\u64cd\u4f5c\u6570 \u5fc5\u987b\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61 \u53ef\u4ee5\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u7c7b\u578b\u7684\u5bf9\u8c61 \u53f3\u64cd\u4f5c\u6570 \u901a\u8fc7\u53c2\u6570\u4f20\u9012 \u901a\u8fc7\u53c2\u6570\u4f20\u9012 \u9002\u7528\u573a\u666f \u5de6\u64cd\u4f5c\u6570\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u65f6\u9002\u7528 \u5de6\u64cd\u4f5c\u6570\u4e0d\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u65f6\u5fc5\u987b\u4f7f\u7528 \u8bbf\u95ee\u6743\u9650 \u53ea\u80fd\u8bbf\u95ee\u5f53\u524d\u7c7b\u7684\u516c\u5171\u548c\u53d7\u4fdd\u62a4\u6210\u5458 \u53ef\u4ee5\u8bbf\u95ee\u5f53\u524d\u7c7b\u7684\u79c1\u6709\u548c\u53d7\u4fdd\u62a4\u6210\u5458\uff08\u901a\u8fc7\u53cb\u5143\uff09 \u5b9e\u73b0\u590d\u6742\u5ea6 \u5b9e\u73b0\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 this \u6307\u9488 \u9700\u8981\u663e\u5f0f\u4f20\u9012\u4e24\u4e2a\u64cd\u4f5c\u6570","title":"3. \u6210\u5458\u51fd\u6570\u4e0e\u53cb\u5143\u51fd\u6570\u7684\u533a\u522b"},{"location":"C%2B%2B/overload/#4","text":"","title":"4. \u793a\u4f8b\u5bf9\u6bd4\uff1a\u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26"},{"location":"C%2B%2B/overload/#_61","text":"Complex operator + ( const Complex & other ) { return Complex ( real + other . real , imag + other . imag ); } - \u5de6\u64cd\u4f5c\u6570\u662f\u5f53\u524d\u5bf9\u8c61\uff08 this \u6307\u9488\uff09\u3002 - \u53f3\u64cd\u4f5c\u6570\u901a\u8fc7\u53c2\u6570 other \u4f20\u9012\u3002","title":"\u6210\u5458\u51fd\u6570\u5f62\u5f0f"},{"location":"C%2B%2B/overload/#_62","text":"friend Complex operator + ( const Complex & lhs , const Complex & rhs ) { return Complex ( lhs . real + rhs . real , lhs . imag + rhs . imag ); } - \u5de6\u64cd\u4f5c\u6570\u548c\u53f3\u64cd\u4f5c\u6570\u90fd\u901a\u8fc7\u53c2\u6570 lhs \u548c rhs \u4f20\u9012\u3002","title":"\u53cb\u5143\u51fd\u6570\u5f62\u5f0f"},{"location":"C%2B%2B/overload/#5","text":"","title":"5. \u7279\u6b8a\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d"},{"location":"C%2B%2B/overload/#_63","text":"\u5fc5\u987b\u4f5c\u4e3a\u6210\u5458\u51fd\u6570\u5b9e\u73b0\uff0c\u56e0\u4e3a\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u5de6\u64cd\u4f5c\u6570\u5fc5\u987b\u662f\u5f53\u524d\u5bf9\u8c61\u3002 \u793a\u4f8b\uff1a vector & operator = ( const vector & other ) { if ( this == & other ) { return * this ; } delete [] v ; size = other . size ; v = new int [ size ]; for ( int i = 0 ; i < size ; i ++ ) { v [ i ] = other . v [ i ]; } return * this ; }","title":"\u8d4b\u503c\u8fd0\u7b97\u7b26 ="},{"location":"C%2B%2B/overload/#_64","text":"\u901a\u5e38\u4f5c\u4e3a\u53cb\u5143\u51fd\u6570\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5de6\u64cd\u4f5c\u6570\u901a\u5e38\u662f\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u6d41\uff08\u5982 cin \u6216 cout \uff09\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u3002 \u793a\u4f8b\uff1a friend ostream & operator << ( ostream & os , const Complex & c ) { os << c . real << \" + \" << c . imag << \"i\" ; return os ; }","title":"\u8f93\u5165\u8f93\u51fa\u8fd0\u7b97\u7b26 &gt;&gt; \u548c &lt;&lt;"},{"location":"C%2B%2B/overload/#6","text":"\u6210\u5458\u51fd\u6570\u5f62\u5f0f \uff1a \u5de6\u64cd\u4f5c\u6570\u5fc5\u987b\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\u3002 \u5b9e\u73b0\u7b80\u5355\uff0c\u9002\u7528\u4e8e\u5927\u591a\u6570\u8fd0\u7b97\u7b26\u3002 \u53cb\u5143\u51fd\u6570\u5f62\u5f0f \uff1a \u5de6\u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u5176\u4ed6\u7c7b\u578b\u7684\u5bf9\u8c61\u3002 \u5fc5\u987b\u58f0\u660e\u4e3a\u53cb\u5143\uff0c\u9002\u7528\u4e8e\u8f93\u5165\u8f93\u51fa\u8fd0\u7b97\u7b26\u7b49\u7279\u6b8a\u60c5\u51b5\u3002 \u6839\u636e\u5177\u4f53\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u5982\u679c\u5de6\u64cd\u4f5c\u6570\u4e0d\u662f\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\uff0c\u5fc5\u987b\u4f7f\u7528\u53cb\u5143\u51fd\u6570\u5f62\u5f0f\u3002","title":"6. \u603b\u7ed3"},{"location":"C%2B%2B/overload/#_65","text":"","title":"\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26"},{"location":"C%2B%2B/overload/#_66","text":"\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff08Type Conversion Operator\uff09\u5728 C++ \u4e2d\u7684\u4e3b\u8981\u4f5c\u7528\u662f \u5c06\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u578b\uff08\u5982\u7c7b\u6216\u7ed3\u6784\u4f53\uff09\u8f6c\u6362\u4e3a\u5176\u4ed6\u7c7b\u578b\uff08\u5982\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6216\u5176\u4ed6\u7c7b\u7c7b\u578b\uff09 \u3002\u901a\u8fc7\u91cd\u8f7d\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7c7b\u578b\u8f6c\u6362\u7684\u884c\u4e3a\uff0c\u4f7f\u5f97\u7c7b\u5bf9\u8c61\u80fd\u591f\u66f4\u81ea\u7136\u5730\u4e0e\u5176\u4ed6\u7c7b\u578b\u8fdb\u884c\u4ea4\u4e92\u3002","title":"\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u7684\u4f5c\u7528"},{"location":"C%2B%2B/overload/#_67","text":"","title":"\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u7684\u7528\u5904"},{"location":"C%2B%2B/overload/#1_3","text":"\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5c06\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff08\u5982 int \u3001 double \u7b49\uff09\uff0c\u4f7f\u5f97\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e\u9700\u8981\u8fd9\u4e9b\u7c7b\u578b\u7684\u573a\u666f\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Counter { private : int value ; public : Counter ( int v ) : value ( v ) {} // \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u5c06 Counter \u8f6c\u6362\u4e3a int operator int () const { return value ; } }; int main () { Counter c ( 10 ); // \u9690\u5f0f\u8c03\u7528\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 int x = c ; cout << \"x = \" << x << endl ; // \u663e\u5f0f\u8c03\u7528\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 cout << \"Value: \" << static_cast < int > ( c ) << endl ; return 0 ; } \u8f93\u51fa \uff1a x = 10 Value: 10","title":"1. \u5c06\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"C%2B%2B/overload/#2_3","text":"\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5c06\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u7c7b\u7c7b\u578b\uff0c\u65b9\u4fbf\u7c7b\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Celsius { private : double temperature ; public : Celsius ( double temp ) : temperature ( temp ) {} double getTemperature () const { return temperature ; } }; class Fahrenheit { private : double temperature ; public : Fahrenheit ( double temp ) : temperature ( temp ) {} // \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u5c06 Fahrenheit \u8f6c\u6362\u4e3a Celsius operator Celsius () const { return Celsius (( temperature - 32 ) * 5.0 / 9.0 ); } }; int main () { Fahrenheit f ( 98.6 ); // \u534e\u6c0f\u6e29\u5ea6 Celsius c = f ; // \u9690\u5f0f\u8c03\u7528\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 cout << \"Celsius: \" << c . getTemperature () << \"\u00b0C\" << endl ; return 0 ; } \u8f93\u51fa \uff1a Celsius: 37\u00b0C","title":"2. \u5c06\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5176\u4ed6\u7c7b\u7c7b\u578b"},{"location":"C%2B%2B/overload/#3_2","text":"\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u53ef\u4ee5\u8ba9\u7c7b\u5bf9\u8c61\u5728\u9700\u8981\u8f6c\u6362\u65f6\u81ea\u52a8\u5b8c\u6210\u8f6c\u6362\uff0c\u51cf\u5c11\u663e\u5f0f\u8f6c\u6362\u7684\u4ee3\u7801\u91cf\u3002 \u4f8b\u5982\uff0c\u5c06\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a bool \u7c7b\u578b\uff0c\u7528\u4e8e\u6761\u4ef6\u5224\u65ad\uff1a class Counter { private : int value ; public : Counter ( int v ) : value ( v ) {} // \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u5c06 Counter \u8f6c\u6362\u4e3a bool operator bool () const { return value > 0 ; } }; int main () { Counter c ( 10 ); if ( c ) { cout << \"Counter is positive.\" << endl ; } else { cout << \"Counter is zero or negative.\" << endl ; } return 0 ; } \u8f93\u51fa \uff1a Counter is positive.","title":"3. \u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7075\u6d3b\u6027"},{"location":"C%2B%2B/overload/#4_1","text":"\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u53ef\u4ee5\u8ba9\u7c7b\u5bf9\u8c61\u4e0e\u6807\u51c6\u5e93\u51fd\u6570\u6216\u5bb9\u5668\u66f4\u597d\u5730\u534f\u4f5c\u3002\u4f8b\u5982\uff0c\u5c06\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a std::string \u7c7b\u578b\uff1a #include <iostream> #include <string> using namespace std ; class Person { private : string name ; public : Person ( const string & n ) : name ( n ) {} // \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u5c06 Person \u8f6c\u6362\u4e3a string operator string () const { return name ; } }; int main () { Person p ( \"Alice\" ); // \u9690\u5f0f\u8f6c\u6362\u4e3a string string s = p ; cout << \"Name: \" << s << endl ; return 0 ; } \u8f93\u51fa \uff1a Name: Alice","title":"4. \u652f\u6301\u4e0e\u6807\u51c6\u5e93\u7684\u4ea4\u4e92"},{"location":"C%2B%2B/overload/#5_1","text":"\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u5141\u8bb8\u5f00\u53d1\u8005\u5b9a\u4e49\u590d\u6742\u7684\u8f6c\u6362\u903b\u8f91\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u503c\u590d\u5236\u3002\u4f8b\u5982\uff0c\u5c06\u4e00\u4e2a\u77e9\u5f62\u7c7b\u8f6c\u6362\u4e3a\u9762\u79ef\u503c\uff1a class Rectangle { private : double width , height ; public : Rectangle ( double w , double h ) : width ( w ), height ( h ) {} // \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\uff0c\u5c06 Rectangle \u8f6c\u6362\u4e3a double\uff08\u9762\u79ef\uff09 operator double () const { return width * height ; } }; int main () { Rectangle rect ( 5.0 , 3.0 ); // \u9690\u5f0f\u8f6c\u6362\u4e3a double double area = rect ; cout << \"Area: \" << area << endl ; return 0 ; } \u8f93\u51fa \uff1a Area: 15","title":"5. \u81ea\u5b9a\u4e49\u590d\u6742\u7c7b\u578b\u7684\u8f6c\u6362\u903b\u8f91"},{"location":"C%2B%2B/overload/#_68","text":"\u53ea\u80fd\u662f\u6210\u5458\u51fd\u6570 \uff1a \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u5fc5\u987b\u662f\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u80fd\u662f\u53cb\u5143\u51fd\u6570\u6216\u666e\u901a\u51fd\u6570\u3002 \u6ca1\u6709\u8fd4\u56de\u503c\u7c7b\u578b \uff1a \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u7531\u76ee\u6807\u7c7b\u578b\u51b3\u5b9a\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u663e\u5f0f\u58f0\u660e\u8fd4\u56de\u503c\u7c7b\u578b\u3002 \u907f\u514d\u9690\u5f0f\u8f6c\u6362\u7684\u6b67\u4e49 \uff1a \u5982\u679c\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u5b9a\u4e49\u4e0d\u5408\u7406\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9690\u5f0f\u8f6c\u6362\u65f6\u7684\u6b67\u4e49\u95ee\u9898\u3002 \u4f8b\u5982\uff0c\u591a\u4e2a\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u5668\u65e0\u6cd5\u786e\u5b9a\u4f7f\u7528\u54ea\u4e2a\u8f6c\u6362\u3002 \u663e\u5f0f\u8f6c\u6362\u4f18\u5148 \uff1a \u5982\u679c\u4e0d\u5e0c\u671b\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u88ab\u9690\u5f0f\u8c03\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 explicit \u5173\u952e\u5b57\u9650\u5236\u5176\u53ea\u80fd\u901a\u8fc7\u663e\u5f0f\u8c03\u7528\u89e6\u53d1\uff08C++11 \u5f15\u5165\uff09\u3002 \u793a\u4f8b\uff1a class Counter { private : int value ; public : Counter ( int v ) : value ( v ) {} // \u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26 explicit operator int () const { return value ; } }; int main () { Counter c ( 10 ); // int x = c; // \u9519\u8bef\uff1a\u9690\u5f0f\u8c03\u7528\u88ab\u7981\u6b62 int x = static_cast < int > ( c ); // \u663e\u5f0f\u8c03\u7528 cout << \"x = \" << x << endl ; return 0 ; }","title":"\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u7684\u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/overload/#_69","text":"\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u7684\u4f5c\u7528 \uff1a \u5c06\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002 \u5c06\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5176\u4ed6\u7c7b\u7c7b\u578b\u3002 \u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7075\u6d3b\u6027\u3002 \u652f\u6301\u4e0e\u6807\u51c6\u5e93\u7684\u4ea4\u4e92\u3002 \u81ea\u5b9a\u4e49\u590d\u6742\u7c7b\u578b\u7684\u8f6c\u6362\u903b\u8f91\u3002 \u6ce8\u610f\u4e8b\u9879 \uff1a \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u5fc5\u987b\u662f\u6210\u5458\u51fd\u6570\u3002 \u907f\u514d\u9690\u5f0f\u8f6c\u6362\u5f15\u53d1\u7684\u6b67\u4e49\u3002 \u4f7f\u7528 explicit \u9650\u5236\u9690\u5f0f\u8f6c\u6362\u7684\u53d1\u751f\uff08\u5982\u679c\u9700\u8981\uff09\u3002 \u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u662f C++ \u63d0\u4f9b\u7684\u4e00\u79cd\u5f3a\u5927\u673a\u5236\uff0c\u80fd\u591f\u8ba9\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u578b\u66f4\u81ea\u7136\u5730\u4e0e\u5176\u4ed6\u7c7b\u578b\u4ea4\u4e92\uff0c\u589e\u5f3a\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u7528\u6027\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/overload/#_70","text":"","title":"\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26"},{"location":"C%2B%2B/overload/#_71","text":"\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d \u662f\u6307\u5728 C++ \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u91cd\u8f7d\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26 () \uff0c\u4f7f\u5f97\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u50cf\u51fd\u6570\u4e00\u6837\u88ab\u8c03\u7528\u3002\u8fd9\u79cd\u91cd\u8f7d\u5141\u8bb8\u7a0b\u5e8f\u5458\u4e3a\u7c7b\u5bf9\u8c61\u5b9a\u4e49\u81ea\u5b9a\u4e49\u7684\u8c03\u7528\u884c\u4e3a\u3002","title":"\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d"},{"location":"C%2B%2B/overload/#_72","text":"\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a ReturnType operator ()( ParameterList ) { // \u5b9e\u73b0\u8c03\u7528\u903b\u8f91 } - ReturnType \uff1a\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u3002 - ParameterList \uff1a\u53c2\u6570\u5217\u8868\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5b9a\u4e49\u4efb\u610f\u6570\u91cf\u548c\u7c7b\u578b\u7684\u53c2\u6570\u3002 - operator() \uff1a\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\u51fd\u6570\u3002","title":"\u8bed\u6cd5"},{"location":"C%2B%2B/overload/#_73","text":"\u4f7f\u5bf9\u8c61\u50cf\u51fd\u6570\u4e00\u6837\u8c03\u7528 \uff1a \u91cd\u8f7d () \u540e\uff0c\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u50cf\u666e\u901a\u51fd\u6570\u4e00\u6837\u4f7f\u7528\u3002 \u7075\u6d3b\u6027 \uff1a \u53ef\u4ee5\u81ea\u5b9a\u4e49\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u9002\u7528\u4e8e\u5404\u79cd\u573a\u666f\u3002 \u5e38\u89c1\u7528\u9014 \uff1a \u7528\u4e8e\u5b9e\u73b0\u4eff\u51fd\u6570\uff08\u51fd\u6570\u5bf9\u8c61\uff09\u3002 \u7528\u4e8e\u5c01\u88c5\u590d\u6742\u7684\u51fd\u6570\u903b\u8f91\u3002","title":"\u7279\u70b9"},{"location":"C%2B%2B/overload/#1_4","text":"\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u91cd\u8f7d () \u8fd0\u7b97\u7b26\uff0c\u4f7f\u5bf9\u8c61\u53ef\u4ee5\u50cf\u51fd\u6570\u4e00\u6837\u8c03\u7528\uff1a #include <iostream> using namespace std ; class Adder { private : int base ; public : Adder ( int b ) : base ( b ) {} // \u91cd\u8f7d\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26 int operator ()( int x ) { return base + x ; } }; int main () { Adder add ( 10 ); // \u521b\u5efa\u5bf9\u8c61\uff0c\u57fa\u503c\u4e3a 10 // \u4f7f\u7528\u5bf9\u8c61\u50cf\u51fd\u6570\u4e00\u6837\u8c03\u7528 cout << \"add(5) = \" << add ( 5 ) << endl ; // \u8f93\u51fa: 15 cout << \"add(20) = \" << add ( 20 ) << endl ; // \u8f93\u51fa: 30 return 0 ; }","title":"\u793a\u4f8b 1\uff1a\u7b80\u5355\u7684\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d"},{"location":"C%2B%2B/overload/#_74","text":"add(5) = 15 add(20) = 30","title":"\u8f93\u51fa"},{"location":"C%2B%2B/overload/#2_4","text":"\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u53ef\u4ee5\u63a5\u53d7\u591a\u4e2a\u53c2\u6570\uff0c\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u52a0\u6cd5\u5668\uff1a #include <iostream> using namespace std ; class Multiplier { public : // \u91cd\u8f7d\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26 int operator ()( int x , int y ) { return x * y ; } }; int main () { Multiplier multiply ; // \u4f7f\u7528\u5bf9\u8c61\u50cf\u51fd\u6570\u4e00\u6837\u8c03\u7528 cout << \"multiply(3, 4) = \" << multiply ( 3 , 4 ) << endl ; // \u8f93\u51fa: 12 cout << \"multiply(7, 8) = \" << multiply ( 7 , 8 ) << endl ; // \u8f93\u51fa: 56 return 0 ; }","title":"\u793a\u4f8b 2\uff1a\u591a\u53c2\u6570\u7684\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d"},{"location":"C%2B%2B/overload/#_75","text":"multiply(3, 4) = 12 multiply(7, 8) = 56","title":"\u8f93\u51fa"},{"location":"C%2B%2B/overload/#3_3","text":"\u4eff\u51fd\u6570\u662f\u901a\u8fc7\u91cd\u8f7d () \u8fd0\u7b97\u7b26\u7684\u7c7b\u5bf9\u8c61\uff0c\u901a\u5e38\u7528\u4e8e\u66ff\u4ee3\u666e\u901a\u51fd\u6570\uff0c\u7279\u522b\u662f\u5728\u6807\u51c6\u6a21\u677f\u5e93\uff08STL\uff09\u4e2d\u3002 #include <iostream> #include <vector> #include <algorithm> using namespace std ; class IsEven { public : // \u91cd\u8f7d\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26 bool operator ()( int x ) { return x % 2 == 0 ; } }; int main () { vector < int > nums = { 1 , 2 , 3 , 4 , 5 , 6 }; // \u4f7f\u7528\u4eff\u51fd\u6570\u7b5b\u9009\u5076\u6570 IsEven isEven ; for ( int num : nums ) { if ( isEven ( num )) { cout << num << \" is even.\" << endl ; } } return 0 ; }","title":"\u793a\u4f8b 3\uff1a\u4eff\u51fd\u6570\uff08\u51fd\u6570\u5bf9\u8c61\uff09"},{"location":"C%2B%2B/overload/#_76","text":"2 is even. 4 is even. 6 is even.","title":"\u8f93\u51fa"},{"location":"C%2B%2B/overload/#_77","text":"\u4eff\u51fd\u6570\uff08\u51fd\u6570\u5bf9\u8c61\uff09 \uff1a \u5728 STL \u4e2d\uff0c\u4eff\u51fd\u6570\u88ab\u5e7f\u6cdb\u7528\u4e8e\u7b97\u6cd5\uff08\u5982 std::sort \uff09\u4e2d\u3002 \u4f8b\u5982\uff1a struct Compare { bool operator ()( int a , int b ) { return a < b ; } }; std :: sort ( vec . begin (), vec . end (), Compare ()); \u5c01\u88c5\u590d\u6742\u903b\u8f91 \uff1a \u53ef\u4ee5\u5c06\u590d\u6742\u7684\u51fd\u6570\u903b\u8f91\u5c01\u88c5\u5230\u7c7b\u4e2d\uff0c\u901a\u8fc7\u91cd\u8f7d () \u63d0\u4f9b\u7b80\u5355\u7684\u8c03\u7528\u63a5\u53e3\u3002 \u72b6\u6001\u7ba1\u7406 \uff1a \u51fd\u6570\u5bf9\u8c61\u53ef\u4ee5\u4fdd\u5b58\u72b6\u6001\uff0c\u800c\u666e\u901a\u51fd\u6570\u65e0\u6cd5\u505a\u5230\u3002 \u4f8b\u5982\uff1a class Counter { private : int count ; public : Counter () : count ( 0 ) {} int operator ()() { return ++ count ; } }; Counter counter ; cout << counter () << endl ; // \u8f93\u51fa: 1 cout << counter () << endl ; // \u8f93\u51fa: 2 \u52a8\u6001\u884c\u4e3a \uff1a \u53ef\u4ee5\u6839\u636e\u5bf9\u8c61\u7684\u72b6\u6001\u52a8\u6001\u6539\u53d8\u51fd\u6570\u8c03\u7528\u7684\u884c\u4e3a\u3002","title":"\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u5e94\u7528\u573a\u666f"},{"location":"C%2B%2B/overload/#_78","text":"\u8fd4\u56de\u503c\u7c7b\u578b\u548c\u53c2\u6570\u5217\u8868 \uff1a \u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u548c\u53c2\u6570\u5217\u8868\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u81ea\u7531\u5b9a\u4e49\u3002 \u652f\u6301\u5e38\u91cf\u5bf9\u8c61 \uff1a \u5982\u679c\u9700\u8981\u652f\u6301\u5e38\u91cf\u5bf9\u8c61\u8c03\u7528\uff0c\u53ef\u4ee5\u5c06 operator() \u58f0\u660e\u4e3a const \uff1a int operator ()( int x ) const { return x * x ; } \u4e0e\u666e\u901a\u51fd\u6570\u7684\u533a\u522b \uff1a \u666e\u901a\u51fd\u6570\u662f\u9759\u6001\u7684\uff0c\u4e0d\u80fd\u4fdd\u5b58\u72b6\u6001\u3002 \u51fd\u6570\u5bf9\u8c61\u53ef\u4ee5\u4fdd\u5b58\u72b6\u6001\uff0c\u63d0\u4f9b\u66f4\u7075\u6d3b\u7684\u529f\u80fd\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/overload/#_79","text":"\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d \u5141\u8bb8\u7c7b\u7684\u5bf9\u8c61\u50cf\u51fd\u6570\u4e00\u6837\u8c03\u7528\u3002 \u5b83\u901a\u8fc7\u91cd\u8f7d operator() \u5b9e\u73b0\uff0c\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u81ea\u7531\u5b9a\u4e49\u3002 \u5e38\u89c1\u5e94\u7528\u5305\u62ec\u4eff\u51fd\u6570\u3001\u5c01\u88c5\u590d\u6742\u903b\u8f91\u3001\u72b6\u6001\u7ba1\u7406\u7b49\u3002 \u5728 C++ \u6807\u51c6\u5e93\u4e2d\uff0c\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u88ab\u5e7f\u6cdb\u7528\u4e8e STL \u7b97\u6cd5\u548c\u5bb9\u5668\u4e2d\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/virtual_functions/","text":"C++ \u4e2d\u7684\u865a\u51fd\u6570 \u865a\u51fd\u6570\u4e0e\u7eaf\u865a\u51fd\u6570 \u865a\u51fd\u6570\uff08 virtual function \uff09\u662f C++ \u4e2d\u7528\u4e8e\u5b9e\u73b0 \u591a\u6001 \u7684\u4e00\u79cd\u673a\u5236\u3002\u5b83\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 1. \u865a\u51fd\u6570\u7684\u5b9a\u4e49 \u865a\u51fd\u6570 \u662f\u57fa\u7c7b\u4e2d\u4f7f\u7528\u5173\u952e\u5b57 virtual \u58f0\u660e\u7684\u6210\u5458\u51fd\u6570\u3002 \u5f53\u6d3e\u751f\u7c7b\u91cd\u5199\uff08\u8986\u76d6\uff09\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u65f6\uff0c\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\uff0c\u800c\u4e0d\u662f\u57fa\u7c7b\u7684\u5b9e\u73b0\u3002 \u8bed\u6cd5 \uff1a class Base { public : virtual void display () { // \u865a\u51fd\u6570 cout << \"Base class display\" << endl ; } }; class Derived : public Base { public : void display () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived class display\" << endl ; } }; 2. \u865a\u51fd\u6570\u7684\u7279\u70b9 \u52a8\u6001\u7ed1\u5b9a \uff1a \u865a\u51fd\u6570\u901a\u8fc7 \u52a8\u6001\u7ed1\u5b9a \uff08\u8fd0\u884c\u65f6\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff09\u5b9e\u73b0\u591a\u6001\u3002 \u975e\u865a\u51fd\u6570\u4f7f\u7528 \u9759\u6001\u7ed1\u5b9a \uff08\u7f16\u8bd1\u65f6\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff09\u3002 \u865a\u51fd\u6570\u8868\uff08V-Table\uff09 \uff1a \u6bcf\u4e2a\u5305\u542b\u865a\u51fd\u6570\u7684\u7c7b\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff08 vtable \uff09\uff0c\u5b58\u50a8\u6307\u5411\u865a\u51fd\u6570\u7684\u6307\u9488\u3002 \u5bf9\u8c61\u901a\u8fc7\u865a\u51fd\u6570\u8868\u5728\u8fd0\u884c\u65f6\u627e\u5230\u5bf9\u5e94\u7684\u51fd\u6570\u3002 \u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528 \uff1a \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u3002 3. \u793a\u4f8b\u4ee3\u7801 #include <iostream> using namespace std ; class Base { public : virtual void display () { // \u865a\u51fd\u6570 cout << \"Base class display\" << endl ; } }; class Derived : public Base { public : void display () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived class display\" << endl ; } }; int main () { Base * basePtr ; // \u57fa\u7c7b\u6307\u9488 Derived derivedObj ; basePtr = & derivedObj ; basePtr -> display (); // \u8c03\u7528\u6d3e\u751f\u7c7b\u7684 display() return 0 ; } \u8f93\u51fa \uff1a Derived class display 4. \u865a\u51fd\u6570\u7684\u4f5c\u7528 \u5b9e\u73b0\u591a\u6001 \uff1a \u865a\u51fd\u6570\u662f\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001\u7684\u6838\u5fc3\u673a\u5236\u3002 \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u64cd\u4f5c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\u3002 \u4ee3\u7801\u590d\u7528 \uff1a \u4f7f\u7528\u865a\u51fd\u6570\u53ef\u4ee5\u51cf\u5c11\u4ee3\u7801\u91cd\u590d\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u6269\u5c55\u6027\u3002 5. \u6ce8\u610f\u4e8b\u9879 \u865a\u51fd\u6570\u5fc5\u987b\u5728\u57fa\u7c7b\u4e2d\u58f0\u660e \uff1a \u53ea\u6709\u57fa\u7c7b\u4e2d\u58f0\u660e\u4e3a virtual \u7684\u51fd\u6570\uff0c\u6d3e\u751f\u7c7b\u624d\u80fd\u91cd\u5199\u5e76\u5b9e\u73b0\u591a\u6001\u3002 \u6790\u6784\u51fd\u6570\u5efa\u8bae\u58f0\u660e\u4e3a\u865a\u51fd\u6570 \uff1a \u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\u53ef\u80fd\u5bfc\u81f4\u8d44\u6e90\u6cc4\u6f0f\u3002 \u793a\u4f8b\uff1a class Base { public : virtual ~ Base () { // \u865a\u6790\u6784\u51fd\u6570 cout << \"Base destructor\" << endl ; } }; \u865a\u51fd\u6570\u4e0d\u80fd\u662f\u9759\u6001\u51fd\u6570 \uff1a \u9759\u6001\u51fd\u6570\u4e0e\u7c7b\u76f8\u5173\uff0c\u800c\u865a\u51fd\u6570\u4e0e\u5bf9\u8c61\u76f8\u5173\u3002 \u6027\u80fd\u5f00\u9500 \uff1a \u865a\u51fd\u6570\u7684\u52a8\u6001\u7ed1\u5b9a\u4f1a\u5e26\u6765\u4e00\u5b9a\u7684\u6027\u80fd\u5f00\u9500\uff0c\u4f46\u901a\u5e38\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002 6. \u603b\u7ed3 \u865a\u51fd\u6570\u662f\u5b9e\u73b0\u591a\u6001\u7684\u5173\u952e\uff0c\u901a\u8fc7\u52a8\u6001\u7ed1\u5b9a\u5728\u8fd0\u884c\u65f6\u8c03\u7528\u6b63\u786e\u7684\u51fd\u6570\u3002 \u4f7f\u7528\u865a\u51fd\u6570\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002 \u5728\u8bbe\u8ba1\u57fa\u7c7b\u65f6\uff0c\u5efa\u8bae\u5c06\u53ef\u80fd\u88ab\u91cd\u5199\u7684\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u5e76\u5c06\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u4ee5\u907f\u514d\u8d44\u6e90\u6cc4\u6f0f\u3002 \u5f15\u5165\u865a\u51fd\u6570\u7684\u539f\u56e0 \u865a\u51fd\u6570\u7684\u5f15\u5165\u662f\u4e3a\u4e86\u5b9e\u73b0 \u8fd0\u884c\u65f6\u591a\u6001 \uff0c\u89e3\u51b3\u5728\u7ee7\u627f\u5173\u7cfb\u4e2d\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u51fd\u6570\u7684\u95ee\u9898\u3002\u4ee5\u4e0b\u662f\u5f15\u5165\u865a\u51fd\u6570\u7684\u4e3b\u8981\u539f\u56e0\uff1a 1. \u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001 \u95ee\u9898 \uff1a \u5728 C++ \u4e2d\uff0c\u5982\u679c\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u51fd\u6570\uff08\u9759\u6001\u7ed1\u5b9a\uff09\u3002 \u8fd9\u610f\u5473\u7740\u5728\u7f16\u8bd1\u65f6\uff0c\u51fd\u6570\u7684\u8c03\u7528\u5df2\u7ecf\u786e\u5b9a\uff0c\u65e0\u6cd5\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\u3002 \u89e3\u51b3\u65b9\u6848 \uff1a \u5f15\u5165\u865a\u51fd\u6570\uff0c\u901a\u8fc7 \u52a8\u6001\u7ed1\u5b9a \uff08\u8fd0\u884c\u65f6\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff09\u5b9e\u73b0\u591a\u6001\u3002 \u8fd9\u6837\uff0c\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u53ef\u4ee5\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u3002 \u793a\u4f8b \uff1a class Base { public : virtual void display () { // \u865a\u51fd\u6570 cout << \"Base class display\" << endl ; } }; class Derived : public Base { public : void display () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived class display\" << endl ; } }; int main () { Base * basePtr ; Derived derivedObj ; basePtr = & derivedObj ; basePtr -> display (); // \u8c03\u7528 Derived \u7684 display() return 0 ; } \u8f93\u51fa \uff1a Derived class display 2. \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027 \u95ee\u9898 \uff1a \u5982\u679c\u6ca1\u6709\u865a\u51fd\u6570\uff0c\u57fa\u7c7b\u65e0\u6cd5\u4e3a\u6d3e\u751f\u7c7b\u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u8f83\u5dee\u3002 \u6bcf\u6b21\u9700\u8981\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u65f6\uff0c\u90fd\u5fc5\u987b\u77e5\u9053\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u5e76\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 \u89e3\u51b3\u65b9\u6848 \uff1a \u4f7f\u7528\u865a\u51fd\u6570\uff0c\u57fa\u7c7b\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u901a\u7528\u63a5\u53e3\uff0c\u6d3e\u751f\u7c7b\u53ef\u4ee5\u91cd\u5199\u8be5\u63a5\u53e3\u3002 \u8fd9\u6837\uff0c\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u64cd\u4f5c\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u800c\u65e0\u9700\u5173\u5fc3\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002 3. \u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u6838\u5fc3\u7279\u6027 \u591a\u6001 \u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e09\u5927\u7279\u6027\u4e4b\u4e00\uff08\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001\uff09\u3002 \u865a\u51fd\u6570\u662f\u5b9e\u73b0\u591a\u6001\u7684\u6838\u5fc3\u673a\u5236\uff0c\u4f7f\u5f97 C++ \u80fd\u591f\u652f\u6301\u52a8\u6001\u884c\u4e3a\u3002 4. \u89e3\u51b3\u8d44\u6e90\u7ba1\u7406\u95ee\u9898 \u95ee\u9898 \uff1a \u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u53ea\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u53ef\u80fd\u5bfc\u81f4\u8d44\u6e90\u6cc4\u6f0f\u3002 \u89e3\u51b3\u65b9\u6848 \uff1a \u5c06\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u786e\u4fdd\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002 \u793a\u4f8b \uff1a class Base { public : virtual ~ Base () { // \u865a\u6790\u6784\u51fd\u6570 cout << \"Base destructor\" << endl ; } }; class Derived : public Base { public : ~ Derived () { cout << \"Derived destructor\" << endl ; } }; int main () { Base * basePtr = new Derived (); delete basePtr ; // \u8c03\u7528 Derived \u548c Base \u7684\u6790\u6784\u51fd\u6570 return 0 ; } \u8f93\u51fa \uff1a Derived destructor Base destructor 5. \u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3 \u865a\u51fd\u6570\u5141\u8bb8\u57fa\u7c7b\u5b9a\u4e49\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u6d3e\u751f\u7c7b\u53ef\u4ee5\u6839\u636e\u9700\u8981\u91cd\u5199\u8be5\u63a5\u53e3\u3002 \u8fd9\u5728\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u975e\u5e38\u5e38\u89c1\uff0c\u4f8b\u5982\u5de5\u5382\u6a21\u5f0f\u3001\u7b56\u7565\u6a21\u5f0f\u7b49\u3002 \u603b\u7ed3 \u5f15\u5165\u865a\u51fd\u6570\u7684\u4e3b\u8981\u76ee\u7684\u662f\u89e3\u51b3\u7ee7\u627f\u5173\u7cfb\u4e2d\u51fd\u6570\u8c03\u7528\u7684\u52a8\u6001\u7ed1\u5b9a\u95ee\u9898\uff0c\u4ece\u800c\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001\u3002\u5b83\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\uff0c\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u6838\u5fc3\u7279\u6027\uff0c\u5e76\u89e3\u51b3\u4e86\u8d44\u6e90\u7ba1\u7406\u4e2d\u7684\u6f5c\u5728\u95ee\u9898\u3002","title":"\u865a\u51fd\u6570"},{"location":"C%2B%2B/virtual_functions/#c","text":"\u865a\u51fd\u6570\u4e0e\u7eaf\u865a\u51fd\u6570 \u865a\u51fd\u6570\uff08 virtual function \uff09\u662f C++ \u4e2d\u7528\u4e8e\u5b9e\u73b0 \u591a\u6001 \u7684\u4e00\u79cd\u673a\u5236\u3002\u5b83\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002","title":"C++ \u4e2d\u7684\u865a\u51fd\u6570"},{"location":"C%2B%2B/virtual_functions/#1","text":"\u865a\u51fd\u6570 \u662f\u57fa\u7c7b\u4e2d\u4f7f\u7528\u5173\u952e\u5b57 virtual \u58f0\u660e\u7684\u6210\u5458\u51fd\u6570\u3002 \u5f53\u6d3e\u751f\u7c7b\u91cd\u5199\uff08\u8986\u76d6\uff09\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u65f6\uff0c\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\uff0c\u800c\u4e0d\u662f\u57fa\u7c7b\u7684\u5b9e\u73b0\u3002","title":"1. \u865a\u51fd\u6570\u7684\u5b9a\u4e49"},{"location":"C%2B%2B/virtual_functions/#_1","text":"class Base { public : virtual void display () { // \u865a\u51fd\u6570 cout << \"Base class display\" << endl ; } }; class Derived : public Base { public : void display () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived class display\" << endl ; } };","title":"\u8bed\u6cd5\uff1a"},{"location":"C%2B%2B/virtual_functions/#2","text":"\u52a8\u6001\u7ed1\u5b9a \uff1a \u865a\u51fd\u6570\u901a\u8fc7 \u52a8\u6001\u7ed1\u5b9a \uff08\u8fd0\u884c\u65f6\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff09\u5b9e\u73b0\u591a\u6001\u3002 \u975e\u865a\u51fd\u6570\u4f7f\u7528 \u9759\u6001\u7ed1\u5b9a \uff08\u7f16\u8bd1\u65f6\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff09\u3002 \u865a\u51fd\u6570\u8868\uff08V-Table\uff09 \uff1a \u6bcf\u4e2a\u5305\u542b\u865a\u51fd\u6570\u7684\u7c7b\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff08 vtable \uff09\uff0c\u5b58\u50a8\u6307\u5411\u865a\u51fd\u6570\u7684\u6307\u9488\u3002 \u5bf9\u8c61\u901a\u8fc7\u865a\u51fd\u6570\u8868\u5728\u8fd0\u884c\u65f6\u627e\u5230\u5bf9\u5e94\u7684\u51fd\u6570\u3002 \u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528 \uff1a \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u3002","title":"2. \u865a\u51fd\u6570\u7684\u7279\u70b9"},{"location":"C%2B%2B/virtual_functions/#3","text":"#include <iostream> using namespace std ; class Base { public : virtual void display () { // \u865a\u51fd\u6570 cout << \"Base class display\" << endl ; } }; class Derived : public Base { public : void display () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived class display\" << endl ; } }; int main () { Base * basePtr ; // \u57fa\u7c7b\u6307\u9488 Derived derivedObj ; basePtr = & derivedObj ; basePtr -> display (); // \u8c03\u7528\u6d3e\u751f\u7c7b\u7684 display() return 0 ; }","title":"3. \u793a\u4f8b\u4ee3\u7801"},{"location":"C%2B%2B/virtual_functions/#_2","text":"Derived class display","title":"\u8f93\u51fa\uff1a"},{"location":"C%2B%2B/virtual_functions/#4","text":"\u5b9e\u73b0\u591a\u6001 \uff1a \u865a\u51fd\u6570\u662f\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001\u7684\u6838\u5fc3\u673a\u5236\u3002 \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u64cd\u4f5c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\u3002 \u4ee3\u7801\u590d\u7528 \uff1a \u4f7f\u7528\u865a\u51fd\u6570\u53ef\u4ee5\u51cf\u5c11\u4ee3\u7801\u91cd\u590d\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u6269\u5c55\u6027\u3002","title":"4. \u865a\u51fd\u6570\u7684\u4f5c\u7528"},{"location":"C%2B%2B/virtual_functions/#5","text":"\u865a\u51fd\u6570\u5fc5\u987b\u5728\u57fa\u7c7b\u4e2d\u58f0\u660e \uff1a \u53ea\u6709\u57fa\u7c7b\u4e2d\u58f0\u660e\u4e3a virtual \u7684\u51fd\u6570\uff0c\u6d3e\u751f\u7c7b\u624d\u80fd\u91cd\u5199\u5e76\u5b9e\u73b0\u591a\u6001\u3002 \u6790\u6784\u51fd\u6570\u5efa\u8bae\u58f0\u660e\u4e3a\u865a\u51fd\u6570 \uff1a \u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\u53ef\u80fd\u5bfc\u81f4\u8d44\u6e90\u6cc4\u6f0f\u3002 \u793a\u4f8b\uff1a class Base { public : virtual ~ Base () { // \u865a\u6790\u6784\u51fd\u6570 cout << \"Base destructor\" << endl ; } }; \u865a\u51fd\u6570\u4e0d\u80fd\u662f\u9759\u6001\u51fd\u6570 \uff1a \u9759\u6001\u51fd\u6570\u4e0e\u7c7b\u76f8\u5173\uff0c\u800c\u865a\u51fd\u6570\u4e0e\u5bf9\u8c61\u76f8\u5173\u3002 \u6027\u80fd\u5f00\u9500 \uff1a \u865a\u51fd\u6570\u7684\u52a8\u6001\u7ed1\u5b9a\u4f1a\u5e26\u6765\u4e00\u5b9a\u7684\u6027\u80fd\u5f00\u9500\uff0c\u4f46\u901a\u5e38\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002","title":"5. \u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/virtual_functions/#6","text":"\u865a\u51fd\u6570\u662f\u5b9e\u73b0\u591a\u6001\u7684\u5173\u952e\uff0c\u901a\u8fc7\u52a8\u6001\u7ed1\u5b9a\u5728\u8fd0\u884c\u65f6\u8c03\u7528\u6b63\u786e\u7684\u51fd\u6570\u3002 \u4f7f\u7528\u865a\u51fd\u6570\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002 \u5728\u8bbe\u8ba1\u57fa\u7c7b\u65f6\uff0c\u5efa\u8bae\u5c06\u53ef\u80fd\u88ab\u91cd\u5199\u7684\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u5e76\u5c06\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u4ee5\u907f\u514d\u8d44\u6e90\u6cc4\u6f0f\u3002","title":"6. \u603b\u7ed3"},{"location":"C%2B%2B/virtual_functions/#_3","text":"\u865a\u51fd\u6570\u7684\u5f15\u5165\u662f\u4e3a\u4e86\u5b9e\u73b0 \u8fd0\u884c\u65f6\u591a\u6001 \uff0c\u89e3\u51b3\u5728\u7ee7\u627f\u5173\u7cfb\u4e2d\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u51fd\u6570\u7684\u95ee\u9898\u3002\u4ee5\u4e0b\u662f\u5f15\u5165\u865a\u51fd\u6570\u7684\u4e3b\u8981\u539f\u56e0\uff1a","title":"\u5f15\u5165\u865a\u51fd\u6570\u7684\u539f\u56e0"},{"location":"C%2B%2B/virtual_functions/#1_1","text":"\u95ee\u9898 \uff1a \u5728 C++ \u4e2d\uff0c\u5982\u679c\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u51fd\u6570\uff08\u9759\u6001\u7ed1\u5b9a\uff09\u3002 \u8fd9\u610f\u5473\u7740\u5728\u7f16\u8bd1\u65f6\uff0c\u51fd\u6570\u7684\u8c03\u7528\u5df2\u7ecf\u786e\u5b9a\uff0c\u65e0\u6cd5\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\u3002 \u89e3\u51b3\u65b9\u6848 \uff1a \u5f15\u5165\u865a\u51fd\u6570\uff0c\u901a\u8fc7 \u52a8\u6001\u7ed1\u5b9a \uff08\u8fd0\u884c\u65f6\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff09\u5b9e\u73b0\u591a\u6001\u3002 \u8fd9\u6837\uff0c\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u53ef\u4ee5\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u3002","title":"1. \u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001"},{"location":"C%2B%2B/virtual_functions/#_4","text":"class Base { public : virtual void display () { // \u865a\u51fd\u6570 cout << \"Base class display\" << endl ; } }; class Derived : public Base { public : void display () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived class display\" << endl ; } }; int main () { Base * basePtr ; Derived derivedObj ; basePtr = & derivedObj ; basePtr -> display (); // \u8c03\u7528 Derived \u7684 display() return 0 ; } \u8f93\u51fa \uff1a Derived class display","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/virtual_functions/#2_1","text":"\u95ee\u9898 \uff1a \u5982\u679c\u6ca1\u6709\u865a\u51fd\u6570\uff0c\u57fa\u7c7b\u65e0\u6cd5\u4e3a\u6d3e\u751f\u7c7b\u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u8f83\u5dee\u3002 \u6bcf\u6b21\u9700\u8981\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u65f6\uff0c\u90fd\u5fc5\u987b\u77e5\u9053\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u5e76\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 \u89e3\u51b3\u65b9\u6848 \uff1a \u4f7f\u7528\u865a\u51fd\u6570\uff0c\u57fa\u7c7b\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u901a\u7528\u63a5\u53e3\uff0c\u6d3e\u751f\u7c7b\u53ef\u4ee5\u91cd\u5199\u8be5\u63a5\u53e3\u3002 \u8fd9\u6837\uff0c\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u64cd\u4f5c\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u800c\u65e0\u9700\u5173\u5fc3\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002","title":"2. \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027"},{"location":"C%2B%2B/virtual_functions/#3_1","text":"\u591a\u6001 \u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e09\u5927\u7279\u6027\u4e4b\u4e00\uff08\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001\uff09\u3002 \u865a\u51fd\u6570\u662f\u5b9e\u73b0\u591a\u6001\u7684\u6838\u5fc3\u673a\u5236\uff0c\u4f7f\u5f97 C++ \u80fd\u591f\u652f\u6301\u52a8\u6001\u884c\u4e3a\u3002","title":"3. \u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u6838\u5fc3\u7279\u6027"},{"location":"C%2B%2B/virtual_functions/#4_1","text":"\u95ee\u9898 \uff1a \u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u53ea\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u53ef\u80fd\u5bfc\u81f4\u8d44\u6e90\u6cc4\u6f0f\u3002 \u89e3\u51b3\u65b9\u6848 \uff1a \u5c06\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u786e\u4fdd\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002","title":"4. \u89e3\u51b3\u8d44\u6e90\u7ba1\u7406\u95ee\u9898"},{"location":"C%2B%2B/virtual_functions/#_5","text":"class Base { public : virtual ~ Base () { // \u865a\u6790\u6784\u51fd\u6570 cout << \"Base destructor\" << endl ; } }; class Derived : public Base { public : ~ Derived () { cout << \"Derived destructor\" << endl ; } }; int main () { Base * basePtr = new Derived (); delete basePtr ; // \u8c03\u7528 Derived \u548c Base \u7684\u6790\u6784\u51fd\u6570 return 0 ; } \u8f93\u51fa \uff1a Derived destructor Base destructor","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/virtual_functions/#5_1","text":"\u865a\u51fd\u6570\u5141\u8bb8\u57fa\u7c7b\u5b9a\u4e49\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u6d3e\u751f\u7c7b\u53ef\u4ee5\u6839\u636e\u9700\u8981\u91cd\u5199\u8be5\u63a5\u53e3\u3002 \u8fd9\u5728\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u975e\u5e38\u5e38\u89c1\uff0c\u4f8b\u5982\u5de5\u5382\u6a21\u5f0f\u3001\u7b56\u7565\u6a21\u5f0f\u7b49\u3002","title":"5. \u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3"},{"location":"C%2B%2B/virtual_functions/#_6","text":"\u5f15\u5165\u865a\u51fd\u6570\u7684\u4e3b\u8981\u76ee\u7684\u662f\u89e3\u51b3\u7ee7\u627f\u5173\u7cfb\u4e2d\u51fd\u6570\u8c03\u7528\u7684\u52a8\u6001\u7ed1\u5b9a\u95ee\u9898\uff0c\u4ece\u800c\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001\u3002\u5b83\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\uff0c\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u6838\u5fc3\u7279\u6027\uff0c\u5e76\u89e3\u51b3\u4e86\u8d44\u6e90\u7ba1\u7406\u4e2d\u7684\u6f5c\u5728\u95ee\u9898\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/volatile/","text":"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u591a\u7ebf\u7a0b C++ \u7a0b\u5e8f\uff0c\u7528\u4e8e\u6d4b\u8bd5 volatile \u7684\u4f5c\u7528\u3002\u7a0b\u5e8f\u4e2d\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u4f1a\u4fee\u6539\u4e00\u4e2a\u5171\u4eab\u53d8\u91cf\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4f1a\u4e0d\u65ad\u68c0\u67e5\u8be5\u53d8\u91cf\u7684\u503c\u3002 \u4ee3\u7801\u793a\u4f8b #include <iostream> #include <thread> #include <chrono> using namespace std ; // \u5b9a\u4e49\u4e00\u4e2a\u5171\u4eab\u53d8\u91cf volatile bool flag = false ; // \u4f7f\u7528 volatile \u9632\u6b62\u7f16\u8bd1\u5668\u4f18\u5316 //\u8981\u60f3\u89c2\u5bdf\u5230\u7f16\u8bd1\u5668\u4f18\u5316\u5bfc\u81f4\u7684\u6b7b\u5faa\u73af\uff0c\u9700\u8981\u53bb\u6389volatile\uff0c\u5e76\u4e14\u5728reader\u7ebf\u7a0b\u52a0\u4e0a\u7a7a\u6c47\u7f16\u6307\u4ee4 void writerThread () { // \u6a21\u62df\u4e00\u4e9b\u5de5\u4f5c this_thread :: sleep_for ( chrono :: seconds ( 2 )); flag = true ; // \u4fee\u6539\u5171\u4eab\u53d8\u91cf cout << \"Writer thread: flag set to true\" << endl ; } void readerThread () { cout << \"Reader thread: waiting for flag...\" << endl ; while ( ! flag ) { asm ( \"\" ); // \u7a7a\u6c47\u7f16\u6307\u4ee4\uff0c\u63d0\u793a\u7f16\u8bd1\u5668\u4f18\u5316,\u4e0d\u52a0\u4e0a\u8fd9\u4e2a\u5373\u4f7f\u53bb\u6389volatile\u4e5f\u4e0d\u4f1a\u4f18\u5316\u4e3a\u6b7b\u5faa\u73af // \u5982\u679c\u6ca1\u6709 volatile\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f18\u5316\u4e3a\u6b7b\u5faa\u73af } cout << \"Reader thread: detected flag is true\" << endl ; } int main () { // \u521b\u5efa\u4e24\u4e2a\u7ebf\u7a0b thread t1 ( writerThread ); thread t2 ( readerThread ); // \u7b49\u5f85\u7ebf\u7a0b\u5b8c\u6210 t1 . join (); t2 . join (); return 0 ; } \u7a0b\u5e8f\u8bf4\u660e \u5171\u4eab\u53d8\u91cf flag \uff1a \u88ab\u58f0\u660e\u4e3a volatile \uff0c\u8868\u793a\u5b83\u7684\u503c\u53ef\u80fd\u4f1a\u88ab\u5176\u4ed6\u7ebf\u7a0b\u4fee\u6539\u3002 \u5982\u679c\u6ca1\u6709 volatile \uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u4f18\u5316 while (!flag) \u4e3a\u4e00\u4e2a\u6b7b\u5faa\u73af\uff0c\u56e0\u4e3a\u5b83\u5047\u8bbe flag \u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539\u3002 \u7ebf\u7a0b writerThread \uff1a \u6a21\u62df\u4e00\u4e9b\u5de5\u4f5c\u540e\uff0c\u5c06 flag \u8bbe\u7f6e\u4e3a true \u3002 \u7ebf\u7a0b readerThread \uff1a \u4e0d\u65ad\u68c0\u67e5 flag \u7684\u503c\uff0c\u76f4\u5230\u68c0\u6d4b\u5230 flag \u88ab\u8bbe\u7f6e\u4e3a true \u3002 volatile \u7684\u4f5c\u7528 \uff1a \u786e\u4fdd readerThread \u6bcf\u6b21\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6 flag \u7684\u6700\u65b0\u503c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u7f13\u5b58\u7684\u503c\u3002 \u8fd0\u884c\u7ed3\u679c \u8f93\u51fa\u793a\u4f8b \uff1a Reader thread: waiting for flag... Writer thread: flag set to true Reader thread: detected flag is true \u6d4b\u8bd5\u65b9\u6cd5 \u4f7f\u7528 volatile \uff1a \u6309\u7167\u4e0a\u8ff0\u4ee3\u7801\u8fd0\u884c\uff0c\u7a0b\u5e8f\u4f1a\u6b63\u5e38\u9000\u51fa\u3002 \u53bb\u6389 volatile \uff1a \u5c06 volatile \u53bb\u6389\u540e\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u4f18\u5316 while (!flag) \u4e3a\u6b7b\u5faa\u73af\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u65e0\u6cd5\u9000\u51fa\u3002 \u6ce8\u610f\u4e8b\u9879 volatile \u4ec5\u9632\u6b62\u4f18\u5316 \uff1a \u5b83\u786e\u4fdd\u6bcf\u6b21\u8bbf\u95ee\u53d8\u91cf\u65f6\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\uff0c\u4f46\u4e0d\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u3002 \u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u4fee\u6539\u53d8\u91cf\uff0c\u4ecd\u7136\u9700\u8981\u4f7f\u7528\u540c\u6b65\u673a\u5236\uff08\u5982 std::mutex \uff09\u6765\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\u3002 \u9002\u7528\u573a\u666f \uff1a volatile \u9002\u7528\u4e8e\u7b80\u5355\u7684\u6807\u5fd7\u53d8\u91cf\uff0c\u4f46\u5bf9\u4e8e\u590d\u6742\u7684\u591a\u7ebf\u7a0b\u64cd\u4f5c\uff0c\u5efa\u8bae\u4f7f\u7528\u66f4\u9ad8\u7ea7\u7684\u540c\u6b65\u673a\u5236\uff08\u5982 std::atomic \u6216 std::mutex \uff09\u3002 \u76f4\u63a5\u7f16\u8bd1\u4e0d\u52a0\u53c2\u6570\u4f1a\u62a5\u9519 \u8fd9\u4e2a\u9519\u8bef\u662f\u56e0\u4e3a\u4f60\u7684\u7a0b\u5e8f\u4f7f\u7528\u4e86\u591a\u7ebf\u7a0b\uff08 std::thread \uff09\uff0c\u4f46\u5728\u94fe\u63a5\u9636\u6bb5\u6ca1\u6709\u94fe\u63a5\u5230 pthread \u5e93\u3002C++ \u7684\u6807\u51c6\u7ebf\u7a0b\u5e93\uff08 std::thread \uff09\u5728\u5e95\u5c42\u4f9d\u8d56\u4e8e POSIX \u7ebf\u7a0b\u5e93\uff08 pthread \uff09\uff0c\u6240\u4ee5\u9700\u8981\u663e\u5f0f\u5730\u94fe\u63a5 pthread \u5e93\u3002 \u89e3\u51b3\u65b9\u6cd5 \u5728\u7f16\u8bd1\u65f6\u6dfb\u52a0 -pthread \u9009\u9879\uff1a g++ testvolatile.cpp -o testvolatile -pthread \u89e3\u91ca \u9519\u8bef\u539f\u56e0 \uff1a std::thread \u7684\u5b9e\u73b0\u4f9d\u8d56\u4e8e pthread \u5e93\u3002 \u5982\u679c\u6ca1\u6709\u94fe\u63a5 pthread \u5e93\uff0c\u94fe\u63a5\u5668\u4f1a\u62a5 undefined reference to 'pthread_create' \u9519\u8bef\u3002 -pthread \u7684\u4f5c\u7528 \uff1a \u544a\u8bc9\u7f16\u8bd1\u5668\u548c\u94fe\u63a5\u5668\u4f7f\u7528 POSIX \u7ebf\u7a0b\u5e93\u3002 \u7f16\u8bd1\u5668\u4f1a\u542f\u7528\u7ebf\u7a0b\u5b89\u5168\u7684\u9009\u9879\uff0c\u94fe\u63a5\u5668\u4f1a\u5c06\u7a0b\u5e8f\u94fe\u63a5\u5230 pthread \u5e93\u3002 \u5b8c\u6574\u7f16\u8bd1\u547d\u4ee4 g++ testvolatile.cpp -o testvolatile -pthread \u8fd0\u884c\u7a0b\u5e8f \u7f16\u8bd1\u6210\u529f\u540e\uff0c\u8fd0\u884c\u7a0b\u5e8f\uff1a ./testvolatile \u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u7c7b\u4f3c\u4ee5\u4e0b\u7684\u8f93\u51fa\uff1a Reader thread: waiting for flag... Writer thread: flag set to true Reader thread: detected flag is true \u603b\u7ed3 \u9519\u8bef\u7684\u539f\u56e0\u662f\u6ca1\u6709\u94fe\u63a5 pthread \u5e93\u3002 \u89e3\u51b3\u65b9\u6cd5\u662f\u5728\u7f16\u8bd1\u65f6\u6dfb\u52a0 -pthread \u9009\u9879\u3002 thread \u7684\u4f5c\u7528 \u5728 C++ \u4e2d\uff0c std::thread \u662f C++11 \u6807\u51c6\u5f15\u5165\u7684\u591a\u7ebf\u7a0b\u5e93\uff0c\u7528\u4e8e\u521b\u5efa\u548c\u7ba1\u7406\u7ebf\u7a0b\u3002\u7ebf\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u5141\u8bb8\u7a0b\u5e8f\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4efb\u52a1\uff08\u5e76\u53d1\u6267\u884c\uff09\u3002 thread \u7684\u82f1\u6587\u542b\u4e49 \u82f1\u6587 \uff1a thread \u4e2d\u6587 \uff1a\u7ebf\u7a0b \u542b\u4e49 \uff1a \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u72ec\u7acb\u8c03\u5ea6\u548c\u6267\u884c\u7684\u6700\u5c0f\u5355\u4f4d\u3002 \u4e00\u4e2a\u7ebf\u7a0b\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u8fdb\u7a0b\uff0c\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u8d44\u6e90\uff08\u5982\u5185\u5b58\u3001\u6587\u4ef6\u53e5\u67c4\u7b49\uff09\u3002 std::thread \u7684\u4f5c\u7528 \u521b\u5efa\u7ebf\u7a0b \uff1a \u4f7f\u7528 std::thread \u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff0c\u5e76\u6307\u5b9a\u7ebf\u7a0b\u8981\u6267\u884c\u7684\u4efb\u52a1\u3002 \u6bcf\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u4e00\u6bb5\u4ee3\u7801\u3002 \u5e76\u53d1\u6267\u884c \uff1a \u4e3b\u7ebf\u7a0b\u548c\u65b0\u521b\u5efa\u7684\u7ebf\u7a0b\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\uff0c\u4ece\u800c\u5b9e\u73b0\u5e76\u53d1\u6267\u884c\u3002 \u7ebf\u7a0b\u7ba1\u7406 \uff1a \u63d0\u4f9b\u4e86\u7ebf\u7a0b\u7684\u542f\u52a8\u3001\u7b49\u5f85\uff08 join \uff09\u3001\u5206\u79bb\uff08 detach \uff09\u7b49\u529f\u80fd\u3002 \u793a\u4f8b\uff1a\u521b\u5efa\u7ebf\u7a0b #include <iostream> #include <thread> using namespace std ; void task () { cout << \"Thread is running!\" << endl ; } int main () { thread t ( task ); // \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6267\u884c task \u51fd\u6570 t . join (); // \u7b49\u5f85\u7ebf\u7a0b\u5b8c\u6210 cout << \"Main thread is done!\" << endl ; return 0 ; } \u8f93\u51fa \uff1a Thread is running! Main thread is done! \u7ebf\u7a0b\u7684\u57fa\u672c\u64cd\u4f5c \u521b\u5efa\u7ebf\u7a0b \uff1a \u4f7f\u7528 std::thread \u521b\u5efa\u7ebf\u7a0b\uff0c\u5e76\u6307\u5b9a\u7ebf\u7a0b\u8981\u6267\u884c\u7684\u51fd\u6570\u6216\u4ee3\u7801\u3002 \u7b49\u5f85\u7ebf\u7a0b\u5b8c\u6210 \uff1a \u4f7f\u7528 join() \u7b49\u5f85\u7ebf\u7a0b\u5b8c\u6210\uff0c\u4e3b\u7ebf\u7a0b\u4f1a\u963b\u585e\u76f4\u5230\u5b50\u7ebf\u7a0b\u7ed3\u675f\u3002 \u5206\u79bb\u7ebf\u7a0b \uff1a \u4f7f\u7528 detach() \u5c06\u7ebf\u7a0b\u4e0e\u4e3b\u7ebf\u7a0b\u5206\u79bb\uff0c\u7ebf\u7a0b\u4f1a\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u518d\u7b49\u5f85\u5b83\u3002 \u4f20\u9012\u53c2\u6570 \uff1a \u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u51fd\u6570\u5411\u7ebf\u7a0b\u4f20\u9012\u53c2\u6570\u3002 \u7ebf\u7a0b\u7684\u4f18\u70b9 \u5e76\u53d1\u6267\u884c \uff1a\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u3002 \u8d44\u6e90\u5171\u4eab \uff1a\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u8d44\u6e90\u3002 \u7ebf\u7a0b\u7684\u6ce8\u610f\u4e8b\u9879 \u7ebf\u7a0b\u5b89\u5168 \uff1a \u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u540c\u6b65\u673a\u5236\uff08\u5982 std::mutex \uff09\u6765\u907f\u514d\u6570\u636e\u7ade\u4e89\u3002 \u7ebf\u7a0b\u751f\u547d\u5468\u671f \uff1a \u5fc5\u987b\u5728\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u524d\u786e\u4fdd\u6240\u6709\u7ebf\u7a0b\u5b8c\u6210\u6216\u5206\u79bb\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 \u603b\u7ed3 thread \u7684\u542b\u4e49 \uff1a\u7ebf\u7a0b\uff0c\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u57fa\u672c\u5355\u4f4d\u3002 std::thread \u7684\u4f5c\u7528 \uff1a\u7528\u4e8e\u521b\u5efa\u548c\u7ba1\u7406\u7ebf\u7a0b\uff0c\u5b9e\u73b0\u5e76\u53d1\u6267\u884c\u3002 \u7ebf\u7a0b\u7684\u4f7f\u7528 \uff1a\u901a\u8fc7 std::thread \u521b\u5efa\u7ebf\u7a0b\uff0c\u5e76\u4f7f\u7528 join \u6216 detach \u7ba1\u7406\u7ebf\u7a0b\u7684\u751f\u547d\u5468\u671f\u3002 \u6211\u6d4b\u8bd5\u53bb\u6389volatile\u5173\u952e\u5b57\u8fd8\u662f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u5e94\u8be5\u662f\u7f16\u8bd1\u65f6\u6ca1\u6709\u9009\u62e9\u4f18\u5316\u5bfc\u81f4 \u5373\u4f7f\u53bb\u6389\u4e86 volatile \uff0c\u7a0b\u5e8f\u4ecd\u7136\u53ef\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u8fd9\u662f\u56e0\u4e3a\u7a0b\u5e8f\u7684\u884c\u4e3a\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u4ee3\u7801\uff0c\u8fd8\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7b56\u7565\u548c\u8fd0\u884c\u73af\u5883\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u539f\u56e0\u5206\u6790\uff1a 1. \u7f16\u8bd1\u5668\u4f18\u5316\u7684\u884c\u4e3a volatile \u7684\u4f5c\u7528 \uff1a volatile \u544a\u8bc9\u7f16\u8bd1\u5668\u4e0d\u8981\u5bf9\u53d8\u91cf\u7684\u8bbf\u95ee\u8fdb\u884c\u4f18\u5316\uff0c\u6bcf\u6b21\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u53d8\u91cf\u7684\u503c\u3002 \u53bb\u6389 volatile \u540e\u7684\u60c5\u51b5 \uff1a \u5982\u679c\u7f16\u8bd1\u5668\u6ca1\u6709\u5bf9 flag \u7684\u8bbf\u95ee\u8fdb\u884c\u4f18\u5316\uff08\u4f8b\u5982\u6ca1\u6709\u5c06\u5176\u7f13\u5b58\u5230\u5bc4\u5b58\u5668\u4e2d\uff09\uff0c\u7a0b\u5e8f\u4ecd\u7136\u4f1a\u6b63\u5e38\u8fd0\u884c\u3002 \u5728\u67d0\u4e9b\u7f16\u8bd1\u5668\u6216\u4f18\u5316\u7ea7\u522b\u4e0b\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u9ed8\u8ba4\u6bcf\u6b21\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6 flag \u7684\u503c\uff0c\u5373\u4f7f\u6ca1\u6709 volatile \u3002 2. \u7f16\u8bd1\u5668\u4f18\u5316\u7ea7\u522b\u7684\u5f71\u54cd \u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7ea7\u522b\u4f1a\u5f71\u54cd\u4ee3\u7801\u7684\u884c\u4e3a\uff1a \u65e0\u4f18\u5316\uff08 -O0 \uff09 \uff1a \u5728\u65e0\u4f18\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5668\u901a\u5e38\u4e0d\u4f1a\u5bf9\u53d8\u91cf\u7684\u8bbf\u95ee\u8fdb\u884c\u4f18\u5316\uff0c\u56e0\u6b64\u6bcf\u6b21\u90fd\u4f1a\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u53d8\u91cf\u7684\u503c\u3002 \u8fd9\u53ef\u80fd\u662f\u4f60\u5f53\u524d\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u7684\u539f\u56e0\u3002 \u6709\u4f18\u5316\uff08 -O1 \u3001 -O2 \u3001 -O3 \uff09 \uff1a \u5728\u9ad8\u4f18\u5316\u7ea7\u522b\u4e0b\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u5c06 flag \u7f13\u5b58\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u4ece\u800c\u5bfc\u81f4 readerThread \u4e2d\u7684 while (!flag) \u53d8\u6210\u6b7b\u5faa\u73af\u3002 \u6d4b\u8bd5\u65b9\u6cd5 \uff1a \u5c1d\u8bd5\u4f7f\u7528\u4e0d\u540c\u7684\u4f18\u5316\u7ea7\u522b\u7f16\u8bd1\u4ee3\u7801\uff1a g++ testvolatile.cpp -o testvolatile -pthread -O0 # \u65e0\u4f18\u5316 g++ testvolatile.cpp -o testvolatile -pthread -O2 # \u9ad8\u4f18\u5316 \u5728\u9ad8\u4f18\u5316\u7ea7\u522b\u4e0b\uff0c\u53bb\u6389 volatile \u53ef\u80fd\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002 3. \u786c\u4ef6\u548c\u5185\u5b58\u6a21\u578b\u7684\u5f71\u54cd \u73b0\u4ee3 CPU \u7684\u7f13\u5b58\u673a\u5236 \uff1a CPU \u53ef\u80fd\u4f1a\u5c06\u53d8\u91cf\u7684\u503c\u7f13\u5b58\u5230\u5bc4\u5b58\u5668\u6216 CPU \u7f13\u5b58\u4e2d\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u90fd\u4ece\u4e3b\u5185\u5b58\u8bfb\u53d6\u3002 \u5982\u679c\u6ca1\u6709 volatile \uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4e0d\u4f1a\u5f3a\u5236\u5237\u65b0\u7f13\u5b58\uff0c\u5bfc\u81f4\u7ebf\u7a0b\u65e0\u6cd5\u770b\u5230\u53d8\u91cf\u7684\u6700\u65b0\u503c\u3002 \u5185\u5b58\u4e00\u81f4\u6027\u6a21\u578b \uff1a \u4e0d\u540c\u7684\u786c\u4ef6\u67b6\u6784\u53ef\u80fd\u5bf9\u5185\u5b58\u8bbf\u95ee\u7684\u987a\u5e8f\u548c\u4e00\u81f4\u6027\u6709\u4e0d\u540c\u7684\u4fdd\u8bc1\u3002 \u5728\u67d0\u4e9b\u67b6\u6784\u4e0a\uff0c\u5373\u4f7f\u6ca1\u6709 volatile \uff0c\u5185\u5b58\u8bbf\u95ee\u53ef\u80fd\u4ecd\u7136\u662f\u53ef\u89c1\u7684\u3002 4. \u591a\u7ebf\u7a0b\u7684\u5185\u5b58\u53ef\u89c1\u6027 volatile \u548c\u591a\u7ebf\u7a0b \uff1a volatile \u4ec5\u4fdd\u8bc1\u53d8\u91cf\u7684\u503c\u6bcf\u6b21\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\uff0c\u4f46\u5b83 \u4e0d\u4fdd\u8bc1\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5185\u5b58\u53ef\u89c1\u6027 \u3002 \u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5185\u5b58\u53ef\u89c1\u6027\u901a\u5e38\u9700\u8981\u4f7f\u7528\u540c\u6b65\u673a\u5236\uff08\u5982 std::atomic \u6216 std::mutex \uff09\u3002 \u6539\u8fdb\u4ee3\u7801\uff1a\u4f7f\u7528 std::atomic std::atomic \u662f C++ \u63d0\u4f9b\u7684\u7ebf\u7a0b\u5b89\u5168\u53d8\u91cf\uff0c\u53ef\u4ee5\u786e\u4fdd\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5185\u5b58\u53ef\u89c1\u6027\uff1a #include <iostream> #include <thread> #include <chrono> #include <atomic> using namespace std ; atomic < bool > flag ( false ); // \u4f7f\u7528 std::atomic \u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168 void writerThread () { this_thread :: sleep_for ( chrono :: seconds ( 3 )); flag = true ; cout << \"Writer thread: flag set to true\" << endl ; } void readerThread () { cout << \"Reader thread: waiting for flag...\" << endl ; while ( ! flag ) { // std::atomic \u786e\u4fdd\u5185\u5b58\u53ef\u89c1\u6027 } cout << \"Reader thread: detected flag is true\" << endl ; } int main () { thread t1 ( writerThread ); thread t2 ( readerThread ); t1 . join (); t2 . join (); return 0 ; } 5. \u4e3a\u4ec0\u4e48\u53bb\u6389 volatile \u4ecd\u7136\u8fd0\u884c\u6b63\u5e38\uff1f \u53ef\u80fd\u7684\u539f\u56e0 \uff1a \u7f16\u8bd1\u5668\u6ca1\u6709\u4f18\u5316 \uff1a \u5982\u679c\u7f16\u8bd1\u5668\u6ca1\u6709\u5bf9 flag \u7684\u8bbf\u95ee\u8fdb\u884c\u4f18\u5316\uff08\u4f8b\u5982\u5728 -O0 \u4f18\u5316\u7ea7\u522b\u4e0b\uff09\uff0c\u7a0b\u5e8f\u4f1a\u6b63\u5e38\u8fd0\u884c\u3002 \u786c\u4ef6\u4fdd\u8bc1 \uff1a \u5728\u67d0\u4e9b\u786c\u4ef6\u67b6\u6784\u4e0a\uff0c\u5185\u5b58\u8bbf\u95ee\u53ef\u80fd\u9ed8\u8ba4\u662f\u53ef\u89c1\u7684\uff0c\u5373\u4f7f\u6ca1\u6709 volatile \u3002 \u8fd0\u884c\u73af\u5883 \uff1a \u7a0b\u5e8f\u7684\u8fd0\u884c\u73af\u5883\uff08\u5982\u64cd\u4f5c\u7cfb\u7edf\u548c\u7ebf\u7a0b\u8c03\u5ea6\u5668\uff09\u53ef\u80fd\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u786e\u4fdd\u4e86\u5185\u5b58\u7684\u53ef\u89c1\u6027\u3002 6. \u603b\u7ed3 volatile \u7684\u4f5c\u7528 \uff1a \u9632\u6b62\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u786e\u4fdd\u6bcf\u6b21\u8bbf\u95ee\u53d8\u91cf\u65f6\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u3002 \u53bb\u6389 volatile \u7684\u5f71\u54cd \uff1a \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff08\u5982\u65e0\u4f18\u5316\u6216\u7279\u5b9a\u786c\u4ef6\u73af\u5883\uff09\uff0c\u5373\u4f7f\u53bb\u6389 volatile \uff0c\u7a0b\u5e8f\u4ecd\u7136\u53ef\u80fd\u6b63\u5e38\u8fd0\u884c\u3002 \u63a8\u8350\u505a\u6cd5 \uff1a \u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u4f7f\u7528 std::atomic \u6216\u540c\u6b65\u673a\u5236\uff08\u5982 std::mutex \uff09\u6765\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\u548c\u5185\u5b58\u53ef\u89c1\u6027\uff0c\u800c\u4e0d\u662f\u4ec5\u4f9d\u8d56 volatile \u3002 \u89c2\u5bdf\u5230\u6b7b\u5faa\u73af,\u4f46\u662f\u5728\u6700\u9ad8\u7ea7\u522b\u7f16\u8bd1\u4f18\u5316\u4ecd\u6ca1\u6709\u4ea7\u751f\uff0c\u9700\u8981\u52a0\u4e0a\u6c47\u7f16\u6307\u4ee4 \u8981\u5f3a\u5236\u7f16\u8bd1\u5668\u4f18\u5316\u5e76\u89c2\u5bdf\u7a0b\u5e8f\u662f\u5426\u4f1a\u8fdb\u5165\u6b7b\u5faa\u73af\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u8fdb\u884c\u6d4b\u8bd5\uff1a 1. \u4f7f\u7528\u6700\u9ad8\u4f18\u5316\u7b49\u7ea7 \u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7b49\u7ea7\u4f1a\u663e\u8457\u5f71\u54cd\u4ee3\u7801\u7684\u884c\u4e3a\u3002\u901a\u8fc7\u8bbe\u7f6e\u6700\u9ad8\u4f18\u5316\u7b49\u7ea7\uff08\u5982 -O3 \uff09\uff0c\u53ef\u4ee5\u5f3a\u5236\u7f16\u8bd1\u5668\u5bf9\u4ee3\u7801\u8fdb\u884c\u6fc0\u8fdb\u4f18\u5316\u3002 \u7f16\u8bd1\u547d\u4ee4 g++ testvolatile.cpp -o testvolatile -pthread -O3 \u89e3\u91ca -O3 \uff1a\u542f\u7528\u6700\u9ad8\u7ea7\u522b\u7684\u4f18\u5316\uff0c\u5305\u62ec\u5faa\u73af\u5c55\u5f00\u3001\u5185\u8054\u51fd\u6570\u7b49\u3002 -pthread \uff1a\u94fe\u63a5\u7ebf\u7a0b\u5e93\uff0c\u786e\u4fdd\u591a\u7ebf\u7a0b\u652f\u6301\u3002 2. \u6dfb\u52a0\u7a7a\u6c47\u7f16\u6307\u4ee4 \u4e3a\u4e86\u8fdb\u4e00\u6b65\u63d0\u793a\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u53ef\u4ee5\u5728 readerThread \u7684\u5faa\u73af\u4e2d\u63d2\u5165\u7a7a\u6c47\u7f16\u6307\u4ee4\uff0c\u9632\u6b62\u7f16\u8bd1\u5668\u63d2\u5165\u5185\u5b58\u5c4f\u969c\u3002 \u4fee\u6539\u4ee3\u7801 void readerThread () { cout << \"Reader thread: waiting for flag...\" << endl ; while ( ! flag ) { asm ( \"\" ); // \u7a7a\u6c47\u7f16\u6307\u4ee4\uff0c\u63d0\u793a\u7f16\u8bd1\u5668\u4f18\u5316 } cout << \"Reader thread: detected flag is true\" << endl ; } \u4f5c\u7528 asm(\"\") \u662f\u4e00\u4e2a\u7a7a\u7684\u6c47\u7f16\u6307\u4ee4\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u8fd9\u91cc\u6ca1\u6709\u526f\u4f5c\u7528\uff0c\u5141\u8bb8\u5bf9\u5faa\u73af\u8fdb\u884c\u4f18\u5316\u3002 3. \u6d4b\u8bd5\u4e0d\u540c\u7684\u786c\u4ef6\u73af\u5883 \u5728\u591a\u6838 CPU \u6216\u5177\u6709\u590d\u6742\u7f13\u5b58\u673a\u5236\u7684\u786c\u4ef6\u4e0a\uff0c\u53bb\u6389 volatile \u540e\u66f4\u5bb9\u6613\u89c2\u5bdf\u5230\u6b7b\u5faa\u73af\u7684\u73b0\u8c61\u3002 \u539f\u56e0 \u591a\u6838 CPU \u7684\u7f13\u5b58\u4e00\u81f4\u6027\u6a21\u578b\u53ef\u80fd\u5bfc\u81f4\u4e00\u4e2a\u7ebf\u7a0b\u65e0\u6cd5\u770b\u5230\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u53d8\u91cf\u7684\u4fee\u6539\u3002 4. \u4f7f\u7528 -fstrict-aliasing \u548c -fno-strict-aliasing \u7f16\u8bd1\u5668\u7684\u522b\u540d\u5206\u6790\u4f18\u5316\u53ef\u80fd\u4f1a\u5f71\u54cd\u4ee3\u7801\u884c\u4e3a\u3002\u53ef\u4ee5\u5c1d\u8bd5\u542f\u7528\u6216\u7981\u7528\u522b\u540d\u4f18\u5316\u3002 \u542f\u7528\u522b\u540d\u4f18\u5316 g++ testvolatile.cpp -o testvolatile -pthread -O3 -fstrict-aliasing \u7981\u7528\u522b\u540d\u4f18\u5316 g++ testvolatile.cpp -o testvolatile -pthread -O3 -fno-strict-aliasing 5. \u89c2\u5bdf\u6b7b\u5faa\u73af\u73b0\u8c61 \u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u89c2\u5bdf\u8f93\u51fa\uff1a ./testvolatile \u9884\u671f\u7ed3\u679c \u5982\u679c\u7f16\u8bd1\u5668\u4f18\u5316\u4e86 while (!flag) \uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u8fdb\u5165\u6b7b\u5faa\u73af\uff0c readerThread \u65e0\u6cd5\u68c0\u6d4b\u5230 flag \u7684\u53d8\u5316\u3002 \u5982\u679c\u6ca1\u6709\u4f18\u5316\uff0c\u7a0b\u5e8f\u4f1a\u6b63\u5e38\u9000\u51fa\u3002 6. \u63a8\u8350\u7684\u89e3\u51b3\u65b9\u6848 \u5982\u679c\u89c2\u5bdf\u5230\u6b7b\u5faa\u73af\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u89e3\u51b3\u95ee\u9898\uff1a \u4f7f\u7528 volatile volatile bool flag = false ; \u4f7f\u7528 std::atomic #include <atomic> atomic < bool > flag ( false ); \u4f7f\u7528\u540c\u6b65\u673a\u5236 #include <mutex> mutex mtx ; bool flag = false ; void writerThread () { this_thread :: sleep_for ( chrono :: seconds ( 3 )); lock_guard < mutex > lock ( mtx ); flag = true ; cout << \"Writer thread: flag set to true\" << endl ; } void readerThread () { cout << \"Reader thread: waiting for flag...\" << endl ; while ( true ) { lock_guard < mutex > lock ( mtx ); if ( flag ) break ; } cout << \"Reader thread: detected flag is true\" << endl ; } \u603b\u7ed3 \u5f3a\u5236\u4f18\u5316 \uff1a\u4f7f\u7528 -O3 \u7f16\u8bd1\uff0c\u5e76\u5728\u5faa\u73af\u4e2d\u63d2\u5165\u7a7a\u6c47\u7f16\u6307\u4ee4\u3002 \u89c2\u5bdf\u73b0\u8c61 \uff1a\u5728\u9ad8\u4f18\u5316\u7ea7\u522b\u4e0b\uff0c\u53bb\u6389 volatile \u540e\uff0c\u7a0b\u5e8f\u53ef\u80fd\u8fdb\u5165\u6b7b\u5faa\u73af\u3002 \u89e3\u51b3\u65b9\u6cd5 \uff1a\u4f7f\u7528 volatile \u3001 std::atomic \u6216\u540c\u6b65\u673a\u5236\uff08\u5982 std::mutex \uff09\u6765\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\u548c\u5185\u5b58\u53ef\u89c1\u6027\u3002","title":"volatile\u4f5c\u7528\u6d4b\u8bd5"},{"location":"C%2B%2B/volatile/#_1","text":"#include <iostream> #include <thread> #include <chrono> using namespace std ; // \u5b9a\u4e49\u4e00\u4e2a\u5171\u4eab\u53d8\u91cf volatile bool flag = false ; // \u4f7f\u7528 volatile \u9632\u6b62\u7f16\u8bd1\u5668\u4f18\u5316 //\u8981\u60f3\u89c2\u5bdf\u5230\u7f16\u8bd1\u5668\u4f18\u5316\u5bfc\u81f4\u7684\u6b7b\u5faa\u73af\uff0c\u9700\u8981\u53bb\u6389volatile\uff0c\u5e76\u4e14\u5728reader\u7ebf\u7a0b\u52a0\u4e0a\u7a7a\u6c47\u7f16\u6307\u4ee4 void writerThread () { // \u6a21\u62df\u4e00\u4e9b\u5de5\u4f5c this_thread :: sleep_for ( chrono :: seconds ( 2 )); flag = true ; // \u4fee\u6539\u5171\u4eab\u53d8\u91cf cout << \"Writer thread: flag set to true\" << endl ; } void readerThread () { cout << \"Reader thread: waiting for flag...\" << endl ; while ( ! flag ) { asm ( \"\" ); // \u7a7a\u6c47\u7f16\u6307\u4ee4\uff0c\u63d0\u793a\u7f16\u8bd1\u5668\u4f18\u5316,\u4e0d\u52a0\u4e0a\u8fd9\u4e2a\u5373\u4f7f\u53bb\u6389volatile\u4e5f\u4e0d\u4f1a\u4f18\u5316\u4e3a\u6b7b\u5faa\u73af // \u5982\u679c\u6ca1\u6709 volatile\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f18\u5316\u4e3a\u6b7b\u5faa\u73af } cout << \"Reader thread: detected flag is true\" << endl ; } int main () { // \u521b\u5efa\u4e24\u4e2a\u7ebf\u7a0b thread t1 ( writerThread ); thread t2 ( readerThread ); // \u7b49\u5f85\u7ebf\u7a0b\u5b8c\u6210 t1 . join (); t2 . join (); return 0 ; }","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"C%2B%2B/volatile/#_2","text":"\u5171\u4eab\u53d8\u91cf flag \uff1a \u88ab\u58f0\u660e\u4e3a volatile \uff0c\u8868\u793a\u5b83\u7684\u503c\u53ef\u80fd\u4f1a\u88ab\u5176\u4ed6\u7ebf\u7a0b\u4fee\u6539\u3002 \u5982\u679c\u6ca1\u6709 volatile \uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u4f18\u5316 while (!flag) \u4e3a\u4e00\u4e2a\u6b7b\u5faa\u73af\uff0c\u56e0\u4e3a\u5b83\u5047\u8bbe flag \u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539\u3002 \u7ebf\u7a0b writerThread \uff1a \u6a21\u62df\u4e00\u4e9b\u5de5\u4f5c\u540e\uff0c\u5c06 flag \u8bbe\u7f6e\u4e3a true \u3002 \u7ebf\u7a0b readerThread \uff1a \u4e0d\u65ad\u68c0\u67e5 flag \u7684\u503c\uff0c\u76f4\u5230\u68c0\u6d4b\u5230 flag \u88ab\u8bbe\u7f6e\u4e3a true \u3002 volatile \u7684\u4f5c\u7528 \uff1a \u786e\u4fdd readerThread \u6bcf\u6b21\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6 flag \u7684\u6700\u65b0\u503c\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u7f13\u5b58\u7684\u503c\u3002","title":"\u7a0b\u5e8f\u8bf4\u660e"},{"location":"C%2B%2B/volatile/#_3","text":"","title":"\u8fd0\u884c\u7ed3\u679c"},{"location":"C%2B%2B/volatile/#_4","text":"Reader thread: waiting for flag... Writer thread: flag set to true Reader thread: detected flag is true","title":"\u8f93\u51fa\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/volatile/#_5","text":"\u4f7f\u7528 volatile \uff1a \u6309\u7167\u4e0a\u8ff0\u4ee3\u7801\u8fd0\u884c\uff0c\u7a0b\u5e8f\u4f1a\u6b63\u5e38\u9000\u51fa\u3002 \u53bb\u6389 volatile \uff1a \u5c06 volatile \u53bb\u6389\u540e\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u4f18\u5316 while (!flag) \u4e3a\u6b7b\u5faa\u73af\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u65e0\u6cd5\u9000\u51fa\u3002","title":"\u6d4b\u8bd5\u65b9\u6cd5"},{"location":"C%2B%2B/volatile/#_6","text":"volatile \u4ec5\u9632\u6b62\u4f18\u5316 \uff1a \u5b83\u786e\u4fdd\u6bcf\u6b21\u8bbf\u95ee\u53d8\u91cf\u65f6\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\uff0c\u4f46\u4e0d\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u3002 \u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u4fee\u6539\u53d8\u91cf\uff0c\u4ecd\u7136\u9700\u8981\u4f7f\u7528\u540c\u6b65\u673a\u5236\uff08\u5982 std::mutex \uff09\u6765\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\u3002 \u9002\u7528\u573a\u666f \uff1a volatile \u9002\u7528\u4e8e\u7b80\u5355\u7684\u6807\u5fd7\u53d8\u91cf\uff0c\u4f46\u5bf9\u4e8e\u590d\u6742\u7684\u591a\u7ebf\u7a0b\u64cd\u4f5c\uff0c\u5efa\u8bae\u4f7f\u7528\u66f4\u9ad8\u7ea7\u7684\u540c\u6b65\u673a\u5236\uff08\u5982 std::atomic \u6216 std::mutex \uff09\u3002 \u76f4\u63a5\u7f16\u8bd1\u4e0d\u52a0\u53c2\u6570\u4f1a\u62a5\u9519 \u8fd9\u4e2a\u9519\u8bef\u662f\u56e0\u4e3a\u4f60\u7684\u7a0b\u5e8f\u4f7f\u7528\u4e86\u591a\u7ebf\u7a0b\uff08 std::thread \uff09\uff0c\u4f46\u5728\u94fe\u63a5\u9636\u6bb5\u6ca1\u6709\u94fe\u63a5\u5230 pthread \u5e93\u3002C++ \u7684\u6807\u51c6\u7ebf\u7a0b\u5e93\uff08 std::thread \uff09\u5728\u5e95\u5c42\u4f9d\u8d56\u4e8e POSIX \u7ebf\u7a0b\u5e93\uff08 pthread \uff09\uff0c\u6240\u4ee5\u9700\u8981\u663e\u5f0f\u5730\u94fe\u63a5 pthread \u5e93\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/volatile/#_7","text":"\u5728\u7f16\u8bd1\u65f6\u6dfb\u52a0 -pthread \u9009\u9879\uff1a g++ testvolatile.cpp -o testvolatile -pthread","title":"\u89e3\u51b3\u65b9\u6cd5"},{"location":"C%2B%2B/volatile/#_8","text":"\u9519\u8bef\u539f\u56e0 \uff1a std::thread \u7684\u5b9e\u73b0\u4f9d\u8d56\u4e8e pthread \u5e93\u3002 \u5982\u679c\u6ca1\u6709\u94fe\u63a5 pthread \u5e93\uff0c\u94fe\u63a5\u5668\u4f1a\u62a5 undefined reference to 'pthread_create' \u9519\u8bef\u3002 -pthread \u7684\u4f5c\u7528 \uff1a \u544a\u8bc9\u7f16\u8bd1\u5668\u548c\u94fe\u63a5\u5668\u4f7f\u7528 POSIX \u7ebf\u7a0b\u5e93\u3002 \u7f16\u8bd1\u5668\u4f1a\u542f\u7528\u7ebf\u7a0b\u5b89\u5168\u7684\u9009\u9879\uff0c\u94fe\u63a5\u5668\u4f1a\u5c06\u7a0b\u5e8f\u94fe\u63a5\u5230 pthread \u5e93\u3002","title":"\u89e3\u91ca"},{"location":"C%2B%2B/volatile/#_9","text":"g++ testvolatile.cpp -o testvolatile -pthread","title":"\u5b8c\u6574\u7f16\u8bd1\u547d\u4ee4"},{"location":"C%2B%2B/volatile/#_10","text":"\u7f16\u8bd1\u6210\u529f\u540e\uff0c\u8fd0\u884c\u7a0b\u5e8f\uff1a ./testvolatile \u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u7c7b\u4f3c\u4ee5\u4e0b\u7684\u8f93\u51fa\uff1a Reader thread: waiting for flag... Writer thread: flag set to true Reader thread: detected flag is true","title":"\u8fd0\u884c\u7a0b\u5e8f"},{"location":"C%2B%2B/volatile/#_11","text":"\u9519\u8bef\u7684\u539f\u56e0\u662f\u6ca1\u6709\u94fe\u63a5 pthread \u5e93\u3002 \u89e3\u51b3\u65b9\u6cd5\u662f\u5728\u7f16\u8bd1\u65f6\u6dfb\u52a0 -pthread \u9009\u9879\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/volatile/#thread","text":"\u5728 C++ \u4e2d\uff0c std::thread \u662f C++11 \u6807\u51c6\u5f15\u5165\u7684\u591a\u7ebf\u7a0b\u5e93\uff0c\u7528\u4e8e\u521b\u5efa\u548c\u7ba1\u7406\u7ebf\u7a0b\u3002\u7ebf\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u5141\u8bb8\u7a0b\u5e8f\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4efb\u52a1\uff08\u5e76\u53d1\u6267\u884c\uff09\u3002","title":"thread \u7684\u4f5c\u7528"},{"location":"C%2B%2B/volatile/#thread_1","text":"\u82f1\u6587 \uff1a thread \u4e2d\u6587 \uff1a\u7ebf\u7a0b \u542b\u4e49 \uff1a \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u72ec\u7acb\u8c03\u5ea6\u548c\u6267\u884c\u7684\u6700\u5c0f\u5355\u4f4d\u3002 \u4e00\u4e2a\u7ebf\u7a0b\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u8fdb\u7a0b\uff0c\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u8d44\u6e90\uff08\u5982\u5185\u5b58\u3001\u6587\u4ef6\u53e5\u67c4\u7b49\uff09\u3002","title":"thread \u7684\u82f1\u6587\u542b\u4e49"},{"location":"C%2B%2B/volatile/#stdthread","text":"\u521b\u5efa\u7ebf\u7a0b \uff1a \u4f7f\u7528 std::thread \u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff0c\u5e76\u6307\u5b9a\u7ebf\u7a0b\u8981\u6267\u884c\u7684\u4efb\u52a1\u3002 \u6bcf\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u4e00\u6bb5\u4ee3\u7801\u3002 \u5e76\u53d1\u6267\u884c \uff1a \u4e3b\u7ebf\u7a0b\u548c\u65b0\u521b\u5efa\u7684\u7ebf\u7a0b\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\uff0c\u4ece\u800c\u5b9e\u73b0\u5e76\u53d1\u6267\u884c\u3002 \u7ebf\u7a0b\u7ba1\u7406 \uff1a \u63d0\u4f9b\u4e86\u7ebf\u7a0b\u7684\u542f\u52a8\u3001\u7b49\u5f85\uff08 join \uff09\u3001\u5206\u79bb\uff08 detach \uff09\u7b49\u529f\u80fd\u3002","title":"std::thread \u7684\u4f5c\u7528"},{"location":"C%2B%2B/volatile/#_12","text":"#include <iostream> #include <thread> using namespace std ; void task () { cout << \"Thread is running!\" << endl ; } int main () { thread t ( task ); // \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6267\u884c task \u51fd\u6570 t . join (); // \u7b49\u5f85\u7ebf\u7a0b\u5b8c\u6210 cout << \"Main thread is done!\" << endl ; return 0 ; }","title":"\u793a\u4f8b\uff1a\u521b\u5efa\u7ebf\u7a0b"},{"location":"C%2B%2B/volatile/#_13","text":"Thread is running! Main thread is done!","title":"\u8f93\u51fa\uff1a"},{"location":"C%2B%2B/volatile/#_14","text":"\u521b\u5efa\u7ebf\u7a0b \uff1a \u4f7f\u7528 std::thread \u521b\u5efa\u7ebf\u7a0b\uff0c\u5e76\u6307\u5b9a\u7ebf\u7a0b\u8981\u6267\u884c\u7684\u51fd\u6570\u6216\u4ee3\u7801\u3002 \u7b49\u5f85\u7ebf\u7a0b\u5b8c\u6210 \uff1a \u4f7f\u7528 join() \u7b49\u5f85\u7ebf\u7a0b\u5b8c\u6210\uff0c\u4e3b\u7ebf\u7a0b\u4f1a\u963b\u585e\u76f4\u5230\u5b50\u7ebf\u7a0b\u7ed3\u675f\u3002 \u5206\u79bb\u7ebf\u7a0b \uff1a \u4f7f\u7528 detach() \u5c06\u7ebf\u7a0b\u4e0e\u4e3b\u7ebf\u7a0b\u5206\u79bb\uff0c\u7ebf\u7a0b\u4f1a\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u518d\u7b49\u5f85\u5b83\u3002 \u4f20\u9012\u53c2\u6570 \uff1a \u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u51fd\u6570\u5411\u7ebf\u7a0b\u4f20\u9012\u53c2\u6570\u3002","title":"\u7ebf\u7a0b\u7684\u57fa\u672c\u64cd\u4f5c"},{"location":"C%2B%2B/volatile/#_15","text":"\u5e76\u53d1\u6267\u884c \uff1a\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u3002 \u8d44\u6e90\u5171\u4eab \uff1a\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u8d44\u6e90\u3002","title":"\u7ebf\u7a0b\u7684\u4f18\u70b9"},{"location":"C%2B%2B/volatile/#_16","text":"\u7ebf\u7a0b\u5b89\u5168 \uff1a \u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u540c\u6b65\u673a\u5236\uff08\u5982 std::mutex \uff09\u6765\u907f\u514d\u6570\u636e\u7ade\u4e89\u3002 \u7ebf\u7a0b\u751f\u547d\u5468\u671f \uff1a \u5fc5\u987b\u5728\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u524d\u786e\u4fdd\u6240\u6709\u7ebf\u7a0b\u5b8c\u6210\u6216\u5206\u79bb\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002","title":"\u7ebf\u7a0b\u7684\u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/volatile/#_17","text":"thread \u7684\u542b\u4e49 \uff1a\u7ebf\u7a0b\uff0c\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u57fa\u672c\u5355\u4f4d\u3002 std::thread \u7684\u4f5c\u7528 \uff1a\u7528\u4e8e\u521b\u5efa\u548c\u7ba1\u7406\u7ebf\u7a0b\uff0c\u5b9e\u73b0\u5e76\u53d1\u6267\u884c\u3002 \u7ebf\u7a0b\u7684\u4f7f\u7528 \uff1a\u901a\u8fc7 std::thread \u521b\u5efa\u7ebf\u7a0b\uff0c\u5e76\u4f7f\u7528 join \u6216 detach \u7ba1\u7406\u7ebf\u7a0b\u7684\u751f\u547d\u5468\u671f\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/volatile/#volatile","text":"\u5373\u4f7f\u53bb\u6389\u4e86 volatile \uff0c\u7a0b\u5e8f\u4ecd\u7136\u53ef\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u8fd9\u662f\u56e0\u4e3a\u7a0b\u5e8f\u7684\u884c\u4e3a\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u4ee3\u7801\uff0c\u8fd8\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7b56\u7565\u548c\u8fd0\u884c\u73af\u5883\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u539f\u56e0\u5206\u6790\uff1a","title":"\u6211\u6d4b\u8bd5\u53bb\u6389volatile\u5173\u952e\u5b57\u8fd8\u662f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u5e94\u8be5\u662f\u7f16\u8bd1\u65f6\u6ca1\u6709\u9009\u62e9\u4f18\u5316\u5bfc\u81f4"},{"location":"C%2B%2B/volatile/#1","text":"volatile \u7684\u4f5c\u7528 \uff1a volatile \u544a\u8bc9\u7f16\u8bd1\u5668\u4e0d\u8981\u5bf9\u53d8\u91cf\u7684\u8bbf\u95ee\u8fdb\u884c\u4f18\u5316\uff0c\u6bcf\u6b21\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u53d8\u91cf\u7684\u503c\u3002 \u53bb\u6389 volatile \u540e\u7684\u60c5\u51b5 \uff1a \u5982\u679c\u7f16\u8bd1\u5668\u6ca1\u6709\u5bf9 flag \u7684\u8bbf\u95ee\u8fdb\u884c\u4f18\u5316\uff08\u4f8b\u5982\u6ca1\u6709\u5c06\u5176\u7f13\u5b58\u5230\u5bc4\u5b58\u5668\u4e2d\uff09\uff0c\u7a0b\u5e8f\u4ecd\u7136\u4f1a\u6b63\u5e38\u8fd0\u884c\u3002 \u5728\u67d0\u4e9b\u7f16\u8bd1\u5668\u6216\u4f18\u5316\u7ea7\u522b\u4e0b\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u9ed8\u8ba4\u6bcf\u6b21\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6 flag \u7684\u503c\uff0c\u5373\u4f7f\u6ca1\u6709 volatile \u3002","title":"1. \u7f16\u8bd1\u5668\u4f18\u5316\u7684\u884c\u4e3a"},{"location":"C%2B%2B/volatile/#2","text":"\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7ea7\u522b\u4f1a\u5f71\u54cd\u4ee3\u7801\u7684\u884c\u4e3a\uff1a \u65e0\u4f18\u5316\uff08 -O0 \uff09 \uff1a \u5728\u65e0\u4f18\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5668\u901a\u5e38\u4e0d\u4f1a\u5bf9\u53d8\u91cf\u7684\u8bbf\u95ee\u8fdb\u884c\u4f18\u5316\uff0c\u56e0\u6b64\u6bcf\u6b21\u90fd\u4f1a\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u53d8\u91cf\u7684\u503c\u3002 \u8fd9\u53ef\u80fd\u662f\u4f60\u5f53\u524d\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u7684\u539f\u56e0\u3002 \u6709\u4f18\u5316\uff08 -O1 \u3001 -O2 \u3001 -O3 \uff09 \uff1a \u5728\u9ad8\u4f18\u5316\u7ea7\u522b\u4e0b\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u5c06 flag \u7f13\u5b58\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u4ece\u800c\u5bfc\u81f4 readerThread \u4e2d\u7684 while (!flag) \u53d8\u6210\u6b7b\u5faa\u73af\u3002","title":"2. \u7f16\u8bd1\u5668\u4f18\u5316\u7ea7\u522b\u7684\u5f71\u54cd"},{"location":"C%2B%2B/volatile/#_18","text":"\u5c1d\u8bd5\u4f7f\u7528\u4e0d\u540c\u7684\u4f18\u5316\u7ea7\u522b\u7f16\u8bd1\u4ee3\u7801\uff1a g++ testvolatile.cpp -o testvolatile -pthread -O0 # \u65e0\u4f18\u5316 g++ testvolatile.cpp -o testvolatile -pthread -O2 # \u9ad8\u4f18\u5316 \u5728\u9ad8\u4f18\u5316\u7ea7\u522b\u4e0b\uff0c\u53bb\u6389 volatile \u53ef\u80fd\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002","title":"\u6d4b\u8bd5\u65b9\u6cd5\uff1a"},{"location":"C%2B%2B/volatile/#3","text":"\u73b0\u4ee3 CPU \u7684\u7f13\u5b58\u673a\u5236 \uff1a CPU \u53ef\u80fd\u4f1a\u5c06\u53d8\u91cf\u7684\u503c\u7f13\u5b58\u5230\u5bc4\u5b58\u5668\u6216 CPU \u7f13\u5b58\u4e2d\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u90fd\u4ece\u4e3b\u5185\u5b58\u8bfb\u53d6\u3002 \u5982\u679c\u6ca1\u6709 volatile \uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4e0d\u4f1a\u5f3a\u5236\u5237\u65b0\u7f13\u5b58\uff0c\u5bfc\u81f4\u7ebf\u7a0b\u65e0\u6cd5\u770b\u5230\u53d8\u91cf\u7684\u6700\u65b0\u503c\u3002 \u5185\u5b58\u4e00\u81f4\u6027\u6a21\u578b \uff1a \u4e0d\u540c\u7684\u786c\u4ef6\u67b6\u6784\u53ef\u80fd\u5bf9\u5185\u5b58\u8bbf\u95ee\u7684\u987a\u5e8f\u548c\u4e00\u81f4\u6027\u6709\u4e0d\u540c\u7684\u4fdd\u8bc1\u3002 \u5728\u67d0\u4e9b\u67b6\u6784\u4e0a\uff0c\u5373\u4f7f\u6ca1\u6709 volatile \uff0c\u5185\u5b58\u8bbf\u95ee\u53ef\u80fd\u4ecd\u7136\u662f\u53ef\u89c1\u7684\u3002","title":"3. \u786c\u4ef6\u548c\u5185\u5b58\u6a21\u578b\u7684\u5f71\u54cd"},{"location":"C%2B%2B/volatile/#4","text":"volatile \u548c\u591a\u7ebf\u7a0b \uff1a volatile \u4ec5\u4fdd\u8bc1\u53d8\u91cf\u7684\u503c\u6bcf\u6b21\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\uff0c\u4f46\u5b83 \u4e0d\u4fdd\u8bc1\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5185\u5b58\u53ef\u89c1\u6027 \u3002 \u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5185\u5b58\u53ef\u89c1\u6027\u901a\u5e38\u9700\u8981\u4f7f\u7528\u540c\u6b65\u673a\u5236\uff08\u5982 std::atomic \u6216 std::mutex \uff09\u3002","title":"4. \u591a\u7ebf\u7a0b\u7684\u5185\u5b58\u53ef\u89c1\u6027"},{"location":"C%2B%2B/volatile/#stdatomic","text":"std::atomic \u662f C++ \u63d0\u4f9b\u7684\u7ebf\u7a0b\u5b89\u5168\u53d8\u91cf\uff0c\u53ef\u4ee5\u786e\u4fdd\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5185\u5b58\u53ef\u89c1\u6027\uff1a #include <iostream> #include <thread> #include <chrono> #include <atomic> using namespace std ; atomic < bool > flag ( false ); // \u4f7f\u7528 std::atomic \u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168 void writerThread () { this_thread :: sleep_for ( chrono :: seconds ( 3 )); flag = true ; cout << \"Writer thread: flag set to true\" << endl ; } void readerThread () { cout << \"Reader thread: waiting for flag...\" << endl ; while ( ! flag ) { // std::atomic \u786e\u4fdd\u5185\u5b58\u53ef\u89c1\u6027 } cout << \"Reader thread: detected flag is true\" << endl ; } int main () { thread t1 ( writerThread ); thread t2 ( readerThread ); t1 . join (); t2 . join (); return 0 ; }","title":"\u6539\u8fdb\u4ee3\u7801\uff1a\u4f7f\u7528 std::atomic"},{"location":"C%2B%2B/volatile/#5-volatile","text":"\u53ef\u80fd\u7684\u539f\u56e0 \uff1a \u7f16\u8bd1\u5668\u6ca1\u6709\u4f18\u5316 \uff1a \u5982\u679c\u7f16\u8bd1\u5668\u6ca1\u6709\u5bf9 flag \u7684\u8bbf\u95ee\u8fdb\u884c\u4f18\u5316\uff08\u4f8b\u5982\u5728 -O0 \u4f18\u5316\u7ea7\u522b\u4e0b\uff09\uff0c\u7a0b\u5e8f\u4f1a\u6b63\u5e38\u8fd0\u884c\u3002 \u786c\u4ef6\u4fdd\u8bc1 \uff1a \u5728\u67d0\u4e9b\u786c\u4ef6\u67b6\u6784\u4e0a\uff0c\u5185\u5b58\u8bbf\u95ee\u53ef\u80fd\u9ed8\u8ba4\u662f\u53ef\u89c1\u7684\uff0c\u5373\u4f7f\u6ca1\u6709 volatile \u3002 \u8fd0\u884c\u73af\u5883 \uff1a \u7a0b\u5e8f\u7684\u8fd0\u884c\u73af\u5883\uff08\u5982\u64cd\u4f5c\u7cfb\u7edf\u548c\u7ebf\u7a0b\u8c03\u5ea6\u5668\uff09\u53ef\u80fd\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u786e\u4fdd\u4e86\u5185\u5b58\u7684\u53ef\u89c1\u6027\u3002","title":"5. \u4e3a\u4ec0\u4e48\u53bb\u6389 volatile \u4ecd\u7136\u8fd0\u884c\u6b63\u5e38\uff1f"},{"location":"C%2B%2B/volatile/#6","text":"volatile \u7684\u4f5c\u7528 \uff1a \u9632\u6b62\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u786e\u4fdd\u6bcf\u6b21\u8bbf\u95ee\u53d8\u91cf\u65f6\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u3002 \u53bb\u6389 volatile \u7684\u5f71\u54cd \uff1a \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff08\u5982\u65e0\u4f18\u5316\u6216\u7279\u5b9a\u786c\u4ef6\u73af\u5883\uff09\uff0c\u5373\u4f7f\u53bb\u6389 volatile \uff0c\u7a0b\u5e8f\u4ecd\u7136\u53ef\u80fd\u6b63\u5e38\u8fd0\u884c\u3002 \u63a8\u8350\u505a\u6cd5 \uff1a \u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u4f7f\u7528 std::atomic \u6216\u540c\u6b65\u673a\u5236\uff08\u5982 std::mutex \uff09\u6765\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\u548c\u5185\u5b58\u53ef\u89c1\u6027\uff0c\u800c\u4e0d\u662f\u4ec5\u4f9d\u8d56 volatile \u3002 \u89c2\u5bdf\u5230\u6b7b\u5faa\u73af,\u4f46\u662f\u5728\u6700\u9ad8\u7ea7\u522b\u7f16\u8bd1\u4f18\u5316\u4ecd\u6ca1\u6709\u4ea7\u751f\uff0c\u9700\u8981\u52a0\u4e0a\u6c47\u7f16\u6307\u4ee4 \u8981\u5f3a\u5236\u7f16\u8bd1\u5668\u4f18\u5316\u5e76\u89c2\u5bdf\u7a0b\u5e8f\u662f\u5426\u4f1a\u8fdb\u5165\u6b7b\u5faa\u73af\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u8fdb\u884c\u6d4b\u8bd5\uff1a","title":"6. \u603b\u7ed3"},{"location":"C%2B%2B/volatile/#1_1","text":"\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7b49\u7ea7\u4f1a\u663e\u8457\u5f71\u54cd\u4ee3\u7801\u7684\u884c\u4e3a\u3002\u901a\u8fc7\u8bbe\u7f6e\u6700\u9ad8\u4f18\u5316\u7b49\u7ea7\uff08\u5982 -O3 \uff09\uff0c\u53ef\u4ee5\u5f3a\u5236\u7f16\u8bd1\u5668\u5bf9\u4ee3\u7801\u8fdb\u884c\u6fc0\u8fdb\u4f18\u5316\u3002","title":"1. \u4f7f\u7528\u6700\u9ad8\u4f18\u5316\u7b49\u7ea7"},{"location":"C%2B%2B/volatile/#_19","text":"g++ testvolatile.cpp -o testvolatile -pthread -O3","title":"\u7f16\u8bd1\u547d\u4ee4"},{"location":"C%2B%2B/volatile/#_20","text":"-O3 \uff1a\u542f\u7528\u6700\u9ad8\u7ea7\u522b\u7684\u4f18\u5316\uff0c\u5305\u62ec\u5faa\u73af\u5c55\u5f00\u3001\u5185\u8054\u51fd\u6570\u7b49\u3002 -pthread \uff1a\u94fe\u63a5\u7ebf\u7a0b\u5e93\uff0c\u786e\u4fdd\u591a\u7ebf\u7a0b\u652f\u6301\u3002","title":"\u89e3\u91ca"},{"location":"C%2B%2B/volatile/#2_1","text":"\u4e3a\u4e86\u8fdb\u4e00\u6b65\u63d0\u793a\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u53ef\u4ee5\u5728 readerThread \u7684\u5faa\u73af\u4e2d\u63d2\u5165\u7a7a\u6c47\u7f16\u6307\u4ee4\uff0c\u9632\u6b62\u7f16\u8bd1\u5668\u63d2\u5165\u5185\u5b58\u5c4f\u969c\u3002","title":"2. \u6dfb\u52a0\u7a7a\u6c47\u7f16\u6307\u4ee4"},{"location":"C%2B%2B/volatile/#_21","text":"void readerThread () { cout << \"Reader thread: waiting for flag...\" << endl ; while ( ! flag ) { asm ( \"\" ); // \u7a7a\u6c47\u7f16\u6307\u4ee4\uff0c\u63d0\u793a\u7f16\u8bd1\u5668\u4f18\u5316 } cout << \"Reader thread: detected flag is true\" << endl ; }","title":"\u4fee\u6539\u4ee3\u7801"},{"location":"C%2B%2B/volatile/#_22","text":"asm(\"\") \u662f\u4e00\u4e2a\u7a7a\u7684\u6c47\u7f16\u6307\u4ee4\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u8fd9\u91cc\u6ca1\u6709\u526f\u4f5c\u7528\uff0c\u5141\u8bb8\u5bf9\u5faa\u73af\u8fdb\u884c\u4f18\u5316\u3002","title":"\u4f5c\u7528"},{"location":"C%2B%2B/volatile/#3_1","text":"\u5728\u591a\u6838 CPU \u6216\u5177\u6709\u590d\u6742\u7f13\u5b58\u673a\u5236\u7684\u786c\u4ef6\u4e0a\uff0c\u53bb\u6389 volatile \u540e\u66f4\u5bb9\u6613\u89c2\u5bdf\u5230\u6b7b\u5faa\u73af\u7684\u73b0\u8c61\u3002","title":"3. \u6d4b\u8bd5\u4e0d\u540c\u7684\u786c\u4ef6\u73af\u5883"},{"location":"C%2B%2B/volatile/#_23","text":"\u591a\u6838 CPU \u7684\u7f13\u5b58\u4e00\u81f4\u6027\u6a21\u578b\u53ef\u80fd\u5bfc\u81f4\u4e00\u4e2a\u7ebf\u7a0b\u65e0\u6cd5\u770b\u5230\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u53d8\u91cf\u7684\u4fee\u6539\u3002","title":"\u539f\u56e0"},{"location":"C%2B%2B/volatile/#4-fstrict-aliasing-fno-strict-aliasing","text":"\u7f16\u8bd1\u5668\u7684\u522b\u540d\u5206\u6790\u4f18\u5316\u53ef\u80fd\u4f1a\u5f71\u54cd\u4ee3\u7801\u884c\u4e3a\u3002\u53ef\u4ee5\u5c1d\u8bd5\u542f\u7528\u6216\u7981\u7528\u522b\u540d\u4f18\u5316\u3002","title":"4. \u4f7f\u7528 -fstrict-aliasing \u548c -fno-strict-aliasing"},{"location":"C%2B%2B/volatile/#_24","text":"g++ testvolatile.cpp -o testvolatile -pthread -O3 -fstrict-aliasing","title":"\u542f\u7528\u522b\u540d\u4f18\u5316"},{"location":"C%2B%2B/volatile/#_25","text":"g++ testvolatile.cpp -o testvolatile -pthread -O3 -fno-strict-aliasing","title":"\u7981\u7528\u522b\u540d\u4f18\u5316"},{"location":"C%2B%2B/volatile/#5","text":"\u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u89c2\u5bdf\u8f93\u51fa\uff1a ./testvolatile","title":"5. \u89c2\u5bdf\u6b7b\u5faa\u73af\u73b0\u8c61"},{"location":"C%2B%2B/volatile/#_26","text":"\u5982\u679c\u7f16\u8bd1\u5668\u4f18\u5316\u4e86 while (!flag) \uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u8fdb\u5165\u6b7b\u5faa\u73af\uff0c readerThread \u65e0\u6cd5\u68c0\u6d4b\u5230 flag \u7684\u53d8\u5316\u3002 \u5982\u679c\u6ca1\u6709\u4f18\u5316\uff0c\u7a0b\u5e8f\u4f1a\u6b63\u5e38\u9000\u51fa\u3002","title":"\u9884\u671f\u7ed3\u679c"},{"location":"C%2B%2B/volatile/#6_1","text":"\u5982\u679c\u89c2\u5bdf\u5230\u6b7b\u5faa\u73af\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u89e3\u51b3\u95ee\u9898\uff1a","title":"6. \u63a8\u8350\u7684\u89e3\u51b3\u65b9\u6848"},{"location":"C%2B%2B/volatile/#volatile_1","text":"volatile bool flag = false ;","title":"\u4f7f\u7528 volatile"},{"location":"C%2B%2B/volatile/#stdatomic_1","text":"#include <atomic> atomic < bool > flag ( false );","title":"\u4f7f\u7528 std::atomic"},{"location":"C%2B%2B/volatile/#_27","text":"#include <mutex> mutex mtx ; bool flag = false ; void writerThread () { this_thread :: sleep_for ( chrono :: seconds ( 3 )); lock_guard < mutex > lock ( mtx ); flag = true ; cout << \"Writer thread: flag set to true\" << endl ; } void readerThread () { cout << \"Reader thread: waiting for flag...\" << endl ; while ( true ) { lock_guard < mutex > lock ( mtx ); if ( flag ) break ; } cout << \"Reader thread: detected flag is true\" << endl ; }","title":"\u4f7f\u7528\u540c\u6b65\u673a\u5236"},{"location":"C%2B%2B/volatile/#_28","text":"\u5f3a\u5236\u4f18\u5316 \uff1a\u4f7f\u7528 -O3 \u7f16\u8bd1\uff0c\u5e76\u5728\u5faa\u73af\u4e2d\u63d2\u5165\u7a7a\u6c47\u7f16\u6307\u4ee4\u3002 \u89c2\u5bdf\u73b0\u8c61 \uff1a\u5728\u9ad8\u4f18\u5316\u7ea7\u522b\u4e0b\uff0c\u53bb\u6389 volatile \u540e\uff0c\u7a0b\u5e8f\u53ef\u80fd\u8fdb\u5165\u6b7b\u5faa\u73af\u3002 \u89e3\u51b3\u65b9\u6cd5 \uff1a\u4f7f\u7528 volatile \u3001 std::atomic \u6216\u540c\u6b65\u673a\u5236\uff08\u5982 std::mutex \uff09\u6765\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\u548c\u5185\u5b58\u53ef\u89c1\u6027\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/Multithreading/create/","text":"\u7ebf\u7a0b\u521b\u5efa\u4e0e\u7ba1\u7406 1. \u521b\u5efa\u7ebf\u7a0b C++11\u5f00\u59cb\uff0c\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86 std::thread \u7c7b\u6765\u521b\u5efa\u7ebf\u7a0b\u3002 \u7f16\u8bd1\u65f6\u8981\u52a0\u4e0a -pthread \u53c2\u6570 -pthread \u662f\u7f16\u8bd1\u548c\u94fe\u63a5\u65f6\u7528\u6765\u652f\u6301 POSIX \u7ebf\u7a0b\uff08 P OSIX Thread \uff0c\u5168\u79f0 POSIX Threads \uff09\u7684\u53c2\u6570\u3002 \u5168\u79f0 \uff1aPOSIX Threads \u4f5c\u7528 \uff1a\u8ba9\u7f16\u8bd1\u5668\u548c\u94fe\u63a5\u5668\u6b63\u786e\u5904\u7406\u591a\u7ebf\u7a0b\u76f8\u5173\u7684\u4ee3\u7801\uff08\u5982 std::thread \u3001 pthread_* \u7b49\uff09\uff0c\u94fe\u63a5\u7ebf\u7a0b\u5e93 libpthread \u3002 \u5982\u679c\u4e0d\u52a0 -pthread \uff0c\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u7f16\u8bd1\u5931\u8d25\u6216\u8fd0\u884c\u5f02\u5e38\u3002 POSIX\u7ebf\u7a0b \uff08\u5168\u79f0\uff1a Portable Operating System Interface for uniX Threads \uff0c\u7b80\u79f0 pthreads \uff09\u662f\u9075\u5faaPOSIX\u6807\u51c6\u7684\u4e00\u5957\u591a\u7ebf\u7a0b\u7f16\u7a0b\u63a5\u53e3\u3002 \u5b83\u5b9a\u4e49\u4e86\u4e00\u7ec4C\u8bed\u8a00\u7684API\uff0c\u7528\u4e8e\u5728Unix/Linux\u7b49\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u8fdb\u884c\u591a\u7ebf\u7a0b\u5f00\u53d1\u3002 \u4e3b\u8981\u529f\u80fd\u5305\u62ec\u7ebf\u7a0b\u7684\u521b\u5efa\u3001\u7ec8\u6b62\u3001\u540c\u6b65\uff08\u4e92\u65a5\u9501\u3001\u6761\u4ef6\u53d8\u91cf\u7b49\uff09\u3001\u7ebf\u7a0b\u95f4\u901a\u4fe1\u7b49\u3002 C++11\u7684 std::thread \u5e95\u5c42\u901a\u5e38\u4e5f\u662f\u57fa\u4e8ePOSIX\u7ebf\u7a0b\u5b9e\u73b0\u7684\uff08\u5728Linux/Unix\u5e73\u53f0\uff09\u3002 \u603b\u7ed3\uff1a POSIX\u7ebf\u7a0b\u5c31\u662f\u4e00\u79cd\u8de8\u5e73\u53f0\u7684\u3001\u6807\u51c6\u5316\u7684\u591a\u7ebf\u7a0b\u7f16\u7a0b\u63a5\u53e3\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7c7bUnix\u7cfb\u7edf\u3002 \u793a\u4f8b\uff1a\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b #include <iostream> #include <thread> using namespace std ; void hello () { cout << \"Hello from thread!\" << endl ; } int main () { std :: thread t ( hello ); // \u521b\u5efa\u7ebf\u7a0b\uff0c\u6267\u884chello\u51fd\u6570 t . join (); // \u7b49\u5f85\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f return 0 ; } \u89e3\u91ca \u5728C++\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e2d\uff1a thread t(hello); \u8fd9\u884c\u4ee3\u7801\u7684\u610f\u601d\u662f \u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b \uff0c\u8ba9\u5b83\u6267\u884c hello \u51fd\u6570\u3002 t \u662f\u8fd9\u4e2a\u7ebf\u7a0b\u5bf9\u8c61\u7684\u540d\u5b57\u3002\u4e3b\u7ebf\u7a0b\u548c t \u7ebf\u7a0b\u4f1a\u5e76\u53d1\u6267\u884c\u3002 t.join(); \u8fd9\u884c\u4ee3\u7801\u7684\u610f\u601d\u662f \u8ba9\u4e3b\u7ebf\u7a0b\u7b49\u5f85 t \u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5 \uff0c\u53ea\u6709 t \u7ebf\u7a0b\u7ed3\u675f\u540e\uff0c\u4e3b\u7ebf\u7a0b\u624d\u4f1a\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1 t \u7ebf\u7a0b\u7684\u4efb\u52a1\u5b8c\u6210\u540e\u518d\u9000\u51fa\u7a0b\u5e8f\u3002 \u603b\u7ed3\uff1a - thread t(hello); \u521b\u5efa\u5e76\u542f\u52a8\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff0c\u6267\u884c hello \u51fd\u6570\u3002 - t.join(); \u7b49\u5f85 t \u7ebf\u7a0b\u7ed3\u675f\u3002 2. \u7ebf\u7a0b\u7684\u7ba1\u7406 join() \uff1a\u4e3b\u7ebf\u7a0b\u7b49\u5f85\u5b50\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u5e38\u7528\u3002 detach() \uff1a\u8ba9\u5b50\u7ebf\u7a0b\u5728\u540e\u53f0\u72ec\u7acb\u8fd0\u884c\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u7528\u7b49\u5b83\uff0c\u7ebf\u7a0b\u7ed3\u675f\u540e\u8d44\u6e90\u81ea\u52a8\u56de\u6536\u3002 \u4e3b\u7ebf\u7a0b\u4e0e\u8fdb\u7a0b\u8fd8\u6709\u521b\u5efa\u7684\u7ebf\u7a0b\u4e4b\u95f4\u5173\u7cfb \u5728C++\u7a0b\u5e8f\u4e2d\uff0c \u4e3b\u7ebf\u7a0b \u5c31\u662f main() \u51fd\u6570\u6240\u5728\u7684\u7ebf\u7a0b\u3002\u5f53\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u4e3a\u4f60\u7684\u7a0b\u5e8f\u5206\u914d\u4e00\u4e2a \u8fdb\u7a0b \uff0c\u5e76\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\u6765\u6267\u884c main() \u3002 \u5f53\u4f60\u5199\u4e0b\uff1a std :: thread t ( hello ); \u8fd9\u884c\u4ee3\u7801\u65f6\uff0c\u4e3b\u7ebf\u7a0b\uff08\u4e5f\u5c31\u662f main() \u6240\u5728\u7684\u7ebf\u7a0b\uff09\u4f1a \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b50\u7ebf\u7a0b \uff0c\u8ba9\u5b83\u53bb\u6267\u884c hello \u51fd\u6570\u3002\u6b64\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u5c31\u6709\u4e86\u4e24\u4e2a\u7ebf\u7a0b\uff1a\u4e3b\u7ebf\u7a0b\u548c t \u7ebf\u7a0b\uff0c\u5b83\u4eec\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\uff0c\u5e76\u4e14 \u5171\u4eab\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4 \uff08\u5982\u5168\u5c40\u53d8\u91cf\u3001\u5806\u7b49\uff09\u3002 \u5173\u7cfb\u603b\u7ed3 \u8fdb\u7a0b \uff1a\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\u3002 \u7ebf\u7a0b \uff1aCPU\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u6709\u591a\u4e2a\u7ebf\u7a0b\u3002 \u4e3b\u7ebf\u7a0b \uff1a\u6bcf\u4e2aC++\u7a0b\u5e8f\u542f\u52a8\u65f6\u81ea\u52a8\u521b\u5efa\u7684\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6267\u884c main() \u3002 \u65b0\u7ebf\u7a0b \uff1a\u7528 std::thread \u521b\u5efa\u7684\uff0c\u548c\u4e3b\u7ebf\u7a0b\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u3001\u5171\u4eab\u8d44\u6e90\u3002 \u56fe\u793a\uff1a \u8fdb\u7a0b \u251c\u2500\u2500 \u4e3b\u7ebf\u7a0b\uff08main\uff09 \u2514\u2500\u2500 \u5b50\u7ebf\u7a0b\uff08std::thread\u521b\u5efa\uff09 \u5b83\u4eec\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7\u5171\u4eab\u53d8\u91cf\u3001\u540c\u6b65\u673a\u5236\u7b49\u8fdb\u884c\u901a\u4fe1\u548c\u534f\u4f5c\u3002 \u793a\u4f8b\uff1adetach\u7528\u6cd5 detach \u7684\u5168\u79f0\u662f detach thread \uff0c\u610f\u601d\u662f\u201c\u5206\u79bb\u7ebf\u7a0b\u201d\u6216\u201c\u8131\u79bb\u7ebf\u7a0b\u201d\u3002 \u5728C++\u6807\u51c6\u5e93\u4e2d\uff0c std::thread::detach() \u7684\u4f5c\u7528\u662f\u8ba9\u7ebf\u7a0b\u5bf9\u8c61\u4e0e\u5b9e\u9645\u7684\u7ebf\u7a0b\u6267\u884c\u4f53\u201c\u5206\u79bb\u201d\uff0c\u4f7f\u7ebf\u7a0b\u5728\u540e\u53f0\u72ec\u7acb\u8fd0\u884c\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u7528\u7b49\u5f85\u5b83\u7ed3\u675f\uff0c\u7ebf\u7a0b\u8d44\u6e90\u4f1a\u5728\u6267\u884c\u5b8c\u540e\u81ea\u52a8\u56de\u6536\u3002 \u603b\u7ed3\uff1a detach \u5c31\u662f\u201c\u5206\u79bb\u7ebf\u7a0b\u201d\uff0c\u5168\u79f0\u53ef\u4ee5\u7406\u89e3\u4e3a\u201cdetach thread\u201d\u3002 #include <iostream> #include <thread> using namespace std ; void work () { cout << \"Working in background...\" << endl ; } int main () { std :: thread t ( work ); t . detach (); // \u4e3b\u7ebf\u7a0b\u4e0d\u4f1a\u7b49\u5f85t\uff0ct\u5728\u540e\u53f0\u8fd0\u884c cout << \"Main thread done.\" << endl ; // \u6ce8\u610f\uff1a\u4e3b\u7ebf\u7a0b\u4e0d\u80fd\u63d0\u524d\u9000\u51fa\uff0c\u5426\u5219\u540e\u53f0\u7ebf\u7a0b\u53ef\u80fd\u8fd8\u6ca1\u6267\u884c\u5b8c std :: this_thread :: sleep_for ( std :: chrono :: seconds ( 1 )); // \u7b49\u5f85\u4e00\u4f1a\u513f return 0 ; } 3. \u6ce8\u610f\u4e8b\u9879 \u7ebf\u7a0b\u5bf9\u8c61\u5fc5\u987b\u5728join\u6216detach\u540e\u624d\u80fd\u9500\u6bc1\uff0c\u5426\u5219\u7a0b\u5e8f\u4f1a\u62a5\u9519\uff08terminate\uff09\u3002 \u4e00\u4e2a\u7ebf\u7a0b\u53ea\u80fd\u88abjoin\u6216detach\u4e00\u6b21\u3002 \u5982\u679c\u4e0d\u7528t.join\u548ct.detach\u4f1a\u600e\u4e48\u6837 \u5982\u679c\u65e2 \u4e0d\u7528 t.join() \u4e5f\u4e0d\u7528 t.detach() \uff0c\u5f53 main \u51fd\u6570\u7ed3\u675f\u3001 t \u5bf9\u8c61\u88ab\u9500\u6bc1\u65f6\uff0c\u7a0b\u5e8f\u4f1a \u76f4\u63a5\u7ec8\u6b62\u5e76\u629b\u51fa\u5f02\u5e38 \uff08\u901a\u5e38\u662f std::terminate() \uff09\uff0c\u56e0\u4e3aC++\u6807\u51c6\u89c4\u5b9a\uff1a \u7ebf\u7a0b\u5bf9\u8c61\u5728\u9500\u6bc1\u524d\uff0c\u5fc5\u987b\u5df2\u7ecf\u88ab join \u6216 detach \uff0c\u5426\u5219\u5c31\u662f\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 \u603b\u7ed3\uff1a - \u5fc5\u987b\u5bf9\u6bcf\u4e2a std::thread \u5bf9\u8c61\u8c03\u7528\u4e00\u6b21 join() \u6216 detach() \uff0c\u5426\u5219\u7a0b\u5e8f\u4f1a\u5f02\u5e38\u7ec8\u6b62\u3002 - \u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u9632\u6b62\u7ebf\u7a0b\u8d44\u6e90\u6cc4\u6f0f\u6216\u60ac\u6302\u7ebf\u7a0b\u3002 t.detach()\u8ba9\u5b50\u7ebf\u7a0b\u540e\u53f0\u8fd0\u884c\uff0c\u90a3\u4e3b\u7ebf\u7a0b\u5148\u7ed3\u675f\u600e\u4e48\u529e \u5982\u679c\u4e3b\u7ebf\u7a0b\uff08 main \u51fd\u6570\uff09\u5148\u7ed3\u675f\uff0c \u6574\u4e2a\u8fdb\u7a0b\u5c31\u4f1a\u9000\u51fa \uff0c\u5373\u4f7f\u5b50\u7ebf\u7a0b\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\u4e5f\u4f1a\u88ab\u5f3a\u5236\u7ec8\u6b62\uff0c\u65e0\u6cd5\u7ee7\u7eed\u8fd0\u884c\u3002 \u6240\u4ee5\uff0c\u4f7f\u7528 t.detach() \u65f6\uff0c\u901a\u5e38\u9700\u8981\u8ba9\u4e3b\u7ebf\u7a0b\u7b49\u5f85\u4e00\u4f1a\u513f\uff08\u6bd4\u5982\u7528 sleep_for \uff09\uff0c\u786e\u4fdd\u5b50\u7ebf\u7a0b\u6709\u8db3\u591f\u65f6\u95f4\u5b8c\u6210\u4efb\u52a1\uff0c\u5426\u5219\u5b50\u7ebf\u7a0b\u53ef\u80fd\u8fd8\u6ca1\u8f93\u51fa\u5c31\u88ab\u6740\u6389\u4e86\u3002 \u603b\u7ed3\uff1a t.detach() \u8ba9\u5b50\u7ebf\u7a0b\u72ec\u7acb\u8fd0\u884c\uff0c\u4f46\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u65f6\uff0c\u6240\u6709\u5b50\u7ebf\u7a0b\u4e5f\u4f1a\u968f\u8fdb\u7a0b\u4e00\u8d77\u7ed3\u675f\u3002 \u90a3\u6211\u76f4\u63a5\u7528t.join()\u5c31\u597d\uff0c\u4e3a\u4ec0\u4e48\u8981\u5f15\u5165t.detach() t.join() \u548c t.detach() \u5404\u6709\u9002\u7528\u573a\u666f\uff1a t.join() \uff1a\u4e3b\u7ebf\u7a0b\u4f1a\u7b49\u5f85\u5b50\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\u518d\u7ee7\u7eed\uff0c\u9002\u5408 \u9700\u8981\u786e\u4fdd\u5b50\u7ebf\u7a0b\u4efb\u52a1\u5b8c\u6210\u540e\u518d\u9000\u51fa\u7a0b\u5e8f \u7684\u60c5\u51b5\u3002\u5927\u591a\u6570\u573a\u666f\u63a8\u8350\u7528 join() \uff0c\u8fd9\u6837\u66f4\u5b89\u5168\u3001\u53ef\u63a7\u3002 t.detach() \uff1a\u8ba9\u5b50\u7ebf\u7a0b\u5728\u540e\u53f0\u72ec\u7acb\u8fd0\u884c\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u7528\u7b49\u5b83\u3002\u9002\u5408 \u5b50\u7ebf\u7a0b\u4efb\u52a1\u4e0d\u91cd\u8981\u6216\u4e0d\u9700\u8981\u7b49\u5f85\u5176\u7ed3\u679c \uff0c\u6bd4\u5982\u65e5\u5fd7\u5199\u5165\u3001\u540e\u53f0\u76d1\u63a7\u7b49\u3002 \u4e3a\u4ec0\u4e48\u8981\u6709 t.detach() \uff1f - \u6709\u4e9b\u4efb\u52a1\u4f60\u4e0d\u5173\u5fc3\u5b83\u4ec0\u4e48\u65f6\u5019\u7ed3\u675f\uff0c\u4e5f\u4e0d\u60f3\u963b\u585e\u4e3b\u7ebf\u7a0b\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u7528 detach() \u8ba9\u5b83\u201c\u81ea\u751f\u81ea\u706d\u201d\u3002 - \u4f46\u8981\u6ce8\u610f\uff0c\u4e3b\u7ebf\u7a0b\u63d0\u524d\u7ed3\u675f\u4f1a\u5bfc\u81f4\u6240\u6709\u5b50\u7ebf\u7a0b\u88ab\u5f3a\u5236\u7ec8\u6b62\uff0c\u6240\u4ee5 detach() \u7528\u5f97\u4e0d\u591a\uff0c\u9700\u8c28\u614e\u3002 \u603b\u7ed3\uff1a - \u4e00\u822c\u7528 t.join() \uff0c\u53ea\u6709\u5728\u786e\u5b9e\u9700\u8981\u8ba9\u7ebf\u7a0b\u540e\u53f0\u8fd0\u884c\u4e14\u4e0d\u5173\u5fc3\u5176\u7ed3\u679c\u65f6\u624d\u7528 t.detach() \u3002","title":"\u7ebf\u7a0b\u521b\u5efa\u4e0e\u7ba1\u7406"},{"location":"C%2B%2B/Multithreading/create/#_1","text":"","title":"\u7ebf\u7a0b\u521b\u5efa\u4e0e\u7ba1\u7406"},{"location":"C%2B%2B/Multithreading/create/#1","text":"C++11\u5f00\u59cb\uff0c\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86 std::thread \u7c7b\u6765\u521b\u5efa\u7ebf\u7a0b\u3002 \u7f16\u8bd1\u65f6\u8981\u52a0\u4e0a -pthread \u53c2\u6570 -pthread \u662f\u7f16\u8bd1\u548c\u94fe\u63a5\u65f6\u7528\u6765\u652f\u6301 POSIX \u7ebf\u7a0b\uff08 P OSIX Thread \uff0c\u5168\u79f0 POSIX Threads \uff09\u7684\u53c2\u6570\u3002 \u5168\u79f0 \uff1aPOSIX Threads \u4f5c\u7528 \uff1a\u8ba9\u7f16\u8bd1\u5668\u548c\u94fe\u63a5\u5668\u6b63\u786e\u5904\u7406\u591a\u7ebf\u7a0b\u76f8\u5173\u7684\u4ee3\u7801\uff08\u5982 std::thread \u3001 pthread_* \u7b49\uff09\uff0c\u94fe\u63a5\u7ebf\u7a0b\u5e93 libpthread \u3002 \u5982\u679c\u4e0d\u52a0 -pthread \uff0c\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u7f16\u8bd1\u5931\u8d25\u6216\u8fd0\u884c\u5f02\u5e38\u3002 POSIX\u7ebf\u7a0b \uff08\u5168\u79f0\uff1a Portable Operating System Interface for uniX Threads \uff0c\u7b80\u79f0 pthreads \uff09\u662f\u9075\u5faaPOSIX\u6807\u51c6\u7684\u4e00\u5957\u591a\u7ebf\u7a0b\u7f16\u7a0b\u63a5\u53e3\u3002 \u5b83\u5b9a\u4e49\u4e86\u4e00\u7ec4C\u8bed\u8a00\u7684API\uff0c\u7528\u4e8e\u5728Unix/Linux\u7b49\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u8fdb\u884c\u591a\u7ebf\u7a0b\u5f00\u53d1\u3002 \u4e3b\u8981\u529f\u80fd\u5305\u62ec\u7ebf\u7a0b\u7684\u521b\u5efa\u3001\u7ec8\u6b62\u3001\u540c\u6b65\uff08\u4e92\u65a5\u9501\u3001\u6761\u4ef6\u53d8\u91cf\u7b49\uff09\u3001\u7ebf\u7a0b\u95f4\u901a\u4fe1\u7b49\u3002 C++11\u7684 std::thread \u5e95\u5c42\u901a\u5e38\u4e5f\u662f\u57fa\u4e8ePOSIX\u7ebf\u7a0b\u5b9e\u73b0\u7684\uff08\u5728Linux/Unix\u5e73\u53f0\uff09\u3002 \u603b\u7ed3\uff1a POSIX\u7ebf\u7a0b\u5c31\u662f\u4e00\u79cd\u8de8\u5e73\u53f0\u7684\u3001\u6807\u51c6\u5316\u7684\u591a\u7ebf\u7a0b\u7f16\u7a0b\u63a5\u53e3\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7c7bUnix\u7cfb\u7edf\u3002","title":"1. \u521b\u5efa\u7ebf\u7a0b"},{"location":"C%2B%2B/Multithreading/create/#_2","text":"#include <iostream> #include <thread> using namespace std ; void hello () { cout << \"Hello from thread!\" << endl ; } int main () { std :: thread t ( hello ); // \u521b\u5efa\u7ebf\u7a0b\uff0c\u6267\u884chello\u51fd\u6570 t . join (); // \u7b49\u5f85\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f return 0 ; }","title":"\u793a\u4f8b\uff1a\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b"},{"location":"C%2B%2B/Multithreading/create/#_3","text":"\u5728C++\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e2d\uff1a thread t(hello); \u8fd9\u884c\u4ee3\u7801\u7684\u610f\u601d\u662f \u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b \uff0c\u8ba9\u5b83\u6267\u884c hello \u51fd\u6570\u3002 t \u662f\u8fd9\u4e2a\u7ebf\u7a0b\u5bf9\u8c61\u7684\u540d\u5b57\u3002\u4e3b\u7ebf\u7a0b\u548c t \u7ebf\u7a0b\u4f1a\u5e76\u53d1\u6267\u884c\u3002 t.join(); \u8fd9\u884c\u4ee3\u7801\u7684\u610f\u601d\u662f \u8ba9\u4e3b\u7ebf\u7a0b\u7b49\u5f85 t \u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5 \uff0c\u53ea\u6709 t \u7ebf\u7a0b\u7ed3\u675f\u540e\uff0c\u4e3b\u7ebf\u7a0b\u624d\u4f1a\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1 t \u7ebf\u7a0b\u7684\u4efb\u52a1\u5b8c\u6210\u540e\u518d\u9000\u51fa\u7a0b\u5e8f\u3002 \u603b\u7ed3\uff1a - thread t(hello); \u521b\u5efa\u5e76\u542f\u52a8\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff0c\u6267\u884c hello \u51fd\u6570\u3002 - t.join(); \u7b49\u5f85 t \u7ebf\u7a0b\u7ed3\u675f\u3002","title":"\u89e3\u91ca"},{"location":"C%2B%2B/Multithreading/create/#2","text":"join() \uff1a\u4e3b\u7ebf\u7a0b\u7b49\u5f85\u5b50\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u5e38\u7528\u3002 detach() \uff1a\u8ba9\u5b50\u7ebf\u7a0b\u5728\u540e\u53f0\u72ec\u7acb\u8fd0\u884c\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u7528\u7b49\u5b83\uff0c\u7ebf\u7a0b\u7ed3\u675f\u540e\u8d44\u6e90\u81ea\u52a8\u56de\u6536\u3002","title":"2. \u7ebf\u7a0b\u7684\u7ba1\u7406"},{"location":"C%2B%2B/Multithreading/create/#_4","text":"\u5728C++\u7a0b\u5e8f\u4e2d\uff0c \u4e3b\u7ebf\u7a0b \u5c31\u662f main() \u51fd\u6570\u6240\u5728\u7684\u7ebf\u7a0b\u3002\u5f53\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u4e3a\u4f60\u7684\u7a0b\u5e8f\u5206\u914d\u4e00\u4e2a \u8fdb\u7a0b \uff0c\u5e76\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\u6765\u6267\u884c main() \u3002 \u5f53\u4f60\u5199\u4e0b\uff1a std :: thread t ( hello ); \u8fd9\u884c\u4ee3\u7801\u65f6\uff0c\u4e3b\u7ebf\u7a0b\uff08\u4e5f\u5c31\u662f main() \u6240\u5728\u7684\u7ebf\u7a0b\uff09\u4f1a \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b50\u7ebf\u7a0b \uff0c\u8ba9\u5b83\u53bb\u6267\u884c hello \u51fd\u6570\u3002\u6b64\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u5c31\u6709\u4e86\u4e24\u4e2a\u7ebf\u7a0b\uff1a\u4e3b\u7ebf\u7a0b\u548c t \u7ebf\u7a0b\uff0c\u5b83\u4eec\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\uff0c\u5e76\u4e14 \u5171\u4eab\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4 \uff08\u5982\u5168\u5c40\u53d8\u91cf\u3001\u5806\u7b49\uff09\u3002","title":"\u4e3b\u7ebf\u7a0b\u4e0e\u8fdb\u7a0b\u8fd8\u6709\u521b\u5efa\u7684\u7ebf\u7a0b\u4e4b\u95f4\u5173\u7cfb"},{"location":"C%2B%2B/Multithreading/create/#_5","text":"\u8fdb\u7a0b \uff1a\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\u3002 \u7ebf\u7a0b \uff1aCPU\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u6709\u591a\u4e2a\u7ebf\u7a0b\u3002 \u4e3b\u7ebf\u7a0b \uff1a\u6bcf\u4e2aC++\u7a0b\u5e8f\u542f\u52a8\u65f6\u81ea\u52a8\u521b\u5efa\u7684\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6267\u884c main() \u3002 \u65b0\u7ebf\u7a0b \uff1a\u7528 std::thread \u521b\u5efa\u7684\uff0c\u548c\u4e3b\u7ebf\u7a0b\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u3001\u5171\u4eab\u8d44\u6e90\u3002 \u56fe\u793a\uff1a \u8fdb\u7a0b \u251c\u2500\u2500 \u4e3b\u7ebf\u7a0b\uff08main\uff09 \u2514\u2500\u2500 \u5b50\u7ebf\u7a0b\uff08std::thread\u521b\u5efa\uff09","title":"\u5173\u7cfb\u603b\u7ed3"},{"location":"C%2B%2B/Multithreading/create/#_6","text":"","title":"\u5b83\u4eec\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7\u5171\u4eab\u53d8\u91cf\u3001\u540c\u6b65\u673a\u5236\u7b49\u8fdb\u884c\u901a\u4fe1\u548c\u534f\u4f5c\u3002"},{"location":"C%2B%2B/Multithreading/create/#detach","text":"detach \u7684\u5168\u79f0\u662f detach thread \uff0c\u610f\u601d\u662f\u201c\u5206\u79bb\u7ebf\u7a0b\u201d\u6216\u201c\u8131\u79bb\u7ebf\u7a0b\u201d\u3002 \u5728C++\u6807\u51c6\u5e93\u4e2d\uff0c std::thread::detach() \u7684\u4f5c\u7528\u662f\u8ba9\u7ebf\u7a0b\u5bf9\u8c61\u4e0e\u5b9e\u9645\u7684\u7ebf\u7a0b\u6267\u884c\u4f53\u201c\u5206\u79bb\u201d\uff0c\u4f7f\u7ebf\u7a0b\u5728\u540e\u53f0\u72ec\u7acb\u8fd0\u884c\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u7528\u7b49\u5f85\u5b83\u7ed3\u675f\uff0c\u7ebf\u7a0b\u8d44\u6e90\u4f1a\u5728\u6267\u884c\u5b8c\u540e\u81ea\u52a8\u56de\u6536\u3002 \u603b\u7ed3\uff1a detach \u5c31\u662f\u201c\u5206\u79bb\u7ebf\u7a0b\u201d\uff0c\u5168\u79f0\u53ef\u4ee5\u7406\u89e3\u4e3a\u201cdetach thread\u201d\u3002 #include <iostream> #include <thread> using namespace std ; void work () { cout << \"Working in background...\" << endl ; } int main () { std :: thread t ( work ); t . detach (); // \u4e3b\u7ebf\u7a0b\u4e0d\u4f1a\u7b49\u5f85t\uff0ct\u5728\u540e\u53f0\u8fd0\u884c cout << \"Main thread done.\" << endl ; // \u6ce8\u610f\uff1a\u4e3b\u7ebf\u7a0b\u4e0d\u80fd\u63d0\u524d\u9000\u51fa\uff0c\u5426\u5219\u540e\u53f0\u7ebf\u7a0b\u53ef\u80fd\u8fd8\u6ca1\u6267\u884c\u5b8c std :: this_thread :: sleep_for ( std :: chrono :: seconds ( 1 )); // \u7b49\u5f85\u4e00\u4f1a\u513f return 0 ; }","title":"\u793a\u4f8b\uff1adetach\u7528\u6cd5"},{"location":"C%2B%2B/Multithreading/create/#3","text":"\u7ebf\u7a0b\u5bf9\u8c61\u5fc5\u987b\u5728join\u6216detach\u540e\u624d\u80fd\u9500\u6bc1\uff0c\u5426\u5219\u7a0b\u5e8f\u4f1a\u62a5\u9519\uff08terminate\uff09\u3002 \u4e00\u4e2a\u7ebf\u7a0b\u53ea\u80fd\u88abjoin\u6216detach\u4e00\u6b21\u3002","title":"3. \u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/Multithreading/create/#tjointdetach","text":"\u5982\u679c\u65e2 \u4e0d\u7528 t.join() \u4e5f\u4e0d\u7528 t.detach() \uff0c\u5f53 main \u51fd\u6570\u7ed3\u675f\u3001 t \u5bf9\u8c61\u88ab\u9500\u6bc1\u65f6\uff0c\u7a0b\u5e8f\u4f1a \u76f4\u63a5\u7ec8\u6b62\u5e76\u629b\u51fa\u5f02\u5e38 \uff08\u901a\u5e38\u662f std::terminate() \uff09\uff0c\u56e0\u4e3aC++\u6807\u51c6\u89c4\u5b9a\uff1a \u7ebf\u7a0b\u5bf9\u8c61\u5728\u9500\u6bc1\u524d\uff0c\u5fc5\u987b\u5df2\u7ecf\u88ab join \u6216 detach \uff0c\u5426\u5219\u5c31\u662f\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 \u603b\u7ed3\uff1a - \u5fc5\u987b\u5bf9\u6bcf\u4e2a std::thread \u5bf9\u8c61\u8c03\u7528\u4e00\u6b21 join() \u6216 detach() \uff0c\u5426\u5219\u7a0b\u5e8f\u4f1a\u5f02\u5e38\u7ec8\u6b62\u3002 - \u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u9632\u6b62\u7ebf\u7a0b\u8d44\u6e90\u6cc4\u6f0f\u6216\u60ac\u6302\u7ebf\u7a0b\u3002","title":"\u5982\u679c\u4e0d\u7528t.join\u548ct.detach\u4f1a\u600e\u4e48\u6837"},{"location":"C%2B%2B/Multithreading/create/#tdetach","text":"\u5982\u679c\u4e3b\u7ebf\u7a0b\uff08 main \u51fd\u6570\uff09\u5148\u7ed3\u675f\uff0c \u6574\u4e2a\u8fdb\u7a0b\u5c31\u4f1a\u9000\u51fa \uff0c\u5373\u4f7f\u5b50\u7ebf\u7a0b\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\u4e5f\u4f1a\u88ab\u5f3a\u5236\u7ec8\u6b62\uff0c\u65e0\u6cd5\u7ee7\u7eed\u8fd0\u884c\u3002 \u6240\u4ee5\uff0c\u4f7f\u7528 t.detach() \u65f6\uff0c\u901a\u5e38\u9700\u8981\u8ba9\u4e3b\u7ebf\u7a0b\u7b49\u5f85\u4e00\u4f1a\u513f\uff08\u6bd4\u5982\u7528 sleep_for \uff09\uff0c\u786e\u4fdd\u5b50\u7ebf\u7a0b\u6709\u8db3\u591f\u65f6\u95f4\u5b8c\u6210\u4efb\u52a1\uff0c\u5426\u5219\u5b50\u7ebf\u7a0b\u53ef\u80fd\u8fd8\u6ca1\u8f93\u51fa\u5c31\u88ab\u6740\u6389\u4e86\u3002 \u603b\u7ed3\uff1a t.detach() \u8ba9\u5b50\u7ebf\u7a0b\u72ec\u7acb\u8fd0\u884c\uff0c\u4f46\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u65f6\uff0c\u6240\u6709\u5b50\u7ebf\u7a0b\u4e5f\u4f1a\u968f\u8fdb\u7a0b\u4e00\u8d77\u7ed3\u675f\u3002","title":"t.detach()\u8ba9\u5b50\u7ebf\u7a0b\u540e\u53f0\u8fd0\u884c\uff0c\u90a3\u4e3b\u7ebf\u7a0b\u5148\u7ed3\u675f\u600e\u4e48\u529e"},{"location":"C%2B%2B/Multithreading/create/#tjointdetach_1","text":"t.join() \u548c t.detach() \u5404\u6709\u9002\u7528\u573a\u666f\uff1a t.join() \uff1a\u4e3b\u7ebf\u7a0b\u4f1a\u7b49\u5f85\u5b50\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\u518d\u7ee7\u7eed\uff0c\u9002\u5408 \u9700\u8981\u786e\u4fdd\u5b50\u7ebf\u7a0b\u4efb\u52a1\u5b8c\u6210\u540e\u518d\u9000\u51fa\u7a0b\u5e8f \u7684\u60c5\u51b5\u3002\u5927\u591a\u6570\u573a\u666f\u63a8\u8350\u7528 join() \uff0c\u8fd9\u6837\u66f4\u5b89\u5168\u3001\u53ef\u63a7\u3002 t.detach() \uff1a\u8ba9\u5b50\u7ebf\u7a0b\u5728\u540e\u53f0\u72ec\u7acb\u8fd0\u884c\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u7528\u7b49\u5b83\u3002\u9002\u5408 \u5b50\u7ebf\u7a0b\u4efb\u52a1\u4e0d\u91cd\u8981\u6216\u4e0d\u9700\u8981\u7b49\u5f85\u5176\u7ed3\u679c \uff0c\u6bd4\u5982\u65e5\u5fd7\u5199\u5165\u3001\u540e\u53f0\u76d1\u63a7\u7b49\u3002 \u4e3a\u4ec0\u4e48\u8981\u6709 t.detach() \uff1f - \u6709\u4e9b\u4efb\u52a1\u4f60\u4e0d\u5173\u5fc3\u5b83\u4ec0\u4e48\u65f6\u5019\u7ed3\u675f\uff0c\u4e5f\u4e0d\u60f3\u963b\u585e\u4e3b\u7ebf\u7a0b\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u7528 detach() \u8ba9\u5b83\u201c\u81ea\u751f\u81ea\u706d\u201d\u3002 - \u4f46\u8981\u6ce8\u610f\uff0c\u4e3b\u7ebf\u7a0b\u63d0\u524d\u7ed3\u675f\u4f1a\u5bfc\u81f4\u6240\u6709\u5b50\u7ebf\u7a0b\u88ab\u5f3a\u5236\u7ec8\u6b62\uff0c\u6240\u4ee5 detach() \u7528\u5f97\u4e0d\u591a\uff0c\u9700\u8c28\u614e\u3002 \u603b\u7ed3\uff1a - \u4e00\u822c\u7528 t.join() \uff0c\u53ea\u6709\u5728\u786e\u5b9e\u9700\u8981\u8ba9\u7ebf\u7a0b\u540e\u53f0\u8fd0\u884c\u4e14\u4e0d\u5173\u5fc3\u5176\u7ed3\u679c\u65f6\u624d\u7528 t.detach() \u3002","title":"\u90a3\u6211\u76f4\u63a5\u7528t.join()\u5c31\u597d\uff0c\u4e3a\u4ec0\u4e48\u8981\u5f15\u5165t.detach()"},{"location":"C%2B%2B/Multithreading/introduce/","text":"C++\u591a\u7ebf\u7a0b\u7f16\u7a0b\u5e38\u89c1\u5185\u5bb9\u5305\u62ec\uff1a \u7ebf\u7a0b\u7684\u521b\u5efa\u4e0e\u7ba1\u7406 std::thread \u521b\u5efa\u7ebf\u7a0b \u7ebf\u7a0b\u7684\u542f\u52a8\u3001\u7b49\u5f85\uff08join\uff09\u3001\u5206\u79bb\uff08detach\uff09 \u4e92\u65a5\u4e0e\u540c\u6b65 \u4e92\u65a5\u9501\uff1a std::mutex \u3001 std::lock_guard \u3001 std::unique_lock \u9012\u5f52\u9501\uff1a std::recursive_mutex \u8bfb\u5199\u9501\uff1a std::shared_mutex \uff08C++17\uff09 \u6761\u4ef6\u53d8\u91cf std::condition_variable \u7528\u4e8e\u7ebf\u7a0b\u95f4\u7684\u7b49\u5f85\u4e0e\u901a\u77e5 \u539f\u5b50\u64cd\u4f5c\u4e0e\u5185\u5b58\u6a21\u578b std::atomic \u5b9e\u73b0\u65e0\u9501\u7f16\u7a0b \u5185\u5b58\u5e8f\uff08memory order\uff09 \u7ebf\u7a0b\u5c40\u90e8\u5b58\u50a8 thread_local \u5173\u952e\u5b57 \u7ebf\u7a0b\u6c60 \u591a\u7ebf\u7a0b\u4efb\u52a1\u8c03\u5ea6\u4e0e\u590d\u7528 \u5e76\u53d1\u5bb9\u5668 C++\u6807\u51c6\u5e93\u4e2d\u7684\u5e76\u53d1\u5b89\u5168\u5bb9\u5668\uff08\u5982 concurrent_queue \uff0c\u90e8\u5206\u9700\u7b2c\u4e09\u65b9\u5e93\uff09 \u5176\u4ed6\u540c\u6b65\u673a\u5236 \u4fe1\u53f7\u91cf\uff08C++20 std::counting_semaphore \uff09 \u5c4f\u969c\uff08barrier\uff09 \u5e38\u89c1\u9762\u8bd5/\u8003\u70b9\uff1a - \u6b7b\u9501\u3001\u7ade\u6001\u6761\u4ef6\u3001\u53ef\u89c1\u6027\u95ee\u9898 - \u7ebf\u7a0b\u5b89\u5168\u7684\u5b9e\u73b0\u65b9\u6cd5 - \u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u578b - \u591a\u7ebf\u7a0b\u4e0b\u7684\u6027\u80fd\u4f18\u5316","title":"\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4ecb\u7ecd"},{"location":"C%2B%2B/Multithreading/mutex/","text":"mutex \u7684\u5168\u79f0\u662f mutual exclusion \uff0c\u4e2d\u6587\u610f\u601d\u662f\u201c\u4e92\u65a5\u201d\u3002 mutual \uff1a\u76f8\u4e92\u7684 exclusion \uff1a\u6392\u65a5\u3001\u6392\u9664 mutex\uff08\u4e92\u65a5\u9501\uff09 \u5c31\u662f\u7528\u6765\u4fdd\u8bc1\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u8bbf\u95ee\u67d0\u4e2a\u8d44\u6e90\uff0c\u4ece\u800c\u907f\u514d\u591a\u7ebf\u7a0b\u540c\u65f6\u64cd\u4f5c\u5bfc\u81f4\u7684\u6570\u636e\u6df7\u4e71\u548c\u7ade\u6001\u6761\u4ef6\u3002 \u5728C++\u4e2d\uff0c\u7ebf\u7a0b\u7684\u4e92\u65a5\u4e0e\u540c\u6b65\u4e3b\u8981\u901a\u8fc7 \u4e92\u65a5\u9501\uff08mutex\uff09 \u548c \u6761\u4ef6\u53d8\u91cf\uff08condition_variable\uff09 \u6765\u5b9e\u73b0\u3002 1. \u4e92\u65a5\uff08mutex\uff09 \u4f5c\u7528 \uff1a\u4fdd\u8bc1\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\uff0c\u9632\u6b62\u6570\u636e\u7ade\u4e89\u3002 \u57fa\u672c\u7528\u6cd5 #include <iostream> #include <thread> #include <mutex> using namespace std ; mutex mtx ; // \u5b9a\u4e49\u4e00\u4e2a\u4e92\u65a5\u9501 void print ( int id ) { mtx . lock (); // \u52a0\u9501 cout << \"Thread \" << id << endl ; mtx . unlock (); // \u89e3\u9501 } int main () { thread t1 ( print , 1 ); thread t2 ( print , 2 ); t1 . join (); t2 . join (); return 0 ; } \u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff1a thread t1 ( print , 1 ); thread t2 ( print , 2 ); print \u662f\u7ebf\u7a0b\u8981\u6267\u884c\u7684\u51fd\u6570\u540d\u3002 1 \u548c 2 \u662f\u4f20\u9012\u7ed9 print \u51fd\u6570\u7684\u53c2\u6570\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c t1 \u7ebf\u7a0b\u4f1a\u6267\u884c print(1) \uff0c t2 \u7ebf\u7a0b\u4f1a\u6267\u884c print(2) \u3002 \u8fd9\u6837\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u80fd\u62ff\u5230\u4e0d\u540c\u7684\u53c2\u6570\uff0c\u8f93\u51fa\u4e0d\u540c\u7684\u5185\u5bb9\u3002 \u63a8\u8350\u5199\u6cd5\uff1a void print ( int id ) { lock_guard < mutex > lock ( mtx ); // \u81ea\u52a8\u52a0\u9501\u548c\u89e3\u9501 cout << \"Thread \" << id << endl ; } \u4e3a\u4ec0\u4e48\u53bb\u6389mtx.lock()\u548cmtx.unlock()\u4e5f\u6ca1\u4e8b \u73b0\u5728\u7684\u4ee3\u7801\u91cc\uff0c print \u51fd\u6570\u53ea\u662f\u7b80\u5355\u5730\u8f93\u51fa\u4e00\u53e5\u8bdd\uff1a void print ( int id ) { cout << \"Thread \" << id << endl ; } \u4e3a\u4ec0\u4e48\u53bb\u6389 mtx \u4e5f\u6ca1\u4e8b\uff1f \u56e0\u4e3a\uff1a - cout << ... \u8fd9\u884c\u4ee3\u7801\u5f88\u77ed\uff0c\u4e24\u4e2a\u7ebf\u7a0b\u51e0\u4e4e\u4e0d\u4f1a\u540c\u65f6\u5199\u5165\u540c\u4e00\u884c\uff0c\u51fa\u73b0\u8f93\u51fa\u6df7\u4e71\u7684\u6982\u7387\u5f88\u4f4e\u3002 - \u5373\u4f7f\u6709\u65f6\u8f93\u51fa\u987a\u5e8f\u9519\u4e71\uff08\u6bd4\u5982\u4e24\u884c\u5185\u5bb9\u4ea4\u53c9\u5728\u4e00\u8d77\uff09\uff0c\u5bf9\u7a0b\u5e8f\u529f\u80fd\u6ca1\u6709\u5f71\u54cd\uff0c\u53ea\u662f\u663e\u793a\u4e0a\u4e0d\u6574\u9f50\u3002 \u4f46\u5b9e\u9645\u4e0a\uff1a - cout \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8f93\u51fa\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5185\u5bb9\u4ea4\u53c9\u3001\u4e71\u7801\u7b49\u95ee\u9898\u3002 - \u5982\u679c\u4e34\u754c\u533a\uff08\u5171\u4eab\u8d44\u6e90\u64cd\u4f5c\uff09\u53d8\u590d\u6742\uff0c\u6bd4\u5982\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u4fee\u6539\u540c\u4e00\u4e2a\u53d8\u91cf\uff0c\u6ca1\u6709\u52a0\u9501\u5c31\u4f1a\u51fa\u9519\u3002 \u603b\u7ed3\uff1a \u672c\u4f8b\u4e2d\u53bb\u6389 mtx \u6ca1\u4e8b\uff0c\u662f\u56e0\u4e3a\u64cd\u4f5c\u7b80\u5355\u4e14\u5f71\u54cd\u4e0d\u5927\u3002\u4f46\u5728\u5b9e\u9645\u591a\u7ebf\u7a0b\u5f00\u53d1\u4e2d\uff0c \u53ea\u8981\u6709\u5171\u4eab\u8d44\u6e90\u64cd\u4f5c\uff0c\u90fd\u5e94\u8be5\u52a0\u9501\u4fdd\u62a4 \uff0c\u5426\u5219\u5bb9\u6613\u51fa\u73b0\u96be\u4ee5\u53d1\u73b0\u7684\u7ade\u6001\u6761\u4ef6\u548c\u6570\u636e\u9519\u8bef\u3002 \u627e\u4e2a\u7a0b\u5e8f\u89c2\u5bdf\u52a0\u9501\u548c\u4e0d\u52a0\u9501\u7684\u533a\u522b \u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\uff0c \u7edd\u5927\u591a\u6570\u7ade\u6001\u6761\u4ef6\u90fd\u662f\u201c\u6982\u7387\u6027\u201d\u51fa\u9519 \uff0c\u4e0d\u52a0\u9501\u65f6\u201c\u5fc5\u5b9a\u51fa\u9519\u201d\u7684\u4f8b\u5b50\u5f88\u96be\u4fdd\u8bc1\u6bcf\u6b21\u90fd\u590d\u73b0\u3002\u4f46\u53ef\u4ee5\u901a\u8fc7 \u589e\u52a0\u7ebf\u7a0b\u6570\u91cf\u3001\u5faa\u73af\u6b21\u6570\u3001\u6216\u8005\u8ba9\u7ebf\u7a0bsleep\u5236\u9020\u7ade\u4e89 \uff0c\u6781\u5927\u63d0\u9ad8\u51fa\u9519\u6982\u7387\u3002 \u8ba9\u5199\u64cd\u4f5c\u53d8\u6162 void setA () { for ( int i = 0 ; i < 7 ; ++ i ) { d . buf [ i ] = 'A' ; std :: this_thread :: sleep_for ( std :: chrono :: nanoseconds ( 1 )); } d . buf [ 7 ] = '\\0' ; } void setB () { for ( int i = 0 ; i < 7 ; ++ i ) { d . buf [ i ] = 'B' ; std :: this_thread :: sleep_for ( std :: chrono :: nanoseconds ( 1 )); } d . buf [ 7 ] = '\\0' ; } \u8fd9\u6837\u6bcf\u6b21\u5199\u4e00\u4e2a\u5b57\u7b26\uff0c\u589e\u52a0\u7ebf\u7a0b\u5207\u6362\u7684\u673a\u4f1a\uff0c \u66f4\u5bb9\u6613\u51fa\u73b0\u6df7\u5408\u5b57\u7b26\u4e32 \uff08\u5982 AABBBBA \u7b49\uff09\u3002 \u8fd9\u4e2a\u7a0b\u5e8f\u5f88\u597d\u5730\u6f14\u793a\u4e86 \u591a\u7ebf\u7a0b\u4e0d\u52a0\u9501\u5bfc\u81f4\u6570\u636e\u7ade\u4e89\u548c\u7ed3\u679c\u4e0d\u53ef\u9884\u6d4b \u7684\u73b0\u8c61\u3002\u4e0b\u9762\u662f\u8be6\u7ec6\u89e3\u91ca\uff1a \u7a0b\u5e8f\u7ed3\u6784 \u6709\u4e00\u4e2a\u5168\u5c40\u7ed3\u6784\u4f53 Data d \uff0c\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4 buf[8] \u3002 \u6709\u4e24\u4e2a\u7ebf\u7a0b\u51fd\u6570 setA() \u548c setB() \uff0c\u5206\u522b\u628a d.buf \u7684\u524d7\u4e2a\u5b57\u7b26\u5199\u6210 'A' \u6216 'B' \uff0c\u6bcf\u5199\u4e00\u4e2a\u5b57\u7b26\u90fd sleep \u4e00\u4e0b\uff0c\u6700\u540e\u52a0\u4e0a\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26 '\\0' \u3002 \u5728 main() \u4e2d\uff0c\u5206\u522b\u542f\u52a8\u4e24\u4e2a\u7ebf\u7a0b t1(setA) \u548c t2(setB) \uff0c\u5e76\u7b49\u5f85\u5b83\u4eec\u7ed3\u675f\uff0c\u7136\u540e\u8f93\u51fa d.buf \u3002 \u8fd0\u884c\u539f\u7406 setA \u548c setB \u4e24\u4e2a\u7ebf\u7a0b \u540c\u65f6\u64cd\u4f5c\u540c\u4e00\u5757\u5185\u5b58 \uff08 d.buf \uff09\uff0c\u4f46\u6ca1\u6709\u52a0\u9501\u4fdd\u62a4\u3002 \u6bcf\u4e2a\u7ebf\u7a0b\u5199\u4e00\u4e2a\u5b57\u7b26\u540e\u90fd\u4f1a\u77ed\u6682\u4f11\u7720\uff0c \u4eba\u4e3a\u5236\u9020\u4e86\u7ebf\u7a0b\u5207\u6362\u7684\u673a\u4f1a \uff0c\u8fd9\u6837\u4e24\u4e2a\u7ebf\u7a0b\u7684\u5199\u64cd\u4f5c\u5c31\u5f88\u5bb9\u6613\u4ea4\u53c9\u8fdb\u884c\u3002 \u7531\u4e8e\u6ca1\u6709\u4e92\u65a5\u4fdd\u62a4\uff0c d.buf \u53ef\u80fd\u88ab\u4e24\u4e2a\u7ebf\u7a0b\u4ea4\u66ff\u5199\u5165\uff0c\u5bfc\u81f4\u6700\u7ec8\u5185\u5bb9\u65e2\u4e0d\u662f\u5168A\uff0c\u4e5f\u4e0d\u662f\u5168B\uff0c\u800c\u662f\u6df7\u5408\u5b57\u7b26\u4e32\uff08\u5982 AABBBBA \u3001 BBBBBAA \u7b49\uff09\uff0c\u751a\u81f3\u53ef\u80fd\u51fa\u73b0\u4e71\u7801\u3002 \u4f1a\u89c2\u5bdf\u5230\u4ec0\u4e48\uff1f \u6709\u65f6\u8f93\u51fa\u662f AAAAAAA \u6216 BBBBBBB \uff08\u67d0\u4e2a\u7ebf\u7a0b\u201c\u8d62\u4e86\u201d\uff09\u3002 \u5f88\u591a\u65f6\u5019\u8f93\u51fa\u662f\u6df7\u5408\u7684\uff0c\u6bd4\u5982 AABBBBB \u3001 BBBAAAA \u3001 ABABABA \u7b49\u3002 \u8fd9\u5c31\u662f \u6570\u636e\u7ade\u4e89 \u548c \u7ade\u6001\u6761\u4ef6 \u7684\u76f4\u89c2\u4f53\u73b0\u3002 \u603b\u7ed3 \u8fd9\u4e2a\u4f8b\u5b50\u8bf4\u660e\uff1a \u591a\u7ebf\u7a0b\u540c\u65f6\u5199\u540c\u4e00\u5757\u5185\u5b58\uff0c\u4e0d\u52a0\u9501\u5c31\u4f1a\u5bfc\u81f4\u6570\u636e\u6df7\u4e71\uff0c\u7ed3\u679c\u4e0d\u53ef\u9884\u6d4b\u3002 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u9047\u5230\u7c7b\u4f3c\u5171\u4eab\u8d44\u6e90\u7684\u64cd\u4f5c\uff0c \u4e00\u5b9a\u8981\u52a0\u9501\u4fdd\u62a4 \uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u96be\u4ee5\u53d1\u73b0\u548c\u590d\u73b0\u7684bug\u3002 \u5982\u9700\u52a0\u9501\u4fdd\u62a4\uff0c\u53ea\u9700\u5728 setA \u548c setB \u91cc\u52a0\u4e0a mutex \u5373\u53ef\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u603b\u7ed3 \u591a\u7ebf\u7a0b\u5199\u540c\u4e00\u5757\u5185\u5b58\uff0c\u4e0d\u52a0\u9501\u7406\u8bba\u4e0a\u4e00\u5b9a\u4f1a\u51fa\u9519\uff0c\u4f46\u5b9e\u9645\u201c\u51fa\u9519\u201d\u73b0\u8c61\u51fa\u73b0\u7684\u6982\u7387\u548c\u73af\u5883\u3001\u5199\u5165\u901f\u5ea6\u3001\u7ebf\u7a0b\u8c03\u5ea6\u6709\u5173\u3002 \u7528\u5faa\u73af\u591a\u6b21\u548c\u9010\u5b57\u8282\u5199\u5165+\u5ef6\u8fdf\uff0c\u53ef\u4ee5\u6781\u5927\u63d0\u9ad8\u51fa\u9519\u6982\u7387\uff0c\u66f4\u5bb9\u6613\u89c2\u5bdf\u5230\u95ee\u9898\u3002 2. \u540c\u6b65\uff08condition_variable\uff09 \u4f5c\u7528 \uff1a\u8ba9\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u67d0\u4e2a\u6761\u4ef6\u6210\u7acb\uff0c\u7531\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u901a\u77e5\u5b83\u7ee7\u7eed\u6267\u884c\uff0c\u5e38\u7528\u4e8e\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u578b\u3002 \u57fa\u672c\u7528\u6cd5 #include <iostream> #include <thread> #include <mutex> using namespace std ; mutex mtx ; // \u5168\u5c40\u4e92\u65a5\u9501\uff0c\u4fdd\u62a4ready\u53d8\u91cf bool ready = false ; // \u7ebf\u7a0b\u540c\u6b65\u6807\u5fd7 // \u5de5\u4f5c\u7ebf\u7a0b\u51fd\u6570\uff0c\u7b49\u5f85ready\u53d8\u4e3atrue\u518d\u7ee7\u7eed void worker () { while ( true ) { mtx . lock (); // \u52a0\u9501\uff0c\u5b89\u5168\u8bbf\u95eeready if ( ready ) { mtx . unlock (); // \u89e3\u9501 break ; // ready\u4e3atrue\uff0c\u9000\u51fa\u5faa\u73af } mtx . unlock (); // \u89e3\u9501 this_thread :: sleep_for ( chrono :: milliseconds ( 10 )); // \u4f11\u7720\u4e00\u4f1a\u513f\uff0c\u907f\u514dCPU\u7a7a\u8f6c } cout << \"Worker thread running!\" << endl ; } int main () { thread t ( worker ); // \u521b\u5efa\u5e76\u542f\u52a8\u5de5\u4f5c\u7ebf\u7a0b this_thread :: sleep_for ( chrono :: seconds ( 1 )); // \u4e3b\u7ebf\u7a0b\u4f11\u77201\u79d2\uff0c\u6a21\u62df\u51c6\u5907\u5de5\u4f5c mtx . lock (); // \u52a0\u9501 ready = true ; // \u8bbe\u7f6eready\u4e3atrue\uff0c\u901a\u77e5\u5de5\u4f5c\u7ebf\u7a0b mtx . unlock (); // \u89e3\u9501 t . join (); // \u7b49\u5f85\u5de5\u4f5c\u7ebf\u7a0b\u7ed3\u675f return 0 ; } \u603b\u7ed3\uff1a - \u4e92\u65a5\u9501\uff08mutex\uff09\u7528\u4e8e\u4fdd\u62a4\u5171\u4eab\u8d44\u6e90\uff0c\u9632\u6b62\u7ade\u6001\u6761\u4ef6\u3002 - \u6761\u4ef6\u53d8\u91cf\uff08condition_variable\uff09\u7528\u4e8e\u7ebf\u7a0b\u95f4\u7684\u540c\u6b65\u4e0e\u901a\u4fe1\u3002 condition_variable \uff08\u6761\u4ef6\u53d8\u91cf\uff09\u4e00\u822c\u7528\u4e8e \u7ebf\u7a0b\u95f4\u540c\u6b65 \uff0c\u8ba9\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u67d0\u4e2a\u6761\u4ef6\u6210\u7acb\uff0c\u7531\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u901a\u77e5\u5b83\u4eec\u7ee7\u7eed\u6267\u884c\u3002\u5e38\u89c1\u4e8e\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u578b\u7b49\u573a\u666f\u3002 \u6807\u51c6\u7528\u6cd5 #include <iostream> #include <thread> #include <mutex> #include <condition_variable> using namespace std ; mutex mtx ; condition_variable cv ; bool ready = false ; void worker () { unique_lock < mutex > lock ( mtx ); // \u5fc5\u987b\u7528unique_lock cv . wait ( lock , []{ return ready ; }); // \u7b49\u5f85ready\u4e3atrue cout << \"Worker thread running!\" << endl ; } int main () { thread t ( worker ); this_thread :: sleep_for ( chrono :: seconds ( 1 )); // \u4e3b\u7ebf\u7a0b\u6a21\u62df\u51c6\u5907 { lock_guard < mutex > lock ( mtx ); ready = true ; // \u8bbe\u7f6e\u6761\u4ef6 } cv . notify_one (); // \u901a\u77e5\u7b49\u5f85\u7684\u7ebf\u7a0b t . join (); return 0 ; } \u7528\u6cd5\u8bf4\u660e \u7b49\u5f85\u65b9 \uff08\u5982worker\u7ebf\u7a0b\uff09\uff1a \u7528 unique_lock<mutex> \u52a0\u9501\u3002 \u8c03\u7528 cv.wait(lock, \u6761\u4ef6) \uff0c\u5982\u679c\u6761\u4ef6\u4e0d\u6ee1\u8db3\u5c31\u963b\u585e\u7b49\u5f85\uff0c\u76f4\u5230\u88ab\u901a\u77e5\u4e14\u6761\u4ef6\u6ee1\u8db3\u3002 \u901a\u77e5\u65b9 \uff08\u5982\u4e3b\u7ebf\u7a0b\uff09\uff1a \u4fee\u6539\u6761\u4ef6\u53d8\u91cf\u524d\u52a0\u9501\uff0c\u8bbe\u7f6e\u6761\u4ef6\u3002 \u8c03\u7528 cv.notify_one() \u6216 cv.notify_all() \u901a\u77e5\u7b49\u5f85\u7ebf\u7a0b\u3002 \u603b\u7ed3\uff1a - condition_variable \u914d\u5408 mutex \u548c\u6761\u4ef6\u6807\u5fd7\u4f7f\u7528\uff0c\u5b9e\u73b0\u7ebf\u7a0b\u95f4\u9ad8\u6548\u540c\u6b65\u4e0e\u901a\u4fe1\u3002 - \u63a8\u8350\u7528 cv.wait(lock, \u6761\u4ef6) \u8fd9\u79cd\u5199\u6cd5\uff0c\u907f\u514d\u865a\u5047\u5524\u9192\u3002","title":"\u7ebf\u7a0b\u4e92\u65a5\u4e0e\u540c\u6b65"},{"location":"C%2B%2B/Multithreading/mutex/#1-mutex","text":"\u4f5c\u7528 \uff1a\u4fdd\u8bc1\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\uff0c\u9632\u6b62\u6570\u636e\u7ade\u4e89\u3002","title":"1. \u4e92\u65a5\uff08mutex\uff09"},{"location":"C%2B%2B/Multithreading/mutex/#_1","text":"#include <iostream> #include <thread> #include <mutex> using namespace std ; mutex mtx ; // \u5b9a\u4e49\u4e00\u4e2a\u4e92\u65a5\u9501 void print ( int id ) { mtx . lock (); // \u52a0\u9501 cout << \"Thread \" << id << endl ; mtx . unlock (); // \u89e3\u9501 } int main () { thread t1 ( print , 1 ); thread t2 ( print , 2 ); t1 . join (); t2 . join (); return 0 ; } \u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff1a thread t1 ( print , 1 ); thread t2 ( print , 2 ); print \u662f\u7ebf\u7a0b\u8981\u6267\u884c\u7684\u51fd\u6570\u540d\u3002 1 \u548c 2 \u662f\u4f20\u9012\u7ed9 print \u51fd\u6570\u7684\u53c2\u6570\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c t1 \u7ebf\u7a0b\u4f1a\u6267\u884c print(1) \uff0c t2 \u7ebf\u7a0b\u4f1a\u6267\u884c print(2) \u3002 \u8fd9\u6837\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u80fd\u62ff\u5230\u4e0d\u540c\u7684\u53c2\u6570\uff0c\u8f93\u51fa\u4e0d\u540c\u7684\u5185\u5bb9\u3002 \u63a8\u8350\u5199\u6cd5\uff1a void print ( int id ) { lock_guard < mutex > lock ( mtx ); // \u81ea\u52a8\u52a0\u9501\u548c\u89e3\u9501 cout << \"Thread \" << id << endl ; }","title":"\u57fa\u672c\u7528\u6cd5"},{"location":"C%2B%2B/Multithreading/mutex/#mtxlockmtxunlock","text":"\u73b0\u5728\u7684\u4ee3\u7801\u91cc\uff0c print \u51fd\u6570\u53ea\u662f\u7b80\u5355\u5730\u8f93\u51fa\u4e00\u53e5\u8bdd\uff1a void print ( int id ) { cout << \"Thread \" << id << endl ; } \u4e3a\u4ec0\u4e48\u53bb\u6389 mtx \u4e5f\u6ca1\u4e8b\uff1f \u56e0\u4e3a\uff1a - cout << ... \u8fd9\u884c\u4ee3\u7801\u5f88\u77ed\uff0c\u4e24\u4e2a\u7ebf\u7a0b\u51e0\u4e4e\u4e0d\u4f1a\u540c\u65f6\u5199\u5165\u540c\u4e00\u884c\uff0c\u51fa\u73b0\u8f93\u51fa\u6df7\u4e71\u7684\u6982\u7387\u5f88\u4f4e\u3002 - \u5373\u4f7f\u6709\u65f6\u8f93\u51fa\u987a\u5e8f\u9519\u4e71\uff08\u6bd4\u5982\u4e24\u884c\u5185\u5bb9\u4ea4\u53c9\u5728\u4e00\u8d77\uff09\uff0c\u5bf9\u7a0b\u5e8f\u529f\u80fd\u6ca1\u6709\u5f71\u54cd\uff0c\u53ea\u662f\u663e\u793a\u4e0a\u4e0d\u6574\u9f50\u3002 \u4f46\u5b9e\u9645\u4e0a\uff1a - cout \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8f93\u51fa\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5185\u5bb9\u4ea4\u53c9\u3001\u4e71\u7801\u7b49\u95ee\u9898\u3002 - \u5982\u679c\u4e34\u754c\u533a\uff08\u5171\u4eab\u8d44\u6e90\u64cd\u4f5c\uff09\u53d8\u590d\u6742\uff0c\u6bd4\u5982\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u4fee\u6539\u540c\u4e00\u4e2a\u53d8\u91cf\uff0c\u6ca1\u6709\u52a0\u9501\u5c31\u4f1a\u51fa\u9519\u3002 \u603b\u7ed3\uff1a \u672c\u4f8b\u4e2d\u53bb\u6389 mtx \u6ca1\u4e8b\uff0c\u662f\u56e0\u4e3a\u64cd\u4f5c\u7b80\u5355\u4e14\u5f71\u54cd\u4e0d\u5927\u3002\u4f46\u5728\u5b9e\u9645\u591a\u7ebf\u7a0b\u5f00\u53d1\u4e2d\uff0c \u53ea\u8981\u6709\u5171\u4eab\u8d44\u6e90\u64cd\u4f5c\uff0c\u90fd\u5e94\u8be5\u52a0\u9501\u4fdd\u62a4 \uff0c\u5426\u5219\u5bb9\u6613\u51fa\u73b0\u96be\u4ee5\u53d1\u73b0\u7684\u7ade\u6001\u6761\u4ef6\u548c\u6570\u636e\u9519\u8bef\u3002","title":"\u4e3a\u4ec0\u4e48\u53bb\u6389mtx.lock()\u548cmtx.unlock()\u4e5f\u6ca1\u4e8b"},{"location":"C%2B%2B/Multithreading/mutex/#_2","text":"\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\uff0c \u7edd\u5927\u591a\u6570\u7ade\u6001\u6761\u4ef6\u90fd\u662f\u201c\u6982\u7387\u6027\u201d\u51fa\u9519 \uff0c\u4e0d\u52a0\u9501\u65f6\u201c\u5fc5\u5b9a\u51fa\u9519\u201d\u7684\u4f8b\u5b50\u5f88\u96be\u4fdd\u8bc1\u6bcf\u6b21\u90fd\u590d\u73b0\u3002\u4f46\u53ef\u4ee5\u901a\u8fc7 \u589e\u52a0\u7ebf\u7a0b\u6570\u91cf\u3001\u5faa\u73af\u6b21\u6570\u3001\u6216\u8005\u8ba9\u7ebf\u7a0bsleep\u5236\u9020\u7ade\u4e89 \uff0c\u6781\u5927\u63d0\u9ad8\u51fa\u9519\u6982\u7387\u3002","title":"\u627e\u4e2a\u7a0b\u5e8f\u89c2\u5bdf\u52a0\u9501\u548c\u4e0d\u52a0\u9501\u7684\u533a\u522b"},{"location":"C%2B%2B/Multithreading/mutex/#_3","text":"void setA () { for ( int i = 0 ; i < 7 ; ++ i ) { d . buf [ i ] = 'A' ; std :: this_thread :: sleep_for ( std :: chrono :: nanoseconds ( 1 )); } d . buf [ 7 ] = '\\0' ; } void setB () { for ( int i = 0 ; i < 7 ; ++ i ) { d . buf [ i ] = 'B' ; std :: this_thread :: sleep_for ( std :: chrono :: nanoseconds ( 1 )); } d . buf [ 7 ] = '\\0' ; } \u8fd9\u6837\u6bcf\u6b21\u5199\u4e00\u4e2a\u5b57\u7b26\uff0c\u589e\u52a0\u7ebf\u7a0b\u5207\u6362\u7684\u673a\u4f1a\uff0c \u66f4\u5bb9\u6613\u51fa\u73b0\u6df7\u5408\u5b57\u7b26\u4e32 \uff08\u5982 AABBBBA \u7b49\uff09\u3002 \u8fd9\u4e2a\u7a0b\u5e8f\u5f88\u597d\u5730\u6f14\u793a\u4e86 \u591a\u7ebf\u7a0b\u4e0d\u52a0\u9501\u5bfc\u81f4\u6570\u636e\u7ade\u4e89\u548c\u7ed3\u679c\u4e0d\u53ef\u9884\u6d4b \u7684\u73b0\u8c61\u3002\u4e0b\u9762\u662f\u8be6\u7ec6\u89e3\u91ca\uff1a","title":"\u8ba9\u5199\u64cd\u4f5c\u53d8\u6162"},{"location":"C%2B%2B/Multithreading/mutex/#_4","text":"\u6709\u4e00\u4e2a\u5168\u5c40\u7ed3\u6784\u4f53 Data d \uff0c\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4 buf[8] \u3002 \u6709\u4e24\u4e2a\u7ebf\u7a0b\u51fd\u6570 setA() \u548c setB() \uff0c\u5206\u522b\u628a d.buf \u7684\u524d7\u4e2a\u5b57\u7b26\u5199\u6210 'A' \u6216 'B' \uff0c\u6bcf\u5199\u4e00\u4e2a\u5b57\u7b26\u90fd sleep \u4e00\u4e0b\uff0c\u6700\u540e\u52a0\u4e0a\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26 '\\0' \u3002 \u5728 main() \u4e2d\uff0c\u5206\u522b\u542f\u52a8\u4e24\u4e2a\u7ebf\u7a0b t1(setA) \u548c t2(setB) \uff0c\u5e76\u7b49\u5f85\u5b83\u4eec\u7ed3\u675f\uff0c\u7136\u540e\u8f93\u51fa d.buf \u3002","title":"\u7a0b\u5e8f\u7ed3\u6784"},{"location":"C%2B%2B/Multithreading/mutex/#_5","text":"setA \u548c setB \u4e24\u4e2a\u7ebf\u7a0b \u540c\u65f6\u64cd\u4f5c\u540c\u4e00\u5757\u5185\u5b58 \uff08 d.buf \uff09\uff0c\u4f46\u6ca1\u6709\u52a0\u9501\u4fdd\u62a4\u3002 \u6bcf\u4e2a\u7ebf\u7a0b\u5199\u4e00\u4e2a\u5b57\u7b26\u540e\u90fd\u4f1a\u77ed\u6682\u4f11\u7720\uff0c \u4eba\u4e3a\u5236\u9020\u4e86\u7ebf\u7a0b\u5207\u6362\u7684\u673a\u4f1a \uff0c\u8fd9\u6837\u4e24\u4e2a\u7ebf\u7a0b\u7684\u5199\u64cd\u4f5c\u5c31\u5f88\u5bb9\u6613\u4ea4\u53c9\u8fdb\u884c\u3002 \u7531\u4e8e\u6ca1\u6709\u4e92\u65a5\u4fdd\u62a4\uff0c d.buf \u53ef\u80fd\u88ab\u4e24\u4e2a\u7ebf\u7a0b\u4ea4\u66ff\u5199\u5165\uff0c\u5bfc\u81f4\u6700\u7ec8\u5185\u5bb9\u65e2\u4e0d\u662f\u5168A\uff0c\u4e5f\u4e0d\u662f\u5168B\uff0c\u800c\u662f\u6df7\u5408\u5b57\u7b26\u4e32\uff08\u5982 AABBBBA \u3001 BBBBBAA \u7b49\uff09\uff0c\u751a\u81f3\u53ef\u80fd\u51fa\u73b0\u4e71\u7801\u3002","title":"\u8fd0\u884c\u539f\u7406"},{"location":"C%2B%2B/Multithreading/mutex/#_6","text":"\u6709\u65f6\u8f93\u51fa\u662f AAAAAAA \u6216 BBBBBBB \uff08\u67d0\u4e2a\u7ebf\u7a0b\u201c\u8d62\u4e86\u201d\uff09\u3002 \u5f88\u591a\u65f6\u5019\u8f93\u51fa\u662f\u6df7\u5408\u7684\uff0c\u6bd4\u5982 AABBBBB \u3001 BBBAAAA \u3001 ABABABA \u7b49\u3002 \u8fd9\u5c31\u662f \u6570\u636e\u7ade\u4e89 \u548c \u7ade\u6001\u6761\u4ef6 \u7684\u76f4\u89c2\u4f53\u73b0\u3002","title":"\u4f1a\u89c2\u5bdf\u5230\u4ec0\u4e48\uff1f"},{"location":"C%2B%2B/Multithreading/mutex/#_7","text":"\u8fd9\u4e2a\u4f8b\u5b50\u8bf4\u660e\uff1a \u591a\u7ebf\u7a0b\u540c\u65f6\u5199\u540c\u4e00\u5757\u5185\u5b58\uff0c\u4e0d\u52a0\u9501\u5c31\u4f1a\u5bfc\u81f4\u6570\u636e\u6df7\u4e71\uff0c\u7ed3\u679c\u4e0d\u53ef\u9884\u6d4b\u3002 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u9047\u5230\u7c7b\u4f3c\u5171\u4eab\u8d44\u6e90\u7684\u64cd\u4f5c\uff0c \u4e00\u5b9a\u8981\u52a0\u9501\u4fdd\u62a4 \uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u96be\u4ee5\u53d1\u73b0\u548c\u590d\u73b0\u7684bug\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/Multithreading/mutex/#setasetbmutex","text":"","title":"\u5982\u9700\u52a0\u9501\u4fdd\u62a4\uff0c\u53ea\u9700\u5728setA\u548csetB\u91cc\u52a0\u4e0amutex\u5373\u53ef\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002"},{"location":"C%2B%2B/Multithreading/mutex/#_8","text":"\u591a\u7ebf\u7a0b\u5199\u540c\u4e00\u5757\u5185\u5b58\uff0c\u4e0d\u52a0\u9501\u7406\u8bba\u4e0a\u4e00\u5b9a\u4f1a\u51fa\u9519\uff0c\u4f46\u5b9e\u9645\u201c\u51fa\u9519\u201d\u73b0\u8c61\u51fa\u73b0\u7684\u6982\u7387\u548c\u73af\u5883\u3001\u5199\u5165\u901f\u5ea6\u3001\u7ebf\u7a0b\u8c03\u5ea6\u6709\u5173\u3002 \u7528\u5faa\u73af\u591a\u6b21\u548c\u9010\u5b57\u8282\u5199\u5165+\u5ef6\u8fdf\uff0c\u53ef\u4ee5\u6781\u5927\u63d0\u9ad8\u51fa\u9519\u6982\u7387\uff0c\u66f4\u5bb9\u6613\u89c2\u5bdf\u5230\u95ee\u9898\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/Multithreading/mutex/#2-condition_variable","text":"\u4f5c\u7528 \uff1a\u8ba9\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u67d0\u4e2a\u6761\u4ef6\u6210\u7acb\uff0c\u7531\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u901a\u77e5\u5b83\u7ee7\u7eed\u6267\u884c\uff0c\u5e38\u7528\u4e8e\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u578b\u3002","title":"2. \u540c\u6b65\uff08condition_variable\uff09"},{"location":"C%2B%2B/Multithreading/mutex/#_9","text":"#include <iostream> #include <thread> #include <mutex> using namespace std ; mutex mtx ; // \u5168\u5c40\u4e92\u65a5\u9501\uff0c\u4fdd\u62a4ready\u53d8\u91cf bool ready = false ; // \u7ebf\u7a0b\u540c\u6b65\u6807\u5fd7 // \u5de5\u4f5c\u7ebf\u7a0b\u51fd\u6570\uff0c\u7b49\u5f85ready\u53d8\u4e3atrue\u518d\u7ee7\u7eed void worker () { while ( true ) { mtx . lock (); // \u52a0\u9501\uff0c\u5b89\u5168\u8bbf\u95eeready if ( ready ) { mtx . unlock (); // \u89e3\u9501 break ; // ready\u4e3atrue\uff0c\u9000\u51fa\u5faa\u73af } mtx . unlock (); // \u89e3\u9501 this_thread :: sleep_for ( chrono :: milliseconds ( 10 )); // \u4f11\u7720\u4e00\u4f1a\u513f\uff0c\u907f\u514dCPU\u7a7a\u8f6c } cout << \"Worker thread running!\" << endl ; } int main () { thread t ( worker ); // \u521b\u5efa\u5e76\u542f\u52a8\u5de5\u4f5c\u7ebf\u7a0b this_thread :: sleep_for ( chrono :: seconds ( 1 )); // \u4e3b\u7ebf\u7a0b\u4f11\u77201\u79d2\uff0c\u6a21\u62df\u51c6\u5907\u5de5\u4f5c mtx . lock (); // \u52a0\u9501 ready = true ; // \u8bbe\u7f6eready\u4e3atrue\uff0c\u901a\u77e5\u5de5\u4f5c\u7ebf\u7a0b mtx . unlock (); // \u89e3\u9501 t . join (); // \u7b49\u5f85\u5de5\u4f5c\u7ebf\u7a0b\u7ed3\u675f return 0 ; } \u603b\u7ed3\uff1a - \u4e92\u65a5\u9501\uff08mutex\uff09\u7528\u4e8e\u4fdd\u62a4\u5171\u4eab\u8d44\u6e90\uff0c\u9632\u6b62\u7ade\u6001\u6761\u4ef6\u3002 - \u6761\u4ef6\u53d8\u91cf\uff08condition_variable\uff09\u7528\u4e8e\u7ebf\u7a0b\u95f4\u7684\u540c\u6b65\u4e0e\u901a\u4fe1\u3002 condition_variable \uff08\u6761\u4ef6\u53d8\u91cf\uff09\u4e00\u822c\u7528\u4e8e \u7ebf\u7a0b\u95f4\u540c\u6b65 \uff0c\u8ba9\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u67d0\u4e2a\u6761\u4ef6\u6210\u7acb\uff0c\u7531\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u901a\u77e5\u5b83\u4eec\u7ee7\u7eed\u6267\u884c\u3002\u5e38\u89c1\u4e8e\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u578b\u7b49\u573a\u666f\u3002","title":"\u57fa\u672c\u7528\u6cd5"},{"location":"C%2B%2B/Multithreading/mutex/#_10","text":"#include <iostream> #include <thread> #include <mutex> #include <condition_variable> using namespace std ; mutex mtx ; condition_variable cv ; bool ready = false ; void worker () { unique_lock < mutex > lock ( mtx ); // \u5fc5\u987b\u7528unique_lock cv . wait ( lock , []{ return ready ; }); // \u7b49\u5f85ready\u4e3atrue cout << \"Worker thread running!\" << endl ; } int main () { thread t ( worker ); this_thread :: sleep_for ( chrono :: seconds ( 1 )); // \u4e3b\u7ebf\u7a0b\u6a21\u62df\u51c6\u5907 { lock_guard < mutex > lock ( mtx ); ready = true ; // \u8bbe\u7f6e\u6761\u4ef6 } cv . notify_one (); // \u901a\u77e5\u7b49\u5f85\u7684\u7ebf\u7a0b t . join (); return 0 ; }","title":"\u6807\u51c6\u7528\u6cd5"},{"location":"C%2B%2B/Multithreading/mutex/#_11","text":"\u7b49\u5f85\u65b9 \uff08\u5982worker\u7ebf\u7a0b\uff09\uff1a \u7528 unique_lock<mutex> \u52a0\u9501\u3002 \u8c03\u7528 cv.wait(lock, \u6761\u4ef6) \uff0c\u5982\u679c\u6761\u4ef6\u4e0d\u6ee1\u8db3\u5c31\u963b\u585e\u7b49\u5f85\uff0c\u76f4\u5230\u88ab\u901a\u77e5\u4e14\u6761\u4ef6\u6ee1\u8db3\u3002 \u901a\u77e5\u65b9 \uff08\u5982\u4e3b\u7ebf\u7a0b\uff09\uff1a \u4fee\u6539\u6761\u4ef6\u53d8\u91cf\u524d\u52a0\u9501\uff0c\u8bbe\u7f6e\u6761\u4ef6\u3002 \u8c03\u7528 cv.notify_one() \u6216 cv.notify_all() \u901a\u77e5\u7b49\u5f85\u7ebf\u7a0b\u3002 \u603b\u7ed3\uff1a - condition_variable \u914d\u5408 mutex \u548c\u6761\u4ef6\u6807\u5fd7\u4f7f\u7528\uff0c\u5b9e\u73b0\u7ebf\u7a0b\u95f4\u9ad8\u6548\u540c\u6b65\u4e0e\u901a\u4fe1\u3002 - \u63a8\u8350\u7528 cv.wait(lock, \u6761\u4ef6) \u8fd9\u79cd\u5199\u6cd5\uff0c\u907f\u514d\u865a\u5047\u5524\u9192\u3002","title":"\u7528\u6cd5\u8bf4\u660e"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/","text":"\u6790\u6784\u51fd\u6570\u53ef\u4ee5\u662f\u865a\u51fd\u6570\uff0c\u800c\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570 override \u548c final \u662f\u7528\u4e8e\u4fee\u9970\u865a\u51fd\u6570\u7684\u5173\u952e\u5b57 \u5f15\u7528\u548c\u6307\u9488\u5b9e\u73b0\u7ee7\u627f\u591a\u6001\u6027 \u4e0d\u7528\u865a\u51fd\u6570\u65f6\u662f\u600e\u6837\u7684 \u8c03\u7528\u4ece\u57fa\u7c7b\u7ee7\u627f\u6765\u7684\u6210\u5458\u51fd\u6570\u5b9e\u73b0\u591a\u6001 \u603b\u5171\u6709\u54ea\u4e9b\u65b9\u6cd5\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u6027 \u865a\u7279\u6027 \u57fa\u7c7b\u5bf9\u8c61\u6307\u9488 \u57fa\u7c7b\u5bf9\u8c61\u5f15\u7528 \u57fa\u7c7b\u6210\u5458\u51fd\u6570 \u5728 C++ \u4e2d\uff0c \u57fa\u7c7b\u5bf9\u8c61\u6307\u9488 \u3001 \u57fa\u7c7b\u5bf9\u8c61\u5f15\u7528 \u548c \u57fa\u7c7b\u6210\u5458\u51fd\u6570 \u662f\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u7684\u5e38\u89c1\u65b9\u5f0f\u3002\u4ee5\u4e0b\u662f\u5bf9\u8fd9\u4e09\u79cd\u65b9\u5f0f\u7684\u8be6\u7ec6\u89e3\u91ca\uff1a 1. \u57fa\u7c7b\u5bf9\u8c61\u6307\u9488 \u901a\u8fc7\u57fa\u7c7b\u7684\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u865a\u51fd\u6570\uff0c\u53ef\u4ee5\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002 \u539f\u7406\uff1a \u57fa\u7c7b\u6307\u9488\u53ef\u4ee5\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3002 \u5f53\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4f1a\u6839\u636e\u6307\u9488\u5b9e\u9645\u6307\u5411\u7684\u5bf9\u8c61\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\uff08\u8fd0\u884c\u65f6\u7ed1\u5b9a\uff09\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> using namespace std ; class Base { public : virtual void display () { // \u865a\u51fd\u6570 cout << \"Base display\" << endl ; } }; class Derived : public Base { public : void display () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived display\" << endl ; } }; int main () { Base * obj = new Derived (); // \u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61 obj -> display (); // \u8f93\u51fa: Derived display delete obj ; return 0 ; } \u5173\u952e\u70b9\uff1a \u5fc5\u987b\u5c06\u57fa\u7c7b\u7684\u51fd\u6570\u58f0\u660e\u4e3a virtual \uff0c\u5426\u5219\u8c03\u7528\u7684\u662f\u57fa\u7c7b\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u3002 \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 2. \u57fa\u7c7b\u5bf9\u8c61\u5f15\u7528 \u901a\u8fc7\u57fa\u7c7b\u7684\u5f15\u7528\u7ed1\u5b9a\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u865a\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002 \u539f\u7406\uff1a \u57fa\u7c7b\u5f15\u7528\u53ef\u4ee5\u7ed1\u5b9a\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3002 \u5f53\u57fa\u7c7b\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4f1a\u6839\u636e\u5f15\u7528\u5b9e\u9645\u7ed1\u5b9a\u7684\u5bf9\u8c61\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\uff08\u8fd0\u884c\u65f6\u7ed1\u5b9a\uff09\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> using namespace std ; class Base { public : virtual void display () { // \u865a\u51fd\u6570 cout << \"Base display\" << endl ; } }; class Derived : public Base { public : void display () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived display\" << endl ; } }; int main () { Derived d ; Base & ref = d ; // \u57fa\u7c7b\u5f15\u7528\u7ed1\u5b9a\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61 ref . display (); // \u8f93\u51fa: Derived display return 0 ; } \u5173\u952e\u70b9\uff1a \u548c\u57fa\u7c7b\u6307\u9488\u7c7b\u4f3c\uff0c\u57fa\u7c7b\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4e5f\u4f1a\u6839\u636e\u5b9e\u9645\u7ed1\u5b9a\u7684\u5bf9\u8c61\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 \u5f15\u7528\u7684\u4f7f\u7528\u66f4\u52a0\u76f4\u89c2\uff0c\u907f\u514d\u4e86\u6307\u9488\u7684\u89e3\u5f15\u7528\u64cd\u4f5c\u3002 3. \u57fa\u7c7b\u6210\u5458\u51fd\u6570 \u901a\u8fc7\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8c03\u7528\u865a\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002 \u539f\u7406\uff1a \u5982\u679c\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8c03\u7528\u4e86\u865a\u51fd\u6570\uff0c\u5e76\u4e14\u8be5\u6210\u5458\u51fd\u6570\u88ab\u6d3e\u751f\u7c7b\u7ee7\u627f\uff0c\u90a3\u4e48\u8c03\u7528\u8be5\u6210\u5458\u51fd\u6570\u65f6\uff0c\u865a\u51fd\u6570\u7684\u884c\u4e3a\u4ecd\u7136\u662f\u591a\u6001\u7684\u3002 \u8fd9\u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u7684\u673a\u5236\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> using namespace std ; class Base { public : virtual void display () { // \u865a\u51fd\u6570 cout << \"Base display\" << endl ; } void callDisplay () { // \u57fa\u7c7b\u6210\u5458\u51fd\u6570\u8c03\u7528\u865a\u51fd\u6570 display (); } }; class Derived : public Base { public : void display () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived display\" << endl ; } }; int main () { Derived d ; d . callDisplay (); // \u8f93\u51fa: Derived display return 0 ; } \u5173\u952e\u70b9\uff1a \u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4ecd\u7136\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\u3002 \u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u9690\u85cf\u865a\u51fd\u6570\u7684\u8c03\u7528\u7ec6\u8282\uff0c\u63d0\u4f9b\u66f4\u9ad8\u5c42\u6b21\u7684\u63a5\u53e3\u3002 \u603b\u7ed3 \u5b9e\u73b0\u65b9\u5f0f \u539f\u7406 \u793a\u4f8b\u8c03\u7528\u65b9\u5f0f \u57fa\u7c7b\u5bf9\u8c61\u6307\u9488 \u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u901a\u8fc7\u6307\u9488\u8c03\u7528\u865a\u51fd\u6570\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002 Base* obj = new Derived(); \u57fa\u7c7b\u5bf9\u8c61\u5f15\u7528 \u57fa\u7c7b\u5f15\u7528\u7ed1\u5b9a\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u901a\u8fc7\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002 Base& ref = derivedObj; \u57fa\u7c7b\u6210\u5458\u51fd\u6570 \u57fa\u7c7b\u6210\u5458\u51fd\u6570\u8c03\u7528\u865a\u51fd\u6570\uff0c\u865a\u51fd\u6570\u7684\u884c\u4e3a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\uff08\u8fd0\u884c\u65f6\u7ed1\u5b9a\uff09\u3002 derivedObj.callDisplay(); \u8fd9\u4e09\u79cd\u65b9\u5f0f\u90fd\u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u548c\u8fd0\u884c\u65f6\u7ed1\u5b9a\u673a\u5236\uff0c\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u573a\u666f\u3002\u901a\u8fc7\u8fd9\u4e9b\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7075\u6d3b\u7684\u52a8\u6001\u591a\u6001\u6027\u3002 \u4e3a\u4ec0\u4e48\u4e0d\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u90fd\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u51fd\u6570 \u5728 C++ \u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u6ca1\u6709\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u603b\u662f\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u3002\u8fd9\u662f\u56e0\u4e3a \u975e\u865a\u51fd\u6570\u7684\u8c03\u7528\u662f\u9759\u6001\u7ed1\u5b9a\u7684 \uff0c\u800c\u865a\u51fd\u6570\u7684\u8c03\u7528\u662f \u52a8\u6001\u7ed1\u5b9a\u7684 \u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u539f\u56e0\uff1a 1. \u9759\u6001\u7ed1\u5b9a vs \u52a8\u6001\u7ed1\u5b9a \u9759\u6001\u7ed1\u5b9a\uff08Static Binding\uff09 \u975e\u865a\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u4e86\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 \u7f16\u8bd1\u5668\u6839\u636e\u6307\u9488\u6216\u5f15\u7528\u7684\u7c7b\u578b\uff08\u800c\u4e0d\u662f\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\uff09\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 \u8fd9\u79cd\u7ed1\u5b9a\u65b9\u5f0f\u79f0\u4e3a \u9759\u6001\u7ed1\u5b9a \u6216 \u65e9\u7ed1\u5b9a \u3002 \u52a8\u6001\u7ed1\u5b9a\uff08Dynamic Binding\uff09 \u865a\u51fd\u6570\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 \u8fd9\u79cd\u7ed1\u5b9a\u65b9\u5f0f\u79f0\u4e3a \u52a8\u6001\u7ed1\u5b9a \u6216 \u665a\u7ed1\u5b9a \u3002 \u52a8\u6001\u7ed1\u5b9a\u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u548c\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\u3002 2. \u975e\u865a\u51fd\u6570\u7684\u884c\u4e3a \u5f53\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\u65f6\uff0c\u8c03\u7528\u7684\u662f\u57fa\u7c7b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u6d3e\u751f\u7c7b\u4e2d\u91cd\u5199\u7684\u51fd\u6570\u3002\u8fd9\u662f\u56e0\u4e3a\u975e\u865a\u51fd\u6570\u7684\u8c03\u7528\u662f\u9759\u6001\u7ed1\u5b9a\u7684\uff0c\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u5df2\u7ecf\u51b3\u5b9a\u4e86\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> using namespace std ; class Base { public : void display () { // \u975e\u865a\u51fd\u6570 cout << \"Base display\" << endl ; } }; class Derived : public Base { public : void display () { // \u91cd\u5199\u975e\u865a\u51fd\u6570 cout << \"Derived display\" << endl ; } }; int main () { Base * obj = new Derived (); // \u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61 obj -> display (); // \u8f93\u51fa: Base display delete obj ; return 0 ; } \u89e3\u91ca\uff1a obj \u662f\u4e00\u4e2a\u57fa\u7c7b\u6307\u9488\uff0c\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3002 \u56e0\u4e3a display \u4e0d\u662f\u865a\u51fd\u6570\uff0c\u8c03\u7528\u65f6\u4f1a\u6839\u636e\u6307\u9488\u7684\u7c7b\u578b\uff08 Base* \uff09\u51b3\u5b9a\u8c03\u7528\u57fa\u7c7b\u7684 display \u51fd\u6570\uff0c\u800c\u4e0d\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684 display \u51fd\u6570\u3002 3. \u865a\u51fd\u6570\u7684\u884c\u4e3a \u5982\u679c\u5c06\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u5219\u8c03\u7528\u65f6\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> using namespace std ; class Base { public : virtual void display () { // \u865a\u51fd\u6570 cout << \"Base display\" << endl ; } }; class Derived : public Base { public : void display () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived display\" << endl ; } }; int main () { Base * obj = new Derived (); // \u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61 obj -> display (); // \u8f93\u51fa: Derived display delete obj ; return 0 ; } \u89e3\u91ca\uff1a \u5c06 display \u58f0\u660e\u4e3a\u865a\u51fd\u6570\u540e\uff0c\u8c03\u7528\u65f6\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\uff08 Derived \uff09\u51b3\u5b9a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684 display \u51fd\u6570\u3002 4. \u4e3a\u4ec0\u4e48\u9700\u8981\u865a\u51fd\u6570 \u865a\u51fd\u6570\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5b9e\u73b0 \u52a8\u6001\u591a\u6001\u6027 \uff0c\u5373\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u3002\u6ca1\u6709\u865a\u51fd\u6570\u65f6\uff0cC++ \u9ed8\u8ba4\u4f7f\u7528\u9759\u6001\u7ed1\u5b9a\uff0c\u8fd9\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u5bfc\u81f4\u610f\u5916\u884c\u4e3a\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std ; class Base { public : void display () { // \u975e\u865a\u51fd\u6570 cout << \"Base display\" << endl ; } virtual void show () { // \u865a\u51fd\u6570 cout << \"Base show\" << endl ; } }; class Derived : public Base { public : void display () { // \u91cd\u5199\u975e\u865a\u51fd\u6570 cout << \"Derived display\" << endl ; } void show () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived show\" << endl ; } }; int main () { Base * obj = new Derived (); obj -> display (); // \u8f93\u51fa: Base display obj -> show (); // \u8f93\u51fa: Derived show delete obj ; return 0 ; } \u89e3\u91ca\uff1a display \u662f\u975e\u865a\u51fd\u6570\uff0c\u56e0\u6b64\u8c03\u7528\u7684\u662f\u57fa\u7c7b\u7684 display \u3002 show \u662f\u865a\u51fd\u6570\uff0c\u56e0\u6b64\u8c03\u7528\u7684\u662f\u6d3e\u751f\u7c7b\u7684 show \u3002 5. \u865a\u51fd\u6570\u8868\uff08vtable\uff09\u548c\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09 \u865a\u51fd\u6570\u7684\u52a8\u6001\u7ed1\u5b9a\u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u548c\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\uff1a - \u6bcf\u4e2a\u5305\u542b\u865a\u51fd\u6570\u7684\u7c7b\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff08vtable\uff09\uff0c\u5176\u4e2d\u5b58\u50a8\u4e86\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u5730\u5740\u3002 - \u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\uff0c\u6307\u5411\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 - \u5f53\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u901a\u8fc7 vptr \u67e5\u627e\u865a\u51fd\u6570\u8868\u4e2d\u7684\u51fd\u6570\u5730\u5740\uff0c\u5e76\u8c03\u7528\u5b9e\u9645\u7684\u51fd\u6570\u3002 6. \u603b\u7ed3 \u51fd\u6570\u7c7b\u578b \u7ed1\u5b9a\u65b9\u5f0f \u8c03\u7528\u7ed3\u679c \u975e\u865a\u51fd\u6570 \u9759\u6001\u7ed1\u5b9a \u8c03\u7528\u57fa\u7c7b\u7684\u51fd\u6570\uff08\u6839\u636e\u6307\u9488\u6216\u5f15\u7528\u7684\u7c7b\u578b\u51b3\u5b9a\uff09\u3002 \u865a\u51fd\u6570 \u52a8\u6001\u7ed1\u5b9a \u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\uff08\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\uff09\u3002 \u5982\u679c\u9700\u8981\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u6027\uff0c\u5fc5\u987b\u5c06\u57fa\u7c7b\u7684\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002 \u5982\u679c\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u8c03\u7528\u65f6\u603b\u662f\u6839\u636e\u6307\u9488\u6216\u5f15\u7528\u7684\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002 \u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u5df2\u7ecf\u5199\u597d\u4e86\uff0c\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u4e5f\u5728main\u51fd\u6570\u4e2d\u5199\u597d\u4e86\uff0c\u8fd9\u4e2a\u591a\u6001\u4f53\u73b0\u5728\u54ea \u591a\u6001\u7684\u610f\u4e49\u5728\u4e8e \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027 \uff0c\u4f7f\u5f97\u7a0b\u5e8f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u52a8\u6001\u5730\u8c03\u7528\u5408\u9002\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u660e\u786e\u6307\u5b9a\u5177\u4f53\u7684\u7c7b\u578b\u3002\u8fd9\u79cd\u673a\u5236\u5728\u8bbe\u8ba1\u590d\u6742\u7cfb\u7edf\u3001\u5b9e\u73b0\u6a21\u5757\u5316\u548c\u51cf\u5c11\u4ee3\u7801\u8026\u5408\u65f6\u975e\u5e38\u91cd\u8981\u3002 \u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u89e3\u91ca\uff1a 1. \u591a\u6001\u7684\u6838\u5fc3\u610f\u4e49 \u591a\u6001\u7684\u6838\u5fc3\u5728\u4e8e \u8fd0\u884c\u65f6\u7684\u52a8\u6001\u884c\u4e3a \uff0c\u5b83\u5141\u8bb8\u7a0b\u5e8f\u5728\u4e0d\u77e5\u9053\u5bf9\u8c61\u5177\u4f53\u7c7b\u578b\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\u3002\u8fd9\u79cd\u673a\u5236\u4f7f\u5f97\u4ee3\u7801\u53ef\u4ee5\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u800c\u65e0\u9700\u663e\u5f0f\u5730\u5224\u65ad\u5bf9\u8c61\u7684\u7c7b\u578b\u3002 \u793a\u4f8b\uff1a\u6ca1\u6709\u591a\u6001\u7684\u60c5\u51b5\u4e0b \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u7ed8\u56fe\u7a0b\u5e8f\uff0c\u9700\u8981\u7ed8\u5236\u4e0d\u540c\u7684\u5f62\u72b6\uff08\u5982\u5706\u5f62\u3001\u77e9\u5f62\u7b49\uff09\u3002\u5982\u679c\u6ca1\u6709\u591a\u6001\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u5199\u7c7b\u4f3c\u8fd9\u6837\u7684\u4ee3\u7801\uff1a #include <iostream> using namespace std ; class Circle { public : void draw () { cout << \"Drawing Circle\" << endl ; } }; class Rectangle { public : void draw () { cout << \"Drawing Rectangle\" << endl ; } }; int main () { Circle c ; Rectangle r ; // \u624b\u52a8\u5224\u65ad\u7c7b\u578b\u5e76\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570 c . draw (); r . draw (); return 0 ; } \u95ee\u9898\uff1a \u5982\u679c\u9700\u8981\u6dfb\u52a0\u65b0\u7684\u5f62\u72b6\uff08\u5982\u4e09\u89d2\u5f62\uff09\uff0c\u9700\u8981\u4fee\u6539\u4ee3\u7801\uff0c\u589e\u52a0\u65b0\u7684\u5224\u65ad\u903b\u8f91\u3002 \u4ee3\u7801\u7684\u53ef\u6269\u5c55\u6027\u5dee\uff0c\u8026\u5408\u5ea6\u9ad8\u3002 2. \u4f7f\u7528\u591a\u6001\u7684\u89e3\u51b3\u65b9\u6848 \u901a\u8fc7\u591a\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0d\u540c\u7684\u5f62\u72b6\u62bd\u8c61\u4e3a\u4e00\u4e2a\u57fa\u7c7b\uff0c\u5e76\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\uff1a #include <iostream> using namespace std ; class Shape { public : virtual void draw () = 0 ; // \u7eaf\u865a\u51fd\u6570 }; class Circle : public Shape { public : void draw () override { cout << \"Drawing Circle\" << endl ; } }; class Rectangle : public Shape { public : void draw () override { cout << \"Drawing Rectangle\" << endl ; } }; int main () { Shape * shapes [ 2 ]; shapes [ 0 ] = new Circle (); shapes [ 1 ] = new Rectangle (); // \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0 for ( int i = 0 ; i < 2 ; i ++ ) { shapes [ i ] -> draw (); } // \u91ca\u653e\u5185\u5b58 delete shapes [ 0 ]; delete shapes [ 1 ]; return 0 ; } \u4f18\u52bf\uff1a \u7edf\u4e00\u63a5\u53e3 \uff1a\u6240\u6709\u5f62\u72b6\u90fd\u7ee7\u627f\u81ea Shape \uff0c\u8c03\u7528\u65f6\u53ea\u9700\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5373\u53ef\u3002 \u6613\u4e8e\u6269\u5c55 \uff1a\u5982\u679c\u9700\u8981\u6dfb\u52a0\u65b0\u7684\u5f62\u72b6\uff08\u5982\u4e09\u89d2\u5f62\uff09\uff0c\u53ea\u9700\u7ee7\u627f Shape \u5e76\u5b9e\u73b0 draw \u51fd\u6570\uff0c\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801\u3002 3. \u591a\u6001\u7684\u5b9e\u9645\u5e94\u7528\u573a\u666f \uff081\uff09 \u6846\u67b6\u8bbe\u8ba1 \u5728\u5927\u578b\u8f6f\u4ef6\u6846\u67b6\u4e2d\uff0c\u591a\u6001\u5141\u8bb8\u6846\u67b6\u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u800c\u5177\u4f53\u7684\u5b9e\u73b0\u7531\u7528\u6237\u5b9a\u4e49\u3002\u4f8b\u5982\uff1a - GUI \u6846\u67b6\u4e2d\uff0c\u6309\u94ae\u3001\u6587\u672c\u6846\u7b49\u63a7\u4ef6\u90fd\u7ee7\u627f\u81ea\u4e00\u4e2a\u57fa\u7c7b Widget \uff0c\u6846\u67b6\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u63a7\u4ef6\u7684\u884c\u4e3a\u3002 - \u6e38\u620f\u5f15\u64ce\u4e2d\uff0c\u6240\u6709\u6e38\u620f\u5bf9\u8c61\uff08\u5982\u73a9\u5bb6\u3001\u654c\u4eba\u3001\u9053\u5177\uff09\u90fd\u7ee7\u627f\u81ea\u4e00\u4e2a\u57fa\u7c7b GameObject \uff0c\u5f15\u64ce\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u7ba1\u7406\u8fd9\u4e9b\u5bf9\u8c61\u3002 \uff082\uff09 \u5de5\u5382\u6a21\u5f0f \u5de5\u5382\u6a21\u5f0f\u901a\u8fc7\u591a\u6001\u8fd4\u56de\u57fa\u7c7b\u6307\u9488\uff0c\u52a8\u6001\u521b\u5efa\u5bf9\u8c61\u3002\u4f8b\u5982\uff1a class ShapeFactory { public : static Shape * createShape ( const string & type ) { if ( type == \"circle\" ) return new Circle (); if ( type == \"rectangle\" ) return new Rectangle (); return nullptr ; } }; int main () { Shape * shape = ShapeFactory :: createShape ( \"circle\" ); shape -> draw (); // \u8f93\u51fa: Drawing Circle delete shape ; return 0 ; } \uff083\uff09 \u63d2\u4ef6\u7cfb\u7edf \u591a\u6001\u5141\u8bb8\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u52a0\u8f7d\u4e0d\u540c\u7684\u63d2\u4ef6\uff0c\u800c\u65e0\u9700\u4fee\u6539\u4e3b\u7a0b\u5e8f\u3002\u4f8b\u5982\uff1a - \u6d4f\u89c8\u5668\u901a\u8fc7\u591a\u6001\u52a0\u8f7d\u4e0d\u540c\u7684\u6269\u5c55\uff08\u5982\u5e7f\u544a\u62e6\u622a\u5668\u3001\u5bc6\u7801\u7ba1\u7406\u5668\uff09\u3002 - \u97f3\u4e50\u64ad\u653e\u5668\u901a\u8fc7\u591a\u6001\u652f\u6301\u4e0d\u540c\u7684\u97f3\u9891\u683c\u5f0f\u89e3\u7801\u5668\u3002 4. \u4e3a\u4ec0\u4e48\u5728\u8fd0\u884c\u65f6\u9700\u8981\u591a\u6001 \u867d\u7136\u7a0b\u5e8f\u5728\u7f16\u8bd1\u65f6\u5df2\u7ecf\u5199\u597d\u4e86\uff0c\u4f46\u5728\u4ee5\u4e0b\u573a\u666f\u4e2d\uff0c\u591a\u6001\u7684\u52a8\u6001\u884c\u4e3a\u975e\u5e38\u91cd\u8981\uff1a \uff081\uff09 \u5904\u7406\u672a\u77e5\u7c7b\u578b\u7684\u5bf9\u8c61 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u65e0\u6cd5\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u5bf9\u8c61\u7684\u5177\u4f53\u7c7b\u578b\u3002\u4f8b\u5982\uff1a - \u4e00\u4e2a\u7ed8\u56fe\u7a0b\u5e8f\u53ef\u80fd\u9700\u8981\u5904\u7406\u7528\u6237\u52a8\u6001\u6dfb\u52a0\u7684\u5f62\u72b6\u3002 - \u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668\u53ef\u80fd\u9700\u8981\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u8bf7\u6c42\u3002 \uff082\uff09 \u51cf\u5c11\u4ee3\u7801\u8026\u5408 \u591a\u6001\u901a\u8fc7\u62bd\u8c61\u57fa\u7c7b\u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u907f\u514d\u4e86\u663e\u5f0f\u7684\u7c7b\u578b\u5224\u65ad\u548c\u786c\u7f16\u7801\uff0c\u964d\u4f4e\u4e86\u4ee3\u7801\u7684\u8026\u5408\u5ea6\u3002 \uff083\uff09 \u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u6269\u5c55\u6027 \u901a\u8fc7\u591a\u6001\uff0c\u53ef\u4ee5\u8f7b\u677e\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\uff0c\u800c\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801\u3002\u4f8b\u5982\uff1a - \u5728\u7ed8\u56fe\u7a0b\u5e8f\u4e2d\u6dfb\u52a0\u65b0\u7684\u5f62\u72b6\uff0c\u53ea\u9700\u7ee7\u627f\u57fa\u7c7b\u5e76\u5b9e\u73b0\u865a\u51fd\u6570\u3002 5. \u603b\u7ed3 \u591a\u6001\u7684\u610f\u4e49\u5728\u4e8e\uff1a - \u52a8\u6001\u884c\u4e3a \uff1a\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u5408\u9002\u7684\u51fd\u6570\u3002 - \u7edf\u4e00\u63a5\u53e3 \uff1a\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u64cd\u4f5c\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u3002 - \u964d\u4f4e\u8026\u5408 \uff1a\u907f\u514d\u663e\u5f0f\u7684\u7c7b\u578b\u5224\u65ad\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u3002 - \u6613\u4e8e\u6269\u5c55 \uff1a\u6dfb\u52a0\u65b0\u529f\u80fd\u65f6\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801\u3002 \u867d\u7136\u5728\u7b80\u5355\u7684\u7a0b\u5e8f\u4e2d\u591a\u6001\u53ef\u80fd\u663e\u5f97\u591a\u4f59\uff0c\u4f46\u5728\u590d\u6742\u7cfb\u7edf\u4e2d\uff0c\u5b83\u662f\u5b9e\u73b0\u6a21\u5757\u5316\u3001\u53ef\u6269\u5c55\u6027\u548c\u7075\u6d3b\u6027\u7684\u5173\u952e\u5de5\u5177\u3002 \u8fd0\u884c\u65f6\u7684\u7c7b\u578b\u4fe1\u606f RTTI\uff08 Run-Time Type Information \uff0c\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff09\u662f C++ \u63d0\u4f9b\u7684\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002\u5b83\u4e3b\u8981\u7528\u4e8e\u652f\u6301\u52a8\u6001\u7c7b\u578b\u68c0\u67e5\u548c\u7c7b\u578b\u5b89\u5168\u7684\u591a\u6001\u64cd\u4f5c\u3002 1. RTTI \u7684\u4f5c\u7528 RTTI \u7684\u4e3b\u8981\u4f5c\u7528\u662f\uff1a - \u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b \uff1a\u5728\u8fd0\u884c\u65f6\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\u6216\u5176\u6d3e\u751f\u7c7b\u3002 - \u652f\u6301\u7c7b\u578b\u5b89\u5168\u7684\u7c7b\u578b\u8f6c\u6362 \uff1a\u901a\u8fc7 dynamic_cast \u5b9e\u73b0\u5b89\u5168\u7684\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\u3002 - \u8c03\u8bd5\u548c\u65e5\u5fd7 \uff1a\u5728\u8fd0\u884c\u65f6\u83b7\u53d6\u5bf9\u8c61\u7684\u7c7b\u578b\u4fe1\u606f\uff0c\u7528\u4e8e\u8c03\u8bd5\u6216\u8bb0\u5f55\u65e5\u5fd7\u3002 2. RTTI \u7684\u4e3b\u8981\u5de5\u5177 \uff081\uff09 dynamic_cast \u7528\u4e8e\u5728\u7ee7\u627f\u5c42\u6b21\u4e2d\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u7684\u5411\u4e0b\u8f6c\u6362\uff08\u4ece\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u4e3a\u6d3e\u751f\u7c7b\u6307\u9488\u6216\u5f15\u7528\uff09\u3002 \u5982\u679c\u8f6c\u6362\u6210\u529f\uff0c\u8fd4\u56de\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\uff1b\u5982\u679c\u5931\u8d25\uff0c\u8fd4\u56de nullptr \uff08\u6307\u9488\uff09\u6216\u629b\u51fa\u5f02\u5e38\uff08\u5f15\u7528\uff09\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std ; class Base { public : virtual ~ Base () {} // \u5fc5\u987b\u6709\u865a\u51fd\u6570\u4ee5\u652f\u6301 RTTI }; class Derived : public Base { public : void display () { cout << \"Derived display\" << endl ; } }; int main () { Base * base = new Derived (); Derived * derived = dynamic_cast < Derived *> ( base ); // \u5b89\u5168\u5411\u4e0b\u8f6c\u6362 if ( derived ) { derived -> display (); // \u8f93\u51fa: Derived display } else { cout << \"Conversion failed\" << endl ; } delete base ; return 0 ; } \u6ce8\u610f\uff1a dynamic_cast \u53ea\u80fd\u7528\u4e8e\u6709\u865a\u51fd\u6570\u7684\u7c7b\uff0c\u56e0\u4e3a RTTI \u4f9d\u8d56\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u3002 \u5982\u679c\u57fa\u7c7b\u6ca1\u6709\u865a\u51fd\u6570\uff0c dynamic_cast \u4f1a\u62a5\u9519\u3002 \uff082\uff09 typeid \u7528\u4e8e\u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u4fe1\u606f\u3002 \u8fd4\u56de\u4e00\u4e2a type_info \u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7 type_info::name() \u83b7\u53d6\u7c7b\u578b\u7684\u540d\u79f0\u3002 \u793a\u4f8b\uff1a #include <iostream> #include <typeinfo> using namespace std ; class Base { public : virtual ~ Base () {} // \u5fc5\u987b\u6709\u865a\u51fd\u6570\u4ee5\u652f\u6301 RTTI }; class Derived : public Base {}; int main () { Base * base = new Derived (); // \u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b cout << \"Type of *base: \" << typeid ( * base ). name () << endl ; // \u8f93\u51fa: Derived cout << \"Type of base: \" << typeid ( base ). name () << endl ; // \u8f93\u51fa: Base* delete base ; return 0 ; } \u6ce8\u610f\uff1a typeid \u4e5f\u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u3002 \u5982\u679c\u5bf9\u8c61\u662f\u975e\u591a\u6001\u7c7b\u578b\uff0c typeid \u8fd4\u56de\u7684\u662f\u9759\u6001\u7c7b\u578b\u3002 3. RTTI \u7684\u4f9d\u8d56 RTTI \u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u548c\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\uff1a - \u6bcf\u4e2a\u5305\u542b\u865a\u51fd\u6570\u7684\u7c7b\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff08vtable\uff09\uff0c\u5176\u4e2d\u5b58\u50a8\u4e86\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u5730\u5740\u3002 - \u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\uff0c\u6307\u5411\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 - RTTI \u4f7f\u7528\u865a\u51fd\u6570\u8868\u6765\u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002 4. RTTI \u7684\u4f18\u7f3a\u70b9 \u4f18\u70b9\uff1a \u63d0\u4f9b\u4e86\u7c7b\u578b\u5b89\u5168\u7684\u52a8\u6001\u7c7b\u578b\u68c0\u67e5\u3002 \u652f\u6301\u590d\u6742\u7684\u591a\u6001\u64cd\u4f5c\uff0c\u589e\u5f3a\u4e86\u7a0b\u5e8f\u7684\u7075\u6d3b\u6027\u3002 \u7f3a\u70b9\uff1a \u6027\u80fd\u5f00\u9500 \uff1aRTTI \u4f9d\u8d56\u865a\u51fd\u6570\u8868\uff0c\u53ef\u80fd\u4f1a\u589e\u52a0\u8fd0\u884c\u65f6\u7684\u6027\u80fd\u5f00\u9500\u3002 \u4ee3\u7801\u590d\u6742\u6027 \uff1a\u8fc7\u5ea6\u4f7f\u7528 RTTI \u53ef\u80fd\u5bfc\u81f4\u4ee3\u7801\u96be\u4ee5\u7ef4\u62a4\u3002 \u8bbe\u8ba1\u95ee\u9898 \uff1a\u9891\u7e41\u4f7f\u7528 RTTI \u53ef\u80fd\u8868\u660e\u7a0b\u5e8f\u7684\u8bbe\u8ba1\u5b58\u5728\u95ee\u9898\uff0c\u5e94\u8be5\u901a\u8fc7\u66f4\u597d\u7684\u8bbe\u8ba1\u907f\u514d\u5bf9 RTTI \u7684\u4f9d\u8d56\u3002 5. RTTI \u7684\u5b9e\u9645\u5e94\u7528\u573a\u666f \u7c7b\u578b\u5b89\u5168\u7684\u5411\u4e0b\u8f6c\u6362 \uff1a\u5728\u591a\u6001\u73af\u5883\u4e2d\uff0c\u4f7f\u7528 dynamic_cast \u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u7684\u5411\u4e0b\u8f6c\u6362\u3002 \u8c03\u8bd5\u548c\u65e5\u5fd7 \uff1a\u5728\u8c03\u8bd5\u6216\u8bb0\u5f55\u65e5\u5fd7\u65f6\uff0c\u901a\u8fc7 typeid \u83b7\u53d6\u5bf9\u8c61\u7684\u7c7b\u578b\u4fe1\u606f\u3002 \u63d2\u4ef6\u7cfb\u7edf \uff1a\u5728\u63d2\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u901a\u8fc7 RTTI \u5224\u65ad\u52a0\u8f7d\u7684\u5bf9\u8c61\u7c7b\u578b\u5e76\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 6. RTTI \u7684\u66ff\u4ee3\u65b9\u6848 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u66f4\u597d\u7684\u8bbe\u8ba1\u907f\u514d\u5bf9 RTTI \u7684\u4f9d\u8d56\uff1a - \u865a\u51fd\u6570 \uff1a\u901a\u8fc7\u865a\u51fd\u6570\u5b9e\u73b0\u52a8\u6001\u884c\u4e3a\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 dynamic_cast \u3002 - \u6807\u5fd7\u53d8\u91cf \uff1a\u5728\u7c7b\u4e2d\u6dfb\u52a0\u6807\u5fd7\u53d8\u91cf\uff0c\u7528\u4e8e\u6807\u8bc6\u5bf9\u8c61\u7684\u7c7b\u578b\u3002 - \u6a21\u677f \uff1a\u4f7f\u7528\u6a21\u677f\u5b9e\u73b0\u7c7b\u578b\u5b89\u5168\u7684\u64cd\u4f5c\uff0c\u907f\u514d\u8fd0\u884c\u65f6\u7684\u7c7b\u578b\u68c0\u67e5\u3002 7. \u603b\u7ed3 \u5de5\u5177 \u4f5c\u7528 dynamic_cast \u7c7b\u578b\u5b89\u5168\u7684\u5411\u4e0b\u8f6c\u6362\uff0c\u5931\u8d25\u65f6\u8fd4\u56de nullptr \u6216\u629b\u51fa\u5f02\u5e38\u3002 typeid \u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u4fe1\u606f\uff0c\u8fd4\u56de type_info \u5bf9\u8c61\u3002 RTTI \u662f C++ \u63d0\u4f9b\u7684\u4e00\u79cd\u5f3a\u5927\u7684\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\u673a\u5236\uff0c\u4f46\u5e94\u8c28\u614e\u4f7f\u7528\uff0c\u907f\u514d\u56e0\u8fc7\u5ea6\u4f9d\u8d56 RTTI \u800c\u5bfc\u81f4\u6027\u80fd\u95ee\u9898\u6216\u4ee3\u7801\u590d\u6742\u6027\u589e\u52a0\u3002\u5728\u8bbe\u8ba1\u826f\u597d\u7684\u7cfb\u7edf\u4e2d\uff0c\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u865a\u51fd\u6570\u6216\u6a21\u677f\u7b49\u673a\u5236\u66ff\u4ee3 RTTI \u7684\u4f7f\u7528\u3002 dynamic_cast\u5b83\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48 \u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c dynamic_cast \u7684\u4f5c\u7528\u662f\u8fdb\u884c \u7c7b\u578b\u5b89\u5168\u7684\u5411\u4e0b\u8f6c\u6362 \uff0c\u5373\u5c06\u57fa\u7c7b\u6307\u9488 Base* \u8f6c\u6362\u4e3a\u6d3e\u751f\u7c7b\u6307\u9488 Derived* \u3002\u4ee5\u4e0b\u662f dynamic_cast \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u53d1\u751f\u7684\u5177\u4f53\u64cd\u4f5c\uff1a 1. dynamic_cast \u7684\u5de5\u4f5c\u539f\u7406 dynamic_cast \u662f C++ \u63d0\u4f9b\u7684\u4e00\u79cd\u8fd0\u884c\u65f6\u7c7b\u578b\u8f6c\u6362\u64cd\u4f5c\u7b26\uff0c\u7528\u4e8e\u5728\u7ee7\u627f\u5c42\u6b21\u4e2d\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 \u5b83\u4f9d\u8d56\u4e8e RTTI\uff08\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff09 \uff0c\u901a\u8fc7\u68c0\u67e5\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u6765\u51b3\u5b9a\u662f\u5426\u53ef\u4ee5\u8fdb\u884c\u8f6c\u6362\u3002 2. \u4ee3\u7801\u4e2d\u7684\u5177\u4f53\u8fc7\u7a0b \uff081\uff09\u521b\u5efa\u5bf9\u8c61 Base * base = new Derived (); - \u8fd9\u91cc\uff0c base \u662f\u4e00\u4e2a\u57fa\u7c7b\u6307\u9488\uff0c\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61 Derived \u3002 - \u56e0\u4e3a Base \u7684\u6790\u6784\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u7c7b Base \u652f\u6301 RTTI\u3002 \uff082\uff09\u5c1d\u8bd5\u5411\u4e0b\u8f6c\u6362 Derived * derived = dynamic_cast < Derived *> ( base ); - dynamic_cast \u68c0\u67e5 base \u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002 - \u5982\u679c base \u6307\u5411\u7684\u662f Derived \u7c7b\u578b\u7684\u5bf9\u8c61\uff08\u6216\u5176\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff09\uff0c\u8f6c\u6362\u6210\u529f\uff0c\u8fd4\u56de\u6d3e\u751f\u7c7b\u6307\u9488\u3002 - \u5982\u679c base \u6307\u5411\u7684\u4e0d\u662f Derived \u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u8f6c\u6362\u5931\u8d25\uff0c\u8fd4\u56de nullptr \u3002 \uff083\uff09\u68c0\u67e5\u8f6c\u6362\u7ed3\u679c if ( derived ) { derived -> display (); // \u8f93\u51fa: Derived display } else { cout << \"Conversion failed\" << endl ; } - \u5982\u679c\u8f6c\u6362\u6210\u529f\uff0c derived \u4e0d\u4e3a nullptr \uff0c\u8c03\u7528\u6d3e\u751f\u7c7b\u7684 display \u51fd\u6570\u3002 - \u5982\u679c\u8f6c\u6362\u5931\u8d25\uff0c derived \u4e3a nullptr \uff0c\u8f93\u51fa \"Conversion failed\"\u3002 3. dynamic_cast \u7684\u4f9d\u8d56 \u865a\u51fd\u6570\u8868\uff08vtable\uff09 \uff1a dynamic_cast \u4f9d\u8d56\u865a\u51fd\u6570\u8868\u6765\u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002 \u5982\u679c\u57fa\u7c7b\u6ca1\u6709\u865a\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u751f\u6210\u865a\u51fd\u6570\u8868\uff0c dynamic_cast \u5c06\u65e0\u6cd5\u4f7f\u7528\u3002 RTTI\uff08\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff09 \uff1a RTTI \u662f C++ \u63d0\u4f9b\u7684\u8fd0\u884c\u65f6\u673a\u5236\uff0c\u7528\u4e8e\u5b58\u50a8\u548c\u68c0\u67e5\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002 dynamic_cast \u4f7f\u7528 RTTI \u6765\u5224\u65ad\u7c7b\u578b\u662f\u5426\u5339\u914d\u3002 4. \u8f6c\u6362\u6210\u529f\u7684\u6761\u4ef6 \u57fa\u7c7b\u5fc5\u987b\u6709\u865a\u51fd\u6570\uff08\u652f\u6301 RTTI\uff09\u3002 \u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5fc5\u987b\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff08\u6216\u5176\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff09\u3002 5. \u8f6c\u6362\u5931\u8d25\u7684\u60c5\u51b5 \u5982\u679c\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u7684\u5bf9\u8c61\u4e0d\u662f\u76ee\u6807\u6d3e\u751f\u7c7b\u7684\u7c7b\u578b\uff0c dynamic_cast \u4f1a\u5931\u8d25\uff1a - \u5bf9\u4e8e\u6307\u9488\uff0c\u8fd4\u56de nullptr \u3002 - \u5bf9\u4e8e\u5f15\u7528\uff0c\u629b\u51fa std::bad_cast \u5f02\u5e38\u3002 \u793a\u4f8b\uff1a Base * base = new Base (); // \u57fa\u7c7b\u5bf9\u8c61 Derived * derived = dynamic_cast < Derived *> ( base ); // \u8f6c\u6362\u5931\u8d25 if ( derived ) { derived -> display (); } else { cout << \"Conversion failed\" << endl ; // \u8f93\u51fa: Conversion failed } delete base ; 6. dynamic_cast \u7684\u4f18\u70b9 \u7c7b\u578b\u5b89\u5168 \uff1a\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u7c7b\u578b\uff0c\u907f\u514d\u975e\u6cd5\u8f6c\u6362\u3002 \u7075\u6d3b\u6027 \uff1a\u652f\u6301\u590d\u6742\u7684\u7ee7\u627f\u5c42\u6b21\u7ed3\u6784\u3002 7. dynamic_cast \u7684\u6027\u80fd\u5f00\u9500 dynamic_cast \u5728\u8fd0\u884c\u65f6\u9700\u8981\u68c0\u67e5\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u56e0\u6b64\u6bd4 static_cast \u6162\u3002 \u5728\u6027\u80fd\u654f\u611f\u7684\u573a\u666f\u4e2d\uff0c\u5e94\u5c3d\u91cf\u907f\u514d\u9891\u7e41\u4f7f\u7528 dynamic_cast \u3002 \u603b\u7ed3 \u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff1a 1. dynamic_cast \u68c0\u67e5 base \u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u662f\u5426\u662f Derived \u7c7b\u578b\u3002 2. \u5982\u679c\u662f\uff0c\u5219\u8fd4\u56de\u6d3e\u751f\u7c7b\u6307\u9488 Derived* \uff0c\u5e76\u8c03\u7528 Derived::display \u3002 3. \u5982\u679c\u4e0d\u662f\uff0c\u5219\u8fd4\u56de nullptr \uff0c\u5e76\u8f93\u51fa \"Conversion failed\"\u3002 dynamic_cast \u7684\u6838\u5fc3\u662f\u901a\u8fc7 RTTI \u548c\u865a\u51fd\u6570\u8868\u5b9e\u73b0\u7c7b\u578b\u5b89\u5168\u7684\u5411\u4e0b\u8f6c\u6362\u3002 \u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u8fd9\u4e2a\u8f6c\u6362\uff0c\u76f4\u63a5\u58f0\u660eDerived* derived = new Derived\u4e0d\u884c\u5417 \u76f4\u63a5\u58f0\u660e Derived* derived = new Derived \u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u8fd9\u4e0e\u4f7f\u7528 dynamic_cast \u7684\u573a\u666f\u548c\u76ee\u7684\u4e0d\u540c\u3002\u4ee5\u4e0b\u662f\u4e24\u79cd\u65b9\u5f0f\u7684\u5bf9\u6bd4\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u7684\u8be6\u7ec6\u89e3\u91ca\uff1a 1. \u76f4\u63a5\u58f0\u660e\u6d3e\u751f\u7c7b\u6307\u9488 Derived * derived = new Derived (); derived -> display (); // \u76f4\u63a5\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570 \u4f18\u70b9\uff1a \u7b80\u5355\u76f4\u63a5\uff0c\u9002\u7528\u4e8e\u660e\u786e\u77e5\u9053\u5bf9\u8c61\u7c7b\u578b\u7684\u573a\u666f\u3002 \u6ca1\u6709\u8fd0\u884c\u65f6\u5f00\u9500\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u3002 \u7f3a\u70b9\uff1a \u53ea\u80fd\u7528\u4e8e\u660e\u786e\u77e5\u9053\u5bf9\u8c61\u7c7b\u578b\u7684\u60c5\u51b5\u3002 \u5982\u679c\u7a0b\u5e8f\u9700\u8981\u5904\u7406\u591a\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff08\u5982\u57fa\u7c7b\u548c\u591a\u4e2a\u6d3e\u751f\u7c7b\uff09\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7f3a\u4e4f\u7075\u6d3b\u6027\u3002 2. \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8fdb\u884c\u52a8\u6001\u591a\u6001 Base * base = new Derived (); Derived * derived = dynamic_cast < Derived *> ( base ); if ( derived ) { derived -> display (); } \u4f18\u70b9\uff1a \u652f\u6301\u52a8\u6001\u591a\u6001\uff1a\u53ef\u4ee5\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u64cd\u4f5c\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u3002 \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\uff1a\u7a0b\u5e8f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u5408\u9002\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u660e\u786e\u6307\u5b9a\u7c7b\u578b\u3002 \u7c7b\u578b\u5b89\u5168\uff1a dynamic_cast \u4f1a\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u7c7b\u578b\u662f\u5426\u5339\u914d\uff0c\u907f\u514d\u975e\u6cd5\u8f6c\u6362\u3002 \u7f3a\u70b9\uff1a \u6709\u4e00\u5b9a\u7684\u8fd0\u884c\u65f6\u5f00\u9500\uff0c\u56e0\u4e3a\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u3002 \u9700\u8981\u57fa\u7c7b\u6709\u865a\u51fd\u6570\u4ee5\u652f\u6301 RTTI\u3002 3. \u4e3a\u4ec0\u4e48\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362 \u5728\u67d0\u4e9b\u573a\u666f\u4e2d\uff0c\u7a0b\u5e8f\u65e0\u6cd5\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u5bf9\u8c61\u7684\u5177\u4f53\u7c7b\u578b\uff0c\u800c\u662f\u9700\u8981\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u6267\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7c7b\u578b\u8f6c\u6362\uff08\u5982 dynamic_cast \uff09\u662f\u5fc5\u8981\u7684\u3002 \u793a\u4f8b\u573a\u666f\uff1a \u591a\u6001\u5bb9\u5668 \uff1a \u5047\u8bbe\u6709\u4e00\u4e2a\u5bb9\u5668\u5b58\u50a8\u4e86\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\uff08\u57fa\u7c7b\u6307\u9488\uff09\uff0c\u9700\u8981\u5728\u8fd0\u884c\u65f6\u5224\u65ad\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u5e76\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 vector < Base *> objects ; objects . push_back ( new Derived ()); objects . push_back ( new AnotherDerived ()); for ( Base * obj : objects ) { Derived * derived = dynamic_cast < Derived *> ( obj ); if ( derived ) { derived -> display (); // \u53ea\u5bf9 Derived \u7c7b\u578b\u7684\u5bf9\u8c61\u8c03\u7528 display } } \u63d2\u4ef6\u7cfb\u7edf \uff1a \u5728\u63d2\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u4e3b\u7a0b\u5e8f\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u64cd\u4f5c\u63d2\u4ef6\u5bf9\u8c61\uff0c\u800c\u63d2\u4ef6\u7684\u5177\u4f53\u7c7b\u578b\u53ea\u6709\u5728\u8fd0\u884c\u65f6\u624d\u80fd\u786e\u5b9a\u3002 \u6846\u67b6\u8bbe\u8ba1 \uff1a \u5728\u6846\u67b6\u4e2d\uff0c\u57fa\u7c7b\u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u6d3e\u751f\u7c7b\u5b9e\u73b0\u5177\u4f53\u7684\u529f\u80fd\u3002\u6846\u67b6\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\u3002 4. \u76f4\u63a5\u58f0\u660e\u548c\u7c7b\u578b\u8f6c\u6362\u7684\u5bf9\u6bd4 \u65b9\u5f0f \u9002\u7528\u573a\u666f \u7075\u6d3b\u6027 \u8fd0\u884c\u65f6\u5f00\u9500 \u76f4\u63a5\u58f0\u660e\u6d3e\u751f\u7c7b\u6307\u9488 \u5bf9\u8c61\u7c7b\u578b\u5728\u7f16\u8bd1\u65f6\u5df2\u77e5\uff0c\u4e14\u53ea\u9700\u8981\u64cd\u4f5c\u8be5\u7c7b\u578b\u7684\u5bf9\u8c61\u3002 \u4f4e \u65e0 \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8fdb\u884c\u8f6c\u6362 \u5bf9\u8c61\u7c7b\u578b\u5728\u8fd0\u884c\u65f6\u624d\u786e\u5b9a\uff0c\u9700\u8981\u64cd\u4f5c\u591a\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff08\u52a8\u6001\u591a\u6001\uff09\u3002 \u9ad8 \u6709 5. \u603b\u7ed3 \u5982\u679c\u7a0b\u5e8f\u4e2d\u5bf9\u8c61\u7684\u7c7b\u578b\u5728\u7f16\u8bd1\u65f6\u662f\u786e\u5b9a\u7684\uff0c\u76f4\u63a5\u58f0\u660e\u6d3e\u751f\u7c7b\u6307\u9488\u662f\u66f4\u7b80\u5355\u9ad8\u6548\u7684\u9009\u62e9\u3002 \u5982\u679c\u7a0b\u5e8f\u9700\u8981\u5904\u7406\u591a\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u7c7b\u578b\u5728\u8fd0\u884c\u65f6\u624d\u786e\u5b9a\uff0c\u5219\u9700\u8981\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u548c dynamic_cast \u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002 dynamic_cast \u7684\u610f\u4e49\u5728\u4e8e\u63d0\u4f9b\u4e86\u4e00\u79cd\u7c7b\u578b\u5b89\u5168\u7684\u65b9\u5f0f\u6765\u5904\u7406\u590d\u6742\u7684\u7ee7\u627f\u5c42\u6b21\u7ed3\u6784\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u80fd\u591f\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u6267\u884c\u5408\u9002\u7684\u64cd\u4f5c\u3002","title":"5\u670819\u65e5\u57fa\u7840\u77e5\u8bc6"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_1","text":"","title":"\u6790\u6784\u51fd\u6570\u53ef\u4ee5\u662f\u865a\u51fd\u6570\uff0c\u800c\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#override-final","text":"","title":"override \u548c final \u662f\u7528\u4e8e\u4fee\u9970\u865a\u51fd\u6570\u7684\u5173\u952e\u5b57"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_2","text":"","title":"\u5f15\u7528\u548c\u6307\u9488\u5b9e\u73b0\u7ee7\u627f\u591a\u6001\u6027"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_3","text":"","title":"\u4e0d\u7528\u865a\u51fd\u6570\u65f6\u662f\u600e\u6837\u7684"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_4","text":"","title":"\u8c03\u7528\u4ece\u57fa\u7c7b\u7ee7\u627f\u6765\u7684\u6210\u5458\u51fd\u6570\u5b9e\u73b0\u591a\u6001"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_5","text":"","title":"\u603b\u5171\u6709\u54ea\u4e9b\u65b9\u6cd5\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u6027"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_6","text":"\u57fa\u7c7b\u5bf9\u8c61\u6307\u9488 \u57fa\u7c7b\u5bf9\u8c61\u5f15\u7528 \u57fa\u7c7b\u6210\u5458\u51fd\u6570 \u5728 C++ \u4e2d\uff0c \u57fa\u7c7b\u5bf9\u8c61\u6307\u9488 \u3001 \u57fa\u7c7b\u5bf9\u8c61\u5f15\u7528 \u548c \u57fa\u7c7b\u6210\u5458\u51fd\u6570 \u662f\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u7684\u5e38\u89c1\u65b9\u5f0f\u3002\u4ee5\u4e0b\u662f\u5bf9\u8fd9\u4e09\u79cd\u65b9\u5f0f\u7684\u8be6\u7ec6\u89e3\u91ca\uff1a","title":"\u865a\u7279\u6027"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#1","text":"\u901a\u8fc7\u57fa\u7c7b\u7684\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u865a\u51fd\u6570\uff0c\u53ef\u4ee5\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002","title":"1. \u57fa\u7c7b\u5bf9\u8c61\u6307\u9488"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_7","text":"\u57fa\u7c7b\u6307\u9488\u53ef\u4ee5\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3002 \u5f53\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4f1a\u6839\u636e\u6307\u9488\u5b9e\u9645\u6307\u5411\u7684\u5bf9\u8c61\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\uff08\u8fd0\u884c\u65f6\u7ed1\u5b9a\uff09\u3002","title":"\u539f\u7406\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_8","text":"#include <iostream> using namespace std ; class Base { public : virtual void display () { // \u865a\u51fd\u6570 cout << \"Base display\" << endl ; } }; class Derived : public Base { public : void display () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived display\" << endl ; } }; int main () { Base * obj = new Derived (); // \u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61 obj -> display (); // \u8f93\u51fa: Derived display delete obj ; return 0 ; }","title":"\u793a\u4f8b\u4ee3\u7801\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_9","text":"\u5fc5\u987b\u5c06\u57fa\u7c7b\u7684\u51fd\u6570\u58f0\u660e\u4e3a virtual \uff0c\u5426\u5219\u8c03\u7528\u7684\u662f\u57fa\u7c7b\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u3002 \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002","title":"\u5173\u952e\u70b9\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#2","text":"\u901a\u8fc7\u57fa\u7c7b\u7684\u5f15\u7528\u7ed1\u5b9a\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u865a\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002","title":"2. \u57fa\u7c7b\u5bf9\u8c61\u5f15\u7528"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_10","text":"\u57fa\u7c7b\u5f15\u7528\u53ef\u4ee5\u7ed1\u5b9a\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3002 \u5f53\u57fa\u7c7b\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4f1a\u6839\u636e\u5f15\u7528\u5b9e\u9645\u7ed1\u5b9a\u7684\u5bf9\u8c61\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\uff08\u8fd0\u884c\u65f6\u7ed1\u5b9a\uff09\u3002","title":"\u539f\u7406\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_11","text":"#include <iostream> using namespace std ; class Base { public : virtual void display () { // \u865a\u51fd\u6570 cout << \"Base display\" << endl ; } }; class Derived : public Base { public : void display () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived display\" << endl ; } }; int main () { Derived d ; Base & ref = d ; // \u57fa\u7c7b\u5f15\u7528\u7ed1\u5b9a\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61 ref . display (); // \u8f93\u51fa: Derived display return 0 ; }","title":"\u793a\u4f8b\u4ee3\u7801\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_12","text":"\u548c\u57fa\u7c7b\u6307\u9488\u7c7b\u4f3c\uff0c\u57fa\u7c7b\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4e5f\u4f1a\u6839\u636e\u5b9e\u9645\u7ed1\u5b9a\u7684\u5bf9\u8c61\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 \u5f15\u7528\u7684\u4f7f\u7528\u66f4\u52a0\u76f4\u89c2\uff0c\u907f\u514d\u4e86\u6307\u9488\u7684\u89e3\u5f15\u7528\u64cd\u4f5c\u3002","title":"\u5173\u952e\u70b9\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#3","text":"\u901a\u8fc7\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8c03\u7528\u865a\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002","title":"3. \u57fa\u7c7b\u6210\u5458\u51fd\u6570"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_13","text":"\u5982\u679c\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8c03\u7528\u4e86\u865a\u51fd\u6570\uff0c\u5e76\u4e14\u8be5\u6210\u5458\u51fd\u6570\u88ab\u6d3e\u751f\u7c7b\u7ee7\u627f\uff0c\u90a3\u4e48\u8c03\u7528\u8be5\u6210\u5458\u51fd\u6570\u65f6\uff0c\u865a\u51fd\u6570\u7684\u884c\u4e3a\u4ecd\u7136\u662f\u591a\u6001\u7684\u3002 \u8fd9\u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u7684\u673a\u5236\u3002","title":"\u539f\u7406\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_14","text":"#include <iostream> using namespace std ; class Base { public : virtual void display () { // \u865a\u51fd\u6570 cout << \"Base display\" << endl ; } void callDisplay () { // \u57fa\u7c7b\u6210\u5458\u51fd\u6570\u8c03\u7528\u865a\u51fd\u6570 display (); } }; class Derived : public Base { public : void display () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived display\" << endl ; } }; int main () { Derived d ; d . callDisplay (); // \u8f93\u51fa: Derived display return 0 ; }","title":"\u793a\u4f8b\u4ee3\u7801\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_15","text":"\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4ecd\u7136\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\u3002 \u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u9690\u85cf\u865a\u51fd\u6570\u7684\u8c03\u7528\u7ec6\u8282\uff0c\u63d0\u4f9b\u66f4\u9ad8\u5c42\u6b21\u7684\u63a5\u53e3\u3002","title":"\u5173\u952e\u70b9\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_16","text":"\u5b9e\u73b0\u65b9\u5f0f \u539f\u7406 \u793a\u4f8b\u8c03\u7528\u65b9\u5f0f \u57fa\u7c7b\u5bf9\u8c61\u6307\u9488 \u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u901a\u8fc7\u6307\u9488\u8c03\u7528\u865a\u51fd\u6570\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002 Base* obj = new Derived(); \u57fa\u7c7b\u5bf9\u8c61\u5f15\u7528 \u57fa\u7c7b\u5f15\u7528\u7ed1\u5b9a\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u901a\u8fc7\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002 Base& ref = derivedObj; \u57fa\u7c7b\u6210\u5458\u51fd\u6570 \u57fa\u7c7b\u6210\u5458\u51fd\u6570\u8c03\u7528\u865a\u51fd\u6570\uff0c\u865a\u51fd\u6570\u7684\u884c\u4e3a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\uff08\u8fd0\u884c\u65f6\u7ed1\u5b9a\uff09\u3002 derivedObj.callDisplay(); \u8fd9\u4e09\u79cd\u65b9\u5f0f\u90fd\u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u548c\u8fd0\u884c\u65f6\u7ed1\u5b9a\u673a\u5236\uff0c\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u573a\u666f\u3002\u901a\u8fc7\u8fd9\u4e9b\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7075\u6d3b\u7684\u52a8\u6001\u591a\u6001\u6027\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_17","text":"\u5728 C++ \u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u6ca1\u6709\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u603b\u662f\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u3002\u8fd9\u662f\u56e0\u4e3a \u975e\u865a\u51fd\u6570\u7684\u8c03\u7528\u662f\u9759\u6001\u7ed1\u5b9a\u7684 \uff0c\u800c\u865a\u51fd\u6570\u7684\u8c03\u7528\u662f \u52a8\u6001\u7ed1\u5b9a\u7684 \u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u539f\u56e0\uff1a","title":"\u4e3a\u4ec0\u4e48\u4e0d\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u90fd\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u51fd\u6570"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#1-vs","text":"","title":"1. \u9759\u6001\u7ed1\u5b9a vs \u52a8\u6001\u7ed1\u5b9a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#static-binding","text":"\u975e\u865a\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u4e86\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 \u7f16\u8bd1\u5668\u6839\u636e\u6307\u9488\u6216\u5f15\u7528\u7684\u7c7b\u578b\uff08\u800c\u4e0d\u662f\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\uff09\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 \u8fd9\u79cd\u7ed1\u5b9a\u65b9\u5f0f\u79f0\u4e3a \u9759\u6001\u7ed1\u5b9a \u6216 \u65e9\u7ed1\u5b9a \u3002","title":"\u9759\u6001\u7ed1\u5b9a\uff08Static Binding\uff09"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#dynamic-binding","text":"\u865a\u51fd\u6570\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 \u8fd9\u79cd\u7ed1\u5b9a\u65b9\u5f0f\u79f0\u4e3a \u52a8\u6001\u7ed1\u5b9a \u6216 \u665a\u7ed1\u5b9a \u3002 \u52a8\u6001\u7ed1\u5b9a\u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u548c\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\u3002","title":"\u52a8\u6001\u7ed1\u5b9a\uff08Dynamic Binding\uff09"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#2_1","text":"\u5f53\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\u65f6\uff0c\u8c03\u7528\u7684\u662f\u57fa\u7c7b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u6d3e\u751f\u7c7b\u4e2d\u91cd\u5199\u7684\u51fd\u6570\u3002\u8fd9\u662f\u56e0\u4e3a\u975e\u865a\u51fd\u6570\u7684\u8c03\u7528\u662f\u9759\u6001\u7ed1\u5b9a\u7684\uff0c\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u5df2\u7ecf\u51b3\u5b9a\u4e86\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002","title":"2. \u975e\u865a\u51fd\u6570\u7684\u884c\u4e3a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_18","text":"#include <iostream> using namespace std ; class Base { public : void display () { // \u975e\u865a\u51fd\u6570 cout << \"Base display\" << endl ; } }; class Derived : public Base { public : void display () { // \u91cd\u5199\u975e\u865a\u51fd\u6570 cout << \"Derived display\" << endl ; } }; int main () { Base * obj = new Derived (); // \u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61 obj -> display (); // \u8f93\u51fa: Base display delete obj ; return 0 ; }","title":"\u793a\u4f8b\u4ee3\u7801\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_19","text":"obj \u662f\u4e00\u4e2a\u57fa\u7c7b\u6307\u9488\uff0c\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3002 \u56e0\u4e3a display \u4e0d\u662f\u865a\u51fd\u6570\uff0c\u8c03\u7528\u65f6\u4f1a\u6839\u636e\u6307\u9488\u7684\u7c7b\u578b\uff08 Base* \uff09\u51b3\u5b9a\u8c03\u7528\u57fa\u7c7b\u7684 display \u51fd\u6570\uff0c\u800c\u4e0d\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684 display \u51fd\u6570\u3002","title":"\u89e3\u91ca\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#3_1","text":"\u5982\u679c\u5c06\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u5219\u8c03\u7528\u65f6\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002","title":"3. \u865a\u51fd\u6570\u7684\u884c\u4e3a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_20","text":"#include <iostream> using namespace std ; class Base { public : virtual void display () { // \u865a\u51fd\u6570 cout << \"Base display\" << endl ; } }; class Derived : public Base { public : void display () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived display\" << endl ; } }; int main () { Base * obj = new Derived (); // \u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61 obj -> display (); // \u8f93\u51fa: Derived display delete obj ; return 0 ; }","title":"\u793a\u4f8b\u4ee3\u7801\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_21","text":"\u5c06 display \u58f0\u660e\u4e3a\u865a\u51fd\u6570\u540e\uff0c\u8c03\u7528\u65f6\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\uff08 Derived \uff09\u51b3\u5b9a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684 display \u51fd\u6570\u3002","title":"\u89e3\u91ca\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#4","text":"\u865a\u51fd\u6570\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5b9e\u73b0 \u52a8\u6001\u591a\u6001\u6027 \uff0c\u5373\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u3002\u6ca1\u6709\u865a\u51fd\u6570\u65f6\uff0cC++ \u9ed8\u8ba4\u4f7f\u7528\u9759\u6001\u7ed1\u5b9a\uff0c\u8fd9\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u5bfc\u81f4\u610f\u5916\u884c\u4e3a\u3002","title":"4. \u4e3a\u4ec0\u4e48\u9700\u8981\u865a\u51fd\u6570"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_22","text":"#include <iostream> using namespace std ; class Base { public : void display () { // \u975e\u865a\u51fd\u6570 cout << \"Base display\" << endl ; } virtual void show () { // \u865a\u51fd\u6570 cout << \"Base show\" << endl ; } }; class Derived : public Base { public : void display () { // \u91cd\u5199\u975e\u865a\u51fd\u6570 cout << \"Derived display\" << endl ; } void show () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived show\" << endl ; } }; int main () { Base * obj = new Derived (); obj -> display (); // \u8f93\u51fa: Base display obj -> show (); // \u8f93\u51fa: Derived show delete obj ; return 0 ; }","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_23","text":"display \u662f\u975e\u865a\u51fd\u6570\uff0c\u56e0\u6b64\u8c03\u7528\u7684\u662f\u57fa\u7c7b\u7684 display \u3002 show \u662f\u865a\u51fd\u6570\uff0c\u56e0\u6b64\u8c03\u7528\u7684\u662f\u6d3e\u751f\u7c7b\u7684 show \u3002","title":"\u89e3\u91ca\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#5-vtablevptr","text":"\u865a\u51fd\u6570\u7684\u52a8\u6001\u7ed1\u5b9a\u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u548c\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\uff1a - \u6bcf\u4e2a\u5305\u542b\u865a\u51fd\u6570\u7684\u7c7b\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff08vtable\uff09\uff0c\u5176\u4e2d\u5b58\u50a8\u4e86\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u5730\u5740\u3002 - \u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\uff0c\u6307\u5411\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 - \u5f53\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u901a\u8fc7 vptr \u67e5\u627e\u865a\u51fd\u6570\u8868\u4e2d\u7684\u51fd\u6570\u5730\u5740\uff0c\u5e76\u8c03\u7528\u5b9e\u9645\u7684\u51fd\u6570\u3002","title":"5. \u865a\u51fd\u6570\u8868\uff08vtable\uff09\u548c\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#6","text":"\u51fd\u6570\u7c7b\u578b \u7ed1\u5b9a\u65b9\u5f0f \u8c03\u7528\u7ed3\u679c \u975e\u865a\u51fd\u6570 \u9759\u6001\u7ed1\u5b9a \u8c03\u7528\u57fa\u7c7b\u7684\u51fd\u6570\uff08\u6839\u636e\u6307\u9488\u6216\u5f15\u7528\u7684\u7c7b\u578b\u51b3\u5b9a\uff09\u3002 \u865a\u51fd\u6570 \u52a8\u6001\u7ed1\u5b9a \u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\uff08\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\uff09\u3002 \u5982\u679c\u9700\u8981\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u6027\uff0c\u5fc5\u987b\u5c06\u57fa\u7c7b\u7684\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002 \u5982\u679c\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u8c03\u7528\u65f6\u603b\u662f\u6839\u636e\u6307\u9488\u6216\u5f15\u7528\u7684\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002","title":"6. \u603b\u7ed3"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#main","text":"\u591a\u6001\u7684\u610f\u4e49\u5728\u4e8e \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027 \uff0c\u4f7f\u5f97\u7a0b\u5e8f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u52a8\u6001\u5730\u8c03\u7528\u5408\u9002\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u660e\u786e\u6307\u5b9a\u5177\u4f53\u7684\u7c7b\u578b\u3002\u8fd9\u79cd\u673a\u5236\u5728\u8bbe\u8ba1\u590d\u6742\u7cfb\u7edf\u3001\u5b9e\u73b0\u6a21\u5757\u5316\u548c\u51cf\u5c11\u4ee3\u7801\u8026\u5408\u65f6\u975e\u5e38\u91cd\u8981\u3002 \u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u89e3\u91ca\uff1a","title":"\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u5df2\u7ecf\u5199\u597d\u4e86\uff0c\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u4e5f\u5728main\u51fd\u6570\u4e2d\u5199\u597d\u4e86\uff0c\u8fd9\u4e2a\u591a\u6001\u4f53\u73b0\u5728\u54ea"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#1_1","text":"\u591a\u6001\u7684\u6838\u5fc3\u5728\u4e8e \u8fd0\u884c\u65f6\u7684\u52a8\u6001\u884c\u4e3a \uff0c\u5b83\u5141\u8bb8\u7a0b\u5e8f\u5728\u4e0d\u77e5\u9053\u5bf9\u8c61\u5177\u4f53\u7c7b\u578b\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\u3002\u8fd9\u79cd\u673a\u5236\u4f7f\u5f97\u4ee3\u7801\u53ef\u4ee5\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u800c\u65e0\u9700\u663e\u5f0f\u5730\u5224\u65ad\u5bf9\u8c61\u7684\u7c7b\u578b\u3002","title":"1. \u591a\u6001\u7684\u6838\u5fc3\u610f\u4e49"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_24","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u7ed8\u56fe\u7a0b\u5e8f\uff0c\u9700\u8981\u7ed8\u5236\u4e0d\u540c\u7684\u5f62\u72b6\uff08\u5982\u5706\u5f62\u3001\u77e9\u5f62\u7b49\uff09\u3002\u5982\u679c\u6ca1\u6709\u591a\u6001\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u5199\u7c7b\u4f3c\u8fd9\u6837\u7684\u4ee3\u7801\uff1a #include <iostream> using namespace std ; class Circle { public : void draw () { cout << \"Drawing Circle\" << endl ; } }; class Rectangle { public : void draw () { cout << \"Drawing Rectangle\" << endl ; } }; int main () { Circle c ; Rectangle r ; // \u624b\u52a8\u5224\u65ad\u7c7b\u578b\u5e76\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570 c . draw (); r . draw (); return 0 ; }","title":"\u793a\u4f8b\uff1a\u6ca1\u6709\u591a\u6001\u7684\u60c5\u51b5\u4e0b"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_25","text":"\u5982\u679c\u9700\u8981\u6dfb\u52a0\u65b0\u7684\u5f62\u72b6\uff08\u5982\u4e09\u89d2\u5f62\uff09\uff0c\u9700\u8981\u4fee\u6539\u4ee3\u7801\uff0c\u589e\u52a0\u65b0\u7684\u5224\u65ad\u903b\u8f91\u3002 \u4ee3\u7801\u7684\u53ef\u6269\u5c55\u6027\u5dee\uff0c\u8026\u5408\u5ea6\u9ad8\u3002","title":"\u95ee\u9898\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#2_2","text":"\u901a\u8fc7\u591a\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e0d\u540c\u7684\u5f62\u72b6\u62bd\u8c61\u4e3a\u4e00\u4e2a\u57fa\u7c7b\uff0c\u5e76\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\uff1a #include <iostream> using namespace std ; class Shape { public : virtual void draw () = 0 ; // \u7eaf\u865a\u51fd\u6570 }; class Circle : public Shape { public : void draw () override { cout << \"Drawing Circle\" << endl ; } }; class Rectangle : public Shape { public : void draw () override { cout << \"Drawing Rectangle\" << endl ; } }; int main () { Shape * shapes [ 2 ]; shapes [ 0 ] = new Circle (); shapes [ 1 ] = new Rectangle (); // \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0 for ( int i = 0 ; i < 2 ; i ++ ) { shapes [ i ] -> draw (); } // \u91ca\u653e\u5185\u5b58 delete shapes [ 0 ]; delete shapes [ 1 ]; return 0 ; }","title":"2. \u4f7f\u7528\u591a\u6001\u7684\u89e3\u51b3\u65b9\u6848"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_26","text":"\u7edf\u4e00\u63a5\u53e3 \uff1a\u6240\u6709\u5f62\u72b6\u90fd\u7ee7\u627f\u81ea Shape \uff0c\u8c03\u7528\u65f6\u53ea\u9700\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5373\u53ef\u3002 \u6613\u4e8e\u6269\u5c55 \uff1a\u5982\u679c\u9700\u8981\u6dfb\u52a0\u65b0\u7684\u5f62\u72b6\uff08\u5982\u4e09\u89d2\u5f62\uff09\uff0c\u53ea\u9700\u7ee7\u627f Shape \u5e76\u5b9e\u73b0 draw \u51fd\u6570\uff0c\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801\u3002","title":"\u4f18\u52bf\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#3_2","text":"","title":"3. \u591a\u6001\u7684\u5b9e\u9645\u5e94\u7528\u573a\u666f"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#1_2","text":"\u5728\u5927\u578b\u8f6f\u4ef6\u6846\u67b6\u4e2d\uff0c\u591a\u6001\u5141\u8bb8\u6846\u67b6\u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u800c\u5177\u4f53\u7684\u5b9e\u73b0\u7531\u7528\u6237\u5b9a\u4e49\u3002\u4f8b\u5982\uff1a - GUI \u6846\u67b6\u4e2d\uff0c\u6309\u94ae\u3001\u6587\u672c\u6846\u7b49\u63a7\u4ef6\u90fd\u7ee7\u627f\u81ea\u4e00\u4e2a\u57fa\u7c7b Widget \uff0c\u6846\u67b6\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u63a7\u4ef6\u7684\u884c\u4e3a\u3002 - \u6e38\u620f\u5f15\u64ce\u4e2d\uff0c\u6240\u6709\u6e38\u620f\u5bf9\u8c61\uff08\u5982\u73a9\u5bb6\u3001\u654c\u4eba\u3001\u9053\u5177\uff09\u90fd\u7ee7\u627f\u81ea\u4e00\u4e2a\u57fa\u7c7b GameObject \uff0c\u5f15\u64ce\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u7ba1\u7406\u8fd9\u4e9b\u5bf9\u8c61\u3002","title":"\uff081\uff09\u6846\u67b6\u8bbe\u8ba1"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#2_3","text":"\u5de5\u5382\u6a21\u5f0f\u901a\u8fc7\u591a\u6001\u8fd4\u56de\u57fa\u7c7b\u6307\u9488\uff0c\u52a8\u6001\u521b\u5efa\u5bf9\u8c61\u3002\u4f8b\u5982\uff1a class ShapeFactory { public : static Shape * createShape ( const string & type ) { if ( type == \"circle\" ) return new Circle (); if ( type == \"rectangle\" ) return new Rectangle (); return nullptr ; } }; int main () { Shape * shape = ShapeFactory :: createShape ( \"circle\" ); shape -> draw (); // \u8f93\u51fa: Drawing Circle delete shape ; return 0 ; }","title":"\uff082\uff09\u5de5\u5382\u6a21\u5f0f"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#3_3","text":"\u591a\u6001\u5141\u8bb8\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u52a0\u8f7d\u4e0d\u540c\u7684\u63d2\u4ef6\uff0c\u800c\u65e0\u9700\u4fee\u6539\u4e3b\u7a0b\u5e8f\u3002\u4f8b\u5982\uff1a - \u6d4f\u89c8\u5668\u901a\u8fc7\u591a\u6001\u52a0\u8f7d\u4e0d\u540c\u7684\u6269\u5c55\uff08\u5982\u5e7f\u544a\u62e6\u622a\u5668\u3001\u5bc6\u7801\u7ba1\u7406\u5668\uff09\u3002 - \u97f3\u4e50\u64ad\u653e\u5668\u901a\u8fc7\u591a\u6001\u652f\u6301\u4e0d\u540c\u7684\u97f3\u9891\u683c\u5f0f\u89e3\u7801\u5668\u3002","title":"\uff083\uff09\u63d2\u4ef6\u7cfb\u7edf"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#4_1","text":"\u867d\u7136\u7a0b\u5e8f\u5728\u7f16\u8bd1\u65f6\u5df2\u7ecf\u5199\u597d\u4e86\uff0c\u4f46\u5728\u4ee5\u4e0b\u573a\u666f\u4e2d\uff0c\u591a\u6001\u7684\u52a8\u6001\u884c\u4e3a\u975e\u5e38\u91cd\u8981\uff1a","title":"4. \u4e3a\u4ec0\u4e48\u5728\u8fd0\u884c\u65f6\u9700\u8981\u591a\u6001"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#1_3","text":"\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u65e0\u6cd5\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u5bf9\u8c61\u7684\u5177\u4f53\u7c7b\u578b\u3002\u4f8b\u5982\uff1a - \u4e00\u4e2a\u7ed8\u56fe\u7a0b\u5e8f\u53ef\u80fd\u9700\u8981\u5904\u7406\u7528\u6237\u52a8\u6001\u6dfb\u52a0\u7684\u5f62\u72b6\u3002 - \u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668\u53ef\u80fd\u9700\u8981\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u8bf7\u6c42\u3002","title":"\uff081\uff09\u5904\u7406\u672a\u77e5\u7c7b\u578b\u7684\u5bf9\u8c61"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#2_4","text":"\u591a\u6001\u901a\u8fc7\u62bd\u8c61\u57fa\u7c7b\u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u907f\u514d\u4e86\u663e\u5f0f\u7684\u7c7b\u578b\u5224\u65ad\u548c\u786c\u7f16\u7801\uff0c\u964d\u4f4e\u4e86\u4ee3\u7801\u7684\u8026\u5408\u5ea6\u3002","title":"\uff082\uff09\u51cf\u5c11\u4ee3\u7801\u8026\u5408"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#3_4","text":"\u901a\u8fc7\u591a\u6001\uff0c\u53ef\u4ee5\u8f7b\u677e\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\uff0c\u800c\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801\u3002\u4f8b\u5982\uff1a - \u5728\u7ed8\u56fe\u7a0b\u5e8f\u4e2d\u6dfb\u52a0\u65b0\u7684\u5f62\u72b6\uff0c\u53ea\u9700\u7ee7\u627f\u57fa\u7c7b\u5e76\u5b9e\u73b0\u865a\u51fd\u6570\u3002","title":"\uff083\uff09\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u6269\u5c55\u6027"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#5","text":"\u591a\u6001\u7684\u610f\u4e49\u5728\u4e8e\uff1a - \u52a8\u6001\u884c\u4e3a \uff1a\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u5408\u9002\u7684\u51fd\u6570\u3002 - \u7edf\u4e00\u63a5\u53e3 \uff1a\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u64cd\u4f5c\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u3002 - \u964d\u4f4e\u8026\u5408 \uff1a\u907f\u514d\u663e\u5f0f\u7684\u7c7b\u578b\u5224\u65ad\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u3002 - \u6613\u4e8e\u6269\u5c55 \uff1a\u6dfb\u52a0\u65b0\u529f\u80fd\u65f6\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801\u3002 \u867d\u7136\u5728\u7b80\u5355\u7684\u7a0b\u5e8f\u4e2d\u591a\u6001\u53ef\u80fd\u663e\u5f97\u591a\u4f59\uff0c\u4f46\u5728\u590d\u6742\u7cfb\u7edf\u4e2d\uff0c\u5b83\u662f\u5b9e\u73b0\u6a21\u5757\u5316\u3001\u53ef\u6269\u5c55\u6027\u548c\u7075\u6d3b\u6027\u7684\u5173\u952e\u5de5\u5177\u3002","title":"5. \u603b\u7ed3"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_27","text":"RTTI\uff08 Run-Time Type Information \uff0c\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff09\u662f C++ \u63d0\u4f9b\u7684\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002\u5b83\u4e3b\u8981\u7528\u4e8e\u652f\u6301\u52a8\u6001\u7c7b\u578b\u68c0\u67e5\u548c\u7c7b\u578b\u5b89\u5168\u7684\u591a\u6001\u64cd\u4f5c\u3002","title":"\u8fd0\u884c\u65f6\u7684\u7c7b\u578b\u4fe1\u606f"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#1-rtti","text":"RTTI \u7684\u4e3b\u8981\u4f5c\u7528\u662f\uff1a - \u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b \uff1a\u5728\u8fd0\u884c\u65f6\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u5c5e\u4e8e\u67d0\u4e2a\u7c7b\u6216\u5176\u6d3e\u751f\u7c7b\u3002 - \u652f\u6301\u7c7b\u578b\u5b89\u5168\u7684\u7c7b\u578b\u8f6c\u6362 \uff1a\u901a\u8fc7 dynamic_cast \u5b9e\u73b0\u5b89\u5168\u7684\u5411\u4e0b\u7c7b\u578b\u8f6c\u6362\u3002 - \u8c03\u8bd5\u548c\u65e5\u5fd7 \uff1a\u5728\u8fd0\u884c\u65f6\u83b7\u53d6\u5bf9\u8c61\u7684\u7c7b\u578b\u4fe1\u606f\uff0c\u7528\u4e8e\u8c03\u8bd5\u6216\u8bb0\u5f55\u65e5\u5fd7\u3002","title":"1. RTTI \u7684\u4f5c\u7528"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#2-rtti","text":"","title":"2. RTTI \u7684\u4e3b\u8981\u5de5\u5177"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#1dynamic_cast","text":"\u7528\u4e8e\u5728\u7ee7\u627f\u5c42\u6b21\u4e2d\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u7684\u5411\u4e0b\u8f6c\u6362\uff08\u4ece\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u4e3a\u6d3e\u751f\u7c7b\u6307\u9488\u6216\u5f15\u7528\uff09\u3002 \u5982\u679c\u8f6c\u6362\u6210\u529f\uff0c\u8fd4\u56de\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\uff1b\u5982\u679c\u5931\u8d25\uff0c\u8fd4\u56de nullptr \uff08\u6307\u9488\uff09\u6216\u629b\u51fa\u5f02\u5e38\uff08\u5f15\u7528\uff09\u3002","title":"\uff081\uff09dynamic_cast"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_28","text":"#include <iostream> using namespace std ; class Base { public : virtual ~ Base () {} // \u5fc5\u987b\u6709\u865a\u51fd\u6570\u4ee5\u652f\u6301 RTTI }; class Derived : public Base { public : void display () { cout << \"Derived display\" << endl ; } }; int main () { Base * base = new Derived (); Derived * derived = dynamic_cast < Derived *> ( base ); // \u5b89\u5168\u5411\u4e0b\u8f6c\u6362 if ( derived ) { derived -> display (); // \u8f93\u51fa: Derived display } else { cout << \"Conversion failed\" << endl ; } delete base ; return 0 ; }","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_29","text":"dynamic_cast \u53ea\u80fd\u7528\u4e8e\u6709\u865a\u51fd\u6570\u7684\u7c7b\uff0c\u56e0\u4e3a RTTI \u4f9d\u8d56\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u3002 \u5982\u679c\u57fa\u7c7b\u6ca1\u6709\u865a\u51fd\u6570\uff0c dynamic_cast \u4f1a\u62a5\u9519\u3002","title":"\u6ce8\u610f\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#2typeid","text":"\u7528\u4e8e\u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u4fe1\u606f\u3002 \u8fd4\u56de\u4e00\u4e2a type_info \u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7 type_info::name() \u83b7\u53d6\u7c7b\u578b\u7684\u540d\u79f0\u3002","title":"\uff082\uff09typeid"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_30","text":"#include <iostream> #include <typeinfo> using namespace std ; class Base { public : virtual ~ Base () {} // \u5fc5\u987b\u6709\u865a\u51fd\u6570\u4ee5\u652f\u6301 RTTI }; class Derived : public Base {}; int main () { Base * base = new Derived (); // \u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b cout << \"Type of *base: \" << typeid ( * base ). name () << endl ; // \u8f93\u51fa: Derived cout << \"Type of base: \" << typeid ( base ). name () << endl ; // \u8f93\u51fa: Base* delete base ; return 0 ; }","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_31","text":"typeid \u4e5f\u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u3002 \u5982\u679c\u5bf9\u8c61\u662f\u975e\u591a\u6001\u7c7b\u578b\uff0c typeid \u8fd4\u56de\u7684\u662f\u9759\u6001\u7c7b\u578b\u3002","title":"\u6ce8\u610f\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#3-rtti","text":"RTTI \u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u548c\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\uff1a - \u6bcf\u4e2a\u5305\u542b\u865a\u51fd\u6570\u7684\u7c7b\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff08vtable\uff09\uff0c\u5176\u4e2d\u5b58\u50a8\u4e86\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u5730\u5740\u3002 - \u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\uff0c\u6307\u5411\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 - RTTI \u4f7f\u7528\u865a\u51fd\u6570\u8868\u6765\u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002","title":"3. RTTI \u7684\u4f9d\u8d56"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#4-rtti","text":"","title":"4. RTTI \u7684\u4f18\u7f3a\u70b9"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_32","text":"\u63d0\u4f9b\u4e86\u7c7b\u578b\u5b89\u5168\u7684\u52a8\u6001\u7c7b\u578b\u68c0\u67e5\u3002 \u652f\u6301\u590d\u6742\u7684\u591a\u6001\u64cd\u4f5c\uff0c\u589e\u5f3a\u4e86\u7a0b\u5e8f\u7684\u7075\u6d3b\u6027\u3002","title":"\u4f18\u70b9\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_33","text":"\u6027\u80fd\u5f00\u9500 \uff1aRTTI \u4f9d\u8d56\u865a\u51fd\u6570\u8868\uff0c\u53ef\u80fd\u4f1a\u589e\u52a0\u8fd0\u884c\u65f6\u7684\u6027\u80fd\u5f00\u9500\u3002 \u4ee3\u7801\u590d\u6742\u6027 \uff1a\u8fc7\u5ea6\u4f7f\u7528 RTTI \u53ef\u80fd\u5bfc\u81f4\u4ee3\u7801\u96be\u4ee5\u7ef4\u62a4\u3002 \u8bbe\u8ba1\u95ee\u9898 \uff1a\u9891\u7e41\u4f7f\u7528 RTTI \u53ef\u80fd\u8868\u660e\u7a0b\u5e8f\u7684\u8bbe\u8ba1\u5b58\u5728\u95ee\u9898\uff0c\u5e94\u8be5\u901a\u8fc7\u66f4\u597d\u7684\u8bbe\u8ba1\u907f\u514d\u5bf9 RTTI \u7684\u4f9d\u8d56\u3002","title":"\u7f3a\u70b9\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#5-rtti","text":"\u7c7b\u578b\u5b89\u5168\u7684\u5411\u4e0b\u8f6c\u6362 \uff1a\u5728\u591a\u6001\u73af\u5883\u4e2d\uff0c\u4f7f\u7528 dynamic_cast \u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u7684\u5411\u4e0b\u8f6c\u6362\u3002 \u8c03\u8bd5\u548c\u65e5\u5fd7 \uff1a\u5728\u8c03\u8bd5\u6216\u8bb0\u5f55\u65e5\u5fd7\u65f6\uff0c\u901a\u8fc7 typeid \u83b7\u53d6\u5bf9\u8c61\u7684\u7c7b\u578b\u4fe1\u606f\u3002 \u63d2\u4ef6\u7cfb\u7edf \uff1a\u5728\u63d2\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u901a\u8fc7 RTTI \u5224\u65ad\u52a0\u8f7d\u7684\u5bf9\u8c61\u7c7b\u578b\u5e76\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002","title":"5. RTTI \u7684\u5b9e\u9645\u5e94\u7528\u573a\u666f"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#6-rtti","text":"\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u66f4\u597d\u7684\u8bbe\u8ba1\u907f\u514d\u5bf9 RTTI \u7684\u4f9d\u8d56\uff1a - \u865a\u51fd\u6570 \uff1a\u901a\u8fc7\u865a\u51fd\u6570\u5b9e\u73b0\u52a8\u6001\u884c\u4e3a\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 dynamic_cast \u3002 - \u6807\u5fd7\u53d8\u91cf \uff1a\u5728\u7c7b\u4e2d\u6dfb\u52a0\u6807\u5fd7\u53d8\u91cf\uff0c\u7528\u4e8e\u6807\u8bc6\u5bf9\u8c61\u7684\u7c7b\u578b\u3002 - \u6a21\u677f \uff1a\u4f7f\u7528\u6a21\u677f\u5b9e\u73b0\u7c7b\u578b\u5b89\u5168\u7684\u64cd\u4f5c\uff0c\u907f\u514d\u8fd0\u884c\u65f6\u7684\u7c7b\u578b\u68c0\u67e5\u3002","title":"6. RTTI \u7684\u66ff\u4ee3\u65b9\u6848"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#7","text":"\u5de5\u5177 \u4f5c\u7528 dynamic_cast \u7c7b\u578b\u5b89\u5168\u7684\u5411\u4e0b\u8f6c\u6362\uff0c\u5931\u8d25\u65f6\u8fd4\u56de nullptr \u6216\u629b\u51fa\u5f02\u5e38\u3002 typeid \u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u4fe1\u606f\uff0c\u8fd4\u56de type_info \u5bf9\u8c61\u3002 RTTI \u662f C++ \u63d0\u4f9b\u7684\u4e00\u79cd\u5f3a\u5927\u7684\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\u673a\u5236\uff0c\u4f46\u5e94\u8c28\u614e\u4f7f\u7528\uff0c\u907f\u514d\u56e0\u8fc7\u5ea6\u4f9d\u8d56 RTTI \u800c\u5bfc\u81f4\u6027\u80fd\u95ee\u9898\u6216\u4ee3\u7801\u590d\u6742\u6027\u589e\u52a0\u3002\u5728\u8bbe\u8ba1\u826f\u597d\u7684\u7cfb\u7edf\u4e2d\uff0c\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u865a\u51fd\u6570\u6216\u6a21\u677f\u7b49\u673a\u5236\u66ff\u4ee3 RTTI \u7684\u4f7f\u7528\u3002","title":"7. \u603b\u7ed3"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#dynamic_cast","text":"\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c dynamic_cast \u7684\u4f5c\u7528\u662f\u8fdb\u884c \u7c7b\u578b\u5b89\u5168\u7684\u5411\u4e0b\u8f6c\u6362 \uff0c\u5373\u5c06\u57fa\u7c7b\u6307\u9488 Base* \u8f6c\u6362\u4e3a\u6d3e\u751f\u7c7b\u6307\u9488 Derived* \u3002\u4ee5\u4e0b\u662f dynamic_cast \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u53d1\u751f\u7684\u5177\u4f53\u64cd\u4f5c\uff1a","title":"dynamic_cast\u5b83\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#1-dynamic_cast","text":"dynamic_cast \u662f C++ \u63d0\u4f9b\u7684\u4e00\u79cd\u8fd0\u884c\u65f6\u7c7b\u578b\u8f6c\u6362\u64cd\u4f5c\u7b26\uff0c\u7528\u4e8e\u5728\u7ee7\u627f\u5c42\u6b21\u4e2d\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 \u5b83\u4f9d\u8d56\u4e8e RTTI\uff08\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff09 \uff0c\u901a\u8fc7\u68c0\u67e5\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u6765\u51b3\u5b9a\u662f\u5426\u53ef\u4ee5\u8fdb\u884c\u8f6c\u6362\u3002","title":"1. dynamic_cast \u7684\u5de5\u4f5c\u539f\u7406"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#2_5","text":"","title":"2. \u4ee3\u7801\u4e2d\u7684\u5177\u4f53\u8fc7\u7a0b"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#1_4","text":"Base * base = new Derived (); - \u8fd9\u91cc\uff0c base \u662f\u4e00\u4e2a\u57fa\u7c7b\u6307\u9488\uff0c\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61 Derived \u3002 - \u56e0\u4e3a Base \u7684\u6790\u6784\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u7c7b Base \u652f\u6301 RTTI\u3002","title":"\uff081\uff09\u521b\u5efa\u5bf9\u8c61"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#2_6","text":"Derived * derived = dynamic_cast < Derived *> ( base ); - dynamic_cast \u68c0\u67e5 base \u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002 - \u5982\u679c base \u6307\u5411\u7684\u662f Derived \u7c7b\u578b\u7684\u5bf9\u8c61\uff08\u6216\u5176\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff09\uff0c\u8f6c\u6362\u6210\u529f\uff0c\u8fd4\u56de\u6d3e\u751f\u7c7b\u6307\u9488\u3002 - \u5982\u679c base \u6307\u5411\u7684\u4e0d\u662f Derived \u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u8f6c\u6362\u5931\u8d25\uff0c\u8fd4\u56de nullptr \u3002","title":"\uff082\uff09\u5c1d\u8bd5\u5411\u4e0b\u8f6c\u6362"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#3_5","text":"if ( derived ) { derived -> display (); // \u8f93\u51fa: Derived display } else { cout << \"Conversion failed\" << endl ; } - \u5982\u679c\u8f6c\u6362\u6210\u529f\uff0c derived \u4e0d\u4e3a nullptr \uff0c\u8c03\u7528\u6d3e\u751f\u7c7b\u7684 display \u51fd\u6570\u3002 - \u5982\u679c\u8f6c\u6362\u5931\u8d25\uff0c derived \u4e3a nullptr \uff0c\u8f93\u51fa \"Conversion failed\"\u3002","title":"\uff083\uff09\u68c0\u67e5\u8f6c\u6362\u7ed3\u679c"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#3-dynamic_cast","text":"\u865a\u51fd\u6570\u8868\uff08vtable\uff09 \uff1a dynamic_cast \u4f9d\u8d56\u865a\u51fd\u6570\u8868\u6765\u83b7\u53d6\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002 \u5982\u679c\u57fa\u7c7b\u6ca1\u6709\u865a\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u751f\u6210\u865a\u51fd\u6570\u8868\uff0c dynamic_cast \u5c06\u65e0\u6cd5\u4f7f\u7528\u3002 RTTI\uff08\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff09 \uff1a RTTI \u662f C++ \u63d0\u4f9b\u7684\u8fd0\u884c\u65f6\u673a\u5236\uff0c\u7528\u4e8e\u5b58\u50a8\u548c\u68c0\u67e5\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002 dynamic_cast \u4f7f\u7528 RTTI \u6765\u5224\u65ad\u7c7b\u578b\u662f\u5426\u5339\u914d\u3002","title":"3. dynamic_cast \u7684\u4f9d\u8d56"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#4_2","text":"\u57fa\u7c7b\u5fc5\u987b\u6709\u865a\u51fd\u6570\uff08\u652f\u6301 RTTI\uff09\u3002 \u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5fc5\u987b\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff08\u6216\u5176\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff09\u3002","title":"4. \u8f6c\u6362\u6210\u529f\u7684\u6761\u4ef6"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#5_1","text":"\u5982\u679c\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u7684\u5bf9\u8c61\u4e0d\u662f\u76ee\u6807\u6d3e\u751f\u7c7b\u7684\u7c7b\u578b\uff0c dynamic_cast \u4f1a\u5931\u8d25\uff1a - \u5bf9\u4e8e\u6307\u9488\uff0c\u8fd4\u56de nullptr \u3002 - \u5bf9\u4e8e\u5f15\u7528\uff0c\u629b\u51fa std::bad_cast \u5f02\u5e38\u3002","title":"5. \u8f6c\u6362\u5931\u8d25\u7684\u60c5\u51b5"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_34","text":"Base * base = new Base (); // \u57fa\u7c7b\u5bf9\u8c61 Derived * derived = dynamic_cast < Derived *> ( base ); // \u8f6c\u6362\u5931\u8d25 if ( derived ) { derived -> display (); } else { cout << \"Conversion failed\" << endl ; // \u8f93\u51fa: Conversion failed } delete base ;","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#6-dynamic_cast","text":"\u7c7b\u578b\u5b89\u5168 \uff1a\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u7c7b\u578b\uff0c\u907f\u514d\u975e\u6cd5\u8f6c\u6362\u3002 \u7075\u6d3b\u6027 \uff1a\u652f\u6301\u590d\u6742\u7684\u7ee7\u627f\u5c42\u6b21\u7ed3\u6784\u3002","title":"6. dynamic_cast \u7684\u4f18\u70b9"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#7-dynamic_cast","text":"dynamic_cast \u5728\u8fd0\u884c\u65f6\u9700\u8981\u68c0\u67e5\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u56e0\u6b64\u6bd4 static_cast \u6162\u3002 \u5728\u6027\u80fd\u654f\u611f\u7684\u573a\u666f\u4e2d\uff0c\u5e94\u5c3d\u91cf\u907f\u514d\u9891\u7e41\u4f7f\u7528 dynamic_cast \u3002","title":"7. dynamic_cast \u7684\u6027\u80fd\u5f00\u9500"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_35","text":"\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff1a 1. dynamic_cast \u68c0\u67e5 base \u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u662f\u5426\u662f Derived \u7c7b\u578b\u3002 2. \u5982\u679c\u662f\uff0c\u5219\u8fd4\u56de\u6d3e\u751f\u7c7b\u6307\u9488 Derived* \uff0c\u5e76\u8c03\u7528 Derived::display \u3002 3. \u5982\u679c\u4e0d\u662f\uff0c\u5219\u8fd4\u56de nullptr \uff0c\u5e76\u8f93\u51fa \"Conversion failed\"\u3002 dynamic_cast \u7684\u6838\u5fc3\u662f\u901a\u8fc7 RTTI \u548c\u865a\u51fd\u6570\u8868\u5b9e\u73b0\u7c7b\u578b\u5b89\u5168\u7684\u5411\u4e0b\u8f6c\u6362\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#derived-derived-new-derived","text":"\u76f4\u63a5\u58f0\u660e Derived* derived = new Derived \u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u8fd9\u4e0e\u4f7f\u7528 dynamic_cast \u7684\u573a\u666f\u548c\u76ee\u7684\u4e0d\u540c\u3002\u4ee5\u4e0b\u662f\u4e24\u79cd\u65b9\u5f0f\u7684\u5bf9\u6bd4\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u7684\u8be6\u7ec6\u89e3\u91ca\uff1a","title":"\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u8fd9\u4e2a\u8f6c\u6362\uff0c\u76f4\u63a5\u58f0\u660eDerived* derived = new Derived\u4e0d\u884c\u5417"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#1_5","text":"Derived * derived = new Derived (); derived -> display (); // \u76f4\u63a5\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570","title":"1. \u76f4\u63a5\u58f0\u660e\u6d3e\u751f\u7c7b\u6307\u9488"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_36","text":"\u7b80\u5355\u76f4\u63a5\uff0c\u9002\u7528\u4e8e\u660e\u786e\u77e5\u9053\u5bf9\u8c61\u7c7b\u578b\u7684\u573a\u666f\u3002 \u6ca1\u6709\u8fd0\u884c\u65f6\u5f00\u9500\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u3002","title":"\u4f18\u70b9\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_37","text":"\u53ea\u80fd\u7528\u4e8e\u660e\u786e\u77e5\u9053\u5bf9\u8c61\u7c7b\u578b\u7684\u60c5\u51b5\u3002 \u5982\u679c\u7a0b\u5e8f\u9700\u8981\u5904\u7406\u591a\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff08\u5982\u57fa\u7c7b\u548c\u591a\u4e2a\u6d3e\u751f\u7c7b\uff09\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7f3a\u4e4f\u7075\u6d3b\u6027\u3002","title":"\u7f3a\u70b9\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#2_7","text":"Base * base = new Derived (); Derived * derived = dynamic_cast < Derived *> ( base ); if ( derived ) { derived -> display (); }","title":"2. \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8fdb\u884c\u52a8\u6001\u591a\u6001"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_38","text":"\u652f\u6301\u52a8\u6001\u591a\u6001\uff1a\u53ef\u4ee5\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u64cd\u4f5c\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u3002 \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\uff1a\u7a0b\u5e8f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u5408\u9002\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u660e\u786e\u6307\u5b9a\u7c7b\u578b\u3002 \u7c7b\u578b\u5b89\u5168\uff1a dynamic_cast \u4f1a\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u7c7b\u578b\u662f\u5426\u5339\u914d\uff0c\u907f\u514d\u975e\u6cd5\u8f6c\u6362\u3002","title":"\u4f18\u70b9\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_39","text":"\u6709\u4e00\u5b9a\u7684\u8fd0\u884c\u65f6\u5f00\u9500\uff0c\u56e0\u4e3a\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u3002 \u9700\u8981\u57fa\u7c7b\u6709\u865a\u51fd\u6570\u4ee5\u652f\u6301 RTTI\u3002","title":"\u7f3a\u70b9\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#3_6","text":"\u5728\u67d0\u4e9b\u573a\u666f\u4e2d\uff0c\u7a0b\u5e8f\u65e0\u6cd5\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u5bf9\u8c61\u7684\u5177\u4f53\u7c7b\u578b\uff0c\u800c\u662f\u9700\u8981\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u6267\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7c7b\u578b\u8f6c\u6362\uff08\u5982 dynamic_cast \uff09\u662f\u5fc5\u8981\u7684\u3002","title":"3. \u4e3a\u4ec0\u4e48\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#_40","text":"\u591a\u6001\u5bb9\u5668 \uff1a \u5047\u8bbe\u6709\u4e00\u4e2a\u5bb9\u5668\u5b58\u50a8\u4e86\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\uff08\u57fa\u7c7b\u6307\u9488\uff09\uff0c\u9700\u8981\u5728\u8fd0\u884c\u65f6\u5224\u65ad\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u5e76\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002 vector < Base *> objects ; objects . push_back ( new Derived ()); objects . push_back ( new AnotherDerived ()); for ( Base * obj : objects ) { Derived * derived = dynamic_cast < Derived *> ( obj ); if ( derived ) { derived -> display (); // \u53ea\u5bf9 Derived \u7c7b\u578b\u7684\u5bf9\u8c61\u8c03\u7528 display } } \u63d2\u4ef6\u7cfb\u7edf \uff1a \u5728\u63d2\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u4e3b\u7a0b\u5e8f\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u64cd\u4f5c\u63d2\u4ef6\u5bf9\u8c61\uff0c\u800c\u63d2\u4ef6\u7684\u5177\u4f53\u7c7b\u578b\u53ea\u6709\u5728\u8fd0\u884c\u65f6\u624d\u80fd\u786e\u5b9a\u3002 \u6846\u67b6\u8bbe\u8ba1 \uff1a \u5728\u6846\u67b6\u4e2d\uff0c\u57fa\u7c7b\u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u6d3e\u751f\u7c7b\u5b9e\u73b0\u5177\u4f53\u7684\u529f\u80fd\u3002\u6846\u67b6\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\u3002","title":"\u793a\u4f8b\u573a\u666f\uff1a"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#4_3","text":"\u65b9\u5f0f \u9002\u7528\u573a\u666f \u7075\u6d3b\u6027 \u8fd0\u884c\u65f6\u5f00\u9500 \u76f4\u63a5\u58f0\u660e\u6d3e\u751f\u7c7b\u6307\u9488 \u5bf9\u8c61\u7c7b\u578b\u5728\u7f16\u8bd1\u65f6\u5df2\u77e5\uff0c\u4e14\u53ea\u9700\u8981\u64cd\u4f5c\u8be5\u7c7b\u578b\u7684\u5bf9\u8c61\u3002 \u4f4e \u65e0 \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8fdb\u884c\u8f6c\u6362 \u5bf9\u8c61\u7c7b\u578b\u5728\u8fd0\u884c\u65f6\u624d\u786e\u5b9a\uff0c\u9700\u8981\u64cd\u4f5c\u591a\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff08\u52a8\u6001\u591a\u6001\uff09\u3002 \u9ad8 \u6709","title":"4. \u76f4\u63a5\u58f0\u660e\u548c\u7c7b\u578b\u8f6c\u6362\u7684\u5bf9\u6bd4"},{"location":"C%2B%2B/Polymorphism/5%E6%9C%8819/#5_2","text":"\u5982\u679c\u7a0b\u5e8f\u4e2d\u5bf9\u8c61\u7684\u7c7b\u578b\u5728\u7f16\u8bd1\u65f6\u662f\u786e\u5b9a\u7684\uff0c\u76f4\u63a5\u58f0\u660e\u6d3e\u751f\u7c7b\u6307\u9488\u662f\u66f4\u7b80\u5355\u9ad8\u6548\u7684\u9009\u62e9\u3002 \u5982\u679c\u7a0b\u5e8f\u9700\u8981\u5904\u7406\u591a\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u7c7b\u578b\u5728\u8fd0\u884c\u65f6\u624d\u786e\u5b9a\uff0c\u5219\u9700\u8981\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u548c dynamic_cast \u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002 dynamic_cast \u7684\u610f\u4e49\u5728\u4e8e\u63d0\u4f9b\u4e86\u4e00\u79cd\u7c7b\u578b\u5b89\u5168\u7684\u65b9\u5f0f\u6765\u5904\u7406\u590d\u6742\u7684\u7ee7\u627f\u5c42\u6b21\u7ed3\u6784\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u80fd\u591f\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u6267\u884c\u5408\u9002\u7684\u64cd\u4f5c\u3002","title":"5. \u603b\u7ed3"},{"location":"C%2B%2B/STL/5%E6%9C%8816/","text":"\u4ec0\u4e48\u662fC++ STL\uff1f C++ STL\uff08Standard Template Library\uff0c\u6807\u51c6\u6a21\u677f\u5e93\uff09\u662fC++\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u7ec4\u901a\u7528\u7684\u7c7b\u548c\u51fd\u6570\u6a21\u677f\uff0c\u7528\u4e8e\u5b9e\u73b0\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u3002STL\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a \u5bb9\u5668\uff08Containers\uff09 \uff1a\u5982 vector \u3001 list \u3001 deque \u3001 set \u3001 map \u7b49\uff0c\u7528\u4e8e\u5b58\u50a8\u548c\u7ba1\u7406\u6570\u636e\u3002 \u7b97\u6cd5\uff08Algorithms\uff09 \uff1a\u5982\u6392\u5e8f\u3001\u67e5\u627e\u3001\u62f7\u8d1d\u7b49\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f5c\u7528\u4e8e\u5404\u79cd\u5bb9\u5668\u3002 \u8fed\u4ee3\u5668\uff08Iterators\uff09 \uff1a\u7528\u4e8e\u904d\u5386\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u7c7b\u4f3c\u4e8e\u6307\u9488\u3002 \u51fd\u6570\u5bf9\u8c61\uff08Function Objects\uff09 \uff1a\u53ef\u4ee5\u50cf\u51fd\u6570\u4e00\u6837\u4f7f\u7528\u7684\u5bf9\u8c61\uff0c\u5e38\u7528\u4e8e\u81ea\u5b9a\u4e49\u6392\u5e8f\u7b49\u3002 \u9002\u914d\u5668\uff08Adapters\uff09 \uff1a\u5982 stack \u3001 queue \u3001 priority_queue \u7b49\uff0c\u5bf9\u5df2\u6709\u5bb9\u5668\u8fdb\u884c\u529f\u80fd\u6269\u5c55\u3002 \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u7528hash_map\uff0c\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u7528map? hash_map \uff08C++11\u6807\u51c6\u4e2d\u4e3a unordered_map \uff09\u548c map \u90fd\u662fSTL\u4e2d\u7684\u5173\u8054\u5bb9\u5668\uff0c\u4f46\u5b83\u4eec\u7684\u5e95\u5c42\u5b9e\u73b0\u548c\u9002\u7528\u573a\u666f\u4e0d\u540c\uff1a map \uff1a\u5e95\u5c42\u901a\u5e38\u7528\u7ea2\u9ed1\u6811\u5b9e\u73b0\uff0c\u952e\u503c\u662f\u6709\u5e8f\u7684\uff0c\u652f\u6301\u6709\u5e8f\u904d\u5386\u3002\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(log n)\u3002\u9002\u7528\u4e8e\u9700\u8981\u6309\u987a\u5e8f\u904d\u5386\u5143\u7d20\u6216\u9700\u8981\u533a\u95f4\u64cd\u4f5c\u7684\u573a\u666f\u3002 hash_map/unordered_map \uff1a\u5e95\u5c42\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u952e\u503c\u662f\u65e0\u5e8f\u7684\uff0c\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\u3002\u9002\u7528\u4e8e\u53ea\u5173\u5fc3\u67e5\u627e\u6548\u7387\u3001\u4e0d\u9700\u8981\u6709\u5e8f\u904d\u5386\u7684\u573a\u666f\u3002 \u603b\u7ed3\uff1a - \u9700\u8981\u6709\u5e8f\u6570\u636e\u6216\u533a\u95f4\u64cd\u4f5c\u65f6\uff0c\u7528 map \u3002 - \u53ea\u5173\u5fc3\u67e5\u627e\u6548\u7387\u4e14\u4e0d\u9700\u8981\u6709\u5e8f\u65f6\uff0c\u7528 unordered_map \uff08\u5373 hash_map \uff09\u3002 STL\u4e2dhashtable\u7684\u5e95\u5c42\u5b9e\u73b0\uff1f STL\u4e2d hashtable \u7684\u5e95\u5c42\u5b9e\u73b0\u4e3b\u8981\u57fa\u4e8e \u54c8\u5e0c\u8868\uff08Hash Table\uff09 \uff0c\u5176\u6838\u5fc3\u601d\u60f3\u5982\u4e0b\uff1a \u6570\u7ec4+\u94fe\u8868\uff08\u62c9\u94fe\u6cd5\uff09 \uff1a \u54c8\u5e0c\u8868\u5185\u90e8\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6570\u7ec4\u5143\u7d20\u79f0\u4e3a\u201c\u6876\u201d\u3002\u5f53\u591a\u4e2a\u5143\u7d20\u54c8\u5e0c\u5230\u540c\u4e00\u4e2a\u6876\u65f6\uff0c\u8fd9\u4e9b\u5143\u7d20\u4f1a\u4ee5\u94fe\u8868\uff08\u6216\u5176\u4ed6\u7ed3\u6784\uff0c\u5982C++11\u4e2d\u7684\u94fe\u8868\u6216\u7ea2\u9ed1\u6811\uff09\u5f62\u5f0f\u5b58\u50a8\u5728\u8be5\u6876\u4e2d\u3002 \u54c8\u5e0c\u51fd\u6570 \uff1a \u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5c06\u952e\u6620\u5c04\u5230\u6570\u7ec4\u7684\u4e0b\u6807\uff0c\u51b3\u5b9a\u5143\u7d20\u5b58\u50a8\u7684\u4f4d\u7f6e\u3002\u54c8\u5e0c\u51fd\u6570\u7684\u597d\u574f\u76f4\u63a5\u5f71\u54cd\u67e5\u627e\u6548\u7387\u3002 \u51b2\u7a81\u89e3\u51b3 \uff1a \u5e38\u7528\u62c9\u94fe\u6cd5\uff08\u94fe\u8868\u6cd5\uff09\u89e3\u51b3\u54c8\u5e0c\u51b2\u7a81\uff0c\u5373\u540c\u4e00\u4e2a\u6876\u4e2d\u7684\u5143\u7d20\u7528\u94fe\u8868\u8fde\u63a5\u3002 \u52a8\u6001\u6269\u5bb9 \uff1a \u5f53\u5143\u7d20\u6570\u91cf\u589e\u591a\u5bfc\u81f4\u54c8\u5e0c\u8868\u8d1f\u8f7d\u56e0\u5b50\u8fc7\u9ad8\u65f6\uff0c\u4f1a\u81ea\u52a8\u6269\u5bb9\uff08\u589e\u52a0\u6876\u7684\u6570\u91cf\uff09\uff0c\u5e76\u91cd\u65b0\u5206\u914d\u5df2\u6709\u5143\u7d20\uff08rehash\uff09\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a \u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u4e3aO(n)\u3002 \u793a\u610f\u56fe\uff1a \u54c8\u5e0c\u8868\uff08\u6570\u7ec4\uff09 +-----+-----+-----+-----+-----+ | 0 | 1 | 2 | 3 | ... | +--|--+--|--+--|--+--|--+-----+ | | | | \u94fe\u8868 \u94fe\u8868 \u94fe\u8868 \u94fe\u8868 \u5728C++11\u53ca\u4ee5\u540e\uff0c unordered_map \u548c unordered_set \u5c31\u662f\u57fa\u4e8ehashtable\u5b9e\u73b0\u7684\u3002 vector \u5e95\u5c42\u539f\u7406\u53ca\u5176\u76f8\u5173\u9762\u8bd5\u9898 vector \u5e95\u5c42\u539f\u7406 vector \u662fC++ STL\u4e2d\u6700\u5e38\u7528\u7684\u987a\u5e8f\u5bb9\u5668\u4e4b\u4e00\uff0c\u5176\u5e95\u5c42\u5b9e\u73b0\u57fa\u4e8e \u52a8\u6001\u6570\u7ec4 \u3002\u4e3b\u8981\u539f\u7406\u5982\u4e0b\uff1a \u52a8\u6001\u6570\u7ec4 \uff1a vector \u5185\u90e8\u7ef4\u62a4\u4e00\u4e2a\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff08\u7c7b\u4f3cC\u8bed\u8a00\u7684\u6570\u7ec4\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u968f\u673a\u8bbf\u95ee\u5143\u7d20\uff0c\u8bbf\u95ee\u6548\u7387\u4e3aO(1)\u3002 \u81ea\u52a8\u6269\u5bb9 \uff1a \u5f53\u63d2\u5165\u65b0\u5143\u7d20\u4e14\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c vector \u4f1a\u81ea\u52a8\u5206\u914d\u66f4\u5927\u7684\u5185\u5b58\uff08\u901a\u5e38\u4e3a\u539f\u5bb9\u91cf\u76842\u500d\uff09\uff0c\u5e76\u5c06\u539f\u6709\u5143\u7d20\u62f7\u8d1d\u5230\u65b0\u7a7a\u95f4\uff0c\u91ca\u653e\u65e7\u7a7a\u95f4\u3002\u6269\u5bb9\u65f6\u7684\u63d2\u5165\u64cd\u4f5c\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u4f46\u5747\u644a\u4e0b\u6765\u6bcf\u6b21\u63d2\u5165\u7684\u5e73\u5747\u590d\u6742\u5ea6\u4e3aO(1)\u3002 \u5185\u5b58\u7ba1\u7406 \uff1a vector \u7684\u5bb9\u91cf\uff08capacity\uff09\u548c\u5b9e\u9645\u5143\u7d20\u4e2a\u6570\uff08size\uff09\u662f\u5206\u5f00\u7684\u3002\u5bb9\u91cf\u5927\u4e8e\u7b49\u4e8e\u5143\u7d20\u4e2a\u6570\uff0c\u53ea\u6709\u5f53size\u7b49\u4e8ecapacity\u65f6\u624d\u4f1a\u6269\u5bb9\u3002 \u5143\u7d20\u5b58\u50a8 \uff1a \u5143\u7d20\u5728\u5185\u5b58\u4e2d\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u4fdd\u8bc1\u4e86\u9ad8\u6548\u7684\u968f\u673a\u8bbf\u95ee\u548c\u826f\u597d\u7684\u7f13\u5b58\u5c40\u90e8\u6027\u3002 \u63d2\u5165\u548c\u5220\u9664 \uff1a \u5c3e\u90e8\u63d2\u5165/\u5220\u9664\uff08push_back/pop_back\uff09\uff1a\u6548\u7387\u9ad8\uff0cO(1)\u5747\u644a\u3002 \u4e2d\u95f4\u6216\u5934\u90e8\u63d2\u5165/\u5220\u9664\uff1a\u9700\u8981\u79fb\u52a8\u5927\u91cf\u5143\u7d20\uff0c\u6548\u7387\u4f4e\uff0cO(n)\u3002 \u5e38\u89c1\u9762\u8bd5\u9898 vector\u548c\u6570\u7ec4\u7684\u533a\u522b\uff1f vector \u80fd\u52a8\u6001\u6269\u5bb9\uff0c\u6570\u7ec4\u5927\u5c0f\u56fa\u5b9a\u3002 vector \u6709\u4e30\u5bcc\u7684\u6210\u5458\u51fd\u6570\uff0c\u6570\u7ec4\u6ca1\u6709\u3002 vector \u53ef\u4ee5\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u6570\u7ec4\u9700\u8981\u624b\u52a8\u7ba1\u7406\u3002 vector\u6269\u5bb9\u673a\u5236\uff1f \u4e00\u822c\u63092\u500d\u6269\u5bb9\uff08\u5b9e\u73b0\u76f8\u5173\uff09\uff0c\u6269\u5bb9\u65f6\u4f1a\u5206\u914d\u65b0\u7a7a\u95f4\u5e76\u62f7\u8d1d\u65e7\u6570\u636e\uff0c\u91ca\u653e\u65e7\u7a7a\u95f4\u3002 vector\u7684\u63d2\u5165\u548c\u5220\u9664\u6548\u7387\uff1f \u5c3e\u90e8\u63d2\u5165/\u5220\u9664\u6548\u7387\u9ad8\uff0cO(1)\u5747\u644a\u3002 \u5934\u90e8\u6216\u4e2d\u95f4\u63d2\u5165/\u5220\u9664\u6548\u7387\u4f4e\uff0cO(n)\u3002 vector\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u9ad8\u6548\u5730\u5728\u5934\u90e8\u63d2\u5165\u5143\u7d20\uff1f \u56e0\u4e3a\u6240\u6709\u5143\u7d20\u90fd\u8981\u6574\u4f53\u5411\u540e\u79fb\u52a8\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\u3002 \u5982\u4f55\u91ca\u653evector\u591a\u4f59\u7684\u5185\u5b58\uff1f \u53ef\u4ee5\u7528 shrink_to_fit() \u6216swap\u6280\u5de7\uff1a vector<T>(v).swap(v); vector\u7684\u8fed\u4ee3\u5668\u5931\u6548\u573a\u666f\uff1f \u6269\u5bb9\u3001\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u65f6\uff0c\u539f\u6709\u7684\u8fed\u4ee3\u5668\u53ef\u80fd\u4f1a\u5931\u6548\u3002 \u793a\u4f8b\u4ee3\u7801\uff1avector\u81ea\u52a8\u6269\u5bb9 #include <vector> #include <iostream> using namespace std ; int main () { vector < int > v ; for ( int i = 0 ; i < 10 ; ++ i ) { v . push_back ( i ); cout << \"size: \" << v . size () << \", capacity: \" << v . capacity () << endl ; } return 0 ; } list \u5e95\u5c42\u539f\u7406\u53ca\u5176\u76f8\u5173\u9762\u8bd5\u9898 list \u662fC++ STL\u4e2d\u7684\u53cc\u5411\u94fe\u8868\u5bb9\u5668\uff0c\u5176\u5e95\u5c42\u5b9e\u73b0\u57fa\u4e8e \u53cc\u5411\u94fe\u8868 \u3002\u4e3b\u8981\u539f\u7406\u5982\u4e0b\uff1a \u53cc\u5411\u94fe\u8868\u7ed3\u6784 \uff1a \u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u6570\u636e\u548c\u4e24\u4e2a\u6307\u9488\uff0c\u5206\u522b\u6307\u5411\u524d\u9a71\u548c\u540e\u7ee7\u8282\u70b9\u3002\u8fd9\u6837\u53ef\u4ee5\u5728\u5e38\u6570\u65f6\u95f4\u5185\u5728\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u3002 \u975e\u8fde\u7eed\u5185\u5b58 \uff1a list \u7684\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u4e0d\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u6bcf\u4e2a\u8282\u70b9\u5355\u72ec\u5206\u914d\u7a7a\u95f4\uff0c\u56e0\u6b64\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff08\u4e0d\u80fd\u7528\u4e0b\u6807\u8bbf\u95ee\uff09\u3002 \u63d2\u5165\u548c\u5220\u9664\u6548\u7387 \uff1a \u5728\u5df2\u77e5\u4f4d\u7f6e\uff08\u901a\u8fc7\u8fed\u4ee3\u5668\uff09\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\uff0c\u4e0d\u9700\u8981\u79fb\u52a8\u5176\u4ed6\u5143\u7d20\u3002 \u904d\u5386\u6548\u7387 \uff1a \u7531\u4e8e\u4e0d\u662f\u8fde\u7eed\u5185\u5b58\uff0c\u904d\u5386\u6548\u7387\u6bd4 vector \u4f4e\uff0c\u4e14\u4e0d\u652f\u6301\u9ad8\u6548\u7684\u968f\u673a\u8bbf\u95ee\u3002 \u7a7a\u95f4\u5f00\u9500 \uff1a \u6bcf\u4e2a\u8282\u70b9\u9664\u4e86\u5b58\u50a8\u6570\u636e\u5916\uff0c\u8fd8\u9700\u8981\u989d\u5916\u5b58\u50a8\u4e24\u4e2a\u6307\u9488\uff0c\u7a7a\u95f4\u5f00\u9500\u8f83\u5927\u3002 \u5e38\u89c1\u9762\u8bd5\u9898 list\u548cvector\u7684\u533a\u522b\uff1f list \u5e95\u5c42\u662f\u53cc\u5411\u94fe\u8868\uff0c vector \u662f\u52a8\u6001\u6570\u7ec4\u3002 list \u63d2\u5165/\u5220\u9664\u6548\u7387\u9ad8\uff08O(1)\uff09\uff0c\u4f46\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\u3002 vector \u652f\u6301\u9ad8\u6548\u968f\u673a\u8bbf\u95ee\uff0c\u5c3e\u90e8\u63d2\u5165/\u5220\u9664\u5feb\uff0c\u4f46\u4e2d\u95f4\u64cd\u4f5c\u6162\u3002 list\u7684\u63d2\u5165\u548c\u5220\u9664\u4e3a\u4ec0\u4e48\u5feb\uff1f \u53ea\u9700\u4fee\u6539\u76f8\u90bb\u8282\u70b9\u7684\u6307\u9488\uff0c\u4e0d\u9700\u8981\u79fb\u52a8\u5176\u4ed6\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(1)\u3002 list\u7684\u904d\u5386\u4e3a\u4ec0\u4e48\u6162\uff1f \u8282\u70b9\u5206\u6563\u5728\u5185\u5b58\u4e2d\uff0c\u7f13\u5b58\u547d\u4e2d\u7387\u4f4e\uff0c\u4e14\u53ea\u80fd\u987a\u5e8f\u8bbf\u95ee\u3002 list\u7684\u8fed\u4ee3\u5668\u5931\u6548\u573a\u666f\uff1f \u63d2\u5165\u4e0d\u4f1a\u5bfc\u81f4\u5176\u4ed6\u8fed\u4ee3\u5668\u5931\u6548\uff0c\u5220\u9664\u67d0\u8282\u70b9\u540e\u6307\u5411\u8be5\u8282\u70b9\u7684\u8fed\u4ee3\u5668\u5931\u6548\u3002 list\u9002\u5408\u54ea\u4e9b\u573a\u666f\uff1f \u9700\u8981\u9891\u7e41\u5728\u4e2d\u95f4\u63d2\u5165/\u5220\u9664\u5143\u7d20\u4e14\u4e0d\u5173\u5fc3\u968f\u673a\u8bbf\u95ee\u7684\u573a\u666f\u3002 \u793a\u4f8b\u4ee3\u7801\uff1alist\u63d2\u5165\u548c\u5220\u9664 #include <list> #include <iostream> using namespace std ; int main () { list < int > l = { 1 , 2 , 3 }; auto it = l . begin (); ++ it ; l . insert ( it , 10 ); // \u5728\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u63d2\u516510 l . erase ( it ); // \u5220\u9664\u539f\u6765\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20 for ( int x : l ) cout << x << \" \" ; return 0 ; } deque\u5e95\u5c42\u539f\u7406\u53ca\u5176\u76f8\u5173\u9762\u8bd5\u9898 deque \uff08\u53cc\u7aef\u961f\u5217\uff09\u662fC++ STL\u4e2d\u7684\u4e00\u79cd\u987a\u5e8f\u5bb9\u5668\uff0c\u652f\u6301\u5728\u5934\u5c3e\u4e24\u7aef\u9ad8\u6548\u63d2\u5165\u548c\u5220\u9664\u3002\u5176\u5e95\u5c42\u5b9e\u73b0\u539f\u7406\u5982\u4e0b\uff1a \u5206\u6bb5\u8fde\u7eed\u5185\u5b58\u7ed3\u6784\uff08\u5757\u8868\u7ed3\u6784\uff09 \uff1a deque \u4e0d\u662f\u50cf vector \u90a3\u6837\u7528\u4e00\u5757\u8fde\u7eed\u7684\u5927\u5185\u5b58\uff0c\u800c\u662f\u7531\u591a\u4e2a\u5c0f\u7684\u8fde\u7eed\u5185\u5b58\u5757\uff08\u79f0\u4e3a\u201c\u7f13\u51b2\u533a\u201d\u6216\u201c\u5757\u201d\uff09\u7ec4\u6210\uff0c\u5e76\u7528\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff08map\uff09\u7ba1\u7406\u8fd9\u4e9b\u5757\u3002\u8fd9\u6837\u65e2\u80fd\u652f\u6301\u9ad8\u6548\u7684\u5934\u5c3e\u64cd\u4f5c\uff0c\u53c8\u907f\u514d\u4e86\u9891\u7e41\u7684\u6574\u4f53\u5185\u5b58\u642c\u79fb\u3002 \u9ad8\u6548\u7684\u5934\u5c3e\u64cd\u4f5c \uff1a \u5728\u5934\u90e8\u6216\u5c3e\u90e8\u63d2\u5165/\u5220\u9664\u5143\u7d20\u65f6\uff0c\u53ea\u9700\u5728\u5757\u7684\u4e24\u7aef\u64cd\u4f5c\u6216\u5206\u914d/\u91ca\u653e\u65b0\u7684\u5757\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\u5747\u644a\u3002 \u968f\u673a\u8bbf\u95ee \uff1a deque \u652f\u6301\u4e0b\u6807\u968f\u673a\u8bbf\u95ee\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\u3002\u5b9e\u73b0\u65f6\u901a\u8fc7\u5757\u8868\u7ed3\u6784\u548c\u6307\u9488\u504f\u79fb\u8ba1\u7b97\u5b9a\u4f4d\u5230\u5177\u4f53\u5143\u7d20\u3002 \u5185\u5b58\u7ba1\u7406 \uff1a \u5f53\u5934\u5c3e\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c\u4f1a\u81ea\u52a8\u5206\u914d\u65b0\u7684\u5757\uff0c\u5e76\u8c03\u6574\u6307\u9488\u6570\u7ec4\uff08map\uff09\u3002 \u63d2\u5165/\u5220\u9664\u6548\u7387 \uff1a \u5934\u5c3e\u63d2\u5165/\u5220\u9664\uff1aO(1)\u5747\u644a\u3002 \u4e2d\u95f4\u63d2\u5165/\u5220\u9664\uff1a\u9700\u8981\u79fb\u52a8\u5143\u7d20\uff0c\u6548\u7387\u4e3aO(n)\u3002 \u5e38\u89c1\u9762\u8bd5\u9898 deque\u548cvector\u7684\u533a\u522b\uff1f deque \u652f\u6301\u5934\u5c3e\u9ad8\u6548\u63d2\u5165/\u5220\u9664\uff0c vector \u53ea\u652f\u6301\u5c3e\u90e8\u9ad8\u6548\u64cd\u4f5c\u3002 deque \u5e95\u5c42\u662f\u5206\u6bb5\u8fde\u7eed\u5185\u5b58\uff0c vector \u662f\u5355\u5757\u8fde\u7eed\u5185\u5b58\u3002 deque \u968f\u673a\u8bbf\u95ee\u6548\u7387\u548c vector \u4e00\u6837\uff0c\u90fd\u662fO(1)\u3002 deque\u4e3a\u4ec0\u4e48\u80fd\u9ad8\u6548\u5730\u5728\u5934\u90e8\u63d2\u5165\u5143\u7d20\uff1f \u56e0\u4e3a\u5176\u5185\u5b58\u7ed3\u6784\u5141\u8bb8\u5728\u5934\u90e8\u5206\u914d\u65b0\u5757\uff0c\u65e0\u9700\u6574\u4f53\u79fb\u52a8\u5143\u7d20\u3002 deque\u7684\u7a7a\u95f4\u7ba1\u7406\u65b9\u5f0f\uff1f \u91c7\u7528\u6307\u9488\u6570\u7ec4\uff08map\uff09\u7ba1\u7406\u591a\u4e2a\u5c0f\u5757\uff0c\u6bcf\u4e2a\u5757\u5b58\u50a8\u4e00\u90e8\u5206\u5143\u7d20\u3002 deque\u9002\u5408\u54ea\u4e9b\u573a\u666f\uff1f \u9700\u8981\u9891\u7e41\u5728\u5934\u5c3e\u4e24\u7aef\u63d2\u5165/\u5220\u9664\u5143\u7d20\u7684\u573a\u666f\uff0c\u5982\u5b9e\u73b0\u961f\u5217\u3001\u6ed1\u52a8\u7a97\u53e3\u7b49\u3002 deque\u7684\u8fed\u4ee3\u5668\u5931\u6548\u573a\u666f\uff1f \u5728\u5934\u5c3e\u63d2\u5165/\u5220\u9664\u65f6\uff0c\u53ea\u6709\u6d89\u53ca\u5230\u7684\u5757\u7684\u8fed\u4ee3\u5668\u5931\u6548\uff1b\u6574\u4f53\u6269\u5bb9\u6216\u6536\u7f29\u65f6\uff0c\u6240\u6709\u8fed\u4ee3\u5668\u53ef\u80fd\u5931\u6548\u3002 vector\u5982\u4f55\u91ca\u653e\u7a7a\u95f4 \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u91ca\u653e vector \u591a\u4f59\u7684\u7a7a\u95f4\uff1a shrink_to_fit() \u65b9\u6cd5 \u8c03\u7528 v.shrink_to_fit(); \uff0c\u8bf7\u6c42\u5c06 vector \u7684\u5bb9\u91cf\u7f29\u5c0f\u5230\u4e0e\u5f53\u524d\u5143\u7d20\u4e2a\u6570\u4e00\u81f4\uff08\u4f46\u4e0d\u662f\u5f3a\u5236\uff0c\u662f\u5426\u771f\u7684\u7f29\u5bb9\u7531\u5b9e\u73b0\u51b3\u5b9a\uff09\u3002 swap \u6280\u5de7 \u4f7f\u7528\u4e34\u65f6\u5bf9\u8c61\u548c swap \u5f3a\u5236\u91ca\u653e\u591a\u4f59\u7a7a\u95f4\uff1a vector < int > ( v ). swap ( v ); \u8fd9\u6837\u4f1a\u521b\u5efa\u4e00\u4e2a\u53ea\u5305\u542b\u5f53\u524d\u5143\u7d20\u7684\u65b0 vector \uff0c\u5e76\u4e0e\u539f vector \u4ea4\u6362\uff0c\u539f\u6765\u7684\u591a\u4f59\u7a7a\u95f4\u4f1a\u88ab\u91ca\u653e\u3002 \u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u53ef\u4ee5\u6709\u6548\u51cf\u5c11 vector \u7684\u5185\u5b58\u5360\u7528\u3002 \u5982\u4f55\u5728\u5171\u4eab\u5185\u5b58\u4e0a\u4f7f\u7528STL\u6807\u51c6\u5e93\uff1f \u5728\u5171\u4eab\u5185\u5b58\u4e0a\u76f4\u63a5\u4f7f\u7528STL\u6807\u51c6\u5e93\u5bb9\u5668\uff08\u5982 vector \u3001 map \u7b49\uff09 \u901a\u5e38\u4e0d\u53ef\u884c \uff0c\u56e0\u4e3aSTL\u5bb9\u5668\u5185\u90e8\u4f1a\u52a8\u6001\u5206\u914d\u5185\u5b58\uff08\u5982 new \uff09\uff0c\u8fd9\u4e9b\u5185\u5b58\u53ea\u5728\u5f53\u524d\u8fdb\u7a0b\u6709\u6548\uff0c\u5176\u4ed6\u8fdb\u7a0b\u65e0\u6cd5\u8bbf\u95ee\u3002 \u6b63\u786e\u505a\u6cd5 \u4f7f\u7528\u4e13\u95e8\u652f\u6301\u5171\u4eab\u5185\u5b58\u7684STL\u5bb9\u5668\u5b9e\u73b0 \u63a8\u8350\u4f7f\u7528 Boost.Interprocess \u5e93\uff0c\u5b83\u63d0\u4f9b\u4e86\u53ef\u4ee5\u5728\u5171\u4eab\u5185\u5b58\u4e0a\u4f7f\u7528\u7684STL\u517c\u5bb9\u5bb9\u5668\uff0c\u5982 boost::interprocess::vector \u3001 map \u7b49\u3002 \u57fa\u672c\u6b65\u9aa4\u793a\u4f8b #include <boost/interprocess/managed_shared_memory.hpp> #include <boost/interprocess/containers/vector.hpp> #include <boost/interprocess/allocators/allocator.hpp> using namespace boost :: interprocess ; int main () { // \u521b\u5efa\u6216\u6253\u5f00\u5171\u4eab\u5185\u5b58 managed_shared_memory shm ( create_only , \"MySharedMemory\" , 1024 * 1024 ); // \u5b9a\u4e49\u5206\u914d\u5668 typedef allocator < int , managed_shared_memory :: segment_manager > ShmAllocator ; typedef vector < int , ShmAllocator > ShmVector ; // \u5728\u5171\u4eab\u5185\u5b58\u4e0a\u6784\u9020vector ShmVector * vec = shm . construct < ShmVector > ( \"MyVector\" )( shm . get_segment_manager ()); // \u4f7f\u7528vector vec -> push_back ( 1 ); vec -> push_back ( 2 ); return 0 ; } \u6ce8\u610f\u4e8b\u9879 \u53ea\u80fd\u7528\u652f\u6301\u5171\u4eab\u5185\u5b58\u5206\u914d\u5668\u7684\u5bb9\u5668\u3002 \u6307\u9488\u3001\u5f15\u7528\u7b49\u6210\u5458\u4e0d\u80fd\u6307\u5411\u8fdb\u7a0b\u79c1\u6709\u5185\u5b58\u3002 \u9700\u8981\u624b\u52a8\u7ba1\u7406\u5171\u4eab\u5185\u5b58\u7684\u521b\u5efa\u548c\u9500\u6bc1\u3002 \u603b\u7ed3\uff1a \u8981\u5728\u5171\u4eab\u5185\u5b58\u4e0a\u7528STL\u5bb9\u5668\uff0c\u63a8\u8350\u7528Boost.Interprocess\u5e93\u7684\u5bb9\u5668\u548c\u5206\u914d\u5668\uff0c\u4e0d\u80fd\u76f4\u63a5\u7528\u6807\u51c6STL\u5bb9\u5668\u3002 map\u63d2\u5165\u65b9\u5f0f\u6709\u54ea\u51e0\u79cd\uff1f map \u63d2\u5165\u5143\u7d20\u5e38\u7528\u7684\u65b9\u5f0f\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a insert(pair) m . insert ( std :: make_pair ( key , value )); m . insert ( std :: pair < Key , Value > ( key , value )); insert(value_type) m . insert ( map < Key , Value >:: value_type ( key , value )); \u4e0b\u6807\u8fd0\u7b97\u7b26[] m [ key ] = value ; \u5982\u679c key \u4e0d\u5b58\u5728\uff0c\u4f1a\u81ea\u52a8\u63d2\u5165\u65b0\u5143\u7d20\u3002 emplace m . emplace ( key , value ); \u76f4\u63a5\u5728\u5bb9\u5668\u5185\u90e8\u539f\u5730\u6784\u9020\uff0c\u63d0\u9ad8\u6548\u7387\u3002 insert\u5e26hint\u7248\u672c auto it = m . begin (); m . insert ( it , std :: make_pair ( key , value )); \u603b\u7ed3\uff1a \u5e38\u7528\u7684\u6709 insert \u3001 emplace \u3001 [] \u4e09\u79cd\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\u63a8\u8350\u7528 emplace \u6216 [] \u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u5b9e\u9645\u7684 C++ \u7a0b\u5e8f\u4f8b\u5b50\uff0c\u6f14\u793a\u4e86 map \u7684\u591a\u79cd\u63d2\u5165\u65b9\u5f0f\uff1a #include <iostream> #include <map> using namespace std ; int main () { map < int , string > m ; // 1. insert(pair) m . insert ( make_pair ( 1 , \"apple\" )); m . insert ( pair < int , string > ( 2 , \"banana\" )); // 2. insert(value_type) m . insert ( map < int , string >:: value_type ( 3 , \"cherry\" )); // 3. \u4e0b\u6807\u8fd0\u7b97\u7b26[] m [ 4 ] = \"date\" ; // 4. emplace m . emplace ( 5 , \"elderberry\" ); // 5. insert\u5e26hint auto it = m . begin (); m . insert ( it , make_pair ( 6 , \"fig\" )); // \u8f93\u51fa\u6240\u6709\u5143\u7d20 for ( const auto & p : m ) { cout << p . first << \": \" << p . second << endl ; } return 0 ; } \u8f93\u51fa\u793a\u4f8b\uff1a 1: apple 2: banana 3: cherry 4: date 5: elderberry 6: fig \u8fd9\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86 map \u7684\u6240\u6709\u5e38\u89c1\u63d2\u5165\u65b9\u5f0f\u3002","title":"5\u670816\u65e5\u57fa\u7840\u77e5\u8bc6"},{"location":"C%2B%2B/STL/5%E6%9C%8816/#c-stl","text":"C++ STL\uff08Standard Template Library\uff0c\u6807\u51c6\u6a21\u677f\u5e93\uff09\u662fC++\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u7ec4\u901a\u7528\u7684\u7c7b\u548c\u51fd\u6570\u6a21\u677f\uff0c\u7528\u4e8e\u5b9e\u73b0\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u3002STL\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a \u5bb9\u5668\uff08Containers\uff09 \uff1a\u5982 vector \u3001 list \u3001 deque \u3001 set \u3001 map \u7b49\uff0c\u7528\u4e8e\u5b58\u50a8\u548c\u7ba1\u7406\u6570\u636e\u3002 \u7b97\u6cd5\uff08Algorithms\uff09 \uff1a\u5982\u6392\u5e8f\u3001\u67e5\u627e\u3001\u62f7\u8d1d\u7b49\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f5c\u7528\u4e8e\u5404\u79cd\u5bb9\u5668\u3002 \u8fed\u4ee3\u5668\uff08Iterators\uff09 \uff1a\u7528\u4e8e\u904d\u5386\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u7c7b\u4f3c\u4e8e\u6307\u9488\u3002 \u51fd\u6570\u5bf9\u8c61\uff08Function Objects\uff09 \uff1a\u53ef\u4ee5\u50cf\u51fd\u6570\u4e00\u6837\u4f7f\u7528\u7684\u5bf9\u8c61\uff0c\u5e38\u7528\u4e8e\u81ea\u5b9a\u4e49\u6392\u5e8f\u7b49\u3002 \u9002\u914d\u5668\uff08Adapters\uff09 \uff1a\u5982 stack \u3001 queue \u3001 priority_queue \u7b49\uff0c\u5bf9\u5df2\u6709\u5bb9\u5668\u8fdb\u884c\u529f\u80fd\u6269\u5c55\u3002","title":"\u4ec0\u4e48\u662fC++ STL\uff1f"},{"location":"C%2B%2B/STL/5%E6%9C%8816/#hash_mapmap","text":"hash_map \uff08C++11\u6807\u51c6\u4e2d\u4e3a unordered_map \uff09\u548c map \u90fd\u662fSTL\u4e2d\u7684\u5173\u8054\u5bb9\u5668\uff0c\u4f46\u5b83\u4eec\u7684\u5e95\u5c42\u5b9e\u73b0\u548c\u9002\u7528\u573a\u666f\u4e0d\u540c\uff1a map \uff1a\u5e95\u5c42\u901a\u5e38\u7528\u7ea2\u9ed1\u6811\u5b9e\u73b0\uff0c\u952e\u503c\u662f\u6709\u5e8f\u7684\uff0c\u652f\u6301\u6709\u5e8f\u904d\u5386\u3002\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(log n)\u3002\u9002\u7528\u4e8e\u9700\u8981\u6309\u987a\u5e8f\u904d\u5386\u5143\u7d20\u6216\u9700\u8981\u533a\u95f4\u64cd\u4f5c\u7684\u573a\u666f\u3002 hash_map/unordered_map \uff1a\u5e95\u5c42\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u952e\u503c\u662f\u65e0\u5e8f\u7684\uff0c\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\u3002\u9002\u7528\u4e8e\u53ea\u5173\u5fc3\u67e5\u627e\u6548\u7387\u3001\u4e0d\u9700\u8981\u6709\u5e8f\u904d\u5386\u7684\u573a\u666f\u3002 \u603b\u7ed3\uff1a - \u9700\u8981\u6709\u5e8f\u6570\u636e\u6216\u533a\u95f4\u64cd\u4f5c\u65f6\uff0c\u7528 map \u3002 - \u53ea\u5173\u5fc3\u67e5\u627e\u6548\u7387\u4e14\u4e0d\u9700\u8981\u6709\u5e8f\u65f6\uff0c\u7528 unordered_map \uff08\u5373 hash_map \uff09\u3002","title":"\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u7528hash_map\uff0c\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u7528map?"},{"location":"C%2B%2B/STL/5%E6%9C%8816/#stlhashtable","text":"STL\u4e2d hashtable \u7684\u5e95\u5c42\u5b9e\u73b0\u4e3b\u8981\u57fa\u4e8e \u54c8\u5e0c\u8868\uff08Hash Table\uff09 \uff0c\u5176\u6838\u5fc3\u601d\u60f3\u5982\u4e0b\uff1a \u6570\u7ec4+\u94fe\u8868\uff08\u62c9\u94fe\u6cd5\uff09 \uff1a \u54c8\u5e0c\u8868\u5185\u90e8\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6570\u7ec4\u5143\u7d20\u79f0\u4e3a\u201c\u6876\u201d\u3002\u5f53\u591a\u4e2a\u5143\u7d20\u54c8\u5e0c\u5230\u540c\u4e00\u4e2a\u6876\u65f6\uff0c\u8fd9\u4e9b\u5143\u7d20\u4f1a\u4ee5\u94fe\u8868\uff08\u6216\u5176\u4ed6\u7ed3\u6784\uff0c\u5982C++11\u4e2d\u7684\u94fe\u8868\u6216\u7ea2\u9ed1\u6811\uff09\u5f62\u5f0f\u5b58\u50a8\u5728\u8be5\u6876\u4e2d\u3002 \u54c8\u5e0c\u51fd\u6570 \uff1a \u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5c06\u952e\u6620\u5c04\u5230\u6570\u7ec4\u7684\u4e0b\u6807\uff0c\u51b3\u5b9a\u5143\u7d20\u5b58\u50a8\u7684\u4f4d\u7f6e\u3002\u54c8\u5e0c\u51fd\u6570\u7684\u597d\u574f\u76f4\u63a5\u5f71\u54cd\u67e5\u627e\u6548\u7387\u3002 \u51b2\u7a81\u89e3\u51b3 \uff1a \u5e38\u7528\u62c9\u94fe\u6cd5\uff08\u94fe\u8868\u6cd5\uff09\u89e3\u51b3\u54c8\u5e0c\u51b2\u7a81\uff0c\u5373\u540c\u4e00\u4e2a\u6876\u4e2d\u7684\u5143\u7d20\u7528\u94fe\u8868\u8fde\u63a5\u3002 \u52a8\u6001\u6269\u5bb9 \uff1a \u5f53\u5143\u7d20\u6570\u91cf\u589e\u591a\u5bfc\u81f4\u54c8\u5e0c\u8868\u8d1f\u8f7d\u56e0\u5b50\u8fc7\u9ad8\u65f6\uff0c\u4f1a\u81ea\u52a8\u6269\u5bb9\uff08\u589e\u52a0\u6876\u7684\u6570\u91cf\uff09\uff0c\u5e76\u91cd\u65b0\u5206\u914d\u5df2\u6709\u5143\u7d20\uff08rehash\uff09\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a \u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u4e3aO(n)\u3002 \u793a\u610f\u56fe\uff1a \u54c8\u5e0c\u8868\uff08\u6570\u7ec4\uff09 +-----+-----+-----+-----+-----+ | 0 | 1 | 2 | 3 | ... | +--|--+--|--+--|--+--|--+-----+ | | | | \u94fe\u8868 \u94fe\u8868 \u94fe\u8868 \u94fe\u8868 \u5728C++11\u53ca\u4ee5\u540e\uff0c unordered_map \u548c unordered_set \u5c31\u662f\u57fa\u4e8ehashtable\u5b9e\u73b0\u7684\u3002","title":"STL\u4e2dhashtable\u7684\u5e95\u5c42\u5b9e\u73b0\uff1f"},{"location":"C%2B%2B/STL/5%E6%9C%8816/#vector","text":"","title":"vector \u5e95\u5c42\u539f\u7406\u53ca\u5176\u76f8\u5173\u9762\u8bd5\u9898"},{"location":"C%2B%2B/STL/5%E6%9C%8816/#vector_1","text":"vector \u662fC++ STL\u4e2d\u6700\u5e38\u7528\u7684\u987a\u5e8f\u5bb9\u5668\u4e4b\u4e00\uff0c\u5176\u5e95\u5c42\u5b9e\u73b0\u57fa\u4e8e \u52a8\u6001\u6570\u7ec4 \u3002\u4e3b\u8981\u539f\u7406\u5982\u4e0b\uff1a \u52a8\u6001\u6570\u7ec4 \uff1a vector \u5185\u90e8\u7ef4\u62a4\u4e00\u4e2a\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff08\u7c7b\u4f3cC\u8bed\u8a00\u7684\u6570\u7ec4\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u968f\u673a\u8bbf\u95ee\u5143\u7d20\uff0c\u8bbf\u95ee\u6548\u7387\u4e3aO(1)\u3002 \u81ea\u52a8\u6269\u5bb9 \uff1a \u5f53\u63d2\u5165\u65b0\u5143\u7d20\u4e14\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c vector \u4f1a\u81ea\u52a8\u5206\u914d\u66f4\u5927\u7684\u5185\u5b58\uff08\u901a\u5e38\u4e3a\u539f\u5bb9\u91cf\u76842\u500d\uff09\uff0c\u5e76\u5c06\u539f\u6709\u5143\u7d20\u62f7\u8d1d\u5230\u65b0\u7a7a\u95f4\uff0c\u91ca\u653e\u65e7\u7a7a\u95f4\u3002\u6269\u5bb9\u65f6\u7684\u63d2\u5165\u64cd\u4f5c\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u4f46\u5747\u644a\u4e0b\u6765\u6bcf\u6b21\u63d2\u5165\u7684\u5e73\u5747\u590d\u6742\u5ea6\u4e3aO(1)\u3002 \u5185\u5b58\u7ba1\u7406 \uff1a vector \u7684\u5bb9\u91cf\uff08capacity\uff09\u548c\u5b9e\u9645\u5143\u7d20\u4e2a\u6570\uff08size\uff09\u662f\u5206\u5f00\u7684\u3002\u5bb9\u91cf\u5927\u4e8e\u7b49\u4e8e\u5143\u7d20\u4e2a\u6570\uff0c\u53ea\u6709\u5f53size\u7b49\u4e8ecapacity\u65f6\u624d\u4f1a\u6269\u5bb9\u3002 \u5143\u7d20\u5b58\u50a8 \uff1a \u5143\u7d20\u5728\u5185\u5b58\u4e2d\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u4fdd\u8bc1\u4e86\u9ad8\u6548\u7684\u968f\u673a\u8bbf\u95ee\u548c\u826f\u597d\u7684\u7f13\u5b58\u5c40\u90e8\u6027\u3002 \u63d2\u5165\u548c\u5220\u9664 \uff1a \u5c3e\u90e8\u63d2\u5165/\u5220\u9664\uff08push_back/pop_back\uff09\uff1a\u6548\u7387\u9ad8\uff0cO(1)\u5747\u644a\u3002 \u4e2d\u95f4\u6216\u5934\u90e8\u63d2\u5165/\u5220\u9664\uff1a\u9700\u8981\u79fb\u52a8\u5927\u91cf\u5143\u7d20\uff0c\u6548\u7387\u4f4e\uff0cO(n)\u3002","title":"vector \u5e95\u5c42\u539f\u7406"},{"location":"C%2B%2B/STL/5%E6%9C%8816/#_1","text":"vector\u548c\u6570\u7ec4\u7684\u533a\u522b\uff1f vector \u80fd\u52a8\u6001\u6269\u5bb9\uff0c\u6570\u7ec4\u5927\u5c0f\u56fa\u5b9a\u3002 vector \u6709\u4e30\u5bcc\u7684\u6210\u5458\u51fd\u6570\uff0c\u6570\u7ec4\u6ca1\u6709\u3002 vector \u53ef\u4ee5\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u6570\u7ec4\u9700\u8981\u624b\u52a8\u7ba1\u7406\u3002 vector\u6269\u5bb9\u673a\u5236\uff1f \u4e00\u822c\u63092\u500d\u6269\u5bb9\uff08\u5b9e\u73b0\u76f8\u5173\uff09\uff0c\u6269\u5bb9\u65f6\u4f1a\u5206\u914d\u65b0\u7a7a\u95f4\u5e76\u62f7\u8d1d\u65e7\u6570\u636e\uff0c\u91ca\u653e\u65e7\u7a7a\u95f4\u3002 vector\u7684\u63d2\u5165\u548c\u5220\u9664\u6548\u7387\uff1f \u5c3e\u90e8\u63d2\u5165/\u5220\u9664\u6548\u7387\u9ad8\uff0cO(1)\u5747\u644a\u3002 \u5934\u90e8\u6216\u4e2d\u95f4\u63d2\u5165/\u5220\u9664\u6548\u7387\u4f4e\uff0cO(n)\u3002 vector\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u9ad8\u6548\u5730\u5728\u5934\u90e8\u63d2\u5165\u5143\u7d20\uff1f \u56e0\u4e3a\u6240\u6709\u5143\u7d20\u90fd\u8981\u6574\u4f53\u5411\u540e\u79fb\u52a8\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\u3002 \u5982\u4f55\u91ca\u653evector\u591a\u4f59\u7684\u5185\u5b58\uff1f \u53ef\u4ee5\u7528 shrink_to_fit() \u6216swap\u6280\u5de7\uff1a vector<T>(v).swap(v); vector\u7684\u8fed\u4ee3\u5668\u5931\u6548\u573a\u666f\uff1f \u6269\u5bb9\u3001\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u65f6\uff0c\u539f\u6709\u7684\u8fed\u4ee3\u5668\u53ef\u80fd\u4f1a\u5931\u6548\u3002 \u793a\u4f8b\u4ee3\u7801\uff1avector\u81ea\u52a8\u6269\u5bb9 #include <vector> #include <iostream> using namespace std ; int main () { vector < int > v ; for ( int i = 0 ; i < 10 ; ++ i ) { v . push_back ( i ); cout << \"size: \" << v . size () << \", capacity: \" << v . capacity () << endl ; } return 0 ; }","title":"\u5e38\u89c1\u9762\u8bd5\u9898"},{"location":"C%2B%2B/STL/5%E6%9C%8816/#list","text":"list \u662fC++ STL\u4e2d\u7684\u53cc\u5411\u94fe\u8868\u5bb9\u5668\uff0c\u5176\u5e95\u5c42\u5b9e\u73b0\u57fa\u4e8e \u53cc\u5411\u94fe\u8868 \u3002\u4e3b\u8981\u539f\u7406\u5982\u4e0b\uff1a \u53cc\u5411\u94fe\u8868\u7ed3\u6784 \uff1a \u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u6570\u636e\u548c\u4e24\u4e2a\u6307\u9488\uff0c\u5206\u522b\u6307\u5411\u524d\u9a71\u548c\u540e\u7ee7\u8282\u70b9\u3002\u8fd9\u6837\u53ef\u4ee5\u5728\u5e38\u6570\u65f6\u95f4\u5185\u5728\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u3002 \u975e\u8fde\u7eed\u5185\u5b58 \uff1a list \u7684\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u4e0d\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u6bcf\u4e2a\u8282\u70b9\u5355\u72ec\u5206\u914d\u7a7a\u95f4\uff0c\u56e0\u6b64\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff08\u4e0d\u80fd\u7528\u4e0b\u6807\u8bbf\u95ee\uff09\u3002 \u63d2\u5165\u548c\u5220\u9664\u6548\u7387 \uff1a \u5728\u5df2\u77e5\u4f4d\u7f6e\uff08\u901a\u8fc7\u8fed\u4ee3\u5668\uff09\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\uff0c\u4e0d\u9700\u8981\u79fb\u52a8\u5176\u4ed6\u5143\u7d20\u3002 \u904d\u5386\u6548\u7387 \uff1a \u7531\u4e8e\u4e0d\u662f\u8fde\u7eed\u5185\u5b58\uff0c\u904d\u5386\u6548\u7387\u6bd4 vector \u4f4e\uff0c\u4e14\u4e0d\u652f\u6301\u9ad8\u6548\u7684\u968f\u673a\u8bbf\u95ee\u3002 \u7a7a\u95f4\u5f00\u9500 \uff1a \u6bcf\u4e2a\u8282\u70b9\u9664\u4e86\u5b58\u50a8\u6570\u636e\u5916\uff0c\u8fd8\u9700\u8981\u989d\u5916\u5b58\u50a8\u4e24\u4e2a\u6307\u9488\uff0c\u7a7a\u95f4\u5f00\u9500\u8f83\u5927\u3002","title":"list \u5e95\u5c42\u539f\u7406\u53ca\u5176\u76f8\u5173\u9762\u8bd5\u9898"},{"location":"C%2B%2B/STL/5%E6%9C%8816/#_2","text":"list\u548cvector\u7684\u533a\u522b\uff1f list \u5e95\u5c42\u662f\u53cc\u5411\u94fe\u8868\uff0c vector \u662f\u52a8\u6001\u6570\u7ec4\u3002 list \u63d2\u5165/\u5220\u9664\u6548\u7387\u9ad8\uff08O(1)\uff09\uff0c\u4f46\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\u3002 vector \u652f\u6301\u9ad8\u6548\u968f\u673a\u8bbf\u95ee\uff0c\u5c3e\u90e8\u63d2\u5165/\u5220\u9664\u5feb\uff0c\u4f46\u4e2d\u95f4\u64cd\u4f5c\u6162\u3002 list\u7684\u63d2\u5165\u548c\u5220\u9664\u4e3a\u4ec0\u4e48\u5feb\uff1f \u53ea\u9700\u4fee\u6539\u76f8\u90bb\u8282\u70b9\u7684\u6307\u9488\uff0c\u4e0d\u9700\u8981\u79fb\u52a8\u5176\u4ed6\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(1)\u3002 list\u7684\u904d\u5386\u4e3a\u4ec0\u4e48\u6162\uff1f \u8282\u70b9\u5206\u6563\u5728\u5185\u5b58\u4e2d\uff0c\u7f13\u5b58\u547d\u4e2d\u7387\u4f4e\uff0c\u4e14\u53ea\u80fd\u987a\u5e8f\u8bbf\u95ee\u3002 list\u7684\u8fed\u4ee3\u5668\u5931\u6548\u573a\u666f\uff1f \u63d2\u5165\u4e0d\u4f1a\u5bfc\u81f4\u5176\u4ed6\u8fed\u4ee3\u5668\u5931\u6548\uff0c\u5220\u9664\u67d0\u8282\u70b9\u540e\u6307\u5411\u8be5\u8282\u70b9\u7684\u8fed\u4ee3\u5668\u5931\u6548\u3002 list\u9002\u5408\u54ea\u4e9b\u573a\u666f\uff1f \u9700\u8981\u9891\u7e41\u5728\u4e2d\u95f4\u63d2\u5165/\u5220\u9664\u5143\u7d20\u4e14\u4e0d\u5173\u5fc3\u968f\u673a\u8bbf\u95ee\u7684\u573a\u666f\u3002 \u793a\u4f8b\u4ee3\u7801\uff1alist\u63d2\u5165\u548c\u5220\u9664 #include <list> #include <iostream> using namespace std ; int main () { list < int > l = { 1 , 2 , 3 }; auto it = l . begin (); ++ it ; l . insert ( it , 10 ); // \u5728\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u63d2\u516510 l . erase ( it ); // \u5220\u9664\u539f\u6765\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20 for ( int x : l ) cout << x << \" \" ; return 0 ; }","title":"\u5e38\u89c1\u9762\u8bd5\u9898"},{"location":"C%2B%2B/STL/5%E6%9C%8816/#deque","text":"deque \uff08\u53cc\u7aef\u961f\u5217\uff09\u662fC++ STL\u4e2d\u7684\u4e00\u79cd\u987a\u5e8f\u5bb9\u5668\uff0c\u652f\u6301\u5728\u5934\u5c3e\u4e24\u7aef\u9ad8\u6548\u63d2\u5165\u548c\u5220\u9664\u3002\u5176\u5e95\u5c42\u5b9e\u73b0\u539f\u7406\u5982\u4e0b\uff1a \u5206\u6bb5\u8fde\u7eed\u5185\u5b58\u7ed3\u6784\uff08\u5757\u8868\u7ed3\u6784\uff09 \uff1a deque \u4e0d\u662f\u50cf vector \u90a3\u6837\u7528\u4e00\u5757\u8fde\u7eed\u7684\u5927\u5185\u5b58\uff0c\u800c\u662f\u7531\u591a\u4e2a\u5c0f\u7684\u8fde\u7eed\u5185\u5b58\u5757\uff08\u79f0\u4e3a\u201c\u7f13\u51b2\u533a\u201d\u6216\u201c\u5757\u201d\uff09\u7ec4\u6210\uff0c\u5e76\u7528\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff08map\uff09\u7ba1\u7406\u8fd9\u4e9b\u5757\u3002\u8fd9\u6837\u65e2\u80fd\u652f\u6301\u9ad8\u6548\u7684\u5934\u5c3e\u64cd\u4f5c\uff0c\u53c8\u907f\u514d\u4e86\u9891\u7e41\u7684\u6574\u4f53\u5185\u5b58\u642c\u79fb\u3002 \u9ad8\u6548\u7684\u5934\u5c3e\u64cd\u4f5c \uff1a \u5728\u5934\u90e8\u6216\u5c3e\u90e8\u63d2\u5165/\u5220\u9664\u5143\u7d20\u65f6\uff0c\u53ea\u9700\u5728\u5757\u7684\u4e24\u7aef\u64cd\u4f5c\u6216\u5206\u914d/\u91ca\u653e\u65b0\u7684\u5757\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\u5747\u644a\u3002 \u968f\u673a\u8bbf\u95ee \uff1a deque \u652f\u6301\u4e0b\u6807\u968f\u673a\u8bbf\u95ee\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\u3002\u5b9e\u73b0\u65f6\u901a\u8fc7\u5757\u8868\u7ed3\u6784\u548c\u6307\u9488\u504f\u79fb\u8ba1\u7b97\u5b9a\u4f4d\u5230\u5177\u4f53\u5143\u7d20\u3002 \u5185\u5b58\u7ba1\u7406 \uff1a \u5f53\u5934\u5c3e\u7a7a\u95f4\u4e0d\u8db3\u65f6\uff0c\u4f1a\u81ea\u52a8\u5206\u914d\u65b0\u7684\u5757\uff0c\u5e76\u8c03\u6574\u6307\u9488\u6570\u7ec4\uff08map\uff09\u3002 \u63d2\u5165/\u5220\u9664\u6548\u7387 \uff1a \u5934\u5c3e\u63d2\u5165/\u5220\u9664\uff1aO(1)\u5747\u644a\u3002 \u4e2d\u95f4\u63d2\u5165/\u5220\u9664\uff1a\u9700\u8981\u79fb\u52a8\u5143\u7d20\uff0c\u6548\u7387\u4e3aO(n)\u3002","title":"deque\u5e95\u5c42\u539f\u7406\u53ca\u5176\u76f8\u5173\u9762\u8bd5\u9898"},{"location":"C%2B%2B/STL/5%E6%9C%8816/#_3","text":"deque\u548cvector\u7684\u533a\u522b\uff1f deque \u652f\u6301\u5934\u5c3e\u9ad8\u6548\u63d2\u5165/\u5220\u9664\uff0c vector \u53ea\u652f\u6301\u5c3e\u90e8\u9ad8\u6548\u64cd\u4f5c\u3002 deque \u5e95\u5c42\u662f\u5206\u6bb5\u8fde\u7eed\u5185\u5b58\uff0c vector \u662f\u5355\u5757\u8fde\u7eed\u5185\u5b58\u3002 deque \u968f\u673a\u8bbf\u95ee\u6548\u7387\u548c vector \u4e00\u6837\uff0c\u90fd\u662fO(1)\u3002 deque\u4e3a\u4ec0\u4e48\u80fd\u9ad8\u6548\u5730\u5728\u5934\u90e8\u63d2\u5165\u5143\u7d20\uff1f \u56e0\u4e3a\u5176\u5185\u5b58\u7ed3\u6784\u5141\u8bb8\u5728\u5934\u90e8\u5206\u914d\u65b0\u5757\uff0c\u65e0\u9700\u6574\u4f53\u79fb\u52a8\u5143\u7d20\u3002 deque\u7684\u7a7a\u95f4\u7ba1\u7406\u65b9\u5f0f\uff1f \u91c7\u7528\u6307\u9488\u6570\u7ec4\uff08map\uff09\u7ba1\u7406\u591a\u4e2a\u5c0f\u5757\uff0c\u6bcf\u4e2a\u5757\u5b58\u50a8\u4e00\u90e8\u5206\u5143\u7d20\u3002 deque\u9002\u5408\u54ea\u4e9b\u573a\u666f\uff1f \u9700\u8981\u9891\u7e41\u5728\u5934\u5c3e\u4e24\u7aef\u63d2\u5165/\u5220\u9664\u5143\u7d20\u7684\u573a\u666f\uff0c\u5982\u5b9e\u73b0\u961f\u5217\u3001\u6ed1\u52a8\u7a97\u53e3\u7b49\u3002 deque\u7684\u8fed\u4ee3\u5668\u5931\u6548\u573a\u666f\uff1f \u5728\u5934\u5c3e\u63d2\u5165/\u5220\u9664\u65f6\uff0c\u53ea\u6709\u6d89\u53ca\u5230\u7684\u5757\u7684\u8fed\u4ee3\u5668\u5931\u6548\uff1b\u6574\u4f53\u6269\u5bb9\u6216\u6536\u7f29\u65f6\uff0c\u6240\u6709\u8fed\u4ee3\u5668\u53ef\u80fd\u5931\u6548\u3002","title":"\u5e38\u89c1\u9762\u8bd5\u9898"},{"location":"C%2B%2B/STL/5%E6%9C%8816/#vector_2","text":"\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u91ca\u653e vector \u591a\u4f59\u7684\u7a7a\u95f4\uff1a shrink_to_fit() \u65b9\u6cd5 \u8c03\u7528 v.shrink_to_fit(); \uff0c\u8bf7\u6c42\u5c06 vector \u7684\u5bb9\u91cf\u7f29\u5c0f\u5230\u4e0e\u5f53\u524d\u5143\u7d20\u4e2a\u6570\u4e00\u81f4\uff08\u4f46\u4e0d\u662f\u5f3a\u5236\uff0c\u662f\u5426\u771f\u7684\u7f29\u5bb9\u7531\u5b9e\u73b0\u51b3\u5b9a\uff09\u3002 swap \u6280\u5de7 \u4f7f\u7528\u4e34\u65f6\u5bf9\u8c61\u548c swap \u5f3a\u5236\u91ca\u653e\u591a\u4f59\u7a7a\u95f4\uff1a vector < int > ( v ). swap ( v ); \u8fd9\u6837\u4f1a\u521b\u5efa\u4e00\u4e2a\u53ea\u5305\u542b\u5f53\u524d\u5143\u7d20\u7684\u65b0 vector \uff0c\u5e76\u4e0e\u539f vector \u4ea4\u6362\uff0c\u539f\u6765\u7684\u591a\u4f59\u7a7a\u95f4\u4f1a\u88ab\u91ca\u653e\u3002 \u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u53ef\u4ee5\u6709\u6548\u51cf\u5c11 vector \u7684\u5185\u5b58\u5360\u7528\u3002","title":"vector\u5982\u4f55\u91ca\u653e\u7a7a\u95f4"},{"location":"C%2B%2B/STL/5%E6%9C%8816/#stl","text":"\u5728\u5171\u4eab\u5185\u5b58\u4e0a\u76f4\u63a5\u4f7f\u7528STL\u6807\u51c6\u5e93\u5bb9\u5668\uff08\u5982 vector \u3001 map \u7b49\uff09 \u901a\u5e38\u4e0d\u53ef\u884c \uff0c\u56e0\u4e3aSTL\u5bb9\u5668\u5185\u90e8\u4f1a\u52a8\u6001\u5206\u914d\u5185\u5b58\uff08\u5982 new \uff09\uff0c\u8fd9\u4e9b\u5185\u5b58\u53ea\u5728\u5f53\u524d\u8fdb\u7a0b\u6709\u6548\uff0c\u5176\u4ed6\u8fdb\u7a0b\u65e0\u6cd5\u8bbf\u95ee\u3002","title":"\u5982\u4f55\u5728\u5171\u4eab\u5185\u5b58\u4e0a\u4f7f\u7528STL\u6807\u51c6\u5e93\uff1f"},{"location":"C%2B%2B/STL/5%E6%9C%8816/#_4","text":"\u4f7f\u7528\u4e13\u95e8\u652f\u6301\u5171\u4eab\u5185\u5b58\u7684STL\u5bb9\u5668\u5b9e\u73b0 \u63a8\u8350\u4f7f\u7528 Boost.Interprocess \u5e93\uff0c\u5b83\u63d0\u4f9b\u4e86\u53ef\u4ee5\u5728\u5171\u4eab\u5185\u5b58\u4e0a\u4f7f\u7528\u7684STL\u517c\u5bb9\u5bb9\u5668\uff0c\u5982 boost::interprocess::vector \u3001 map \u7b49\u3002 \u57fa\u672c\u6b65\u9aa4\u793a\u4f8b #include <boost/interprocess/managed_shared_memory.hpp> #include <boost/interprocess/containers/vector.hpp> #include <boost/interprocess/allocators/allocator.hpp> using namespace boost :: interprocess ; int main () { // \u521b\u5efa\u6216\u6253\u5f00\u5171\u4eab\u5185\u5b58 managed_shared_memory shm ( create_only , \"MySharedMemory\" , 1024 * 1024 ); // \u5b9a\u4e49\u5206\u914d\u5668 typedef allocator < int , managed_shared_memory :: segment_manager > ShmAllocator ; typedef vector < int , ShmAllocator > ShmVector ; // \u5728\u5171\u4eab\u5185\u5b58\u4e0a\u6784\u9020vector ShmVector * vec = shm . construct < ShmVector > ( \"MyVector\" )( shm . get_segment_manager ()); // \u4f7f\u7528vector vec -> push_back ( 1 ); vec -> push_back ( 2 ); return 0 ; } \u6ce8\u610f\u4e8b\u9879 \u53ea\u80fd\u7528\u652f\u6301\u5171\u4eab\u5185\u5b58\u5206\u914d\u5668\u7684\u5bb9\u5668\u3002 \u6307\u9488\u3001\u5f15\u7528\u7b49\u6210\u5458\u4e0d\u80fd\u6307\u5411\u8fdb\u7a0b\u79c1\u6709\u5185\u5b58\u3002 \u9700\u8981\u624b\u52a8\u7ba1\u7406\u5171\u4eab\u5185\u5b58\u7684\u521b\u5efa\u548c\u9500\u6bc1\u3002 \u603b\u7ed3\uff1a \u8981\u5728\u5171\u4eab\u5185\u5b58\u4e0a\u7528STL\u5bb9\u5668\uff0c\u63a8\u8350\u7528Boost.Interprocess\u5e93\u7684\u5bb9\u5668\u548c\u5206\u914d\u5668\uff0c\u4e0d\u80fd\u76f4\u63a5\u7528\u6807\u51c6STL\u5bb9\u5668\u3002","title":"\u6b63\u786e\u505a\u6cd5"},{"location":"C%2B%2B/STL/5%E6%9C%8816/#map","text":"map \u63d2\u5165\u5143\u7d20\u5e38\u7528\u7684\u65b9\u5f0f\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a insert(pair) m . insert ( std :: make_pair ( key , value )); m . insert ( std :: pair < Key , Value > ( key , value )); insert(value_type) m . insert ( map < Key , Value >:: value_type ( key , value )); \u4e0b\u6807\u8fd0\u7b97\u7b26[] m [ key ] = value ; \u5982\u679c key \u4e0d\u5b58\u5728\uff0c\u4f1a\u81ea\u52a8\u63d2\u5165\u65b0\u5143\u7d20\u3002 emplace m . emplace ( key , value ); \u76f4\u63a5\u5728\u5bb9\u5668\u5185\u90e8\u539f\u5730\u6784\u9020\uff0c\u63d0\u9ad8\u6548\u7387\u3002 insert\u5e26hint\u7248\u672c auto it = m . begin (); m . insert ( it , std :: make_pair ( key , value )); \u603b\u7ed3\uff1a \u5e38\u7528\u7684\u6709 insert \u3001 emplace \u3001 [] \u4e09\u79cd\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\u63a8\u8350\u7528 emplace \u6216 [] \u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u5b9e\u9645\u7684 C++ \u7a0b\u5e8f\u4f8b\u5b50\uff0c\u6f14\u793a\u4e86 map \u7684\u591a\u79cd\u63d2\u5165\u65b9\u5f0f\uff1a #include <iostream> #include <map> using namespace std ; int main () { map < int , string > m ; // 1. insert(pair) m . insert ( make_pair ( 1 , \"apple\" )); m . insert ( pair < int , string > ( 2 , \"banana\" )); // 2. insert(value_type) m . insert ( map < int , string >:: value_type ( 3 , \"cherry\" )); // 3. \u4e0b\u6807\u8fd0\u7b97\u7b26[] m [ 4 ] = \"date\" ; // 4. emplace m . emplace ( 5 , \"elderberry\" ); // 5. insert\u5e26hint auto it = m . begin (); m . insert ( it , make_pair ( 6 , \"fig\" )); // \u8f93\u51fa\u6240\u6709\u5143\u7d20 for ( const auto & p : m ) { cout << p . first << \": \" << p . second << endl ; } return 0 ; } \u8f93\u51fa\u793a\u4f8b\uff1a 1: apple 2: banana 3: cherry 4: date 5: elderberry 6: fig \u8fd9\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86 map \u7684\u6240\u6709\u5e38\u89c1\u63d2\u5165\u65b9\u5f0f\u3002","title":"map\u63d2\u5165\u65b9\u5f0f\u6709\u54ea\u51e0\u79cd\uff1f"},{"location":"C%2B%2B/inherit/5%E6%9C%8819/","text":"C\u7ee7\u627fB\uff0cB\u7ee7\u627fA\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u5982\u679cA\u7684\u6790\u6784\u51fd\u6570\u4e0d\u4e3a\u865a\u51fd\u6570\u4f1a\u53d1\u751f\u4ec0\u4e48 #include <iostream> using namespace std ; class A { public : A () { cout << \"A constructor\" << endl ; } virtual ~ A () { // \u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570 cout << \"A destructor\" << endl ; } }; class B : public A { public : B () { cout << \"B constructor\" << endl ; } ~ B () { cout << \"B destructor\" << endl ; } }; class C : public B { public : C () { cout << \"C constructor\" << endl ; } ~ C () { cout << \"C destructor\" << endl ; } }; int main () { A * pa = new C (); // \u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61 delete pa ; // \u5220\u9664\u57fa\u7c7b\u6307\u9488 return 0 ; } \u8f93\u51fa\u7ed3\u679c\uff08\u6790\u6784\u51fd\u6570\u4e3a\u865a\u51fd\u6570\u65f6\uff09\uff1a A constructor B constructor C constructor C destructor B destructor A destructor \u89e3\u91ca\uff1a \u6784\u9020\u8fc7\u7a0b \uff1a \u5f53 new C() \u88ab\u8c03\u7528\u65f6\uff0c\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\u662f\u4ece\u57fa\u7c7b\u5230\u6d3e\u751f\u7c7b\uff1a \u9996\u5148\u8c03\u7528 A \u7684\u6784\u9020\u51fd\u6570\u3002 \u7136\u540e\u8c03\u7528 B \u7684\u6784\u9020\u51fd\u6570\u3002 \u6700\u540e\u8c03\u7528 C \u7684\u6784\u9020\u51fd\u6570\u3002 \u6790\u6784\u8fc7\u7a0b \uff1a \u5f53 delete pa \u88ab\u8c03\u7528\u65f6\uff0c\u7531\u4e8e A \u7684\u6790\u6784\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u6790\u6784\u8fc7\u7a0b\u4f1a\u6309\u7167\u4ece\u6d3e\u751f\u7c7b\u5230\u57fa\u7c7b\u7684\u987a\u5e8f\u8fdb\u884c\uff1a \u9996\u5148\u8c03\u7528 C \u7684\u6790\u6784\u51fd\u6570\u3002 \u7136\u540e\u8c03\u7528 B \u7684\u6790\u6784\u51fd\u6570\u3002 \u6700\u540e\u8c03\u7528 A \u7684\u6790\u6784\u51fd\u6570\u3002 \u5982\u679c\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff1a \u5c06 A \u7684\u6790\u6784\u51fd\u6570\u6539\u4e3a\u975e\u865a\u51fd\u6570\uff1a ~ A () { // \u975e\u865a\u51fd\u6570 cout << \"A destructor\" << endl ; } \u8f93\u51fa\u7ed3\u679c\uff1a A constructor B constructor C constructor A destructor \u89e3\u91ca\uff1a \u6784\u9020\u8fc7\u7a0b \uff1a \u6784\u9020\u8fc7\u7a0b\u4e0e\u4e4b\u524d\u76f8\u540c\uff0c\u4ece\u57fa\u7c7b\u5230\u6d3e\u751f\u7c7b\u3002 \u6790\u6784\u8fc7\u7a0b \uff1a \u5f53 delete pa \u88ab\u8c03\u7528\u65f6\uff0c\u7531\u4e8e A \u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u53ea\u6709 A \u7684\u6790\u6784\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\u3002 B \u548c C \u7684\u6790\u6784\u51fd\u6570\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u5bfc\u81f4\u6d3e\u751f\u7c7b\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u8d44\u6e90\u65e0\u6cd5\u6b63\u786e\u91ca\u653e\u3002 \u603b\u7ed3\uff1a \u6790\u6784\u51fd\u6570\u4e3a\u865a\u51fd\u6570\u65f6 \uff1a \u6790\u6784\u51fd\u6570\u4f1a\u6309\u7167\u4ece\u6d3e\u751f\u7c7b\u5230\u57fa\u7c7b\u7684\u987a\u5e8f\u4f9d\u6b21\u8c03\u7528\uff0c\u786e\u4fdd\u6240\u6709\u8d44\u6e90\u90fd\u80fd\u6b63\u786e\u91ca\u653e\u3002 \u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\u65f6 \uff1a \u53ea\u6709\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\uff0c\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u53ef\u80fd\u5bfc\u81f4\u8d44\u6e90\u6cc4\u6f0f\u3002 \u6700\u4f73\u5b9e\u8df5 \uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u53ef\u80fd\u88ab\u7ee7\u627f\uff0c\u5e76\u4e14\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5e94\u8be5\u5c06\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002","title":"5\u670819\u65e5\u57fa\u7840\u77e5\u8bc6"},{"location":"C%2B%2B/inherit/5%E6%9C%8819/#cbbaa","text":"#include <iostream> using namespace std ; class A { public : A () { cout << \"A constructor\" << endl ; } virtual ~ A () { // \u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570 cout << \"A destructor\" << endl ; } }; class B : public A { public : B () { cout << \"B constructor\" << endl ; } ~ B () { cout << \"B destructor\" << endl ; } }; class C : public B { public : C () { cout << \"C constructor\" << endl ; } ~ C () { cout << \"C destructor\" << endl ; } }; int main () { A * pa = new C (); // \u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61 delete pa ; // \u5220\u9664\u57fa\u7c7b\u6307\u9488 return 0 ; }","title":"C\u7ee7\u627fB\uff0cB\u7ee7\u627fA\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u5982\u679cA\u7684\u6790\u6784\u51fd\u6570\u4e0d\u4e3a\u865a\u51fd\u6570\u4f1a\u53d1\u751f\u4ec0\u4e48"},{"location":"C%2B%2B/inherit/5%E6%9C%8819/#_1","text":"A constructor B constructor C constructor C destructor B destructor A destructor","title":"\u8f93\u51fa\u7ed3\u679c\uff08\u6790\u6784\u51fd\u6570\u4e3a\u865a\u51fd\u6570\u65f6\uff09\uff1a"},{"location":"C%2B%2B/inherit/5%E6%9C%8819/#_2","text":"\u6784\u9020\u8fc7\u7a0b \uff1a \u5f53 new C() \u88ab\u8c03\u7528\u65f6\uff0c\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\u662f\u4ece\u57fa\u7c7b\u5230\u6d3e\u751f\u7c7b\uff1a \u9996\u5148\u8c03\u7528 A \u7684\u6784\u9020\u51fd\u6570\u3002 \u7136\u540e\u8c03\u7528 B \u7684\u6784\u9020\u51fd\u6570\u3002 \u6700\u540e\u8c03\u7528 C \u7684\u6784\u9020\u51fd\u6570\u3002 \u6790\u6784\u8fc7\u7a0b \uff1a \u5f53 delete pa \u88ab\u8c03\u7528\u65f6\uff0c\u7531\u4e8e A \u7684\u6790\u6784\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u6790\u6784\u8fc7\u7a0b\u4f1a\u6309\u7167\u4ece\u6d3e\u751f\u7c7b\u5230\u57fa\u7c7b\u7684\u987a\u5e8f\u8fdb\u884c\uff1a \u9996\u5148\u8c03\u7528 C \u7684\u6790\u6784\u51fd\u6570\u3002 \u7136\u540e\u8c03\u7528 B \u7684\u6790\u6784\u51fd\u6570\u3002 \u6700\u540e\u8c03\u7528 A \u7684\u6790\u6784\u51fd\u6570\u3002","title":"\u89e3\u91ca\uff1a"},{"location":"C%2B%2B/inherit/5%E6%9C%8819/#_3","text":"\u5c06 A \u7684\u6790\u6784\u51fd\u6570\u6539\u4e3a\u975e\u865a\u51fd\u6570\uff1a ~ A () { // \u975e\u865a\u51fd\u6570 cout << \"A destructor\" << endl ; }","title":"\u5982\u679c\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff1a"},{"location":"C%2B%2B/inherit/5%E6%9C%8819/#_4","text":"A constructor B constructor C constructor A destructor","title":"\u8f93\u51fa\u7ed3\u679c\uff1a"},{"location":"C%2B%2B/inherit/5%E6%9C%8819/#_5","text":"\u6784\u9020\u8fc7\u7a0b \uff1a \u6784\u9020\u8fc7\u7a0b\u4e0e\u4e4b\u524d\u76f8\u540c\uff0c\u4ece\u57fa\u7c7b\u5230\u6d3e\u751f\u7c7b\u3002 \u6790\u6784\u8fc7\u7a0b \uff1a \u5f53 delete pa \u88ab\u8c03\u7528\u65f6\uff0c\u7531\u4e8e A \u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u53ea\u6709 A \u7684\u6790\u6784\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\u3002 B \u548c C \u7684\u6790\u6784\u51fd\u6570\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u5bfc\u81f4\u6d3e\u751f\u7c7b\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u8d44\u6e90\u65e0\u6cd5\u6b63\u786e\u91ca\u653e\u3002","title":"\u89e3\u91ca\uff1a"},{"location":"C%2B%2B/inherit/5%E6%9C%8819/#_6","text":"\u6790\u6784\u51fd\u6570\u4e3a\u865a\u51fd\u6570\u65f6 \uff1a \u6790\u6784\u51fd\u6570\u4f1a\u6309\u7167\u4ece\u6d3e\u751f\u7c7b\u5230\u57fa\u7c7b\u7684\u987a\u5e8f\u4f9d\u6b21\u8c03\u7528\uff0c\u786e\u4fdd\u6240\u6709\u8d44\u6e90\u90fd\u80fd\u6b63\u786e\u91ca\u653e\u3002 \u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\u65f6 \uff1a \u53ea\u6709\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\uff0c\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u53ef\u80fd\u5bfc\u81f4\u8d44\u6e90\u6cc4\u6f0f\u3002 \u6700\u4f73\u5b9e\u8df5 \uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u53ef\u80fd\u88ab\u7ee7\u627f\uff0c\u5e76\u4e14\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5e94\u8be5\u5c06\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002","title":"\u603b\u7ed3\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/","text":"a \u548c &a \u7684\u533a\u522b 1. a \u7684\u542b\u4e49 a \u8868\u793a\u53d8\u91cf\u672c\u8eab\uff0c\u76f4\u63a5\u8bbf\u95ee\u53d8\u91cf\u7684\u503c\u3002 \u5982\u679c a \u662f\u4e00\u4e2a\u666e\u901a\u53d8\u91cf\uff0c a \u8868\u793a\u8be5\u53d8\u91cf\u5b58\u50a8\u7684\u503c\u3002 \u5982\u679c a \u662f\u4e00\u4e2a\u6307\u9488\uff0c a \u8868\u793a\u6307\u9488\u672c\u8eab\u7684\u503c\uff08\u5373\u6307\u9488\u5b58\u50a8\u7684\u5730\u5740\uff09\u3002 \u793a\u4f8b \uff1a int a = 10 ; cout << a << endl ; // \u8f93\u51fa\u53d8\u91cf a \u7684\u503c\uff1a10 2. &a \u7684\u542b\u4e49 &a \u8868\u793a\u53d8\u91cf a \u7684\u5730\u5740\u3002 & \u662f\u53d6\u5730\u5740\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u83b7\u53d6\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u3002 \u5982\u679c a \u662f\u4e00\u4e2a\u53d8\u91cf\uff0c &a \u8fd4\u56de\u8be5\u53d8\u91cf\u7684\u5185\u5b58\u5730\u5740\u3002 \u5982\u679c a \u662f\u4e00\u4e2a\u6307\u9488\uff0c &a \u8fd4\u56de\u6307\u9488\u672c\u8eab\u7684\u5730\u5740\u3002 \u793a\u4f8b \uff1a int a = 10 ; cout << & a << endl ; // \u8f93\u51fa\u53d8\u91cf a \u7684\u5730\u5740\uff0c\u4f8b\u5982\uff1a0x7ffee4b3c8ac 3. \u533a\u522b\u603b\u7ed3 \u8868\u8fbe\u5f0f \u542b\u4e49 \u793a\u4f8b a \u53d8\u91cf\u672c\u8eab\u7684\u503c int a = 10; cout << a; &a \u53d8\u91cf\u7684\u5730\u5740\uff08\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\uff09 int a = 10; cout << &a; 4. \u4f7f\u7528\u573a\u666f \uff081\uff09\u4f20\u503c\u548c\u4f20\u5f15\u7528 \u4f20\u503c \uff1a\u76f4\u63a5\u4f20\u9012\u53d8\u91cf\u7684\u503c\u3002 \u4f20\u5f15\u7528 \uff1a\u901a\u8fc7 & \u4f20\u9012\u53d8\u91cf\u7684\u5730\u5740\uff0c\u5141\u8bb8\u51fd\u6570\u4fee\u6539\u539f\u59cb\u53d8\u91cf\u3002 void modify ( int & x ) { // \u5f15\u7528\u4f20\u9012 x = 20 ; } int main () { int a = 10 ; modify ( a ); // \u4f20\u9012 a \u7684\u5f15\u7528 cout << a << endl ; // \u8f93\u51fa 20 return 0 ; } \uff082\uff09\u6307\u9488\u64cd\u4f5c \u4f7f\u7528 & \u83b7\u53d6\u53d8\u91cf\u7684\u5730\u5740\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u6307\u9488\u3002 \u4f7f\u7528\u6307\u9488\u8bbf\u95ee\u6216\u4fee\u6539\u53d8\u91cf\u7684\u503c\u3002 int a = 10 ; int * p = & a ; // \u6307\u9488 p \u6307\u5411\u53d8\u91cf a \u7684\u5730\u5740 cout << * p << endl ; // \u8f93\u51fa a \u7684\u503c\uff1a10 5. \u6ce8\u610f\u4e8b\u9879 & \u65e2\u53ef\u4ee5\u8868\u793a\u53d6\u5730\u5740\u8fd0\u7b97\u7b26\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u5f15\u7528\u7c7b\u578b\u7684\u58f0\u660e\uff08\u5982 int &ref = a; \uff09\u3002 &a \u53ea\u80fd\u7528\u4e8e\u53d8\u91cf\uff0c\u4e0d\u80fd\u7528\u4e8e\u5b57\u9762\u503c\u6216\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff1a int a = 10 ; cout << & a ; // \u5408\u6cd5 cout << & ( a + 1 ); // \u975e\u6cd5\uff0c\u4e0d\u80fd\u5bf9\u8868\u8fbe\u5f0f\u53d6\u5730\u5740 \u603b\u7ed3 a \u8868\u793a\u53d8\u91cf\u672c\u8eab\u7684\u503c\u3002 &a \u8868\u793a\u53d8\u91cf\u7684\u5730\u5740\uff08\u5185\u5b58\u4f4d\u7f6e\uff09\u3002 & \u662f\u53d6\u5730\u5740\u8fd0\u7b97\u7b26\uff0c\u5e38\u7528\u4e8e\u6307\u9488\u64cd\u4f5c\u6216\u5f15\u7528\u4f20\u9012\u3002 static \u5173\u952e\u5b57\u7684\u4f5c\u7528 \u5728 C++ \u4e2d\uff0c static \u5173\u952e\u5b57\u6709\u591a\u79cd\u7528\u9014\uff0c\u5177\u4f53\u4f5c\u7528\u53d6\u51b3\u4e8e\u5b83\u7684\u4f7f\u7528\u573a\u666f\u3002\u4ee5\u4e0b\u662f static \u7684\u4e3b\u8981\u4f5c\u7528\uff1a 1. \u4fee\u9970\u5c40\u90e8\u53d8\u91cf \u4f5c\u7528 \uff1a \u5c40\u90e8\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u4ece\u7a0b\u5e8f\u5f00\u59cb\u5230\u7a0b\u5e8f\u7ed3\u675f\uff08\u5168\u5c40\u751f\u547d\u5468\u671f\uff09\uff0c\u4f46\u4f5c\u7528\u57df\u4ecd\u7136\u662f\u5c40\u90e8\u7684\u3002 \u53d8\u91cf\u53ea\u4f1a\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u540e\u7eed\u8c03\u7528\u65f6\u4fdd\u7559\u4e0a\u4e00\u6b21\u7684\u503c\u3002 \u793a\u4f8b \uff1a void func () { static int count = 0 ; // \u9759\u6001\u5c40\u90e8\u53d8\u91cf count ++ ; cout << \"Count: \" << count << endl ; } int main () { func (); // \u8f93\u51fa\uff1aCount: 1 func (); // \u8f93\u51fa\uff1aCount: 2 func (); // \u8f93\u51fa\uff1aCount: 3 return 0 ; } 2. \u4fee\u9970\u5168\u5c40\u53d8\u91cf\u6216\u51fd\u6570 \u4f5c\u7528 \uff1a \u5c06\u5168\u5c40\u53d8\u91cf\u6216\u51fd\u6570\u7684\u4f5c\u7528\u57df\u9650\u5236\u5728\u5f53\u524d\u6587\u4ef6\uff0c\u907f\u514d\u4e0e\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u540c\u540d\u53d8\u91cf\u6216\u51fd\u6570\u51b2\u7a81\uff08 \u5185\u90e8\u94fe\u63a5 \uff09\u3002 \u793a\u4f8b \uff1a static int globalVar = 10 ; // \u9759\u6001\u5168\u5c40\u53d8\u91cf static void func () { // \u9759\u6001\u51fd\u6570 cout << \"Static function\" << endl ; } 3. \u4fee\u9970\u7c7b\u7684\u6210\u5458\u53d8\u91cf \u4f5c\u7528 \uff1a \u9759\u6001\u6210\u5458\u53d8\u91cf\u5c5e\u4e8e\u7c7b\uff0c\u800c\u4e0d\u662f\u67d0\u4e2a\u5177\u4f53\u5bf9\u8c61\u3002 \u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002 \u7279\u70b9 \uff1a \u9759\u6001\u6210\u5458\u53d8\u91cf\u9700\u8981\u5728\u7c7b\u5916\u521d\u59cb\u5316\u3002 \u9759\u6001\u6210\u5458\u53d8\u91cf\u5728\u7a0b\u5e8f\u5f00\u59cb\u65f6\u5206\u914d\u5185\u5b58\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u91ca\u653e\u3002 \u793a\u4f8b \uff1a class MyClass { public : static int count ; // \u9759\u6001\u6210\u5458\u53d8\u91cf }; int MyClass :: count = 0 ; // \u9759\u6001\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316 int main () { MyClass obj1 , obj2 ; MyClass :: count = 5 ; // \u6240\u6709\u5bf9\u8c61\u5171\u4eab cout << obj1 . count << endl ; // \u8f93\u51fa\uff1a5 cout << obj2 . count << endl ; // \u8f93\u51fa\uff1a5 return 0 ; } 4. \u4fee\u9970\u7c7b\u7684\u6210\u5458\u51fd\u6570 \u4f5c\u7528 \uff1a \u9759\u6001\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u7c7b\uff0c\u800c\u4e0d\u662f\u67d0\u4e2a\u5177\u4f53\u5bf9\u8c61\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002 \u793a\u4f8b \uff1a class MyClass { public : static void display () { // \u9759\u6001\u6210\u5458\u51fd\u6570 cout << \"Static function\" << endl ; } }; int main () { MyClass :: display (); // \u901a\u8fc7\u7c7b\u540d\u8c03\u7528\u9759\u6001\u51fd\u6570 return 0 ; } 5. \u5728\u591a\u6587\u4ef6\u9879\u76ee\u4e2d\u7684\u4f5c\u7528 \u4f5c\u7528 \uff1a \u5c06\u53d8\u91cf\u6216\u51fd\u6570\u7684\u4f5c\u7528\u57df\u9650\u5236\u5728\u5f53\u524d\u6587\u4ef6\uff0c\u907f\u514d\u4e0e\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u540c\u540d\u7b26\u53f7\u51b2\u7a81\u3002 \u793a\u4f8b \uff1a // file1.cpp static int var = 10 ; // \u4ec5\u5728 file1.cpp \u4e2d\u53ef\u89c1 // file2.cpp static int var = 20 ; // \u4ec5\u5728 file2.cpp \u4e2d\u53ef\u89c1 \u603b\u7ed3 \u4f7f\u7528\u573a\u666f \u4f5c\u7528 \u5c40\u90e8\u53d8\u91cf \u751f\u547d\u5468\u671f\u5ef6\u957f\u5230\u7a0b\u5e8f\u7ed3\u675f\uff0c\u503c\u5728\u591a\u6b21\u8c03\u7528\u95f4\u4fdd\u6301\u3002 \u5168\u5c40\u53d8\u91cf/\u51fd\u6570 \u9650\u5236\u4f5c\u7528\u57df\u4e3a\u5f53\u524d\u6587\u4ef6\uff0c\u907f\u514d\u547d\u540d\u51b2\u7a81\u3002 \u7c7b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf \u5c5e\u4e8e\u7c7b\u800c\u975e\u5bf9\u8c61\uff0c\u6240\u6709\u5bf9\u8c61\u5171\u4eab\uff0c\u9700\u5728\u7c7b\u5916\u521d\u59cb\u5316\u3002 \u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570 \u5c5e\u4e8e\u7c7b\u800c\u975e\u5bf9\u8c61\uff0c\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002 static \u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u5173\u952e\u5b57\uff0c\u5e7f\u6cdb\u7528\u4e8e\u63a7\u5236\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u3001\u4f5c\u7528\u57df\u4ee5\u53ca\u7c7b\u7684\u5171\u4eab\u6210\u5458\u3002 static \u7684\u5e95\u5c42\u539f\u7406 static \u5173\u952e\u5b57\u7684\u5e95\u5c42\u5b9e\u73b0\u4f9d\u8d56\u4e8e\u7f16\u8bd1\u5668\u7684\u5904\u7406\u65b9\u5f0f\u3002\u5b83\u901a\u8fc7\u8c03\u6574\u53d8\u91cf\u7684\u5b58\u50a8\u4f4d\u7f6e\u3001\u4f5c\u7528\u57df\u548c\u751f\u547d\u5468\u671f\u6765\u5b9e\u73b0\u5176\u529f\u80fd\u3002\u4ee5\u4e0b\u662f static \u7684\u5e95\u5c42\u539f\u7406\u5206\u6790\uff1a 1. \u9759\u6001\u5c40\u90e8\u53d8\u91cf \u7279\u70b9 \uff1a \u751f\u547d\u5468\u671f\uff1a\u4ece\u7a0b\u5e8f\u5f00\u59cb\u5230\u7a0b\u5e8f\u7ed3\u675f\uff08\u5168\u5c40\u751f\u547d\u5468\u671f\uff09\u3002 \u4f5c\u7528\u57df\uff1a\u4ec5\u5728\u58f0\u660e\u5b83\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u4e2d\u53ef\u89c1\uff08\u5c40\u90e8\u4f5c\u7528\u57df\uff09\u3002 \u521d\u59cb\u5316\uff1a\u53ea\u4f1a\u5728\u7b2c\u4e00\u6b21\u6267\u884c\u5230\u8be5\u53d8\u91cf\u65f6\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u540e\u7eed\u8c03\u7528\u4fdd\u7559\u4e0a\u4e00\u6b21\u7684\u503c\u3002 \u5e95\u5c42\u5b9e\u73b0 \uff1a \u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5b58\u50a8\u5728 \u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a \uff08\u901a\u5e38\u662f .data \u6216 .bss \u6bb5\uff09\u3002 \u7f16\u8bd1\u5668\u4f1a\u5728\u51fd\u6570\u5916\u90e8\u4e3a\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff0c\u5e76\u5728\u51fd\u6570\u4e2d\u63d2\u5165\u4ee3\u7801\u4ee5\u786e\u4fdd\u53d8\u91cf\u53ea\u521d\u59cb\u5316\u4e00\u6b21\u3002 \u793a\u4f8b \uff1a void func () { static int count = 0 ; // \u9759\u6001\u5c40\u90e8\u53d8\u91cf count ++ ; cout << count << endl ; } \u7f16\u8bd1\u5668\u5904\u7406\u540e\u7684\u4f2a\u4ee3\u7801 \uff1a int count = 0 ; // \u5728\u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a\u5206\u914d\u5185\u5b58 bool initialized = false ; void func () { if ( ! initialized ) { count = 0 ; // \u521d\u59cb\u5316 initialized = true ; } count ++ ; cout << count << endl ; } 2. \u9759\u6001\u5168\u5c40\u53d8\u91cf \u7279\u70b9 \uff1a \u751f\u547d\u5468\u671f\uff1a\u4ece\u7a0b\u5e8f\u5f00\u59cb\u5230\u7a0b\u5e8f\u7ed3\u675f\u3002 \u4f5c\u7528\u57df\uff1a\u4ec5\u5728\u58f0\u660e\u5b83\u7684\u6587\u4ef6\u4e2d\u53ef\u89c1\uff08\u5185\u90e8\u94fe\u63a5\uff09\u3002 \u5e95\u5c42\u5b9e\u73b0 \uff1a \u9759\u6001\u5168\u5c40\u53d8\u91cf\u5b58\u50a8\u5728 \u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a \u3002 \u7f16\u8bd1\u5668\u4f1a\u5c06\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u7b26\u53f7\uff08\u540d\u79f0\uff09\u9650\u5236\u4e3a\u5f53\u524d\u6587\u4ef6\u7684\u4f5c\u7528\u57df\uff0c\u907f\u514d\u4e0e\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u540c\u540d\u53d8\u91cf\u51b2\u7a81\u3002 \u793a\u4f8b \uff1a static int globalVar = 10 ; // \u9759\u6001\u5168\u5c40\u53d8\u91cf \u7f16\u8bd1\u5668\u5904\u7406 \uff1a - \u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u7b26\u53f7\u540d\u79f0\u4f1a\u88ab\u7f16\u8bd1\u5668\u4fee\u6539\u4e3a\u6587\u4ef6\u79c1\u6709\u7684\u7b26\u53f7\uff0c\u4f8b\u5982 _file1_globalVar \u3002 - \u94fe\u63a5\u5668\u4e0d\u4f1a\u5c06\u8be5\u7b26\u53f7\u66b4\u9732\u7ed9\u5176\u4ed6\u6587\u4ef6\u3002 3. \u9759\u6001\u6210\u5458\u53d8\u91cf \u7279\u70b9 \uff1a \u5c5e\u4e8e\u7c7b\uff0c\u800c\u4e0d\u662f\u67d0\u4e2a\u5177\u4f53\u5bf9\u8c61\u3002 \u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002 \u9759\u6001\u6210\u5458\u53d8\u91cf\u5728\u7a0b\u5e8f\u5f00\u59cb\u65f6\u5206\u914d\u5185\u5b58\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u91ca\u653e\u3002 \u5e95\u5c42\u5b9e\u73b0 \uff1a \u9759\u6001\u6210\u5458\u53d8\u91cf\u5b58\u50a8\u5728 \u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a \u3002 \u7f16\u8bd1\u5668\u4f1a\u4e3a\u9759\u6001\u6210\u5458\u53d8\u91cf\u5206\u914d\u72ec\u7acb\u7684\u5185\u5b58\uff0c\u5e76\u5728\u7c7b\u5916\u90e8\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u793a\u4f8b \uff1a class MyClass { public : static int count ; // \u9759\u6001\u6210\u5458\u53d8\u91cf }; int MyClass :: count = 0 ; // \u9759\u6001\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316 \u7f16\u8bd1\u5668\u5904\u7406 \uff1a - \u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u5185\u5b58\u5206\u914d\u4e0e\u666e\u901a\u5168\u5c40\u53d8\u91cf\u7c7b\u4f3c\u3002 - \u7f16\u8bd1\u5668\u4f1a\u5728\u7c7b\u5916\u751f\u6210\u4e00\u4e2a\u5168\u5c40\u7b26\u53f7\uff0c\u4f8b\u5982 _MyClass_count \uff0c\u7528\u4e8e\u5b58\u50a8\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002 4. \u9759\u6001\u6210\u5458\u51fd\u6570 \u7279\u70b9 \uff1a \u9759\u6001\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u7c7b\uff0c\u800c\u4e0d\u662f\u67d0\u4e2a\u5177\u4f53\u5bf9\u8c61\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u6216\u6210\u5458\u51fd\u6570\u3002 \u5e95\u5c42\u5b9e\u73b0 \uff1a \u9759\u6001\u6210\u5458\u51fd\u6570\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5168\u5c40\u51fd\u6570\uff0c\u4f46\u5b83\u7684\u4f5c\u7528\u57df\u88ab\u9650\u5236\u5728\u7c7b\u4e2d\u3002 \u7f16\u8bd1\u5668\u4e0d\u4f1a\u4e3a\u9759\u6001\u6210\u5458\u51fd\u6570\u9690\u5f0f\u4f20\u9012 this \u6307\u9488\u3002 \u793a\u4f8b \uff1a class MyClass { public : static void display () { cout << \"Static function\" << endl ; } }; \u7f16\u8bd1\u5668\u5904\u7406 \uff1a - \u9759\u6001\u6210\u5458\u51fd\u6570\u4f1a\u88ab\u7f16\u8bd1\u4e3a\u666e\u901a\u7684\u5168\u5c40\u51fd\u6570\uff0c\u4f8b\u5982 _MyClass_display \u3002 - \u8c03\u7528\u65f6\u901a\u8fc7\u7c7b\u540d\u9650\u5b9a\u7b26\u8bbf\u95ee\uff0c\u4f8b\u5982 MyClass::display() \u3002 5. \u591a\u6587\u4ef6\u4e2d\u7684\u9759\u6001\u53d8\u91cf\u548c\u51fd\u6570 \u7279\u70b9 \uff1a \u9759\u6001\u53d8\u91cf\u548c\u51fd\u6570\u7684\u4f5c\u7528\u57df\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6587\u4ef6\u4e2d\uff08\u5185\u90e8\u94fe\u63a5\uff09\u3002 \u4e0d\u4f1a\u4e0e\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u540c\u540d\u53d8\u91cf\u6216\u51fd\u6570\u51b2\u7a81\u3002 \u5e95\u5c42\u5b9e\u73b0 \uff1a \u7f16\u8bd1\u5668\u4f1a\u5c06\u9759\u6001\u53d8\u91cf\u6216\u51fd\u6570\u7684\u7b26\u53f7\u540d\u79f0\u4fee\u6539\u4e3a\u6587\u4ef6\u79c1\u6709\u7684\u7b26\u53f7\u3002 \u94fe\u63a5\u5668\u4e0d\u4f1a\u5c06\u8fd9\u4e9b\u7b26\u53f7\u66b4\u9732\u7ed9\u5176\u4ed6\u6587\u4ef6\u3002 \u793a\u4f8b \uff1a // file1.cpp static int var = 10 ; // \u9759\u6001\u5168\u5c40\u53d8\u91cf // file2.cpp static int var = 20 ; // \u9759\u6001\u5168\u5c40\u53d8\u91cf \u7f16\u8bd1\u5668\u5904\u7406 \uff1a - file1.cpp \u4e2d\u7684 var \u4f1a\u88ab\u7f16\u8bd1\u4e3a _file1_var \u3002 - file2.cpp \u4e2d\u7684 var \u4f1a\u88ab\u7f16\u8bd1\u4e3a _file2_var \u3002 - \u4e24\u8005\u4e92\u4e0d\u51b2\u7a81\u3002 6. \u5b58\u50a8\u4f4d\u7f6e \u6839\u636e static \u7684\u4f7f\u7528\u573a\u666f\uff0c\u53d8\u91cf\u4f1a\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u5185\u5b58\u533a\u57df\uff1a | \u4f7f\u7528\u573a\u666f | \u5b58\u50a8\u4f4d\u7f6e | |----------------------|-----------------------| | \u9759\u6001\u5c40\u90e8\u53d8\u91cf | \u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a | | \u9759\u6001\u5168\u5c40\u53d8\u91cf | \u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a | | \u9759\u6001\u6210\u5458\u53d8\u91cf | \u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a | | \u9759\u6001\u6210\u5458\u51fd\u6570 | \u4ee3\u7801\u6bb5\uff08text segment\uff09| 7. \u4f18\u70b9\u4e0e\u9650\u5236 \u4f18\u70b9 \uff1a \u63d0\u9ad8\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u548c\u4f5c\u7528\u57df\u63a7\u5236\u3002 \u907f\u514d\u547d\u540d\u51b2\u7a81\uff08\u9759\u6001\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u51fd\u6570\uff09\u3002 \u63d0\u4f9b\u7c7b\u7ea7\u522b\u7684\u5171\u4eab\u6570\u636e\uff08\u9759\u6001\u6210\u5458\u53d8\u91cf\uff09\u3002 \u9650\u5236 \uff1a \u9759\u6001\u53d8\u91cf\u4f1a\u5360\u7528\u5168\u5c40\u5185\u5b58\uff0c\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u5360\u7528\u589e\u52a0\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u65e0\u6cd5\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u3002 \u603b\u7ed3 static \u7684\u5e95\u5c42\u5b9e\u73b0\u4f9d\u8d56\u4e8e\u7f16\u8bd1\u5668\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u901a\u8fc7\u8c03\u6574\u53d8\u91cf\u7684\u5b58\u50a8\u4f4d\u7f6e\u548c\u7b26\u53f7\u94fe\u63a5\u5c5e\u6027\u6765\u5b9e\u73b0\u5176\u529f\u80fd\u3002 \u9759\u6001\u53d8\u91cf\u548c\u51fd\u6570\u901a\u5e38\u5b58\u50a8\u5728\u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a\uff0c\u5177\u6709\u5168\u5c40\u751f\u547d\u5468\u671f\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u548c\u53d8\u91cf\u4e3a\u7c7b\u63d0\u4f9b\u4e86\u5171\u4eab\u6570\u636e\u548c\u884c\u4e3a\u7684\u80fd\u529b\uff0c\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u91cd\u8981\u7279\u6027\u4e4b\u4e00\u3002 #define \u548c const \u7684\u533a\u522b #define \u548c const \u90fd\u53ef\u4ee5\u7528\u6765\u5b9a\u4e49\u5e38\u91cf\uff0c\u4f46\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\u548c\u4f7f\u7528\u573a\u666f\u6709\u5f88\u5927\u4e0d\u540c\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u4e3b\u8981\u533a\u522b\uff1a 1. \u5b9a\u4e49\u65b9\u5f0f #define \uff1a \u662f\u4e00\u4e2a \u9884\u5904\u7406\u6307\u4ee4 \uff0c\u7528\u4e8e\u5b9a\u4e49\u5b8f\u3002 \u5728\u7f16\u8bd1\u4e4b\u524d\u7531\u9884\u5904\u7406\u5668\u76f4\u63a5\u66ff\u6362\uff0c\u4e0d\u5360\u7528\u5185\u5b58\u3002 \u8bed\u6cd5\uff1a #define PI 3.14 const \uff1a \u662f\u4e00\u4e2a \u5173\u952e\u5b57 \uff0c\u7528\u4e8e\u5b9a\u4e49\u5e38\u91cf\u53d8\u91cf\u3002 \u5728\u7f16\u8bd1\u65f6\u5206\u914d\u5185\u5b58\uff0c\u5177\u6709\u7c7b\u578b\u68c0\u67e5\u3002 \u8bed\u6cd5\uff1a const double PI = 3.14 ; 2. \u7c7b\u578b\u68c0\u67e5 #define \uff1a \u6ca1\u6709\u7c7b\u578b\u68c0\u67e5\uff0c\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u6587\u672c\u66ff\u6362\u3002 \u5982\u679c\u4f7f\u7528\u9519\u8bef\u7684\u7c7b\u578b\uff0c\u53ef\u80fd\u5bfc\u81f4\u96be\u4ee5\u53d1\u73b0\u7684\u9519\u8bef\u3002 \u793a\u4f8b\uff1a #define VALUE 10 int x = VALUE + \"abc\" ; // \u7f16\u8bd1\u5668\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f46\u8fd0\u884c\u65f6\u53ef\u80fd\u51fa\u9519 const \uff1a \u6709\u4e25\u683c\u7684\u7c7b\u578b\u68c0\u67e5\uff0c\u80fd\u591f\u5728\u7f16\u8bd1\u65f6\u53d1\u73b0\u9519\u8bef\u3002 \u793a\u4f8b\uff1a const int VALUE = 10 ; int x = VALUE + \"abc\" ; // \u7f16\u8bd1\u5668\u62a5\u9519\uff1a\u7c7b\u578b\u4e0d\u5339\u914d 3. \u5185\u5b58\u5206\u914d #define \uff1a \u4e0d\u5360\u7528\u5185\u5b58\uff0c\u9884\u5904\u7406\u9636\u6bb5\u76f4\u63a5\u66ff\u6362\u4e3a\u5bf9\u5e94\u7684\u503c\u3002 \u793a\u4f8b\uff1a #define VALUE 10 int x = VALUE ; // \u7f16\u8bd1\u540e\u7b49\u4ef7\u4e8e int x = 10; const \uff1a \u5e38\u91cf\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u5206\u914d\u7a7a\u95f4\u3002 \u793a\u4f8b\uff1a const int VALUE = 10 ; int x = VALUE ; // VALUE \u662f\u4e00\u4e2a\u5e38\u91cf\u53d8\u91cf\uff0c\u5b58\u50a8\u5728\u5185\u5b58\u4e2d 4. \u8c03\u8bd5\u4fe1\u606f #define \uff1a \u56e0\u4e3a\u662f\u6587\u672c\u66ff\u6362\uff0c\u8c03\u8bd5\u65f6\u65e0\u6cd5\u770b\u5230\u5b8f\u7684\u5177\u4f53\u503c\u3002 \u793a\u4f8b\uff1a #define VALUE 10 cout << VALUE ; // \u8c03\u8bd5\u65f6\u65e0\u6cd5\u76f4\u63a5\u67e5\u770b VALUE \u7684\u503c const \uff1a \u5e38\u91cf\u53d8\u91cf\u6709\u5177\u4f53\u7684\u5185\u5b58\u5730\u5740\uff0c\u53ef\u4ee5\u5728\u8c03\u8bd5\u65f6\u67e5\u770b\u5176\u503c\u3002 \u793a\u4f8b\uff1a const int VALUE = 10 ; cout << VALUE ; // \u8c03\u8bd5\u65f6\u53ef\u4ee5\u67e5\u770b VALUE \u7684\u503c 5. \u4f5c\u7528\u57df #define \uff1a \u6ca1\u6709\u4f5c\u7528\u57df\u9650\u5236\uff0c\u5b8f\u5728\u6574\u4e2a\u6587\u4ef6\u4e2d\u6709\u6548\uff0c\u53ef\u80fd\u5bfc\u81f4\u547d\u540d\u51b2\u7a81\u3002 \u793a\u4f8b\uff1a #define VALUE 10 const \uff1a \u9075\u5faa C++ \u7684\u4f5c\u7528\u57df\u89c4\u5219\uff0c\u5e38\u91cf\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53d7\u9650\u4e8e\u5176\u5b9a\u4e49\u7684\u4f4d\u7f6e\u3002 \u793a\u4f8b\uff1a const int VALUE = 10 ; // \u4ec5\u5728\u5f53\u524d\u4f5c\u7528\u57df\u5185\u6709\u6548 6. \u53ef\u8bfb\u6027\u548c\u5b89\u5168\u6027 #define \uff1a \u5bb9\u6613\u5f15\u5165\u96be\u4ee5\u53d1\u73b0\u7684\u9519\u8bef\uff0c\u5c24\u5176\u662f\u590d\u6742\u7684\u5b8f\u5b9a\u4e49\u3002 \u793a\u4f8b\uff1a #define SQUARE(x) x * x int result = SQUARE ( 1 + 2 ); // \u5b9e\u9645\u66ff\u6362\u4e3a 1 + 2 * 1 + 2\uff0c\u7ed3\u679c\u4e3a 5 const \uff1a \u66f4\u5b89\u5168\uff0c\u652f\u6301\u7c7b\u578b\u68c0\u67e5\uff0c\u907f\u514d\u4e86\u5b8f\u66ff\u6362\u5e26\u6765\u7684\u95ee\u9898\u3002 \u793a\u4f8b\uff1a const int SQUARE ( int x ) { return x * x ; } int result = SQUARE ( 1 + 2 ); // \u7ed3\u679c\u4e3a 9 7. \u9002\u7528\u573a\u666f #define \uff1a \u7528\u4e8e\u5b9a\u4e49\u7b80\u5355\u7684\u5e38\u91cf\u6216\u5b8f\uff0c\u5c24\u5176\u662f\u9700\u8981\u8de8\u6587\u4ef6\u5171\u4eab\u7684\u5e38\u91cf\u3002 \u793a\u4f8b\uff1a #define MAX 100 const \uff1a \u7528\u4e8e\u5b9a\u4e49\u7c7b\u578b\u5b89\u5168\u7684\u5e38\u91cf\uff0c\u63a8\u8350\u5728 C++ \u4e2d\u4f18\u5148\u4f7f\u7528\u3002 \u793a\u4f8b\uff1a const int MAX = 100 ; \u603b\u7ed3 \u7279\u6027 #define const \u5b9a\u4e49\u65b9\u5f0f \u9884\u5904\u7406\u6307\u4ee4\uff0c\u6587\u672c\u66ff\u6362 \u5173\u952e\u5b57\uff0c\u5b9a\u4e49\u5e38\u91cf\u53d8\u91cf \u7c7b\u578b\u68c0\u67e5 \u65e0\u7c7b\u578b\u68c0\u67e5 \u6709\u4e25\u683c\u7684\u7c7b\u578b\u68c0\u67e5 \u5185\u5b58\u5206\u914d \u4e0d\u5360\u7528\u5185\u5b58 \u5360\u7528\u5185\u5b58 \u8c03\u8bd5\u4fe1\u606f \u65e0\u6cd5\u8c03\u8bd5\u5b8f\u7684\u503c \u53ef\u4ee5\u8c03\u8bd5\u5e38\u91cf\u7684\u503c \u4f5c\u7528\u57df \u5168\u5c40\u6709\u6548 \u9075\u5faa\u4f5c\u7528\u57df\u89c4\u5219 \u5b89\u5168\u6027 \u5bb9\u6613\u5f15\u5165\u9519\u8bef \u66f4\u5b89\u5168\uff0c\u63a8\u8350\u4f7f\u7528 \u5728 C++ \u4e2d\uff0c\u5efa\u8bae\u4f18\u5148\u4f7f\u7528 const \uff0c\u56e0\u4e3a\u5b83\u66f4\u5b89\u5168\u3001\u53ef\u8bfb\u6027\u66f4\u9ad8\uff0c\u5e76\u4e14\u652f\u6301\u7c7b\u578b\u68c0\u67e5\u3002 \u9759\u6001\u94fe\u63a5\u548c\u52a8\u6001\u94fe\u63a5\u7684\u533a\u522b \u9759\u6001\u94fe\u63a5\u548c\u52a8\u6001\u94fe\u63a5\u662f\u7a0b\u5e8f\u5728\u7f16\u8bd1\u548c\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4e0e\u5e93\u6587\u4ef6\u5173\u8054\u7684\u4e24\u79cd\u65b9\u5f0f\u3002\u5b83\u4eec\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u94fe\u63a5\u7684\u65f6\u95f4\u3001\u65b9\u5f0f\u4ee5\u53ca\u7a0b\u5e8f\u7684\u8fd0\u884c\u673a\u5236\u3002 1. \u9759\u6001\u94fe\u63a5 \u5b9a\u4e49 \uff1a \u9759\u6001\u94fe\u63a5\u662f\u5728 \u7f16\u8bd1\u9636\u6bb5 \u5c06\u7a0b\u5e8f\u6240\u9700\u7684\u5e93\u4ee3\u7801\u76f4\u63a5\u5d4c\u5165\u5230\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002 \u94fe\u63a5\u5b8c\u6210\u540e\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u4e0d\u518d\u4f9d\u8d56\u5916\u90e8\u5e93\u3002 \u7279\u70b9 \uff1a \u94fe\u63a5\u65f6\u95f4 \uff1a \u5728\u7f16\u8bd1\u65f6\u5b8c\u6210\u94fe\u63a5\u3002 \u53ef\u6267\u884c\u6587\u4ef6\u5927\u5c0f \uff1a \u53ef\u6267\u884c\u6587\u4ef6\u5305\u542b\u6240\u6709\u4f9d\u8d56\u7684\u5e93\u4ee3\u7801\uff0c\u56e0\u6b64\u6587\u4ef6\u8f83\u5927\u3002 \u8fd0\u884c\u65f6\u4f9d\u8d56 \uff1a \u4e0d\u9700\u8981\u4f9d\u8d56\u5916\u90e8\u5e93\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u3002 \u6027\u80fd \uff1a \u7a0b\u5e8f\u542f\u52a8\u901f\u5ea6\u8f83\u5feb\uff0c\u56e0\u4e3a\u6240\u6709\u4ee3\u7801\u5df2\u7ecf\u5d4c\u5165\u5230\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002 \u66f4\u65b0\u5e93\u7684\u5f71\u54cd \uff1a \u5982\u679c\u5e93\u6587\u4ef6\u66f4\u65b0\uff0c\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u7a0b\u5e8f\u4ee5\u5305\u542b\u65b0\u7684\u5e93\u4ee3\u7801\u3002 \u793a\u4f8b \uff1a g++ main.cpp -o program -static - \u751f\u6210\u7684 program \u662f\u4e00\u4e2a\u9759\u6001\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5305\u542b\u6240\u6709\u4f9d\u8d56\u7684\u5e93\u4ee3\u7801\u3002 2. \u52a8\u6001\u94fe\u63a5 \u5b9a\u4e49 \uff1a \u52a8\u6001\u94fe\u63a5\u662f\u5728 \u8fd0\u884c\u65f6 \u5c06\u7a0b\u5e8f\u6240\u9700\u7684\u5e93\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5e76\u4e0e\u7a0b\u5e8f\u5173\u8054\u3002 \u53ef\u6267\u884c\u6587\u4ef6\u672c\u8eab\u4e0d\u5305\u542b\u5e93\u4ee3\u7801\uff0c\u800c\u662f\u4f9d\u8d56\u5916\u90e8\u52a8\u6001\u5e93\uff08\u5982 .so \u6587\u4ef6\uff09\u3002 \u7279\u70b9 \uff1a \u94fe\u63a5\u65f6\u95f4 \uff1a \u5728\u8fd0\u884c\u65f6\u5b8c\u6210\u94fe\u63a5\u3002 \u53ef\u6267\u884c\u6587\u4ef6\u5927\u5c0f \uff1a \u53ef\u6267\u884c\u6587\u4ef6\u53ea\u5305\u542b\u5bf9\u52a8\u6001\u5e93\u7684\u5f15\u7528\uff0c\u56e0\u6b64\u6587\u4ef6\u8f83\u5c0f\u3002 \u8fd0\u884c\u65f6\u4f9d\u8d56 \uff1a \u7a0b\u5e8f\u8fd0\u884c\u65f6\u9700\u8981\u4f9d\u8d56\u5916\u90e8\u52a8\u6001\u5e93\uff0c\u5982\u679c\u5e93\u6587\u4ef6\u7f3a\u5931\u6216\u7248\u672c\u4e0d\u5339\u914d\uff0c\u7a0b\u5e8f\u53ef\u80fd\u65e0\u6cd5\u8fd0\u884c\u3002 \u6027\u80fd \uff1a \u7a0b\u5e8f\u542f\u52a8\u65f6\u9700\u8981\u52a0\u8f7d\u52a8\u6001\u5e93\uff0c\u542f\u52a8\u901f\u5ea6\u53ef\u80fd\u7a0d\u6162\u3002 \u66f4\u65b0\u5e93\u7684\u5f71\u54cd \uff1a \u5982\u679c\u52a8\u6001\u5e93\u66f4\u65b0\uff0c\u7a0b\u5e8f\u65e0\u9700\u91cd\u65b0\u7f16\u8bd1\u5373\u53ef\u4f7f\u7528\u65b0\u7684\u5e93\u4ee3\u7801\u3002 \u793a\u4f8b \uff1a g++ main.cpp -o program - \u751f\u6210\u7684 program \u662f\u4e00\u4e2a\u52a8\u6001\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd0\u884c\u65f6\u4f9d\u8d56\u52a8\u6001\u5e93\uff08\u5982 libstdc++.so \uff09\u3002 3. \u533a\u522b\u603b\u7ed3 \u7279\u6027 \u9759\u6001\u94fe\u63a5 \u52a8\u6001\u94fe\u63a5 \u94fe\u63a5\u65f6\u95f4 \u7f16\u8bd1\u65f6\u5b8c\u6210 \u8fd0\u884c\u65f6\u5b8c\u6210 \u53ef\u6267\u884c\u6587\u4ef6\u5927\u5c0f \u8f83\u5927\uff08\u5305\u542b\u5e93\u4ee3\u7801\uff09 \u8f83\u5c0f\uff08\u53ea\u5305\u542b\u5e93\u5f15\u7528\uff09 \u8fd0\u884c\u65f6\u4f9d\u8d56 \u65e0\u9700\u4f9d\u8d56\u5916\u90e8\u5e93 \u9700\u8981\u4f9d\u8d56\u5916\u90e8\u52a8\u6001\u5e93 \u542f\u52a8\u901f\u5ea6 \u8f83\u5feb \u8f83\u6162\uff08\u9700\u8981\u52a0\u8f7d\u52a8\u6001\u5e93\uff09 \u5e93\u66f4\u65b0\u5f71\u54cd \u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u7a0b\u5e8f \u65e0\u9700\u91cd\u65b0\u7f16\u8bd1\uff0c\u76f4\u63a5\u4f7f\u7528\u65b0\u5e93 \u5185\u5b58\u4f7f\u7528 \u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u6709\u4e00\u4efd\u5e93\u4ee3\u7801\uff0c\u5185\u5b58\u5360\u7528\u8f83\u9ad8 \u591a\u4e2a\u7a0b\u5e8f\u5171\u4eab\u52a8\u6001\u5e93\uff0c\u5185\u5b58\u5360\u7528\u8f83\u4f4e 4. \u4f7f\u7528\u573a\u666f \u9759\u6001\u94fe\u63a5\u9002\u7528\u573a\u666f \uff1a \u7a0b\u5e8f\u9700\u8981\u5728\u6ca1\u6709\u52a8\u6001\u5e93\u652f\u6301\u7684\u73af\u5883\u4e2d\u8fd0\u884c\uff08\u5982\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff09\u3002 \u7a0b\u5e8f\u9700\u8981\u5b8c\u5168\u72ec\u7acb\u8fd0\u884c\uff0c\u4e0d\u4f9d\u8d56\u5916\u90e8\u5e93\u3002 \u52a8\u6001\u94fe\u63a5\u9002\u7528\u573a\u666f \uff1a \u7a0b\u5e8f\u9700\u8981\u9891\u7e41\u66f4\u65b0\u5e93\u4ee3\u7801\uff08\u5982\u4fee\u590d\u6f0f\u6d1e\u6216\u6dfb\u52a0\u529f\u80fd\uff09\u3002 \u591a\u4e2a\u7a0b\u5e8f\u9700\u8981\u5171\u4eab\u540c\u4e00\u4e2a\u5e93\uff0c\u51cf\u5c11\u5185\u5b58\u5360\u7528\u548c\u78c1\u76d8\u7a7a\u95f4\u3002 5. \u793a\u4f8b\u5bf9\u6bd4 \u9759\u6001\u94fe\u63a5\u793a\u4f8b \uff1a #include <iostream> using namespace std ; int main () { cout << \"Hello, Static Link!\" << endl ; return 0 ; } \u7f16\u8bd1\u547d\u4ee4\uff1a g++ main.cpp -o static_program -static \u751f\u6210\u7684 static_program \u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u4e0d\u4f9d\u8d56\u5916\u90e8\u52a8\u6001\u5e93\u3002 \u52a8\u6001\u94fe\u63a5\u793a\u4f8b \uff1a #include <iostream> using namespace std ; int main () { cout << \"Hello, Dynamic Link!\" << endl ; return 0 ; } \u7f16\u8bd1\u547d\u4ee4\uff1a g++ main.cpp -o dynamic_program \u751f\u6210\u7684 dynamic_program \u5728\u8fd0\u884c\u65f6\u9700\u8981\u4f9d\u8d56\u52a8\u6001\u5e93\uff08\u5982 libstdc++.so \uff09\u3002 6. \u603b\u7ed3 \u9759\u6001\u94fe\u63a5 \uff1a\u5c06\u5e93\u4ee3\u7801\u5d4c\u5165\u5230\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\uff0c\u751f\u6210\u7684\u7a0b\u5e8f\u72ec\u7acb\u8fd0\u884c\uff0c\u4f46\u6587\u4ef6\u8f83\u5927\u3002 \u52a8\u6001\u94fe\u63a5 \uff1a\u5728\u8fd0\u884c\u65f6\u52a0\u8f7d\u5e93\uff0c\u7a0b\u5e8f\u4f9d\u8d56\u5916\u90e8\u52a8\u6001\u5e93\uff0c\u6587\u4ef6\u8f83\u5c0f\uff0c\u66f4\u65b0\u7075\u6d3b\u3002 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u52a8\u6001\u94fe\u63a5\u66f4\u5e38\u7528\uff0c\u4f46\u5728\u67d0\u4e9b\u7279\u6b8a\u573a\u666f\uff08\u5982\u5d4c\u5165\u5f0f\u5f00\u53d1\uff09\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u9759\u6001\u94fe\u63a5\u3002 \u4e0b\u9762\u662f\u9759\u6001\u94fe\u63a5\u548c\u52a8\u6001\u94fe\u63a5\u7f16\u8bd1\u7684\u6587\u4ef6\u5927\u5c0f\u5bf9\u6bd4 \u53d8\u91cf\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u7684\u533a\u522b \u5728 C++ \u4e2d\uff0c \u58f0\u660e \u548c \u5b9a\u4e49 \u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u6982\u5ff5\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u662f\u5426\u4e3a\u53d8\u91cf\u5206\u914d\u5185\u5b58\u3002 1. \u58f0\u660e\uff08Declaration\uff09 \u4f5c\u7528 \uff1a \u544a\u8bc9\u7f16\u8bd1\u5668\u53d8\u91cf\u7684\u540d\u79f0\u548c\u7c7b\u578b\uff0c\u4f46\u4e0d\u4e3a\u53d8\u91cf\u5206\u914d\u5185\u5b58\u3002 \u58f0\u660e\u901a\u5e38\u7528\u4e8e\u8ba9\u7f16\u8bd1\u5668\u77e5\u9053\u53d8\u91cf\u7684\u5b58\u5728\uff0c\u4ee5\u4fbf\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u4f7f\u7528\u3002 \u7279\u70b9 \uff1a \u4e0d\u5206\u914d\u5185\u5b58\u3002 \u53ef\u4ee5\u591a\u6b21\u58f0\u660e\u540c\u4e00\u4e2a\u53d8\u91cf\u3002 \u793a\u4f8b \uff1a extern int a ; // \u58f0\u660e\u53d8\u91cf a\uff0c\u8868\u793a\u5b83\u5728\u5176\u4ed6\u5730\u65b9\u5b9a\u4e49 2. \u5b9a\u4e49\uff08Definition\uff09 \u4f5c\u7528 \uff1a \u4e3a\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff0c\u5e76\u53ef\u4ee5\u521d\u59cb\u5316\u53d8\u91cf\u3002 \u5b9a\u4e49\u662f\u53d8\u91cf\u7684\u5b9e\u9645\u5b9e\u73b0\u3002 \u7279\u70b9 \uff1a \u5206\u914d\u5185\u5b58\u3002 \u4e00\u4e2a\u53d8\u91cf\u53ea\u80fd\u5b9a\u4e49\u4e00\u6b21\u3002 \u793a\u4f8b \uff1a int a = 10 ; // \u5b9a\u4e49\u53d8\u91cf a\uff0c\u5e76\u521d\u59cb\u5316\u4e3a 10 3. \u58f0\u660e\u548c\u5b9a\u4e49\u7684\u5173\u7cfb \u58f0\u660e \u662f\u544a\u8bc9\u7f16\u8bd1\u5668\u53d8\u91cf\u7684\u5b58\u5728\uff0c\u800c \u5b9a\u4e49 \u662f\u4e3a\u53d8\u91cf\u5206\u914d\u5185\u5b58\u5e76\u521d\u59cb\u5316\uff08\u53ef\u9009\uff09\u3002 \u6240\u6709\u7684\u5b9a\u4e49\u540c\u65f6\u4e5f\u662f\u58f0\u660e\uff0c\u4f46\u58f0\u660e\u4e0d\u4e00\u5b9a\u662f\u5b9a\u4e49\u3002 4. \u793a\u4f8b\u5bf9\u6bd4 \u58f0\u660e \uff1a extern int a ; // \u58f0\u660e\u53d8\u91cf a\uff0c\u8868\u793a\u5b83\u5728\u5176\u4ed6\u5730\u65b9\u5b9a\u4e49 \u5b9a\u4e49 \uff1a int a = 10 ; // \u5b9a\u4e49\u53d8\u91cf a\uff0c\u5e76\u5206\u914d\u5185\u5b58 \u5b8c\u6574\u793a\u4f8b \uff1a // file1.cpp #include <iostream> using namespace std ; extern int a ; // \u58f0\u660e\u53d8\u91cf a int main () { cout << a << endl ; // \u4f7f\u7528\u53d8\u91cf a return 0 ; } // file2.cpp int a = 10 ; // \u5b9a\u4e49\u53d8\u91cf a 5. \u7f16\u8bd1\u5668\u884c\u4e3a \u58f0\u660e \uff1a \u7f16\u8bd1\u5668\u53ea\u4f1a\u8bb0\u5f55\u53d8\u91cf\u7684\u540d\u79f0\u548c\u7c7b\u578b\uff0c\u4e0d\u4f1a\u5206\u914d\u5185\u5b58\u3002 \u5b9a\u4e49 \uff1a \u7f16\u8bd1\u5668\u4f1a\u4e3a\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff0c\u5e76\u53ef\u80fd\u521d\u59cb\u5316\u53d8\u91cf\u3002 6. \u603b\u7ed3 \u7279\u6027 \u58f0\u660e\uff08Declaration\uff09 \u5b9a\u4e49\uff08Definition\uff09 \u4f5c\u7528 \u544a\u8bc9\u7f16\u8bd1\u5668\u53d8\u91cf\u7684\u5b58\u5728 \u4e3a\u53d8\u91cf\u5206\u914d\u5185\u5b58\u5e76\u521d\u59cb\u5316\uff08\u53ef\u9009\uff09 \u5185\u5b58\u5206\u914d \u4e0d\u5206\u914d\u5185\u5b58 \u5206\u914d\u5185\u5b58 \u6b21\u6570 \u53ef\u4ee5\u591a\u6b21\u58f0\u660e \u53ea\u80fd\u5b9a\u4e49\u4e00\u6b21 \u793a\u4f8b extern int a; int a = 10; \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u58f0\u660e\u901a\u5e38\u7528\u4e8e\u591a\u6587\u4ef6\u9879\u76ee\u4e2d\uff0c\u5b9a\u4e49\u5219\u662f\u53d8\u91cf\u7684\u5b9e\u9645\u5b9e\u73b0\u3002 \u4e0a\u9762\u7684\u7a0b\u5e8f\u4e3a\u4ec0\u4e48\u5728main\u51fd\u6570\u4e4b\u5916\u5b9a\u4e49\u7684\u53d8\u91cfa=10\u80fd\u5728main\u51fd\u6570\u4e2d\u4f7f\u7528 \u8fd9\u4e2a\u7a0b\u5e8f\u80fd\u591f\u5728 main \u51fd\u6570\u4e2d\u627e\u5230\u5e76\u4f7f\u7528 file2.cpp \u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf a \uff0c\u662f\u56e0\u4e3a C++ \u7684\u7f16\u8bd1\u548c\u94fe\u63a5\u8fc7\u7a0b \u4f1a\u5c06\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u89e3\u91ca\uff1a 1. \u7f16\u8bd1\u548c\u94fe\u63a5\u7684\u8fc7\u7a0b C++ \u7a0b\u5e8f\u7684\u6784\u5efa\u5206\u4e3a\u4e24\u4e2a\u4e3b\u8981\u9636\u6bb5\uff1a \u7f16\u8bd1 \u548c \u94fe\u63a5 \u3002 \u7f16\u8bd1\u9636\u6bb5 \u6bcf\u4e2a\u6e90\u6587\u4ef6\uff08\u5982 file1.cpp \u548c file2.cpp \uff09\u4f1a\u88ab\u5355\u72ec\u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6\uff08 .o \u6216 .obj \u6587\u4ef6\uff09\u3002 \u5728 file1.cpp \u4e2d\uff0c extern int a; \u544a\u8bc9\u7f16\u8bd1\u5668\uff1a\u53d8\u91cf a \u662f\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u4e3a a \u5206\u914d\u5185\u5b58\uff0c\u4f46\u4f1a\u8bb0\u5f55\u5b83\u7684\u5f15\u7528\u3002 \u94fe\u63a5\u9636\u6bb5 \u94fe\u63a5\u5668\u4f1a\u5c06\u6240\u6709\u76ee\u6807\u6587\u4ef6\uff08\u5982 file1.o \u548c file2.o \uff09\u5408\u5e76\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u5728\u94fe\u63a5\u9636\u6bb5\uff0c\u94fe\u63a5\u5668\u4f1a\u627e\u5230 file2.cpp \u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf a \uff0c\u5e76\u5c06 file1.cpp \u4e2d\u5bf9 a \u7684\u5f15\u7528\u89e3\u6790\u4e3a file2.cpp \u4e2d\u7684\u5b9a\u4e49\u3002 2. extern \u7684\u4f5c\u7528 extern \u5173\u952e\u5b57\u7528\u4e8e\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u8868\u793a\u8be5\u53d8\u91cf\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u5b9a\u4e49\u3002 \u5728 file1.cpp \u4e2d\uff1a extern int a ; \u544a\u8bc9\u7f16\u8bd1\u5668\uff0c a \u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u4f46\u5b83\u7684\u5b9a\u4e49\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u3002 \u5728 file2.cpp \u4e2d\uff1a int a = 10 ; \u662f\u53d8\u91cf a \u7684\u5b9a\u4e49\uff0c\u5206\u914d\u4e86\u5185\u5b58\u5e76\u521d\u59cb\u5316\u4e3a 10 \u3002 3. \u94fe\u63a5\u5668\u5982\u4f55\u627e\u5230\u53d8\u91cf \u94fe\u63a5\u5668\u4f1a\u626b\u63cf\u6240\u6709\u76ee\u6807\u6587\u4ef6\uff0c\u627e\u5230 file2.o \u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf a \uff0c\u5e76\u5c06 file1.o \u4e2d\u5bf9 a \u7684\u5f15\u7528\u89e3\u6790\u4e3a file2.o \u4e2d\u7684\u5b9a\u4e49\u3002 \u8fd9\u6837\uff0c main \u51fd\u6570\u4e2d\u7684 cout << a; \u5c31\u80fd\u591f\u6b63\u786e\u8bbf\u95ee file2.cpp \u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf a \u3002 4. \u793a\u4f8b\u8fd0\u884c\u6d41\u7a0b \u4ee3\u7801 // file1.cpp #include <iostream> using namespace std ; extern int a ; // \u58f0\u660e\u53d8\u91cf a int main () { cout << a << endl ; // \u4f7f\u7528\u53d8\u91cf a return 0 ; } // file2.cpp int a = 10 ; // \u5b9a\u4e49\u53d8\u91cf a \u7f16\u8bd1\u547d\u4ee4 g++ file1.cpp file2.cpp -o program \u8fd0\u884c\u7ed3\u679c 10 5. \u4e3a\u4ec0\u4e48\u7a0b\u5e8f\u4ece main \u51fd\u6570\u5f00\u59cb\uff1f \u7a0b\u5e8f\u7684\u6267\u884c\u786e\u5b9e\u4ece main \u51fd\u6570\u5f00\u59cb\u3002 \u5728 main \u51fd\u6570\u4e2d\uff0c cout << a; \u9700\u8981\u8bbf\u95ee\u53d8\u91cf a \u3002 \u7531\u4e8e a \u662f\u901a\u8fc7 extern \u58f0\u660e\u7684\uff0c\u7f16\u8bd1\u5668\u77e5\u9053\u5b83\u7684\u5b9a\u4e49\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\uff0c\u94fe\u63a5\u5668\u4f1a\u5728\u94fe\u63a5\u9636\u6bb5\u5c06 a \u7684\u5f15\u7528\u89e3\u6790\u4e3a file2.cpp \u4e2d\u7684\u5b9a\u4e49\u3002 6. \u603b\u7ed3 extern \u7684\u4f5c\u7528 \uff1a\u544a\u8bc9\u7f16\u8bd1\u5668\u53d8\u91cf\u7684\u5b9a\u4e49\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u3002 \u7f16\u8bd1\u548c\u94fe\u63a5\u8fc7\u7a0b \uff1a \u7f16\u8bd1\u9636\u6bb5\uff1a\u6bcf\u4e2a\u6e90\u6587\u4ef6\u5355\u72ec\u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6\u3002 \u94fe\u63a5\u9636\u6bb5\uff1a\u94fe\u63a5\u5668\u5c06\u76ee\u6807\u6587\u4ef6\u5408\u5e76\uff0c\u89e3\u6790\u8de8\u6587\u4ef6\u7684\u53d8\u91cf\u548c\u51fd\u6570\u5f15\u7528\u3002 \u7a0b\u5e8f\u6267\u884c \uff1a\u7a0b\u5e8f\u4ece main \u51fd\u6570\u5f00\u59cb\uff0c\u8fd0\u884c\u65f6\u901a\u8fc7\u94fe\u63a5\u5668\u89e3\u6790\u7684\u5730\u5740\u8bbf\u95ee\u5168\u5c40\u53d8\u91cf a \u3002 \u56e0\u6b64\uff0c\u867d\u7136\u53d8\u91cf a \u7684\u5b9a\u4e49\u5728 file2.cpp \u4e2d\uff0c\u4f46\u901a\u8fc7 extern \u58f0\u660e\u548c\u94fe\u63a5\u5668\u7684\u5de5\u4f5c\uff0c main \u51fd\u6570\u80fd\u591f\u6b63\u786e\u627e\u5230\u5e76\u4f7f\u7528\u5b83\u3002 \u4e3a\u4ec0\u4e48\u8981\u7528extern\u6765\u58f0\u660e\u53d8\u91cf \u5728 C++ \u4e2d\u901a\u8fc7 extern \u58f0\u660e\u548c\u8de8\u6587\u4ef6\u5b9a\u4e49\u53d8\u91cf\u7684\u65b9\u5f0f\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4e3b\u8981\u7528\u9014\uff1a 1. \u5b9e\u73b0\u591a\u6587\u4ef6\u534f\u4f5c \u4f5c\u7528 \uff1a \u5728\u5927\u578b\u9879\u76ee\u4e2d\uff0c\u4ee3\u7801\u901a\u5e38\u4f1a\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u6587\u4ef6\uff08\u6a21\u5757\uff09\u4ee5\u4fbf\u4e8e\u7ba1\u7406\u548c\u7ef4\u62a4\u3002 \u4f7f\u7528 extern \u58f0\u660e\u53ef\u4ee5\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5f15\u7528\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u6216\u51fd\u6570\uff0c\u4ece\u800c\u5b9e\u73b0\u6a21\u5757\u4e4b\u95f4\u7684\u534f\u4f5c\u3002 \u793a\u4f8b \uff1a \u4e00\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u5168\u5c40\u914d\u7f6e\u53d8\u91cf\uff0c\u5176\u4ed6\u6587\u4ef6\u901a\u8fc7 extern \u58f0\u660e\u8bbf\u95ee\u8fd9\u4e9b\u914d\u7f6e\u3002 // config.cpp int maxConnections = 100 ; // \u5b9a\u4e49\u5168\u5c40\u53d8\u91cf // main.cpp extern int maxConnections ; // \u58f0\u660e\u5168\u5c40\u53d8\u91cf cout << maxConnections << endl ; // \u4f7f\u7528\u53d8\u91cf 2. \u907f\u514d\u91cd\u590d\u5b9a\u4e49 \u4f5c\u7528 \uff1a \u5728\u591a\u6587\u4ef6\u9879\u76ee\u4e2d\uff0c\u5982\u679c\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u4f1a\u5bfc\u81f4\u94fe\u63a5\u9519\u8bef\uff08\u91cd\u590d\u5b9a\u4e49\uff09\u3002 \u4f7f\u7528 extern \u58f0\u660e\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u5b9a\u4e49\uff0c\u53ea\u9700\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u53d8\u91cf\uff0c\u5176\u4ed6\u6587\u4ef6\u901a\u8fc7\u58f0\u660e\u5f15\u7528\u5373\u53ef\u3002 \u793a\u4f8b \uff1a // file1.cpp int globalVar = 10 ; // \u5b9a\u4e49\u53d8\u91cf // file2.cpp extern int globalVar ; // \u58f0\u660e\u53d8\u91cf 3. \u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027 \u4f5c\u7528 \uff1a \u5c06\u53d8\u91cf\u7684\u5b9a\u4e49\u548c\u4f7f\u7528\u5206\u79bb\uff0c\u53ef\u4ee5\u66f4\u6e05\u6670\u5730\u7ec4\u7ec7\u4ee3\u7801\u3002 \u4f8b\u5982\uff0c\u5c06\u5168\u5c40\u53d8\u91cf\u96c6\u4e2d\u5b9a\u4e49\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4fbf\u4e8e\u7edf\u4e00\u7ba1\u7406\u548c\u4fee\u6539\u3002 \u793a\u4f8b \uff1a // globals.cpp int maxUsers = 50 ; int timeout = 30 ; // globals.h extern int maxUsers ; extern int timeout ; // main.cpp #include \"globals.h\" cout << maxUsers << endl ; 4. \u652f\u6301\u8de8\u6a21\u5757\u5171\u4eab\u6570\u636e \u4f5c\u7528 \uff1a \u5728\u6a21\u5757\u5316\u7f16\u7a0b\u4e2d\uff0c\u67d0\u4e9b\u6570\u636e\u9700\u8981\u5728\u591a\u4e2a\u6a21\u5757\u4e4b\u95f4\u5171\u4eab\u3002 \u4f7f\u7528 extern \u58f0\u660e\u53ef\u4ee5\u5b9e\u73b0\u8de8\u6a21\u5757\u7684\u6570\u636e\u5171\u4eab\uff0c\u800c\u65e0\u9700\u91cd\u590d\u5b9a\u4e49\u3002 \u793a\u4f8b \uff1a // module1.cpp int sharedData = 42 ; // \u5b9a\u4e49\u5171\u4eab\u6570\u636e // module2.cpp extern int sharedData ; // \u58f0\u660e\u5171\u4eab\u6570\u636e sharedData += 10 ; // \u4fee\u6539\u5171\u4eab\u6570\u636e 5. \u51cf\u5c11\u5185\u5b58\u5360\u7528 \u4f5c\u7528 \uff1a \u5982\u679c\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u540c\u540d\u53d8\u91cf\uff0c\u6bcf\u4e2a\u6587\u4ef6\u90fd\u4f1a\u5206\u914d\u4e00\u4efd\u5185\u5b58\u3002 \u4f7f\u7528 extern \u58f0\u660e\u53ef\u4ee5\u786e\u4fdd\u53d8\u91cf\u53ea\u5206\u914d\u4e00\u6b21\u5185\u5b58\uff0c\u51cf\u5c11\u5185\u5b58\u5360\u7528\u3002 6. \u652f\u6301\u5168\u5c40\u914d\u7f6e\u548c\u5e38\u91cf\u7ba1\u7406 \u4f5c\u7528 \uff1a \u5728\u9879\u76ee\u4e2d\uff0c\u67d0\u4e9b\u5168\u5c40\u914d\u7f6e\uff08\u5982\u6700\u5927\u8fde\u63a5\u6570\u3001\u8d85\u65f6\u65f6\u95f4\u7b49\uff09\u9700\u8981\u88ab\u591a\u4e2a\u6a21\u5757\u8bbf\u95ee\u3002 \u4f7f\u7528 extern \u58f0\u660e\u53ef\u4ee5\u96c6\u4e2d\u7ba1\u7406\u8fd9\u4e9b\u914d\u7f6e\uff0c\u907f\u514d\u91cd\u590d\u5b9a\u4e49\u3002 \u793a\u4f8b \uff1a // config.cpp const int MAX_CONNECTIONS = 100 ; // config.h extern const int MAX_CONNECTIONS ; // main.cpp #include \"config.h\" cout << MAX_CONNECTIONS << endl ; 7. \u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027 \u4f5c\u7528 \uff1a \u4f7f\u7528 extern \u58f0\u660e\u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u5177\u53ef\u8bfb\u6027\uff0c\u56e0\u4e3a\u53d8\u91cf\u7684\u5b9a\u4e49\u548c\u4f7f\u7528\u88ab\u5206\u79bb\uff0c\u8bfb\u8005\u53ef\u4ee5\u66f4\u6e05\u695a\u5730\u4e86\u89e3\u53d8\u91cf\u7684\u6765\u6e90\u3002 \u603b\u7ed3 \u901a\u8fc7 extern \u58f0\u660e\u548c\u8de8\u6587\u4ef6\u5b9a\u4e49\u53d8\u91cf\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee5\u4e0b\u76ee\u6807\uff1a 1. \u6a21\u5757\u5316\u7f16\u7a0b \uff1a\u652f\u6301\u591a\u6587\u4ef6\u534f\u4f5c\uff0c\u4fbf\u4e8e\u4ee3\u7801\u62c6\u5206\u548c\u7ba1\u7406\u3002 2. \u907f\u514d\u91cd\u590d\u5b9a\u4e49 \uff1a\u786e\u4fdd\u5168\u5c40\u53d8\u91cf\u53ea\u5b9a\u4e49\u4e00\u6b21\uff0c\u907f\u514d\u94fe\u63a5\u9519\u8bef\u3002 3. \u5171\u4eab\u6570\u636e \uff1a\u5728\u591a\u4e2a\u6a21\u5757\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002 4. \u96c6\u4e2d\u7ba1\u7406 \uff1a\u5c06\u5168\u5c40\u53d8\u91cf\u96c6\u4e2d\u5b9a\u4e49\uff0c\u4fbf\u4e8e\u7ef4\u62a4\u548c\u4fee\u6539\u3002 5. \u51cf\u5c11\u5185\u5b58\u5360\u7528 \uff1a\u786e\u4fdd\u5168\u5c40\u53d8\u91cf\u53ea\u5206\u914d\u4e00\u6b21\u5185\u5b58\u3002 \u8fd9\u79cd\u65b9\u5f0f\u5728\u5927\u578b\u9879\u76ee\u4e2d\u975e\u5e38\u5e38\u89c1\uff0c\u5c24\u5176\u662f\u5728\u9700\u8981\u8de8\u6a21\u5757\u5171\u4eab\u6570\u636e\u6216\u96c6\u4e2d\u7ba1\u7406\u5168\u5c40\u914d\u7f6e\u65f6\u3002 #ifdef \u3001 #else \u3001 #endif \u548c #ifndef \u7684\u4f5c\u7528 \u8fd9\u4e9b\u662f C/C++ \u4e2d\u7684 \u9884\u5904\u7406\u6307\u4ee4 \uff0c\u7528\u4e8e\u6761\u4ef6\u7f16\u8bd1\u3002\u5b83\u4eec\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u6839\u636e\u6761\u4ef6\u9009\u62e9\u6027\u5730\u7f16\u8bd1\u4ee3\u7801\u3002 1. #ifdef \u5168\u79f0 \uff1a if defined \u4f5c\u7528 \uff1a \u5224\u65ad\u67d0\u4e2a\u5b8f\u662f\u5426\u5df2\u7ecf\u88ab\u5b9a\u4e49\u3002 \u5982\u679c\u5b8f\u5df2\u5b9a\u4e49\uff0c\u5219\u7f16\u8bd1 #ifdef \u548c\u5bf9\u5e94\u7684 #else \u6216 #endif \u4e4b\u95f4\u7684\u4ee3\u7801\u3002 \u793a\u4f8b \uff1a #define DEBUG #ifdef DEBUG cout << \"Debug mode is enabled\" << endl ; #endif \u89e3\u91ca \uff1a \u5982\u679c\u5b8f DEBUG \u5df2\u5b9a\u4e49\uff0c\u5219\u7f16\u8bd1\u8f93\u51fa Debug mode is enabled \u3002 2. #else \u4f5c\u7528 \uff1a \u4e0e #ifdef \u6216 #ifndef \u914d\u5408\u4f7f\u7528\u3002 \u5982\u679c\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5219\u7f16\u8bd1 #else \u540e\u7684\u4ee3\u7801\u3002 \u793a\u4f8b \uff1a #define DEBUG #ifdef DEBUG cout << \"Debug mode is enabled\" << endl ; #else cout << \"Debug mode is disabled\" << endl ; #endif \u89e3\u91ca \uff1a \u5982\u679c DEBUG \u5df2\u5b9a\u4e49\uff0c\u7f16\u8bd1\u8f93\u51fa Debug mode is enabled \u3002 \u5982\u679c DEBUG \u672a\u5b9a\u4e49\uff0c\u7f16\u8bd1\u8f93\u51fa Debug mode is disabled \u3002 3. #endif \u4f5c\u7528 \uff1a \u7ed3\u675f\u4e00\u4e2a #ifdef \u6216 #ifndef \u5757\u3002 \u5fc5\u987b\u4e0e #ifdef \u6216 #ifndef \u914d\u5408\u4f7f\u7528\u3002 \u793a\u4f8b \uff1a #ifdef DEBUG cout << \"Debug mode is enabled\" << endl ; #endif \u89e3\u91ca \uff1a #endif \u7528\u4e8e\u7ed3\u675f #ifdef DEBUG \u5757\u3002 4. #ifndef \u5168\u79f0 \uff1a if not defined \u4f5c\u7528 \uff1a \u5224\u65ad\u67d0\u4e2a\u5b8f\u662f\u5426 \u672a\u88ab\u5b9a\u4e49 \u3002 \u5982\u679c\u5b8f\u672a\u5b9a\u4e49\uff0c\u5219\u7f16\u8bd1 #ifndef \u548c\u5bf9\u5e94\u7684 #else \u6216 #endif \u4e4b\u95f4\u7684\u4ee3\u7801\u3002 \u793a\u4f8b \uff1a #ifndef RELEASE cout << \"This is not a release build\" << endl ; #endif \u89e3\u91ca \uff1a \u5982\u679c\u5b8f RELEASE \u672a\u5b9a\u4e49\uff0c\u5219\u7f16\u8bd1\u8f93\u51fa This is not a release build \u3002 5. \u7efc\u5408\u793a\u4f8b #define DEBUG #ifdef DEBUG cout << \"Debug mode is enabled\" << endl ; #else cout << \"Debug mode is disabled\" << endl ; #endif #ifndef RELEASE cout << \"This is not a release build\" << endl ; #endif \u89e3\u91ca \uff1a - \u5982\u679c DEBUG \u5df2\u5b9a\u4e49\uff0c\u8f93\u51fa Debug mode is enabled \u3002 - \u5982\u679c RELEASE \u672a\u5b9a\u4e49\uff0c\u8f93\u51fa This is not a release build \u3002 6. \u5e38\u89c1\u7528\u9014 \u6761\u4ef6\u7f16\u8bd1 \uff1a \u6839\u636e\u5b8f\u5b9a\u4e49\u9009\u62e9\u6027\u5730\u7f16\u8bd1\u4ee3\u7801\u3002 \u793a\u4f8b\uff1a #ifdef WINDOWS cout << \"Running on Windows\" << endl ; #else cout << \"Running on other OS\" << endl ; #endif \u9632\u6b62\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b \uff1a \u4f7f\u7528 #ifndef \u548c #define \u9632\u6b62\u5934\u6587\u4ef6\u88ab\u591a\u6b21\u5305\u542b\u3002 \u793a\u4f8b\uff1a #ifndef MY_HEADER_H #define MY_HEADER_H // \u5934\u6587\u4ef6\u5185\u5bb9 #endif \u8c03\u8bd5\u548c\u53d1\u5e03\u6a21\u5f0f \uff1a \u6839\u636e\u5b8f\u5b9a\u4e49\u533a\u5206\u8c03\u8bd5\u6a21\u5f0f\u548c\u53d1\u5e03\u6a21\u5f0f\u3002 \u793a\u4f8b\uff1a #ifdef DEBUG cout << \"Debugging information\" << endl ; #endif \u603b\u7ed3 \u6307\u4ee4 \u4f5c\u7528 #ifdef \u5224\u65ad\u5b8f\u662f\u5426\u5df2\u5b9a\u4e49\uff0c\u82e5\u5df2\u5b9a\u4e49\u5219\u7f16\u8bd1\u5bf9\u5e94\u4ee3\u7801\u5757\u3002 #else \u4e0e #ifdef \u6216 #ifndef \u914d\u5408\u4f7f\u7528\uff0c\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\u7f16\u8bd1\u5bf9\u5e94\u4ee3\u7801\u5757\u3002 #endif \u7ed3\u675f\u4e00\u4e2a #ifdef \u6216 #ifndef \u5757\u3002 #ifndef \u5224\u65ad\u5b8f\u662f\u5426\u672a\u5b9a\u4e49\uff0c\u82e5\u672a\u5b9a\u4e49\u5219\u7f16\u8bd1\u5bf9\u5e94\u4ee3\u7801\u5757\u3002 \u8fd9\u4e9b\u6307\u4ee4\u5728\u6761\u4ef6\u7f16\u8bd1\u3001\u9632\u6b62\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b\u4ee5\u53ca\u8c03\u8bd5\u548c\u53d1\u5e03\u6a21\u5f0f\u5207\u6362\u4e2d\u975e\u5e38\u5e38\u7528\u3002 \u7ed3\u6784\u4f53\u662f\u5426\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c \u5728 C++ \u4e2d\uff0c \u7ed3\u6784\u4f53\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c \uff0c\u524d\u63d0\u662f\u4e24\u4e2a\u7ed3\u6784\u4f53\u7684\u7c7b\u578b\u76f8\u540c\u3002\u8d4b\u503c\u64cd\u4f5c\u4f1a\u5c06\u4e00\u4e2a\u7ed3\u6784\u4f53\u7684\u6240\u6709\u6210\u5458\u9010\u4e00\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e2d\u3002 1. \u793a\u4f8b\u4ee3\u7801 #include <iostream> using namespace std ; struct Point { int x ; int y ; }; int main () { Point p1 = { 10 , 20 }; // \u5b9a\u4e49\u5e76\u521d\u59cb\u5316\u7ed3\u6784\u4f53 p1 Point p2 ; // \u5b9a\u4e49\u7ed3\u6784\u4f53 p2 p2 = p1 ; // \u76f4\u63a5\u8d4b\u503c\uff0c\u5c06 p1 \u7684\u6210\u5458\u503c\u590d\u5236\u5230 p2 cout << \"p2.x = \" << p2 . x << \", p2.y = \" << p2 . y << endl ; // \u8f93\u51fa p2 \u7684\u6210\u5458\u503c return 0 ; } \u8f93\u51fa \uff1a p2.x = 10, p2.y = 20 2. \u8d4b\u503c\u7684\u89c4\u5219 \u6210\u5458\u9010\u4e00\u590d\u5236 \uff1a \u7ed3\u6784\u4f53\u7684\u8d4b\u503c\u64cd\u4f5c\u4f1a\u5c06\u6e90\u7ed3\u6784\u4f53\u7684\u6bcf\u4e2a\u6210\u5458\u7684\u503c\u9010\u4e00\u590d\u5236\u5230\u76ee\u6807\u7ed3\u6784\u4f53\u4e2d\u3002 \u7c7b\u578b\u5fc5\u987b\u76f8\u540c \uff1a \u53ea\u6709\u76f8\u540c\u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u4e4b\u95f4\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\u3002 \u5982\u679c\u7ed3\u6784\u4f53\u7c7b\u578b\u4e0d\u540c\uff0c\u5219\u9700\u8981\u624b\u52a8\u8d4b\u503c\u6bcf\u4e2a\u6210\u5458\u3002 \u793a\u4f8b \uff1a struct Point { int x ; int y ; }; struct Circle { int radius ; Point center ; }; int main () { Point p1 = { 10 , 20 }; Circle c1 ; // c1 = p1; // \u9519\u8bef\uff1a\u4e0d\u540c\u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u4e0d\u80fd\u76f4\u63a5\u8d4b\u503c return 0 ; } 3. \u6ce8\u610f\u4e8b\u9879 \u6d45\u62f7\u8d1d \uff1a \u7ed3\u6784\u4f53\u7684\u76f4\u63a5\u8d4b\u503c\u662f\u6d45\u62f7\u8d1d\u3002 \u5982\u679c\u7ed3\u6784\u4f53\u4e2d\u5305\u542b\u6307\u9488\u6210\u5458\uff0c\u8d4b\u503c\u64cd\u4f5c\u53ea\u4f1a\u590d\u5236\u6307\u9488\u7684\u5730\u5740\uff0c\u800c\u4e0d\u4f1a\u590d\u5236\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; struct Data { int * ptr ; }; int main () { int a = 10 ; Data d1 = { & a }; Data d2 ; d2 = d1 ; // \u6d45\u62f7\u8d1d\uff0cd2.ptr \u548c d1.ptr \u6307\u5411\u540c\u4e00\u5757\u5185\u5b58 cout << * d1 . ptr << \", \" << * d2 . ptr << endl ; // \u8f93\u51fa\uff1a10, 10 * d2 . ptr = 20 ; // \u4fee\u6539 d2.ptr \u6307\u5411\u7684\u503c cout << * d1 . ptr << \", \" << * d2 . ptr << endl ; // \u8f93\u51fa\uff1a20, 20 return 0 ; } \u8f93\u51fa \uff1a 10, 10 20, 20 \u6df1\u62f7\u8d1d \uff1a \u5982\u679c\u9700\u8981\u6df1\u62f7\u8d1d\uff08\u590d\u5236\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\uff09\uff0c\u9700\u8981\u624b\u52a8\u5b9e\u73b0\u62f7\u8d1d\u903b\u8f91\u3002 4. C++ \u4e2d\u7684\u6539\u8fdb \u5728 C++ \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 \u6784\u9020\u51fd\u6570 \u3001 \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u548c \u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d \u6765\u63a7\u5236\u7ed3\u6784\u4f53\u7684\u8d4b\u503c\u884c\u4e3a\u3002 \u793a\u4f8b\uff1a\u5b9e\u73b0\u6df1\u62f7\u8d1d #include <iostream> using namespace std ; struct Data { int * ptr ; // \u6784\u9020\u51fd\u6570 Data ( int value ) { ptr = new int ( value ); } // \u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u6df1\u62f7\u8d1d\uff09 Data ( const Data & other ) { ptr = new int ( * other . ptr ); } // \u91cd\u8f7d\u8d4b\u503c\u8fd0\u7b97\u7b26\uff08\u6df1\u62f7\u8d1d\uff09 Data & operator = ( const Data & other ) { if ( this != & other ) { delete ptr ; // \u91ca\u653e\u539f\u6709\u5185\u5b58 ptr = new int ( * other . ptr ); } return * this ; } ~ Data () { delete ptr ; // \u91ca\u653e\u5185\u5b58 } }; int main () { Data d1 ( 10 ); Data d2 = d1 ; // \u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 Data d3 ( 20 ); d3 = d1 ; // \u8c03\u7528\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d cout << * d1 . ptr << \", \" << * d2 . ptr << \", \" << * d3 . ptr << endl ; // \u8f93\u51fa\uff1a10, 10, 10 * d2 . ptr = 30 ; cout << * d1 . ptr << \", \" << * d2 . ptr << \", \" << * d3 . ptr << endl ; // \u8f93\u51fa\uff1a10, 30, 10 return 0 ; } \u8f93\u51fa \uff1a 10, 10, 10 10, 30, 10 5. \u603b\u7ed3 \u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c \uff1a \u7ed3\u6784\u4f53\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\uff0c\u524d\u63d0\u662f\u4e24\u4e2a\u7ed3\u6784\u4f53\u7684\u7c7b\u578b\u76f8\u540c\u3002 \u8d4b\u503c\u64cd\u4f5c\u4f1a\u9010\u4e00\u590d\u5236\u7ed3\u6784\u4f53\u7684\u6210\u5458\u3002 \u6d45\u62f7\u8d1d \uff1a \u9ed8\u8ba4\u7684\u8d4b\u503c\u64cd\u4f5c\u662f\u6d45\u62f7\u8d1d\uff0c\u6307\u9488\u6210\u5458\u53ea\u590d\u5236\u5730\u5740\u3002 \u6df1\u62f7\u8d1d \uff1a \u5982\u679c\u9700\u8981\u6df1\u62f7\u8d1d\uff0c\u53ef\u4ee5\u901a\u8fc7\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9e\u73b0\u3002 \u5199\u51faint \u3001bool\u3001 float \u3001\u6307\u9488\u53d8\u91cf\u4e0e \u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if \u8bed\u53e5 1. int \u4e0e\u96f6\u503c\u6bd4\u8f83 int a = 0 ; if ( a == 0 ) { cout << \"a \u7b49\u4e8e 0\" << endl ; } else { cout << \"a \u4e0d\u7b49\u4e8e 0\" << endl ; } 2. bool \u4e0e\u96f6\u503c\u6bd4\u8f83 \u5728 C++ \u4e2d\uff0c bool \u7c7b\u578b\u7684\u96f6\u503c\u662f false \u3002 bool flag = false ; if ( flag == false ) { cout << \"flag \u4e3a false\" << endl ; } else { cout << \"flag \u4e3a true\" << endl ; } 3. float \u4e0e\u96f6\u503c\u6bd4\u8f83 \u6d6e\u70b9\u6570\u6bd4\u8f83\u65f6\uff0c\u901a\u5e38\u9700\u8981\u8003\u8651\u7cbe\u5ea6\u95ee\u9898\uff0c\u76f4\u63a5\u6bd4\u8f83\u53ef\u80fd\u4f1a\u6709\u8bef\u5dee\u3002 float f = 0.0f ; if ( fabs ( f - 0.0f ) < 1e-6 ) { // \u4f7f\u7528\u4e00\u4e2a\u5c0f\u7684\u9608\u503c\u8fdb\u884c\u6bd4\u8f83 cout << \"f \u7b49\u4e8e 0\" << endl ; } else { cout << \"f \u4e0d\u7b49\u4e8e 0\" << endl ; } 4. \u6307\u9488\u4e0e\u96f6\u503c\u6bd4\u8f83 \u5728 C++ \u4e2d\uff0c\u6307\u9488\u7684\u96f6\u503c\u901a\u5e38\u7528 nullptr \u6216 NULL \u8868\u793a\u3002 int * ptr = nullptr ; if ( ptr == nullptr ) { cout << \"ptr \u662f\u7a7a\u6307\u9488\" << endl ; } else { cout << \"ptr \u4e0d\u662f\u7a7a\u6307\u9488\" << endl ; } \u603b\u7ed3 int \uff1a\u76f4\u63a5\u6bd4\u8f83 == 0 \u3002 bool \uff1a\u76f4\u63a5\u6bd4\u8f83 == false \u6216 == true \u3002 float \uff1a\u4f7f\u7528 fabs \u548c\u4e00\u4e2a\u5c0f\u9608\u503c\uff08\u5982 1e-6 \uff09\u8fdb\u884c\u6bd4\u8f83\u3002 \u6307\u9488 \uff1a\u4f7f\u7528 nullptr \u6216 NULL \u8fdb\u884c\u6bd4\u8f83\u3002 sizeof \u548c strlen \u7684\u533a\u522b sizeof \u548c strlen \u90fd\u53ef\u4ee5\u7528\u6765\u83b7\u53d6\u6570\u636e\u7684\u5927\u5c0f\uff0c\u4f46\u5b83\u4eec\u7684\u7528\u9014\u548c\u5de5\u4f5c\u65b9\u5f0f\u5b8c\u5168\u4e0d\u540c\u3002 1. sizeof \u4f5c\u7528 \uff1a \u7528\u4e8e\u83b7\u53d6\u53d8\u91cf\u3001\u6570\u636e\u7c7b\u578b\u6216\u5bf9\u8c61\u6240\u5360\u7684\u5185\u5b58\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002 \u5728\u7f16\u8bd1\u65f6\u8ba1\u7b97\u5927\u5c0f\uff0c\u4e0e\u6570\u636e\u7684\u5185\u5bb9\u65e0\u5173\u3002 \u7279\u70b9 \uff1a \u8ba1\u7b97\u7684\u662f \u5185\u5b58\u5206\u914d\u7684\u5927\u5c0f \u3002 \u5305\u62ec\u5b57\u7b26\u4e32\u7684\u7ec8\u6b62\u7b26 \\0 \u3002 \u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u7c7b\u578b\uff08\u57fa\u672c\u7c7b\u578b\u3001\u6570\u7ec4\u3001\u7ed3\u6784\u4f53\u3001\u7c7b\u7b49\uff09\u3002 \u793a\u4f8b \uff1a int a = 10 ; cout << sizeof ( a ) << endl ; // \u8f93\u51fa\uff1a4\uff08\u5047\u8bbe int \u5360 4 \u5b57\u8282\uff09 char str [] = \"hello\" ; cout << sizeof ( str ) << endl ; // \u8f93\u51fa\uff1a6\uff08\u5305\u62ec '\\0'\uff09 2. strlen \u4f5c\u7528 \uff1a \u7528\u4e8e\u8ba1\u7b97\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff08\u4e0d\u5305\u62ec\u5b57\u7b26\u4e32\u7684\u7ec8\u6b62\u7b26 \\0 \uff09\u3002 \u5728\u8fd0\u884c\u65f6\u8ba1\u7b97\u5927\u5c0f\uff0c\u4e0e\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u6709\u5173\u3002 \u7279\u70b9 \uff1a \u53ea\u80fd\u7528\u4e8e\u4ee5 \\0 \u7ed3\u5c3e\u7684 C \u98ce\u683c\u5b57\u7b26\u4e32\u3002 \u4e0d\u5305\u62ec\u5b57\u7b26\u4e32\u7684\u7ec8\u6b62\u7b26 \\0 \u3002 \u793a\u4f8b \uff1a char str [] = \"hello\" ; cout << strlen ( str ) << endl ; // \u8f93\u51fa\uff1a5\uff08\u4e0d\u5305\u62ec '\\0'\uff09 3. \u533a\u522b\u603b\u7ed3 \u7279\u6027 sizeof strlen \u4f5c\u7528 \u83b7\u53d6\u53d8\u91cf\u6216\u7c7b\u578b\u6240\u5360\u7684\u5185\u5b58\u5927\u5c0f \u83b7\u53d6\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff08\u4e0d\u5305\u62ec \\0 \uff09 \u8ba1\u7b97\u65f6\u673a \u7f16\u8bd1\u65f6\u8ba1\u7b97 \u8fd0\u884c\u65f6\u8ba1\u7b97 \u9002\u7528\u8303\u56f4 \u9002\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u7c7b\u578b \u4ec5\u9002\u7528\u4e8e\u4ee5 \\0 \u7ed3\u5c3e\u7684 C \u98ce\u683c\u5b57\u7b26\u4e32 \u662f\u5426\u5305\u542b \\0 \u5305\u62ec\u5b57\u7b26\u4e32\u7684\u7ec8\u6b62\u7b26 \\0 \u4e0d\u5305\u62ec\u5b57\u7b26\u4e32\u7684\u7ec8\u6b62\u7b26 \\0 \u4f9d\u8d56\u5185\u5bb9 \u4e0e\u6570\u636e\u5185\u5bb9\u65e0\u5173 \u4e0e\u5b57\u7b26\u4e32\u5185\u5bb9\u6709\u5173 4. \u793a\u4f8b\u5bf9\u6bd4 \u4ee3\u7801\u793a\u4f8b \uff1a #include <iostream> #include <cstring> using namespace std ; int main () { char str [] = \"hello\" ; cout << \"sizeof(str): \" << sizeof ( str ) << endl ; // \u8f93\u51fa\uff1a6\uff08\u5305\u62ec '\\0'\uff09 cout << \"strlen(str): \" << strlen ( str ) << endl ; // \u8f93\u51fa\uff1a5\uff08\u4e0d\u5305\u62ec '\\0'\uff09 return 0 ; } \u8f93\u51fa \uff1a sizeof(str): 6 strlen(str): 5 5. \u6ce8\u610f\u4e8b\u9879 sizeof \u7684\u7ed3\u679c\u4e0e\u6570\u636e\u7c7b\u578b\u6709\u5173 \uff1a sizeof \u8ba1\u7b97\u7684\u662f\u5185\u5b58\u5206\u914d\u7684\u5927\u5c0f\uff0c\u4e0e\u6570\u636e\u5185\u5bb9\u65e0\u5173\u3002 \u793a\u4f8b\uff1a int arr [ 10 ]; cout << sizeof ( arr ) << endl ; // \u8f93\u51fa\uff1a40\uff08\u5047\u8bbe int \u5360 4 \u5b57\u8282\uff09 strlen \u53ea\u80fd\u7528\u4e8e\u4ee5 \\0 \u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32 \uff1a \u5982\u679c\u5b57\u7b26\u4e32\u6ca1\u6709\u4ee5 \\0 \u7ed3\u5c3e\uff0c strlen \u7684\u884c\u4e3a\u662f\u672a\u5b9a\u4e49\u7684\u3002 \u793a\u4f8b\uff1a char str [ 5 ] = { 'h' , 'e' , 'l' , 'l' , 'o' }; cout << strlen ( str ) << endl ; // \u672a\u5b9a\u4e49\u884c\u4e3a\uff0c\u56e0\u4e3a\u6ca1\u6709 '\\0' sizeof \u548c\u6307\u9488 \uff1a \u5bf9\u4e8e\u6307\u9488\uff0c sizeof \u8fd4\u56de\u7684\u662f\u6307\u9488\u672c\u8eab\u7684\u5927\u5c0f\uff0c\u800c\u4e0d\u662f\u6307\u9488\u6307\u5411\u7684\u6570\u636e\u5927\u5c0f\u3002 \u793a\u4f8b\uff1a char * ptr = \"hello\" ; cout << sizeof ( ptr ) << endl ; // \u8f93\u51fa\uff1a8\uff08\u5047\u8bbe\u6307\u9488\u5360 8 \u5b57\u8282\uff09 cout << strlen ( ptr ) << endl ; // \u8f93\u51fa\uff1a5\uff08\u5b57\u7b26\u4e32\u5185\u5bb9\u7684\u957f\u5ea6\uff09 6. \u603b\u7ed3 sizeof \uff1a\u7528\u4e8e\u83b7\u53d6\u53d8\u91cf\u6216\u7c7b\u578b\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u7f16\u8bd1\u65f6\u8ba1\u7b97\uff0c\u9002\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u3002 strlen \uff1a\u7528\u4e8e\u83b7\u53d6 C \u98ce\u683c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff08\u4e0d\u5305\u62ec \\0 \uff09\uff0c\u8fd0\u884c\u65f6\u8ba1\u7b97\uff0c\u9002\u7528\u4e8e\u5b57\u7b26\u4e32\u64cd\u4f5c\u3002 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c sizeof \u66f4\u901a\u7528\uff0c\u800c strlen \u4e13\u7528\u4e8e\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u8ba1\u7b97\u3002 C \u8bed\u8a00\u7684 static \u548c C++ \u7684 static \u7684\u533a\u522b static \u5173\u952e\u5b57\u5728 C \u548c C++ \u4e2d\u90fd\u6709\u7c7b\u4f3c\u7684\u4f5c\u7528\uff0c\u4f46\u5728\u67d0\u4e9b\u65b9\u9762\u5b58\u5728\u7ec6\u5fae\u7684\u5dee\u5f02\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u4e3b\u8981\u533a\u522b\u548c\u4f5c\u7528\uff1a 1. \u5728 C \u8bed\u8a00\u4e2d\u7684 static \u4f5c\u7528 \uff1a \u4fee\u9970\u5c40\u90e8\u53d8\u91cf \uff1a \u4f7f\u5c40\u90e8\u53d8\u91cf\u5177\u6709 \u9759\u6001\u5b58\u50a8\u5468\u671f \uff0c\u5373\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u4ece\u7a0b\u5e8f\u5f00\u59cb\u5230\u7a0b\u5e8f\u7ed3\u675f\u3002 \u53d8\u91cf\u53ea\u4f1a\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u540e\u7eed\u8c03\u7528\u65f6\u4fdd\u7559\u4e0a\u4e00\u6b21\u7684\u503c\u3002 \u793a\u4f8b \uff1a #include <stdio.h> void func () { static int count = 0 ; // \u9759\u6001\u5c40\u90e8\u53d8\u91cf count ++ ; printf ( \"Count: %d \\n \" , count ); } int main () { func (); // \u8f93\u51fa\uff1aCount: 1 func (); // \u8f93\u51fa\uff1aCount: 2 func (); // \u8f93\u51fa\uff1aCount: 3 return 0 ; } \u4fee\u9970\u5168\u5c40\u53d8\u91cf \uff1a \u5c06\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u9650\u5236\u5728\u5f53\u524d\u6587\u4ef6\uff0c\u907f\u514d\u4e0e\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u540c\u540d\u53d8\u91cf\u51b2\u7a81\uff08 \u5185\u90e8\u94fe\u63a5 \uff09\u3002 \u793a\u4f8b \uff1a static int globalVar = 10 ; // \u9759\u6001\u5168\u5c40\u53d8\u91cf\uff0c\u4ec5\u5728\u5f53\u524d\u6587\u4ef6\u4e2d\u53ef\u89c1 \u4fee\u9970\u51fd\u6570 \uff1a \u5c06\u51fd\u6570\u7684\u4f5c\u7528\u57df\u9650\u5236\u5728\u5f53\u524d\u6587\u4ef6\uff0c\u907f\u514d\u4e0e\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u540c\u540d\u51fd\u6570\u51b2\u7a81\u3002 \u793a\u4f8b \uff1a static void func () { printf ( \"This is a static function \\n \" ); } 2. \u5728 C++ \u4e2d\u7684 static \u4f5c\u7528 \uff1a \u4fee\u9970\u5c40\u90e8\u53d8\u91cf \uff1a \u4e0e C \u8bed\u8a00\u76f8\u540c\uff0c\u4f7f\u5c40\u90e8\u53d8\u91cf\u5177\u6709 \u9759\u6001\u5b58\u50a8\u5468\u671f \u3002 \u793a\u4f8b \uff1a void func () { static int count = 0 ; // \u9759\u6001\u5c40\u90e8\u53d8\u91cf count ++ ; cout << \"Count: \" << count << endl ; } \u4fee\u9970\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570 \uff1a \u4e0e C \u8bed\u8a00\u76f8\u540c\uff0c\u5c06\u5168\u5c40\u53d8\u91cf\u6216\u51fd\u6570\u7684\u4f5c\u7528\u57df\u9650\u5236\u5728\u5f53\u524d\u6587\u4ef6\u3002 \u793a\u4f8b \uff1a static int globalVar = 10 ; // \u9759\u6001\u5168\u5c40\u53d8\u91cf static void func () { cout << \"This is a static function\" << endl ; } \u4fee\u9970\u7c7b\u7684\u6210\u5458\u53d8\u91cf \uff1a \u9759\u6001\u6210\u5458\u53d8\u91cf\u5c5e\u4e8e\u7c7b\uff0c\u800c\u4e0d\u662f\u67d0\u4e2a\u5177\u4f53\u5bf9\u8c61\u3002 \u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002 \u9759\u6001\u6210\u5458\u53d8\u91cf\u9700\u8981\u5728\u7c7b\u5916\u521d\u59cb\u5316\u3002 \u793a\u4f8b \uff1a class MyClass { public : static int count ; // \u9759\u6001\u6210\u5458\u53d8\u91cf }; int MyClass :: count = 0 ; // \u9759\u6001\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316 \u4fee\u9970\u7c7b\u7684\u6210\u5458\u51fd\u6570 \uff1a \u9759\u6001\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u7c7b\uff0c\u800c\u4e0d\u662f\u67d0\u4e2a\u5177\u4f53\u5bf9\u8c61\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u6216\u6210\u5458\u51fd\u6570\u3002 \u793a\u4f8b \uff1a class MyClass { public : static void display () { cout << \"Static function\" << endl ; } }; int main () { MyClass :: display (); // \u901a\u8fc7\u7c7b\u540d\u8c03\u7528\u9759\u6001\u51fd\u6570 return 0 ; } 3. \u533a\u522b\u603b\u7ed3 \u7279\u6027 C \u8bed\u8a00\u4e2d\u7684 static C++ \u4e2d\u7684 static \u5c40\u90e8\u53d8\u91cf \u751f\u547d\u5468\u671f\u5ef6\u957f\u5230\u7a0b\u5e8f\u7ed3\u675f\uff0c\u503c\u5728\u591a\u6b21\u8c03\u7528\u95f4\u4fdd\u6301\u3002 \u540c C \u8bed\u8a00\u3002 \u5168\u5c40\u53d8\u91cf/\u51fd\u6570 \u4f5c\u7528\u57df\u9650\u5236\u5728\u5f53\u524d\u6587\u4ef6\uff0c\u907f\u514d\u547d\u540d\u51b2\u7a81\u3002 \u540c C \u8bed\u8a00\u3002 \u7c7b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf \u4e0d\u652f\u6301 \u5c5e\u4e8e\u7c7b\u800c\u4e0d\u662f\u5bf9\u8c61\uff0c\u6240\u6709\u5bf9\u8c61\u5171\u4eab\uff0c\u9700\u5728\u7c7b\u5916\u521d\u59cb\u5316\u3002 \u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570 \u4e0d\u652f\u6301 \u5c5e\u4e8e\u7c7b\u800c\u4e0d\u662f\u5bf9\u8c61\uff0c\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002 4. \u603b\u7ed3 \u5728 C \u8bed\u8a00\u4e2d\uff0c static \u4e3b\u8981\u7528\u4e8e\u63a7\u5236\u53d8\u91cf\u548c\u51fd\u6570\u7684\u4f5c\u7528\u57df\u53ca\u751f\u547d\u5468\u671f\u3002 \u5728 C++ \u4e2d\uff0c static \u9664\u4e86\u5177\u6709 C \u8bed\u8a00\u7684\u529f\u80fd\u5916\uff0c\u8fd8\u6269\u5c55\u7528\u4e8e\u7c7b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u9759\u6001\u6210\u5458\u51fd\u6570\uff0c\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u7279\u6027\u3002 volatile \u7684\u4f5c\u7528 volatile \u662f C \u548c C++ \u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u7528\u4e8e\u544a\u8bc9\u7f16\u8bd1\u5668\u67d0\u4e2a\u53d8\u91cf\u7684\u503c\u53ef\u80fd\u4f1a\u88ab\u7a0b\u5e8f\u4e4b\u5916\u7684\u56e0\u7d20\u4fee\u6539\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u5728\u4f18\u5316\u4ee3\u7801\u65f6\u4e0d\u80fd\u5bf9\u8be5\u53d8\u91cf\u7684\u8bbf\u95ee\u8fdb\u884c\u4f18\u5316\u3002 1. volatile \u7684\u4f5c\u7528 \u9632\u6b62\u7f16\u8bd1\u5668\u4f18\u5316 \uff1a \u7f16\u8bd1\u5668\u901a\u5e38\u4f1a\u5bf9\u4ee3\u7801\u8fdb\u884c\u4f18\u5316\uff0c\u4f8b\u5982\u5c06\u53d8\u91cf\u7684\u503c\u7f13\u5b58\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u3002 \u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u88ab\u58f0\u660e\u4e3a volatile \uff0c\u7f16\u8bd1\u5668\u4f1a\u786e\u4fdd\u6bcf\u6b21\u8bbf\u95ee\u8be5\u53d8\u91cf\u65f6\u90fd\u76f4\u63a5\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u7f13\u5b58\u7684\u503c\u3002 \u9002\u7528\u573a\u666f \uff1a \u786c\u4ef6\u5bc4\u5b58\u5668 \uff1a \u53d8\u91cf\u7684\u503c\u53ef\u80fd\u7531\u786c\u4ef6\u8bbe\u5907\uff08\u5982 I/O \u7aef\u53e3\uff09\u4fee\u6539\u3002 \u591a\u7ebf\u7a0b\u73af\u5883 \uff1a \u53d8\u91cf\u53ef\u80fd\u88ab\u5176\u4ed6\u7ebf\u7a0b\u4fee\u6539\u3002 \u4fe1\u53f7\u5904\u7406\u51fd\u6570 \uff1a \u53d8\u91cf\u53ef\u80fd\u5728\u4e2d\u65ad\u6216\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u4e2d\u88ab\u4fee\u6539\u3002 2. \u793a\u4f8b volatile int flag = 0 ; void waitForFlag () { while ( flag == 0 ) { // \u5982\u679c\u6ca1\u6709 volatile\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f18\u5316\u4e3a\u6b7b\u5faa\u73af } cout << \"Flag is set!\" << endl ; } \u89e3\u91ca \uff1a - \u5982\u679c\u6ca1\u6709 volatile \uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u5c06 flag == 0 \u4f18\u5316\u4e3a\u4e00\u4e2a\u6b7b\u5faa\u73af\uff0c\u56e0\u4e3a\u5b83\u8ba4\u4e3a flag \u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539\u3002 - \u4f7f\u7528 volatile \u540e\uff0c\u7f16\u8bd1\u5668\u4f1a\u786e\u4fdd\u6bcf\u6b21\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6 flag \u7684\u503c\u3002 \u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u65e2\u662f const \u53c8\u662f volatile \u5417\uff1f \u662f\u7684\uff0c\u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u540c\u65f6\u662f const \u548c volatile \u3002 \u542b\u4e49 \uff1a const \uff1a\u8868\u793a\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u88ab\u7a0b\u5e8f\u76f4\u63a5\u4fee\u6539\u3002 volatile \uff1a\u8868\u793a\u53d8\u91cf\u7684\u503c\u53ef\u80fd\u4f1a\u88ab\u5916\u90e8\u56e0\u7d20\u4fee\u6539\u3002 \u9002\u7528\u573a\u666f \uff1a \u786c\u4ef6\u5bc4\u5b58\u5668 \uff1a \u67d0\u4e9b\u786c\u4ef6\u5bc4\u5b58\u5668\u7684\u503c\u53ef\u80fd\u4f1a\u88ab\u786c\u4ef6\u4fee\u6539\uff0c\u4f46\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u4fee\u6539\u5b83\u4eec\u3002 \u53ea\u8bfb\u5171\u4eab\u53d8\u91cf \uff1a \u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u80fd\u53ea\u8bfb\u67d0\u4e2a\u53d8\u91cf\uff0c\u800c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u80fd\u4f1a\u4fee\u6539\u5b83\u3002 \u793a\u4f8b const volatile int statusRegister = 0xFF ; void checkStatus () { while ( statusRegister == 0xFF ) { // \u7b49\u5f85\u786c\u4ef6\u4fee\u6539 statusRegister \u7684\u503c } cout << \"Status changed!\" << endl ; } \u89e3\u91ca \uff1a - statusRegister \u662f\u4e00\u4e2a\u786c\u4ef6\u5bc4\u5b58\u5668\u3002 - \u7a0b\u5e8f\u4e0d\u80fd\u4fee\u6539 statusRegister \u7684\u503c\uff08\u56e0\u4e3a\u5b83\u662f const \uff09\u3002 - \u786c\u4ef6\u53ef\u80fd\u4f1a\u4fee\u6539 statusRegister \u7684\u503c\uff08\u56e0\u4e3a\u5b83\u662f volatile \uff09\u3002 \u603b\u7ed3 volatile \u7684\u4f5c\u7528 \uff1a \u9632\u6b62\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u786e\u4fdd\u6bcf\u6b21\u8bbf\u95ee\u53d8\u91cf\u65f6\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u3002 \u5e38\u7528\u4e8e\u786c\u4ef6\u5bc4\u5b58\u5668\u3001\u591a\u7ebf\u7a0b\u53d8\u91cf\u548c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002 const \u548c volatile \u7684\u7ed3\u5408 \uff1a \u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u540c\u65f6\u662f const \u548c volatile \u3002 \u5e38\u7528\u4e8e\u786c\u4ef6\u5bc4\u5b58\u5668\u6216\u53ea\u8bfb\u5171\u4eab\u53d8\u91cf\u3002 \u6ce8\u610f\u4e8b\u9879 \uff1a volatile \u4ec5\u4fdd\u8bc1\u53d8\u91cf\u7684\u503c\u4e0d\u4f1a\u88ab\u4f18\u5316\uff0c\u4f46\u4e0d\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u3002\u5982\u679c\u9700\u8981\u7ebf\u7a0b\u5b89\u5168\uff0c\u8fd8\u9700\u8981\u4f7f\u7528\u540c\u6b65\u673a\u5236\uff08\u5982 mutex \uff09\u3002 \u5173\u4e8evolatile\u7684\u6d4b\u8bd5\u6211\u5728\u5927\u4e09\u4e0bc++\u6587\u4ef6\u5939\u4e13\u95e8\u505a\u4e86\u5b9e\u9a8c\u5bf9\u6bd4 g++ \u7f16\u8bd1\u9009\u9879 \u5728\u7f16\u8bd1\u5668\u9009\u9879\u4e2d\uff0c\u5927\u5199\u7684 O \uff08 -O \uff09\u4ee3\u8868 Optimization \uff08\u4f18\u5316\uff09\u3002\u5b83\u7528\u4e8e\u6307\u5b9a\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7ea7\u522b\uff0c\u4ee5\u63d0\u9ad8\u751f\u6210\u4ee3\u7801\u7684\u6027\u80fd\u6216\u51cf\u5c11\u4ee3\u7801\u7684\u5927\u5c0f\u3002 -O \u7684\u542b\u4e49 -O \u662f GCC \u548c G++ \u7f16\u8bd1\u5668\u7684\u4f18\u5316\u9009\u9879\u524d\u7f00\u3002 \u540e\u9762\u53ef\u4ee5\u8ddf\u4e00\u4e2a\u6570\u5b57\uff08\u5982 0 \u3001 1 \u3001 2 \u3001 3 \uff09\u6216\u7279\u5b9a\u7684\u4f18\u5316\u6807\u5fd7\uff08\u5982 s \u3001 g \uff09\u3002 \u5e38\u89c1\u4f18\u5316\u7ea7\u522b -O0 \uff08\u9ed8\u8ba4\uff09\uff1a \u4e0d\u8fdb\u884c\u4f18\u5316\u3002 \u7f16\u8bd1\u901f\u5ea6\u6700\u5feb\uff0c\u751f\u6210\u7684\u4ee3\u7801\u53ef\u8bfb\u6027\u9ad8\uff0c\u9002\u5408\u8c03\u8bd5\u3002 -O1 \uff1a \u542f\u7528\u57fa\u672c\u4f18\u5316\u3002 \u4e0d\u4f1a\u663e\u8457\u589e\u52a0\u7f16\u8bd1\u65f6\u95f4\uff0c\u9002\u5408\u4e00\u822c\u7528\u9014\u3002 -O2 \uff1a \u542f\u7528\u66f4\u591a\u4f18\u5316\uff0c\u5305\u62ec\u4ee3\u7801\u5185\u8054\u3001\u5faa\u73af\u4f18\u5316\u7b49\u3002 \u751f\u6210\u7684\u4ee3\u7801\u8fd0\u884c\u901f\u5ea6\u66f4\u5feb\uff0c\u9002\u5408\u6027\u80fd\u8981\u6c42\u8f83\u9ad8\u7684\u573a\u666f\u3002 -O3 \uff1a \u542f\u7528\u6700\u9ad8\u7ea7\u522b\u7684\u4f18\u5316\uff0c\u5305\u62ec\u66f4\u6fc0\u8fdb\u7684\u4f18\u5316\u7b56\u7565\uff08\u5982\u5faa\u73af\u5c55\u5f00\u3001\u51fd\u6570\u5185\u8054\u7b49\uff09\u3002 \u53ef\u80fd\u4f1a\u589e\u52a0\u7f16\u8bd1\u65f6\u95f4\u548c\u4ee3\u7801\u5927\u5c0f\uff0c\u9002\u5408\u5bf9\u6027\u80fd\u8981\u6c42\u6781\u9ad8\u7684\u573a\u666f\u3002 -Os \uff1a \u4f18\u5316\u4ee3\u7801\u5927\u5c0f\uff0c\u9002\u5408\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6216\u5b58\u50a8\u7a7a\u95f4\u6709\u9650\u7684\u573a\u666f\u3002 -Og \uff1a \u4e3a\u8c03\u8bd5\u4f18\u5316\uff0c\u751f\u6210\u7684\u4ee3\u7801\u5728\u4fdd\u7559\u8c03\u8bd5\u4fe1\u606f\u7684\u540c\u65f6\u8fdb\u884c\u9002\u5ea6\u4f18\u5316\u3002 \u603b\u7ed3 \u5927\u5199\u7684 O \u4ee3\u8868 Optimization \uff0c\u7528\u4e8e\u63a7\u5236\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7ea7\u522b\u3002 \u5e38\u7528\u9009\u9879\u5305\u62ec -O0 \uff08\u65e0\u4f18\u5316\uff09\u3001 -O2 \uff08\u5e38\u7528\u4f18\u5316\uff09\u548c -O3 \uff08\u6700\u9ad8\u4f18\u5316\uff09\u3002","title":"5\u670814\u57fa\u7840\u77e5\u8bc6"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#a-a","text":"","title":"a \u548c &amp;a \u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1-a","text":"a \u8868\u793a\u53d8\u91cf\u672c\u8eab\uff0c\u76f4\u63a5\u8bbf\u95ee\u53d8\u91cf\u7684\u503c\u3002 \u5982\u679c a \u662f\u4e00\u4e2a\u666e\u901a\u53d8\u91cf\uff0c a \u8868\u793a\u8be5\u53d8\u91cf\u5b58\u50a8\u7684\u503c\u3002 \u5982\u679c a \u662f\u4e00\u4e2a\u6307\u9488\uff0c a \u8868\u793a\u6307\u9488\u672c\u8eab\u7684\u503c\uff08\u5373\u6307\u9488\u5b58\u50a8\u7684\u5730\u5740\uff09\u3002","title":"1. a \u7684\u542b\u4e49"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_1","text":"int a = 10 ; cout << a << endl ; // \u8f93\u51fa\u53d8\u91cf a \u7684\u503c\uff1a10","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2-a","text":"&a \u8868\u793a\u53d8\u91cf a \u7684\u5730\u5740\u3002 & \u662f\u53d6\u5730\u5740\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u83b7\u53d6\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u3002 \u5982\u679c a \u662f\u4e00\u4e2a\u53d8\u91cf\uff0c &a \u8fd4\u56de\u8be5\u53d8\u91cf\u7684\u5185\u5b58\u5730\u5740\u3002 \u5982\u679c a \u662f\u4e00\u4e2a\u6307\u9488\uff0c &a \u8fd4\u56de\u6307\u9488\u672c\u8eab\u7684\u5730\u5740\u3002","title":"2. &amp;a \u7684\u542b\u4e49"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_2","text":"int a = 10 ; cout << & a << endl ; // \u8f93\u51fa\u53d8\u91cf a \u7684\u5730\u5740\uff0c\u4f8b\u5982\uff1a0x7ffee4b3c8ac","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#3","text":"\u8868\u8fbe\u5f0f \u542b\u4e49 \u793a\u4f8b a \u53d8\u91cf\u672c\u8eab\u7684\u503c int a = 10; cout << a; &a \u53d8\u91cf\u7684\u5730\u5740\uff08\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\uff09 int a = 10; cout << &a;","title":"3. \u533a\u522b\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#4","text":"","title":"4. \u4f7f\u7528\u573a\u666f"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1","text":"\u4f20\u503c \uff1a\u76f4\u63a5\u4f20\u9012\u53d8\u91cf\u7684\u503c\u3002 \u4f20\u5f15\u7528 \uff1a\u901a\u8fc7 & \u4f20\u9012\u53d8\u91cf\u7684\u5730\u5740\uff0c\u5141\u8bb8\u51fd\u6570\u4fee\u6539\u539f\u59cb\u53d8\u91cf\u3002 void modify ( int & x ) { // \u5f15\u7528\u4f20\u9012 x = 20 ; } int main () { int a = 10 ; modify ( a ); // \u4f20\u9012 a \u7684\u5f15\u7528 cout << a << endl ; // \u8f93\u51fa 20 return 0 ; }","title":"\uff081\uff09\u4f20\u503c\u548c\u4f20\u5f15\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2","text":"\u4f7f\u7528 & \u83b7\u53d6\u53d8\u91cf\u7684\u5730\u5740\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u6307\u9488\u3002 \u4f7f\u7528\u6307\u9488\u8bbf\u95ee\u6216\u4fee\u6539\u53d8\u91cf\u7684\u503c\u3002 int a = 10 ; int * p = & a ; // \u6307\u9488 p \u6307\u5411\u53d8\u91cf a \u7684\u5730\u5740 cout << * p << endl ; // \u8f93\u51fa a \u7684\u503c\uff1a10","title":"\uff082\uff09\u6307\u9488\u64cd\u4f5c"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#5","text":"& \u65e2\u53ef\u4ee5\u8868\u793a\u53d6\u5730\u5740\u8fd0\u7b97\u7b26\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u5f15\u7528\u7c7b\u578b\u7684\u58f0\u660e\uff08\u5982 int &ref = a; \uff09\u3002 &a \u53ea\u80fd\u7528\u4e8e\u53d8\u91cf\uff0c\u4e0d\u80fd\u7528\u4e8e\u5b57\u9762\u503c\u6216\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff1a int a = 10 ; cout << & a ; // \u5408\u6cd5 cout << & ( a + 1 ); // \u975e\u6cd5\uff0c\u4e0d\u80fd\u5bf9\u8868\u8fbe\u5f0f\u53d6\u5730\u5740","title":"5. \u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_3","text":"a \u8868\u793a\u53d8\u91cf\u672c\u8eab\u7684\u503c\u3002 &a \u8868\u793a\u53d8\u91cf\u7684\u5730\u5740\uff08\u5185\u5b58\u4f4d\u7f6e\uff09\u3002 & \u662f\u53d6\u5730\u5740\u8fd0\u7b97\u7b26\uff0c\u5e38\u7528\u4e8e\u6307\u9488\u64cd\u4f5c\u6216\u5f15\u7528\u4f20\u9012\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#static","text":"\u5728 C++ \u4e2d\uff0c static \u5173\u952e\u5b57\u6709\u591a\u79cd\u7528\u9014\uff0c\u5177\u4f53\u4f5c\u7528\u53d6\u51b3\u4e8e\u5b83\u7684\u4f7f\u7528\u573a\u666f\u3002\u4ee5\u4e0b\u662f static \u7684\u4e3b\u8981\u4f5c\u7528\uff1a","title":"static \u5173\u952e\u5b57\u7684\u4f5c\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1_1","text":"\u4f5c\u7528 \uff1a \u5c40\u90e8\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u4ece\u7a0b\u5e8f\u5f00\u59cb\u5230\u7a0b\u5e8f\u7ed3\u675f\uff08\u5168\u5c40\u751f\u547d\u5468\u671f\uff09\uff0c\u4f46\u4f5c\u7528\u57df\u4ecd\u7136\u662f\u5c40\u90e8\u7684\u3002 \u53d8\u91cf\u53ea\u4f1a\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u540e\u7eed\u8c03\u7528\u65f6\u4fdd\u7559\u4e0a\u4e00\u6b21\u7684\u503c\u3002 \u793a\u4f8b \uff1a void func () { static int count = 0 ; // \u9759\u6001\u5c40\u90e8\u53d8\u91cf count ++ ; cout << \"Count: \" << count << endl ; } int main () { func (); // \u8f93\u51fa\uff1aCount: 1 func (); // \u8f93\u51fa\uff1aCount: 2 func (); // \u8f93\u51fa\uff1aCount: 3 return 0 ; }","title":"1. \u4fee\u9970\u5c40\u90e8\u53d8\u91cf"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2_1","text":"\u4f5c\u7528 \uff1a \u5c06\u5168\u5c40\u53d8\u91cf\u6216\u51fd\u6570\u7684\u4f5c\u7528\u57df\u9650\u5236\u5728\u5f53\u524d\u6587\u4ef6\uff0c\u907f\u514d\u4e0e\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u540c\u540d\u53d8\u91cf\u6216\u51fd\u6570\u51b2\u7a81\uff08 \u5185\u90e8\u94fe\u63a5 \uff09\u3002 \u793a\u4f8b \uff1a static int globalVar = 10 ; // \u9759\u6001\u5168\u5c40\u53d8\u91cf static void func () { // \u9759\u6001\u51fd\u6570 cout << \"Static function\" << endl ; }","title":"2. \u4fee\u9970\u5168\u5c40\u53d8\u91cf\u6216\u51fd\u6570"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#3_1","text":"\u4f5c\u7528 \uff1a \u9759\u6001\u6210\u5458\u53d8\u91cf\u5c5e\u4e8e\u7c7b\uff0c\u800c\u4e0d\u662f\u67d0\u4e2a\u5177\u4f53\u5bf9\u8c61\u3002 \u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002 \u7279\u70b9 \uff1a \u9759\u6001\u6210\u5458\u53d8\u91cf\u9700\u8981\u5728\u7c7b\u5916\u521d\u59cb\u5316\u3002 \u9759\u6001\u6210\u5458\u53d8\u91cf\u5728\u7a0b\u5e8f\u5f00\u59cb\u65f6\u5206\u914d\u5185\u5b58\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u91ca\u653e\u3002 \u793a\u4f8b \uff1a class MyClass { public : static int count ; // \u9759\u6001\u6210\u5458\u53d8\u91cf }; int MyClass :: count = 0 ; // \u9759\u6001\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316 int main () { MyClass obj1 , obj2 ; MyClass :: count = 5 ; // \u6240\u6709\u5bf9\u8c61\u5171\u4eab cout << obj1 . count << endl ; // \u8f93\u51fa\uff1a5 cout << obj2 . count << endl ; // \u8f93\u51fa\uff1a5 return 0 ; }","title":"3. \u4fee\u9970\u7c7b\u7684\u6210\u5458\u53d8\u91cf"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#4_1","text":"\u4f5c\u7528 \uff1a \u9759\u6001\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u7c7b\uff0c\u800c\u4e0d\u662f\u67d0\u4e2a\u5177\u4f53\u5bf9\u8c61\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002 \u793a\u4f8b \uff1a class MyClass { public : static void display () { // \u9759\u6001\u6210\u5458\u51fd\u6570 cout << \"Static function\" << endl ; } }; int main () { MyClass :: display (); // \u901a\u8fc7\u7c7b\u540d\u8c03\u7528\u9759\u6001\u51fd\u6570 return 0 ; }","title":"4. \u4fee\u9970\u7c7b\u7684\u6210\u5458\u51fd\u6570"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#5_1","text":"\u4f5c\u7528 \uff1a \u5c06\u53d8\u91cf\u6216\u51fd\u6570\u7684\u4f5c\u7528\u57df\u9650\u5236\u5728\u5f53\u524d\u6587\u4ef6\uff0c\u907f\u514d\u4e0e\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u540c\u540d\u7b26\u53f7\u51b2\u7a81\u3002 \u793a\u4f8b \uff1a // file1.cpp static int var = 10 ; // \u4ec5\u5728 file1.cpp \u4e2d\u53ef\u89c1 // file2.cpp static int var = 20 ; // \u4ec5\u5728 file2.cpp \u4e2d\u53ef\u89c1","title":"5. \u5728\u591a\u6587\u4ef6\u9879\u76ee\u4e2d\u7684\u4f5c\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_4","text":"\u4f7f\u7528\u573a\u666f \u4f5c\u7528 \u5c40\u90e8\u53d8\u91cf \u751f\u547d\u5468\u671f\u5ef6\u957f\u5230\u7a0b\u5e8f\u7ed3\u675f\uff0c\u503c\u5728\u591a\u6b21\u8c03\u7528\u95f4\u4fdd\u6301\u3002 \u5168\u5c40\u53d8\u91cf/\u51fd\u6570 \u9650\u5236\u4f5c\u7528\u57df\u4e3a\u5f53\u524d\u6587\u4ef6\uff0c\u907f\u514d\u547d\u540d\u51b2\u7a81\u3002 \u7c7b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf \u5c5e\u4e8e\u7c7b\u800c\u975e\u5bf9\u8c61\uff0c\u6240\u6709\u5bf9\u8c61\u5171\u4eab\uff0c\u9700\u5728\u7c7b\u5916\u521d\u59cb\u5316\u3002 \u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570 \u5c5e\u4e8e\u7c7b\u800c\u975e\u5bf9\u8c61\uff0c\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002 static \u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u5173\u952e\u5b57\uff0c\u5e7f\u6cdb\u7528\u4e8e\u63a7\u5236\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u3001\u4f5c\u7528\u57df\u4ee5\u53ca\u7c7b\u7684\u5171\u4eab\u6210\u5458\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#static_1","text":"static \u5173\u952e\u5b57\u7684\u5e95\u5c42\u5b9e\u73b0\u4f9d\u8d56\u4e8e\u7f16\u8bd1\u5668\u7684\u5904\u7406\u65b9\u5f0f\u3002\u5b83\u901a\u8fc7\u8c03\u6574\u53d8\u91cf\u7684\u5b58\u50a8\u4f4d\u7f6e\u3001\u4f5c\u7528\u57df\u548c\u751f\u547d\u5468\u671f\u6765\u5b9e\u73b0\u5176\u529f\u80fd\u3002\u4ee5\u4e0b\u662f static \u7684\u5e95\u5c42\u539f\u7406\u5206\u6790\uff1a","title":"static \u7684\u5e95\u5c42\u539f\u7406"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1_2","text":"","title":"1. \u9759\u6001\u5c40\u90e8\u53d8\u91cf"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_5","text":"\u751f\u547d\u5468\u671f\uff1a\u4ece\u7a0b\u5e8f\u5f00\u59cb\u5230\u7a0b\u5e8f\u7ed3\u675f\uff08\u5168\u5c40\u751f\u547d\u5468\u671f\uff09\u3002 \u4f5c\u7528\u57df\uff1a\u4ec5\u5728\u58f0\u660e\u5b83\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u4e2d\u53ef\u89c1\uff08\u5c40\u90e8\u4f5c\u7528\u57df\uff09\u3002 \u521d\u59cb\u5316\uff1a\u53ea\u4f1a\u5728\u7b2c\u4e00\u6b21\u6267\u884c\u5230\u8be5\u53d8\u91cf\u65f6\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u540e\u7eed\u8c03\u7528\u4fdd\u7559\u4e0a\u4e00\u6b21\u7684\u503c\u3002","title":"\u7279\u70b9\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_6","text":"\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5b58\u50a8\u5728 \u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a \uff08\u901a\u5e38\u662f .data \u6216 .bss \u6bb5\uff09\u3002 \u7f16\u8bd1\u5668\u4f1a\u5728\u51fd\u6570\u5916\u90e8\u4e3a\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff0c\u5e76\u5728\u51fd\u6570\u4e2d\u63d2\u5165\u4ee3\u7801\u4ee5\u786e\u4fdd\u53d8\u91cf\u53ea\u521d\u59cb\u5316\u4e00\u6b21\u3002","title":"\u5e95\u5c42\u5b9e\u73b0\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_7","text":"void func () { static int count = 0 ; // \u9759\u6001\u5c40\u90e8\u53d8\u91cf count ++ ; cout << count << endl ; } \u7f16\u8bd1\u5668\u5904\u7406\u540e\u7684\u4f2a\u4ee3\u7801 \uff1a int count = 0 ; // \u5728\u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a\u5206\u914d\u5185\u5b58 bool initialized = false ; void func () { if ( ! initialized ) { count = 0 ; // \u521d\u59cb\u5316 initialized = true ; } count ++ ; cout << count << endl ; }","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2_2","text":"","title":"2. \u9759\u6001\u5168\u5c40\u53d8\u91cf"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_8","text":"\u751f\u547d\u5468\u671f\uff1a\u4ece\u7a0b\u5e8f\u5f00\u59cb\u5230\u7a0b\u5e8f\u7ed3\u675f\u3002 \u4f5c\u7528\u57df\uff1a\u4ec5\u5728\u58f0\u660e\u5b83\u7684\u6587\u4ef6\u4e2d\u53ef\u89c1\uff08\u5185\u90e8\u94fe\u63a5\uff09\u3002","title":"\u7279\u70b9\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_9","text":"\u9759\u6001\u5168\u5c40\u53d8\u91cf\u5b58\u50a8\u5728 \u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a \u3002 \u7f16\u8bd1\u5668\u4f1a\u5c06\u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u7b26\u53f7\uff08\u540d\u79f0\uff09\u9650\u5236\u4e3a\u5f53\u524d\u6587\u4ef6\u7684\u4f5c\u7528\u57df\uff0c\u907f\u514d\u4e0e\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u540c\u540d\u53d8\u91cf\u51b2\u7a81\u3002","title":"\u5e95\u5c42\u5b9e\u73b0\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_10","text":"static int globalVar = 10 ; // \u9759\u6001\u5168\u5c40\u53d8\u91cf \u7f16\u8bd1\u5668\u5904\u7406 \uff1a - \u9759\u6001\u5168\u5c40\u53d8\u91cf\u7684\u7b26\u53f7\u540d\u79f0\u4f1a\u88ab\u7f16\u8bd1\u5668\u4fee\u6539\u4e3a\u6587\u4ef6\u79c1\u6709\u7684\u7b26\u53f7\uff0c\u4f8b\u5982 _file1_globalVar \u3002 - \u94fe\u63a5\u5668\u4e0d\u4f1a\u5c06\u8be5\u7b26\u53f7\u66b4\u9732\u7ed9\u5176\u4ed6\u6587\u4ef6\u3002","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#3_2","text":"","title":"3. \u9759\u6001\u6210\u5458\u53d8\u91cf"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_11","text":"\u5c5e\u4e8e\u7c7b\uff0c\u800c\u4e0d\u662f\u67d0\u4e2a\u5177\u4f53\u5bf9\u8c61\u3002 \u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002 \u9759\u6001\u6210\u5458\u53d8\u91cf\u5728\u7a0b\u5e8f\u5f00\u59cb\u65f6\u5206\u914d\u5185\u5b58\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u91ca\u653e\u3002","title":"\u7279\u70b9\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_12","text":"\u9759\u6001\u6210\u5458\u53d8\u91cf\u5b58\u50a8\u5728 \u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a \u3002 \u7f16\u8bd1\u5668\u4f1a\u4e3a\u9759\u6001\u6210\u5458\u53d8\u91cf\u5206\u914d\u72ec\u7acb\u7684\u5185\u5b58\uff0c\u5e76\u5728\u7c7b\u5916\u90e8\u8fdb\u884c\u521d\u59cb\u5316\u3002","title":"\u5e95\u5c42\u5b9e\u73b0\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_13","text":"class MyClass { public : static int count ; // \u9759\u6001\u6210\u5458\u53d8\u91cf }; int MyClass :: count = 0 ; // \u9759\u6001\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316 \u7f16\u8bd1\u5668\u5904\u7406 \uff1a - \u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u5185\u5b58\u5206\u914d\u4e0e\u666e\u901a\u5168\u5c40\u53d8\u91cf\u7c7b\u4f3c\u3002 - \u7f16\u8bd1\u5668\u4f1a\u5728\u7c7b\u5916\u751f\u6210\u4e00\u4e2a\u5168\u5c40\u7b26\u53f7\uff0c\u4f8b\u5982 _MyClass_count \uff0c\u7528\u4e8e\u5b58\u50a8\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#4_2","text":"","title":"4. \u9759\u6001\u6210\u5458\u51fd\u6570"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_14","text":"\u9759\u6001\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u7c7b\uff0c\u800c\u4e0d\u662f\u67d0\u4e2a\u5177\u4f53\u5bf9\u8c61\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u6216\u6210\u5458\u51fd\u6570\u3002","title":"\u7279\u70b9\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_15","text":"\u9759\u6001\u6210\u5458\u51fd\u6570\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5168\u5c40\u51fd\u6570\uff0c\u4f46\u5b83\u7684\u4f5c\u7528\u57df\u88ab\u9650\u5236\u5728\u7c7b\u4e2d\u3002 \u7f16\u8bd1\u5668\u4e0d\u4f1a\u4e3a\u9759\u6001\u6210\u5458\u51fd\u6570\u9690\u5f0f\u4f20\u9012 this \u6307\u9488\u3002","title":"\u5e95\u5c42\u5b9e\u73b0\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_16","text":"class MyClass { public : static void display () { cout << \"Static function\" << endl ; } }; \u7f16\u8bd1\u5668\u5904\u7406 \uff1a - \u9759\u6001\u6210\u5458\u51fd\u6570\u4f1a\u88ab\u7f16\u8bd1\u4e3a\u666e\u901a\u7684\u5168\u5c40\u51fd\u6570\uff0c\u4f8b\u5982 _MyClass_display \u3002 - \u8c03\u7528\u65f6\u901a\u8fc7\u7c7b\u540d\u9650\u5b9a\u7b26\u8bbf\u95ee\uff0c\u4f8b\u5982 MyClass::display() \u3002","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#5_2","text":"","title":"5. \u591a\u6587\u4ef6\u4e2d\u7684\u9759\u6001\u53d8\u91cf\u548c\u51fd\u6570"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_17","text":"\u9759\u6001\u53d8\u91cf\u548c\u51fd\u6570\u7684\u4f5c\u7528\u57df\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6587\u4ef6\u4e2d\uff08\u5185\u90e8\u94fe\u63a5\uff09\u3002 \u4e0d\u4f1a\u4e0e\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u540c\u540d\u53d8\u91cf\u6216\u51fd\u6570\u51b2\u7a81\u3002","title":"\u7279\u70b9\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_18","text":"\u7f16\u8bd1\u5668\u4f1a\u5c06\u9759\u6001\u53d8\u91cf\u6216\u51fd\u6570\u7684\u7b26\u53f7\u540d\u79f0\u4fee\u6539\u4e3a\u6587\u4ef6\u79c1\u6709\u7684\u7b26\u53f7\u3002 \u94fe\u63a5\u5668\u4e0d\u4f1a\u5c06\u8fd9\u4e9b\u7b26\u53f7\u66b4\u9732\u7ed9\u5176\u4ed6\u6587\u4ef6\u3002","title":"\u5e95\u5c42\u5b9e\u73b0\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_19","text":"// file1.cpp static int var = 10 ; // \u9759\u6001\u5168\u5c40\u53d8\u91cf // file2.cpp static int var = 20 ; // \u9759\u6001\u5168\u5c40\u53d8\u91cf \u7f16\u8bd1\u5668\u5904\u7406 \uff1a - file1.cpp \u4e2d\u7684 var \u4f1a\u88ab\u7f16\u8bd1\u4e3a _file1_var \u3002 - file2.cpp \u4e2d\u7684 var \u4f1a\u88ab\u7f16\u8bd1\u4e3a _file2_var \u3002 - \u4e24\u8005\u4e92\u4e0d\u51b2\u7a81\u3002","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#6","text":"\u6839\u636e static \u7684\u4f7f\u7528\u573a\u666f\uff0c\u53d8\u91cf\u4f1a\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u5185\u5b58\u533a\u57df\uff1a | \u4f7f\u7528\u573a\u666f | \u5b58\u50a8\u4f4d\u7f6e | |----------------------|-----------------------| | \u9759\u6001\u5c40\u90e8\u53d8\u91cf | \u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a | | \u9759\u6001\u5168\u5c40\u53d8\u91cf | \u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a | | \u9759\u6001\u6210\u5458\u53d8\u91cf | \u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a | | \u9759\u6001\u6210\u5458\u51fd\u6570 | \u4ee3\u7801\u6bb5\uff08text segment\uff09|","title":"6. \u5b58\u50a8\u4f4d\u7f6e"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#7","text":"","title":"7. \u4f18\u70b9\u4e0e\u9650\u5236"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_20","text":"\u63d0\u9ad8\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u548c\u4f5c\u7528\u57df\u63a7\u5236\u3002 \u907f\u514d\u547d\u540d\u51b2\u7a81\uff08\u9759\u6001\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u51fd\u6570\uff09\u3002 \u63d0\u4f9b\u7c7b\u7ea7\u522b\u7684\u5171\u4eab\u6570\u636e\uff08\u9759\u6001\u6210\u5458\u53d8\u91cf\uff09\u3002","title":"\u4f18\u70b9\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_21","text":"\u9759\u6001\u53d8\u91cf\u4f1a\u5360\u7528\u5168\u5c40\u5185\u5b58\uff0c\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u5360\u7528\u589e\u52a0\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u65e0\u6cd5\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u3002","title":"\u9650\u5236\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_22","text":"static \u7684\u5e95\u5c42\u5b9e\u73b0\u4f9d\u8d56\u4e8e\u7f16\u8bd1\u5668\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u901a\u8fc7\u8c03\u6574\u53d8\u91cf\u7684\u5b58\u50a8\u4f4d\u7f6e\u548c\u7b26\u53f7\u94fe\u63a5\u5c5e\u6027\u6765\u5b9e\u73b0\u5176\u529f\u80fd\u3002 \u9759\u6001\u53d8\u91cf\u548c\u51fd\u6570\u901a\u5e38\u5b58\u50a8\u5728\u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a\uff0c\u5177\u6709\u5168\u5c40\u751f\u547d\u5468\u671f\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u548c\u53d8\u91cf\u4e3a\u7c7b\u63d0\u4f9b\u4e86\u5171\u4eab\u6570\u636e\u548c\u884c\u4e3a\u7684\u80fd\u529b\uff0c\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u91cd\u8981\u7279\u6027\u4e4b\u4e00\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#define-const","text":"#define \u548c const \u90fd\u53ef\u4ee5\u7528\u6765\u5b9a\u4e49\u5e38\u91cf\uff0c\u4f46\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\u548c\u4f7f\u7528\u573a\u666f\u6709\u5f88\u5927\u4e0d\u540c\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u4e3b\u8981\u533a\u522b\uff1a","title":"#define \u548c const \u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1_3","text":"#define \uff1a \u662f\u4e00\u4e2a \u9884\u5904\u7406\u6307\u4ee4 \uff0c\u7528\u4e8e\u5b9a\u4e49\u5b8f\u3002 \u5728\u7f16\u8bd1\u4e4b\u524d\u7531\u9884\u5904\u7406\u5668\u76f4\u63a5\u66ff\u6362\uff0c\u4e0d\u5360\u7528\u5185\u5b58\u3002 \u8bed\u6cd5\uff1a #define PI 3.14 const \uff1a \u662f\u4e00\u4e2a \u5173\u952e\u5b57 \uff0c\u7528\u4e8e\u5b9a\u4e49\u5e38\u91cf\u53d8\u91cf\u3002 \u5728\u7f16\u8bd1\u65f6\u5206\u914d\u5185\u5b58\uff0c\u5177\u6709\u7c7b\u578b\u68c0\u67e5\u3002 \u8bed\u6cd5\uff1a const double PI = 3.14 ;","title":"1. \u5b9a\u4e49\u65b9\u5f0f"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2_3","text":"#define \uff1a \u6ca1\u6709\u7c7b\u578b\u68c0\u67e5\uff0c\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u6587\u672c\u66ff\u6362\u3002 \u5982\u679c\u4f7f\u7528\u9519\u8bef\u7684\u7c7b\u578b\uff0c\u53ef\u80fd\u5bfc\u81f4\u96be\u4ee5\u53d1\u73b0\u7684\u9519\u8bef\u3002 \u793a\u4f8b\uff1a #define VALUE 10 int x = VALUE + \"abc\" ; // \u7f16\u8bd1\u5668\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f46\u8fd0\u884c\u65f6\u53ef\u80fd\u51fa\u9519 const \uff1a \u6709\u4e25\u683c\u7684\u7c7b\u578b\u68c0\u67e5\uff0c\u80fd\u591f\u5728\u7f16\u8bd1\u65f6\u53d1\u73b0\u9519\u8bef\u3002 \u793a\u4f8b\uff1a const int VALUE = 10 ; int x = VALUE + \"abc\" ; // \u7f16\u8bd1\u5668\u62a5\u9519\uff1a\u7c7b\u578b\u4e0d\u5339\u914d","title":"2. \u7c7b\u578b\u68c0\u67e5"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#3_3","text":"#define \uff1a \u4e0d\u5360\u7528\u5185\u5b58\uff0c\u9884\u5904\u7406\u9636\u6bb5\u76f4\u63a5\u66ff\u6362\u4e3a\u5bf9\u5e94\u7684\u503c\u3002 \u793a\u4f8b\uff1a #define VALUE 10 int x = VALUE ; // \u7f16\u8bd1\u540e\u7b49\u4ef7\u4e8e int x = 10; const \uff1a \u5e38\u91cf\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u5206\u914d\u7a7a\u95f4\u3002 \u793a\u4f8b\uff1a const int VALUE = 10 ; int x = VALUE ; // VALUE \u662f\u4e00\u4e2a\u5e38\u91cf\u53d8\u91cf\uff0c\u5b58\u50a8\u5728\u5185\u5b58\u4e2d","title":"3. \u5185\u5b58\u5206\u914d"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#4_3","text":"#define \uff1a \u56e0\u4e3a\u662f\u6587\u672c\u66ff\u6362\uff0c\u8c03\u8bd5\u65f6\u65e0\u6cd5\u770b\u5230\u5b8f\u7684\u5177\u4f53\u503c\u3002 \u793a\u4f8b\uff1a #define VALUE 10 cout << VALUE ; // \u8c03\u8bd5\u65f6\u65e0\u6cd5\u76f4\u63a5\u67e5\u770b VALUE \u7684\u503c const \uff1a \u5e38\u91cf\u53d8\u91cf\u6709\u5177\u4f53\u7684\u5185\u5b58\u5730\u5740\uff0c\u53ef\u4ee5\u5728\u8c03\u8bd5\u65f6\u67e5\u770b\u5176\u503c\u3002 \u793a\u4f8b\uff1a const int VALUE = 10 ; cout << VALUE ; // \u8c03\u8bd5\u65f6\u53ef\u4ee5\u67e5\u770b VALUE \u7684\u503c","title":"4. \u8c03\u8bd5\u4fe1\u606f"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#5_3","text":"#define \uff1a \u6ca1\u6709\u4f5c\u7528\u57df\u9650\u5236\uff0c\u5b8f\u5728\u6574\u4e2a\u6587\u4ef6\u4e2d\u6709\u6548\uff0c\u53ef\u80fd\u5bfc\u81f4\u547d\u540d\u51b2\u7a81\u3002 \u793a\u4f8b\uff1a #define VALUE 10 const \uff1a \u9075\u5faa C++ \u7684\u4f5c\u7528\u57df\u89c4\u5219\uff0c\u5e38\u91cf\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53d7\u9650\u4e8e\u5176\u5b9a\u4e49\u7684\u4f4d\u7f6e\u3002 \u793a\u4f8b\uff1a const int VALUE = 10 ; // \u4ec5\u5728\u5f53\u524d\u4f5c\u7528\u57df\u5185\u6709\u6548","title":"5. \u4f5c\u7528\u57df"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#6_1","text":"#define \uff1a \u5bb9\u6613\u5f15\u5165\u96be\u4ee5\u53d1\u73b0\u7684\u9519\u8bef\uff0c\u5c24\u5176\u662f\u590d\u6742\u7684\u5b8f\u5b9a\u4e49\u3002 \u793a\u4f8b\uff1a #define SQUARE(x) x * x int result = SQUARE ( 1 + 2 ); // \u5b9e\u9645\u66ff\u6362\u4e3a 1 + 2 * 1 + 2\uff0c\u7ed3\u679c\u4e3a 5 const \uff1a \u66f4\u5b89\u5168\uff0c\u652f\u6301\u7c7b\u578b\u68c0\u67e5\uff0c\u907f\u514d\u4e86\u5b8f\u66ff\u6362\u5e26\u6765\u7684\u95ee\u9898\u3002 \u793a\u4f8b\uff1a const int SQUARE ( int x ) { return x * x ; } int result = SQUARE ( 1 + 2 ); // \u7ed3\u679c\u4e3a 9","title":"6. \u53ef\u8bfb\u6027\u548c\u5b89\u5168\u6027"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#7_1","text":"#define \uff1a \u7528\u4e8e\u5b9a\u4e49\u7b80\u5355\u7684\u5e38\u91cf\u6216\u5b8f\uff0c\u5c24\u5176\u662f\u9700\u8981\u8de8\u6587\u4ef6\u5171\u4eab\u7684\u5e38\u91cf\u3002 \u793a\u4f8b\uff1a #define MAX 100 const \uff1a \u7528\u4e8e\u5b9a\u4e49\u7c7b\u578b\u5b89\u5168\u7684\u5e38\u91cf\uff0c\u63a8\u8350\u5728 C++ \u4e2d\u4f18\u5148\u4f7f\u7528\u3002 \u793a\u4f8b\uff1a const int MAX = 100 ;","title":"7. \u9002\u7528\u573a\u666f"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_23","text":"\u7279\u6027 #define const \u5b9a\u4e49\u65b9\u5f0f \u9884\u5904\u7406\u6307\u4ee4\uff0c\u6587\u672c\u66ff\u6362 \u5173\u952e\u5b57\uff0c\u5b9a\u4e49\u5e38\u91cf\u53d8\u91cf \u7c7b\u578b\u68c0\u67e5 \u65e0\u7c7b\u578b\u68c0\u67e5 \u6709\u4e25\u683c\u7684\u7c7b\u578b\u68c0\u67e5 \u5185\u5b58\u5206\u914d \u4e0d\u5360\u7528\u5185\u5b58 \u5360\u7528\u5185\u5b58 \u8c03\u8bd5\u4fe1\u606f \u65e0\u6cd5\u8c03\u8bd5\u5b8f\u7684\u503c \u53ef\u4ee5\u8c03\u8bd5\u5e38\u91cf\u7684\u503c \u4f5c\u7528\u57df \u5168\u5c40\u6709\u6548 \u9075\u5faa\u4f5c\u7528\u57df\u89c4\u5219 \u5b89\u5168\u6027 \u5bb9\u6613\u5f15\u5165\u9519\u8bef \u66f4\u5b89\u5168\uff0c\u63a8\u8350\u4f7f\u7528 \u5728 C++ \u4e2d\uff0c\u5efa\u8bae\u4f18\u5148\u4f7f\u7528 const \uff0c\u56e0\u4e3a\u5b83\u66f4\u5b89\u5168\u3001\u53ef\u8bfb\u6027\u66f4\u9ad8\uff0c\u5e76\u4e14\u652f\u6301\u7c7b\u578b\u68c0\u67e5\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_24","text":"\u9759\u6001\u94fe\u63a5\u548c\u52a8\u6001\u94fe\u63a5\u662f\u7a0b\u5e8f\u5728\u7f16\u8bd1\u548c\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4e0e\u5e93\u6587\u4ef6\u5173\u8054\u7684\u4e24\u79cd\u65b9\u5f0f\u3002\u5b83\u4eec\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u94fe\u63a5\u7684\u65f6\u95f4\u3001\u65b9\u5f0f\u4ee5\u53ca\u7a0b\u5e8f\u7684\u8fd0\u884c\u673a\u5236\u3002","title":"\u9759\u6001\u94fe\u63a5\u548c\u52a8\u6001\u94fe\u63a5\u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1_4","text":"","title":"1. \u9759\u6001\u94fe\u63a5"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_25","text":"\u9759\u6001\u94fe\u63a5\u662f\u5728 \u7f16\u8bd1\u9636\u6bb5 \u5c06\u7a0b\u5e8f\u6240\u9700\u7684\u5e93\u4ee3\u7801\u76f4\u63a5\u5d4c\u5165\u5230\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002 \u94fe\u63a5\u5b8c\u6210\u540e\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u4e0d\u518d\u4f9d\u8d56\u5916\u90e8\u5e93\u3002","title":"\u5b9a\u4e49\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_26","text":"\u94fe\u63a5\u65f6\u95f4 \uff1a \u5728\u7f16\u8bd1\u65f6\u5b8c\u6210\u94fe\u63a5\u3002 \u53ef\u6267\u884c\u6587\u4ef6\u5927\u5c0f \uff1a \u53ef\u6267\u884c\u6587\u4ef6\u5305\u542b\u6240\u6709\u4f9d\u8d56\u7684\u5e93\u4ee3\u7801\uff0c\u56e0\u6b64\u6587\u4ef6\u8f83\u5927\u3002 \u8fd0\u884c\u65f6\u4f9d\u8d56 \uff1a \u4e0d\u9700\u8981\u4f9d\u8d56\u5916\u90e8\u5e93\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u3002 \u6027\u80fd \uff1a \u7a0b\u5e8f\u542f\u52a8\u901f\u5ea6\u8f83\u5feb\uff0c\u56e0\u4e3a\u6240\u6709\u4ee3\u7801\u5df2\u7ecf\u5d4c\u5165\u5230\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002 \u66f4\u65b0\u5e93\u7684\u5f71\u54cd \uff1a \u5982\u679c\u5e93\u6587\u4ef6\u66f4\u65b0\uff0c\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u7a0b\u5e8f\u4ee5\u5305\u542b\u65b0\u7684\u5e93\u4ee3\u7801\u3002","title":"\u7279\u70b9\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_27","text":"g++ main.cpp -o program -static - \u751f\u6210\u7684 program \u662f\u4e00\u4e2a\u9759\u6001\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5305\u542b\u6240\u6709\u4f9d\u8d56\u7684\u5e93\u4ee3\u7801\u3002","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2_4","text":"","title":"2. \u52a8\u6001\u94fe\u63a5"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_28","text":"\u52a8\u6001\u94fe\u63a5\u662f\u5728 \u8fd0\u884c\u65f6 \u5c06\u7a0b\u5e8f\u6240\u9700\u7684\u5e93\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5e76\u4e0e\u7a0b\u5e8f\u5173\u8054\u3002 \u53ef\u6267\u884c\u6587\u4ef6\u672c\u8eab\u4e0d\u5305\u542b\u5e93\u4ee3\u7801\uff0c\u800c\u662f\u4f9d\u8d56\u5916\u90e8\u52a8\u6001\u5e93\uff08\u5982 .so \u6587\u4ef6\uff09\u3002","title":"\u5b9a\u4e49\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_29","text":"\u94fe\u63a5\u65f6\u95f4 \uff1a \u5728\u8fd0\u884c\u65f6\u5b8c\u6210\u94fe\u63a5\u3002 \u53ef\u6267\u884c\u6587\u4ef6\u5927\u5c0f \uff1a \u53ef\u6267\u884c\u6587\u4ef6\u53ea\u5305\u542b\u5bf9\u52a8\u6001\u5e93\u7684\u5f15\u7528\uff0c\u56e0\u6b64\u6587\u4ef6\u8f83\u5c0f\u3002 \u8fd0\u884c\u65f6\u4f9d\u8d56 \uff1a \u7a0b\u5e8f\u8fd0\u884c\u65f6\u9700\u8981\u4f9d\u8d56\u5916\u90e8\u52a8\u6001\u5e93\uff0c\u5982\u679c\u5e93\u6587\u4ef6\u7f3a\u5931\u6216\u7248\u672c\u4e0d\u5339\u914d\uff0c\u7a0b\u5e8f\u53ef\u80fd\u65e0\u6cd5\u8fd0\u884c\u3002 \u6027\u80fd \uff1a \u7a0b\u5e8f\u542f\u52a8\u65f6\u9700\u8981\u52a0\u8f7d\u52a8\u6001\u5e93\uff0c\u542f\u52a8\u901f\u5ea6\u53ef\u80fd\u7a0d\u6162\u3002 \u66f4\u65b0\u5e93\u7684\u5f71\u54cd \uff1a \u5982\u679c\u52a8\u6001\u5e93\u66f4\u65b0\uff0c\u7a0b\u5e8f\u65e0\u9700\u91cd\u65b0\u7f16\u8bd1\u5373\u53ef\u4f7f\u7528\u65b0\u7684\u5e93\u4ee3\u7801\u3002","title":"\u7279\u70b9\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_30","text":"g++ main.cpp -o program - \u751f\u6210\u7684 program \u662f\u4e00\u4e2a\u52a8\u6001\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd0\u884c\u65f6\u4f9d\u8d56\u52a8\u6001\u5e93\uff08\u5982 libstdc++.so \uff09\u3002","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#3_4","text":"\u7279\u6027 \u9759\u6001\u94fe\u63a5 \u52a8\u6001\u94fe\u63a5 \u94fe\u63a5\u65f6\u95f4 \u7f16\u8bd1\u65f6\u5b8c\u6210 \u8fd0\u884c\u65f6\u5b8c\u6210 \u53ef\u6267\u884c\u6587\u4ef6\u5927\u5c0f \u8f83\u5927\uff08\u5305\u542b\u5e93\u4ee3\u7801\uff09 \u8f83\u5c0f\uff08\u53ea\u5305\u542b\u5e93\u5f15\u7528\uff09 \u8fd0\u884c\u65f6\u4f9d\u8d56 \u65e0\u9700\u4f9d\u8d56\u5916\u90e8\u5e93 \u9700\u8981\u4f9d\u8d56\u5916\u90e8\u52a8\u6001\u5e93 \u542f\u52a8\u901f\u5ea6 \u8f83\u5feb \u8f83\u6162\uff08\u9700\u8981\u52a0\u8f7d\u52a8\u6001\u5e93\uff09 \u5e93\u66f4\u65b0\u5f71\u54cd \u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u7a0b\u5e8f \u65e0\u9700\u91cd\u65b0\u7f16\u8bd1\uff0c\u76f4\u63a5\u4f7f\u7528\u65b0\u5e93 \u5185\u5b58\u4f7f\u7528 \u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u6709\u4e00\u4efd\u5e93\u4ee3\u7801\uff0c\u5185\u5b58\u5360\u7528\u8f83\u9ad8 \u591a\u4e2a\u7a0b\u5e8f\u5171\u4eab\u52a8\u6001\u5e93\uff0c\u5185\u5b58\u5360\u7528\u8f83\u4f4e","title":"3. \u533a\u522b\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#4_4","text":"","title":"4. \u4f7f\u7528\u573a\u666f"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_31","text":"\u7a0b\u5e8f\u9700\u8981\u5728\u6ca1\u6709\u52a8\u6001\u5e93\u652f\u6301\u7684\u73af\u5883\u4e2d\u8fd0\u884c\uff08\u5982\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff09\u3002 \u7a0b\u5e8f\u9700\u8981\u5b8c\u5168\u72ec\u7acb\u8fd0\u884c\uff0c\u4e0d\u4f9d\u8d56\u5916\u90e8\u5e93\u3002","title":"\u9759\u6001\u94fe\u63a5\u9002\u7528\u573a\u666f\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_32","text":"\u7a0b\u5e8f\u9700\u8981\u9891\u7e41\u66f4\u65b0\u5e93\u4ee3\u7801\uff08\u5982\u4fee\u590d\u6f0f\u6d1e\u6216\u6dfb\u52a0\u529f\u80fd\uff09\u3002 \u591a\u4e2a\u7a0b\u5e8f\u9700\u8981\u5171\u4eab\u540c\u4e00\u4e2a\u5e93\uff0c\u51cf\u5c11\u5185\u5b58\u5360\u7528\u548c\u78c1\u76d8\u7a7a\u95f4\u3002","title":"\u52a8\u6001\u94fe\u63a5\u9002\u7528\u573a\u666f\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#5_4","text":"","title":"5. \u793a\u4f8b\u5bf9\u6bd4"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_33","text":"#include <iostream> using namespace std ; int main () { cout << \"Hello, Static Link!\" << endl ; return 0 ; } \u7f16\u8bd1\u547d\u4ee4\uff1a g++ main.cpp -o static_program -static \u751f\u6210\u7684 static_program \u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u4e0d\u4f9d\u8d56\u5916\u90e8\u52a8\u6001\u5e93\u3002","title":"\u9759\u6001\u94fe\u63a5\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_34","text":"#include <iostream> using namespace std ; int main () { cout << \"Hello, Dynamic Link!\" << endl ; return 0 ; } \u7f16\u8bd1\u547d\u4ee4\uff1a g++ main.cpp -o dynamic_program \u751f\u6210\u7684 dynamic_program \u5728\u8fd0\u884c\u65f6\u9700\u8981\u4f9d\u8d56\u52a8\u6001\u5e93\uff08\u5982 libstdc++.so \uff09\u3002","title":"\u52a8\u6001\u94fe\u63a5\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#6_2","text":"\u9759\u6001\u94fe\u63a5 \uff1a\u5c06\u5e93\u4ee3\u7801\u5d4c\u5165\u5230\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\uff0c\u751f\u6210\u7684\u7a0b\u5e8f\u72ec\u7acb\u8fd0\u884c\uff0c\u4f46\u6587\u4ef6\u8f83\u5927\u3002 \u52a8\u6001\u94fe\u63a5 \uff1a\u5728\u8fd0\u884c\u65f6\u52a0\u8f7d\u5e93\uff0c\u7a0b\u5e8f\u4f9d\u8d56\u5916\u90e8\u52a8\u6001\u5e93\uff0c\u6587\u4ef6\u8f83\u5c0f\uff0c\u66f4\u65b0\u7075\u6d3b\u3002 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u52a8\u6001\u94fe\u63a5\u66f4\u5e38\u7528\uff0c\u4f46\u5728\u67d0\u4e9b\u7279\u6b8a\u573a\u666f\uff08\u5982\u5d4c\u5165\u5f0f\u5f00\u53d1\uff09\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u9759\u6001\u94fe\u63a5\u3002 \u4e0b\u9762\u662f\u9759\u6001\u94fe\u63a5\u548c\u52a8\u6001\u94fe\u63a5\u7f16\u8bd1\u7684\u6587\u4ef6\u5927\u5c0f\u5bf9\u6bd4","title":"6. \u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_35","text":"\u5728 C++ \u4e2d\uff0c \u58f0\u660e \u548c \u5b9a\u4e49 \u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u6982\u5ff5\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u662f\u5426\u4e3a\u53d8\u91cf\u5206\u914d\u5185\u5b58\u3002","title":"\u53d8\u91cf\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1-declaration","text":"\u4f5c\u7528 \uff1a \u544a\u8bc9\u7f16\u8bd1\u5668\u53d8\u91cf\u7684\u540d\u79f0\u548c\u7c7b\u578b\uff0c\u4f46\u4e0d\u4e3a\u53d8\u91cf\u5206\u914d\u5185\u5b58\u3002 \u58f0\u660e\u901a\u5e38\u7528\u4e8e\u8ba9\u7f16\u8bd1\u5668\u77e5\u9053\u53d8\u91cf\u7684\u5b58\u5728\uff0c\u4ee5\u4fbf\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u4f7f\u7528\u3002 \u7279\u70b9 \uff1a \u4e0d\u5206\u914d\u5185\u5b58\u3002 \u53ef\u4ee5\u591a\u6b21\u58f0\u660e\u540c\u4e00\u4e2a\u53d8\u91cf\u3002 \u793a\u4f8b \uff1a extern int a ; // \u58f0\u660e\u53d8\u91cf a\uff0c\u8868\u793a\u5b83\u5728\u5176\u4ed6\u5730\u65b9\u5b9a\u4e49","title":"1. \u58f0\u660e\uff08Declaration\uff09"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2-definition","text":"\u4f5c\u7528 \uff1a \u4e3a\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff0c\u5e76\u53ef\u4ee5\u521d\u59cb\u5316\u53d8\u91cf\u3002 \u5b9a\u4e49\u662f\u53d8\u91cf\u7684\u5b9e\u9645\u5b9e\u73b0\u3002 \u7279\u70b9 \uff1a \u5206\u914d\u5185\u5b58\u3002 \u4e00\u4e2a\u53d8\u91cf\u53ea\u80fd\u5b9a\u4e49\u4e00\u6b21\u3002 \u793a\u4f8b \uff1a int a = 10 ; // \u5b9a\u4e49\u53d8\u91cf a\uff0c\u5e76\u521d\u59cb\u5316\u4e3a 10","title":"2. \u5b9a\u4e49\uff08Definition\uff09"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#3_5","text":"\u58f0\u660e \u662f\u544a\u8bc9\u7f16\u8bd1\u5668\u53d8\u91cf\u7684\u5b58\u5728\uff0c\u800c \u5b9a\u4e49 \u662f\u4e3a\u53d8\u91cf\u5206\u914d\u5185\u5b58\u5e76\u521d\u59cb\u5316\uff08\u53ef\u9009\uff09\u3002 \u6240\u6709\u7684\u5b9a\u4e49\u540c\u65f6\u4e5f\u662f\u58f0\u660e\uff0c\u4f46\u58f0\u660e\u4e0d\u4e00\u5b9a\u662f\u5b9a\u4e49\u3002","title":"3. \u58f0\u660e\u548c\u5b9a\u4e49\u7684\u5173\u7cfb"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#4_5","text":"","title":"4. \u793a\u4f8b\u5bf9\u6bd4"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_36","text":"extern int a ; // \u58f0\u660e\u53d8\u91cf a\uff0c\u8868\u793a\u5b83\u5728\u5176\u4ed6\u5730\u65b9\u5b9a\u4e49","title":"\u58f0\u660e\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_37","text":"int a = 10 ; // \u5b9a\u4e49\u53d8\u91cf a\uff0c\u5e76\u5206\u914d\u5185\u5b58","title":"\u5b9a\u4e49\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_38","text":"// file1.cpp #include <iostream> using namespace std ; extern int a ; // \u58f0\u660e\u53d8\u91cf a int main () { cout << a << endl ; // \u4f7f\u7528\u53d8\u91cf a return 0 ; } // file2.cpp int a = 10 ; // \u5b9a\u4e49\u53d8\u91cf a","title":"\u5b8c\u6574\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#5_5","text":"\u58f0\u660e \uff1a \u7f16\u8bd1\u5668\u53ea\u4f1a\u8bb0\u5f55\u53d8\u91cf\u7684\u540d\u79f0\u548c\u7c7b\u578b\uff0c\u4e0d\u4f1a\u5206\u914d\u5185\u5b58\u3002 \u5b9a\u4e49 \uff1a \u7f16\u8bd1\u5668\u4f1a\u4e3a\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff0c\u5e76\u53ef\u80fd\u521d\u59cb\u5316\u53d8\u91cf\u3002","title":"5. \u7f16\u8bd1\u5668\u884c\u4e3a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#6_3","text":"\u7279\u6027 \u58f0\u660e\uff08Declaration\uff09 \u5b9a\u4e49\uff08Definition\uff09 \u4f5c\u7528 \u544a\u8bc9\u7f16\u8bd1\u5668\u53d8\u91cf\u7684\u5b58\u5728 \u4e3a\u53d8\u91cf\u5206\u914d\u5185\u5b58\u5e76\u521d\u59cb\u5316\uff08\u53ef\u9009\uff09 \u5185\u5b58\u5206\u914d \u4e0d\u5206\u914d\u5185\u5b58 \u5206\u914d\u5185\u5b58 \u6b21\u6570 \u53ef\u4ee5\u591a\u6b21\u58f0\u660e \u53ea\u80fd\u5b9a\u4e49\u4e00\u6b21 \u793a\u4f8b extern int a; int a = 10; \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u58f0\u660e\u901a\u5e38\u7528\u4e8e\u591a\u6587\u4ef6\u9879\u76ee\u4e2d\uff0c\u5b9a\u4e49\u5219\u662f\u53d8\u91cf\u7684\u5b9e\u9645\u5b9e\u73b0\u3002 \u4e0a\u9762\u7684\u7a0b\u5e8f\u4e3a\u4ec0\u4e48\u5728main\u51fd\u6570\u4e4b\u5916\u5b9a\u4e49\u7684\u53d8\u91cfa=10\u80fd\u5728main\u51fd\u6570\u4e2d\u4f7f\u7528 \u8fd9\u4e2a\u7a0b\u5e8f\u80fd\u591f\u5728 main \u51fd\u6570\u4e2d\u627e\u5230\u5e76\u4f7f\u7528 file2.cpp \u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf a \uff0c\u662f\u56e0\u4e3a C++ \u7684\u7f16\u8bd1\u548c\u94fe\u63a5\u8fc7\u7a0b \u4f1a\u5c06\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u89e3\u91ca\uff1a","title":"6. \u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1_5","text":"C++ \u7a0b\u5e8f\u7684\u6784\u5efa\u5206\u4e3a\u4e24\u4e2a\u4e3b\u8981\u9636\u6bb5\uff1a \u7f16\u8bd1 \u548c \u94fe\u63a5 \u3002","title":"1. \u7f16\u8bd1\u548c\u94fe\u63a5\u7684\u8fc7\u7a0b"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_39","text":"\u6bcf\u4e2a\u6e90\u6587\u4ef6\uff08\u5982 file1.cpp \u548c file2.cpp \uff09\u4f1a\u88ab\u5355\u72ec\u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6\uff08 .o \u6216 .obj \u6587\u4ef6\uff09\u3002 \u5728 file1.cpp \u4e2d\uff0c extern int a; \u544a\u8bc9\u7f16\u8bd1\u5668\uff1a\u53d8\u91cf a \u662f\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u4e3a a \u5206\u914d\u5185\u5b58\uff0c\u4f46\u4f1a\u8bb0\u5f55\u5b83\u7684\u5f15\u7528\u3002","title":"\u7f16\u8bd1\u9636\u6bb5"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_40","text":"\u94fe\u63a5\u5668\u4f1a\u5c06\u6240\u6709\u76ee\u6807\u6587\u4ef6\uff08\u5982 file1.o \u548c file2.o \uff09\u5408\u5e76\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u5728\u94fe\u63a5\u9636\u6bb5\uff0c\u94fe\u63a5\u5668\u4f1a\u627e\u5230 file2.cpp \u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf a \uff0c\u5e76\u5c06 file1.cpp \u4e2d\u5bf9 a \u7684\u5f15\u7528\u89e3\u6790\u4e3a file2.cpp \u4e2d\u7684\u5b9a\u4e49\u3002","title":"\u94fe\u63a5\u9636\u6bb5"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2-extern","text":"extern \u5173\u952e\u5b57\u7528\u4e8e\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u8868\u793a\u8be5\u53d8\u91cf\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u5b9a\u4e49\u3002 \u5728 file1.cpp \u4e2d\uff1a extern int a ; \u544a\u8bc9\u7f16\u8bd1\u5668\uff0c a \u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u4f46\u5b83\u7684\u5b9a\u4e49\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u3002 \u5728 file2.cpp \u4e2d\uff1a int a = 10 ; \u662f\u53d8\u91cf a \u7684\u5b9a\u4e49\uff0c\u5206\u914d\u4e86\u5185\u5b58\u5e76\u521d\u59cb\u5316\u4e3a 10 \u3002","title":"2. extern \u7684\u4f5c\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#3_6","text":"\u94fe\u63a5\u5668\u4f1a\u626b\u63cf\u6240\u6709\u76ee\u6807\u6587\u4ef6\uff0c\u627e\u5230 file2.o \u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf a \uff0c\u5e76\u5c06 file1.o \u4e2d\u5bf9 a \u7684\u5f15\u7528\u89e3\u6790\u4e3a file2.o \u4e2d\u7684\u5b9a\u4e49\u3002 \u8fd9\u6837\uff0c main \u51fd\u6570\u4e2d\u7684 cout << a; \u5c31\u80fd\u591f\u6b63\u786e\u8bbf\u95ee file2.cpp \u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf a \u3002","title":"3. \u94fe\u63a5\u5668\u5982\u4f55\u627e\u5230\u53d8\u91cf"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#4_6","text":"","title":"4. \u793a\u4f8b\u8fd0\u884c\u6d41\u7a0b"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_41","text":"// file1.cpp #include <iostream> using namespace std ; extern int a ; // \u58f0\u660e\u53d8\u91cf a int main () { cout << a << endl ; // \u4f7f\u7528\u53d8\u91cf a return 0 ; } // file2.cpp int a = 10 ; // \u5b9a\u4e49\u53d8\u91cf a","title":"\u4ee3\u7801"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_42","text":"g++ file1.cpp file2.cpp -o program","title":"\u7f16\u8bd1\u547d\u4ee4"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_43","text":"10","title":"\u8fd0\u884c\u7ed3\u679c"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#5-main","text":"\u7a0b\u5e8f\u7684\u6267\u884c\u786e\u5b9e\u4ece main \u51fd\u6570\u5f00\u59cb\u3002 \u5728 main \u51fd\u6570\u4e2d\uff0c cout << a; \u9700\u8981\u8bbf\u95ee\u53d8\u91cf a \u3002 \u7531\u4e8e a \u662f\u901a\u8fc7 extern \u58f0\u660e\u7684\uff0c\u7f16\u8bd1\u5668\u77e5\u9053\u5b83\u7684\u5b9a\u4e49\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\uff0c\u94fe\u63a5\u5668\u4f1a\u5728\u94fe\u63a5\u9636\u6bb5\u5c06 a \u7684\u5f15\u7528\u89e3\u6790\u4e3a file2.cpp \u4e2d\u7684\u5b9a\u4e49\u3002","title":"5. \u4e3a\u4ec0\u4e48\u7a0b\u5e8f\u4ece main \u51fd\u6570\u5f00\u59cb\uff1f"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#6_4","text":"extern \u7684\u4f5c\u7528 \uff1a\u544a\u8bc9\u7f16\u8bd1\u5668\u53d8\u91cf\u7684\u5b9a\u4e49\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u3002 \u7f16\u8bd1\u548c\u94fe\u63a5\u8fc7\u7a0b \uff1a \u7f16\u8bd1\u9636\u6bb5\uff1a\u6bcf\u4e2a\u6e90\u6587\u4ef6\u5355\u72ec\u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6\u3002 \u94fe\u63a5\u9636\u6bb5\uff1a\u94fe\u63a5\u5668\u5c06\u76ee\u6807\u6587\u4ef6\u5408\u5e76\uff0c\u89e3\u6790\u8de8\u6587\u4ef6\u7684\u53d8\u91cf\u548c\u51fd\u6570\u5f15\u7528\u3002 \u7a0b\u5e8f\u6267\u884c \uff1a\u7a0b\u5e8f\u4ece main \u51fd\u6570\u5f00\u59cb\uff0c\u8fd0\u884c\u65f6\u901a\u8fc7\u94fe\u63a5\u5668\u89e3\u6790\u7684\u5730\u5740\u8bbf\u95ee\u5168\u5c40\u53d8\u91cf a \u3002 \u56e0\u6b64\uff0c\u867d\u7136\u53d8\u91cf a \u7684\u5b9a\u4e49\u5728 file2.cpp \u4e2d\uff0c\u4f46\u901a\u8fc7 extern \u58f0\u660e\u548c\u94fe\u63a5\u5668\u7684\u5de5\u4f5c\uff0c main \u51fd\u6570\u80fd\u591f\u6b63\u786e\u627e\u5230\u5e76\u4f7f\u7528\u5b83\u3002","title":"6. \u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#extern","text":"\u5728 C++ \u4e2d\u901a\u8fc7 extern \u58f0\u660e\u548c\u8de8\u6587\u4ef6\u5b9a\u4e49\u53d8\u91cf\u7684\u65b9\u5f0f\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4e3b\u8981\u7528\u9014\uff1a","title":"\u4e3a\u4ec0\u4e48\u8981\u7528extern\u6765\u58f0\u660e\u53d8\u91cf"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1_6","text":"\u4f5c\u7528 \uff1a \u5728\u5927\u578b\u9879\u76ee\u4e2d\uff0c\u4ee3\u7801\u901a\u5e38\u4f1a\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u6587\u4ef6\uff08\u6a21\u5757\uff09\u4ee5\u4fbf\u4e8e\u7ba1\u7406\u548c\u7ef4\u62a4\u3002 \u4f7f\u7528 extern \u58f0\u660e\u53ef\u4ee5\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5f15\u7528\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u6216\u51fd\u6570\uff0c\u4ece\u800c\u5b9e\u73b0\u6a21\u5757\u4e4b\u95f4\u7684\u534f\u4f5c\u3002 \u793a\u4f8b \uff1a \u4e00\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u5168\u5c40\u914d\u7f6e\u53d8\u91cf\uff0c\u5176\u4ed6\u6587\u4ef6\u901a\u8fc7 extern \u58f0\u660e\u8bbf\u95ee\u8fd9\u4e9b\u914d\u7f6e\u3002 // config.cpp int maxConnections = 100 ; // \u5b9a\u4e49\u5168\u5c40\u53d8\u91cf // main.cpp extern int maxConnections ; // \u58f0\u660e\u5168\u5c40\u53d8\u91cf cout << maxConnections << endl ; // \u4f7f\u7528\u53d8\u91cf","title":"1. \u5b9e\u73b0\u591a\u6587\u4ef6\u534f\u4f5c"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2_5","text":"\u4f5c\u7528 \uff1a \u5728\u591a\u6587\u4ef6\u9879\u76ee\u4e2d\uff0c\u5982\u679c\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u540c\u540d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u4f1a\u5bfc\u81f4\u94fe\u63a5\u9519\u8bef\uff08\u91cd\u590d\u5b9a\u4e49\uff09\u3002 \u4f7f\u7528 extern \u58f0\u660e\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u5b9a\u4e49\uff0c\u53ea\u9700\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u53d8\u91cf\uff0c\u5176\u4ed6\u6587\u4ef6\u901a\u8fc7\u58f0\u660e\u5f15\u7528\u5373\u53ef\u3002 \u793a\u4f8b \uff1a // file1.cpp int globalVar = 10 ; // \u5b9a\u4e49\u53d8\u91cf // file2.cpp extern int globalVar ; // \u58f0\u660e\u53d8\u91cf","title":"2. \u907f\u514d\u91cd\u590d\u5b9a\u4e49"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#3_7","text":"\u4f5c\u7528 \uff1a \u5c06\u53d8\u91cf\u7684\u5b9a\u4e49\u548c\u4f7f\u7528\u5206\u79bb\uff0c\u53ef\u4ee5\u66f4\u6e05\u6670\u5730\u7ec4\u7ec7\u4ee3\u7801\u3002 \u4f8b\u5982\uff0c\u5c06\u5168\u5c40\u53d8\u91cf\u96c6\u4e2d\u5b9a\u4e49\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4fbf\u4e8e\u7edf\u4e00\u7ba1\u7406\u548c\u4fee\u6539\u3002 \u793a\u4f8b \uff1a // globals.cpp int maxUsers = 50 ; int timeout = 30 ; // globals.h extern int maxUsers ; extern int timeout ; // main.cpp #include \"globals.h\" cout << maxUsers << endl ;","title":"3. \u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#4_7","text":"\u4f5c\u7528 \uff1a \u5728\u6a21\u5757\u5316\u7f16\u7a0b\u4e2d\uff0c\u67d0\u4e9b\u6570\u636e\u9700\u8981\u5728\u591a\u4e2a\u6a21\u5757\u4e4b\u95f4\u5171\u4eab\u3002 \u4f7f\u7528 extern \u58f0\u660e\u53ef\u4ee5\u5b9e\u73b0\u8de8\u6a21\u5757\u7684\u6570\u636e\u5171\u4eab\uff0c\u800c\u65e0\u9700\u91cd\u590d\u5b9a\u4e49\u3002 \u793a\u4f8b \uff1a // module1.cpp int sharedData = 42 ; // \u5b9a\u4e49\u5171\u4eab\u6570\u636e // module2.cpp extern int sharedData ; // \u58f0\u660e\u5171\u4eab\u6570\u636e sharedData += 10 ; // \u4fee\u6539\u5171\u4eab\u6570\u636e","title":"4. \u652f\u6301\u8de8\u6a21\u5757\u5171\u4eab\u6570\u636e"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#5_6","text":"\u4f5c\u7528 \uff1a \u5982\u679c\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u540c\u540d\u53d8\u91cf\uff0c\u6bcf\u4e2a\u6587\u4ef6\u90fd\u4f1a\u5206\u914d\u4e00\u4efd\u5185\u5b58\u3002 \u4f7f\u7528 extern \u58f0\u660e\u53ef\u4ee5\u786e\u4fdd\u53d8\u91cf\u53ea\u5206\u914d\u4e00\u6b21\u5185\u5b58\uff0c\u51cf\u5c11\u5185\u5b58\u5360\u7528\u3002","title":"5. \u51cf\u5c11\u5185\u5b58\u5360\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#6_5","text":"\u4f5c\u7528 \uff1a \u5728\u9879\u76ee\u4e2d\uff0c\u67d0\u4e9b\u5168\u5c40\u914d\u7f6e\uff08\u5982\u6700\u5927\u8fde\u63a5\u6570\u3001\u8d85\u65f6\u65f6\u95f4\u7b49\uff09\u9700\u8981\u88ab\u591a\u4e2a\u6a21\u5757\u8bbf\u95ee\u3002 \u4f7f\u7528 extern \u58f0\u660e\u53ef\u4ee5\u96c6\u4e2d\u7ba1\u7406\u8fd9\u4e9b\u914d\u7f6e\uff0c\u907f\u514d\u91cd\u590d\u5b9a\u4e49\u3002 \u793a\u4f8b \uff1a // config.cpp const int MAX_CONNECTIONS = 100 ; // config.h extern const int MAX_CONNECTIONS ; // main.cpp #include \"config.h\" cout << MAX_CONNECTIONS << endl ;","title":"6. \u652f\u6301\u5168\u5c40\u914d\u7f6e\u548c\u5e38\u91cf\u7ba1\u7406"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#7_2","text":"\u4f5c\u7528 \uff1a \u4f7f\u7528 extern \u58f0\u660e\u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u5177\u53ef\u8bfb\u6027\uff0c\u56e0\u4e3a\u53d8\u91cf\u7684\u5b9a\u4e49\u548c\u4f7f\u7528\u88ab\u5206\u79bb\uff0c\u8bfb\u8005\u53ef\u4ee5\u66f4\u6e05\u695a\u5730\u4e86\u89e3\u53d8\u91cf\u7684\u6765\u6e90\u3002","title":"7. \u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_44","text":"\u901a\u8fc7 extern \u58f0\u660e\u548c\u8de8\u6587\u4ef6\u5b9a\u4e49\u53d8\u91cf\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee5\u4e0b\u76ee\u6807\uff1a 1. \u6a21\u5757\u5316\u7f16\u7a0b \uff1a\u652f\u6301\u591a\u6587\u4ef6\u534f\u4f5c\uff0c\u4fbf\u4e8e\u4ee3\u7801\u62c6\u5206\u548c\u7ba1\u7406\u3002 2. \u907f\u514d\u91cd\u590d\u5b9a\u4e49 \uff1a\u786e\u4fdd\u5168\u5c40\u53d8\u91cf\u53ea\u5b9a\u4e49\u4e00\u6b21\uff0c\u907f\u514d\u94fe\u63a5\u9519\u8bef\u3002 3. \u5171\u4eab\u6570\u636e \uff1a\u5728\u591a\u4e2a\u6a21\u5757\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002 4. \u96c6\u4e2d\u7ba1\u7406 \uff1a\u5c06\u5168\u5c40\u53d8\u91cf\u96c6\u4e2d\u5b9a\u4e49\uff0c\u4fbf\u4e8e\u7ef4\u62a4\u548c\u4fee\u6539\u3002 5. \u51cf\u5c11\u5185\u5b58\u5360\u7528 \uff1a\u786e\u4fdd\u5168\u5c40\u53d8\u91cf\u53ea\u5206\u914d\u4e00\u6b21\u5185\u5b58\u3002 \u8fd9\u79cd\u65b9\u5f0f\u5728\u5927\u578b\u9879\u76ee\u4e2d\u975e\u5e38\u5e38\u89c1\uff0c\u5c24\u5176\u662f\u5728\u9700\u8981\u8de8\u6a21\u5757\u5171\u4eab\u6570\u636e\u6216\u96c6\u4e2d\u7ba1\u7406\u5168\u5c40\u914d\u7f6e\u65f6\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#ifdefelseendif-ifndef","text":"\u8fd9\u4e9b\u662f C/C++ \u4e2d\u7684 \u9884\u5904\u7406\u6307\u4ee4 \uff0c\u7528\u4e8e\u6761\u4ef6\u7f16\u8bd1\u3002\u5b83\u4eec\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u6839\u636e\u6761\u4ef6\u9009\u62e9\u6027\u5730\u7f16\u8bd1\u4ee3\u7801\u3002","title":"#ifdef\u3001#else\u3001#endif \u548c #ifndef \u7684\u4f5c\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1-ifdef","text":"\u5168\u79f0 \uff1a if defined \u4f5c\u7528 \uff1a \u5224\u65ad\u67d0\u4e2a\u5b8f\u662f\u5426\u5df2\u7ecf\u88ab\u5b9a\u4e49\u3002 \u5982\u679c\u5b8f\u5df2\u5b9a\u4e49\uff0c\u5219\u7f16\u8bd1 #ifdef \u548c\u5bf9\u5e94\u7684 #else \u6216 #endif \u4e4b\u95f4\u7684\u4ee3\u7801\u3002 \u793a\u4f8b \uff1a #define DEBUG #ifdef DEBUG cout << \"Debug mode is enabled\" << endl ; #endif \u89e3\u91ca \uff1a \u5982\u679c\u5b8f DEBUG \u5df2\u5b9a\u4e49\uff0c\u5219\u7f16\u8bd1\u8f93\u51fa Debug mode is enabled \u3002","title":"1. #ifdef"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2-else","text":"\u4f5c\u7528 \uff1a \u4e0e #ifdef \u6216 #ifndef \u914d\u5408\u4f7f\u7528\u3002 \u5982\u679c\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5219\u7f16\u8bd1 #else \u540e\u7684\u4ee3\u7801\u3002 \u793a\u4f8b \uff1a #define DEBUG #ifdef DEBUG cout << \"Debug mode is enabled\" << endl ; #else cout << \"Debug mode is disabled\" << endl ; #endif \u89e3\u91ca \uff1a \u5982\u679c DEBUG \u5df2\u5b9a\u4e49\uff0c\u7f16\u8bd1\u8f93\u51fa Debug mode is enabled \u3002 \u5982\u679c DEBUG \u672a\u5b9a\u4e49\uff0c\u7f16\u8bd1\u8f93\u51fa Debug mode is disabled \u3002","title":"2. #else"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#3-endif","text":"\u4f5c\u7528 \uff1a \u7ed3\u675f\u4e00\u4e2a #ifdef \u6216 #ifndef \u5757\u3002 \u5fc5\u987b\u4e0e #ifdef \u6216 #ifndef \u914d\u5408\u4f7f\u7528\u3002 \u793a\u4f8b \uff1a #ifdef DEBUG cout << \"Debug mode is enabled\" << endl ; #endif \u89e3\u91ca \uff1a #endif \u7528\u4e8e\u7ed3\u675f #ifdef DEBUG \u5757\u3002","title":"3. #endif"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#4-ifndef","text":"\u5168\u79f0 \uff1a if not defined \u4f5c\u7528 \uff1a \u5224\u65ad\u67d0\u4e2a\u5b8f\u662f\u5426 \u672a\u88ab\u5b9a\u4e49 \u3002 \u5982\u679c\u5b8f\u672a\u5b9a\u4e49\uff0c\u5219\u7f16\u8bd1 #ifndef \u548c\u5bf9\u5e94\u7684 #else \u6216 #endif \u4e4b\u95f4\u7684\u4ee3\u7801\u3002 \u793a\u4f8b \uff1a #ifndef RELEASE cout << \"This is not a release build\" << endl ; #endif \u89e3\u91ca \uff1a \u5982\u679c\u5b8f RELEASE \u672a\u5b9a\u4e49\uff0c\u5219\u7f16\u8bd1\u8f93\u51fa This is not a release build \u3002","title":"4. #ifndef"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#5_7","text":"#define DEBUG #ifdef DEBUG cout << \"Debug mode is enabled\" << endl ; #else cout << \"Debug mode is disabled\" << endl ; #endif #ifndef RELEASE cout << \"This is not a release build\" << endl ; #endif \u89e3\u91ca \uff1a - \u5982\u679c DEBUG \u5df2\u5b9a\u4e49\uff0c\u8f93\u51fa Debug mode is enabled \u3002 - \u5982\u679c RELEASE \u672a\u5b9a\u4e49\uff0c\u8f93\u51fa This is not a release build \u3002","title":"5. \u7efc\u5408\u793a\u4f8b"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#6_6","text":"\u6761\u4ef6\u7f16\u8bd1 \uff1a \u6839\u636e\u5b8f\u5b9a\u4e49\u9009\u62e9\u6027\u5730\u7f16\u8bd1\u4ee3\u7801\u3002 \u793a\u4f8b\uff1a #ifdef WINDOWS cout << \"Running on Windows\" << endl ; #else cout << \"Running on other OS\" << endl ; #endif \u9632\u6b62\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b \uff1a \u4f7f\u7528 #ifndef \u548c #define \u9632\u6b62\u5934\u6587\u4ef6\u88ab\u591a\u6b21\u5305\u542b\u3002 \u793a\u4f8b\uff1a #ifndef MY_HEADER_H #define MY_HEADER_H // \u5934\u6587\u4ef6\u5185\u5bb9 #endif \u8c03\u8bd5\u548c\u53d1\u5e03\u6a21\u5f0f \uff1a \u6839\u636e\u5b8f\u5b9a\u4e49\u533a\u5206\u8c03\u8bd5\u6a21\u5f0f\u548c\u53d1\u5e03\u6a21\u5f0f\u3002 \u793a\u4f8b\uff1a #ifdef DEBUG cout << \"Debugging information\" << endl ; #endif","title":"6. \u5e38\u89c1\u7528\u9014"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_45","text":"\u6307\u4ee4 \u4f5c\u7528 #ifdef \u5224\u65ad\u5b8f\u662f\u5426\u5df2\u5b9a\u4e49\uff0c\u82e5\u5df2\u5b9a\u4e49\u5219\u7f16\u8bd1\u5bf9\u5e94\u4ee3\u7801\u5757\u3002 #else \u4e0e #ifdef \u6216 #ifndef \u914d\u5408\u4f7f\u7528\uff0c\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\u7f16\u8bd1\u5bf9\u5e94\u4ee3\u7801\u5757\u3002 #endif \u7ed3\u675f\u4e00\u4e2a #ifdef \u6216 #ifndef \u5757\u3002 #ifndef \u5224\u65ad\u5b8f\u662f\u5426\u672a\u5b9a\u4e49\uff0c\u82e5\u672a\u5b9a\u4e49\u5219\u7f16\u8bd1\u5bf9\u5e94\u4ee3\u7801\u5757\u3002 \u8fd9\u4e9b\u6307\u4ee4\u5728\u6761\u4ef6\u7f16\u8bd1\u3001\u9632\u6b62\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b\u4ee5\u53ca\u8c03\u8bd5\u548c\u53d1\u5e03\u6a21\u5f0f\u5207\u6362\u4e2d\u975e\u5e38\u5e38\u7528\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_46","text":"\u5728 C++ \u4e2d\uff0c \u7ed3\u6784\u4f53\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c \uff0c\u524d\u63d0\u662f\u4e24\u4e2a\u7ed3\u6784\u4f53\u7684\u7c7b\u578b\u76f8\u540c\u3002\u8d4b\u503c\u64cd\u4f5c\u4f1a\u5c06\u4e00\u4e2a\u7ed3\u6784\u4f53\u7684\u6240\u6709\u6210\u5458\u9010\u4e00\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e2d\u3002","title":"\u7ed3\u6784\u4f53\u662f\u5426\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1_7","text":"#include <iostream> using namespace std ; struct Point { int x ; int y ; }; int main () { Point p1 = { 10 , 20 }; // \u5b9a\u4e49\u5e76\u521d\u59cb\u5316\u7ed3\u6784\u4f53 p1 Point p2 ; // \u5b9a\u4e49\u7ed3\u6784\u4f53 p2 p2 = p1 ; // \u76f4\u63a5\u8d4b\u503c\uff0c\u5c06 p1 \u7684\u6210\u5458\u503c\u590d\u5236\u5230 p2 cout << \"p2.x = \" << p2 . x << \", p2.y = \" << p2 . y << endl ; // \u8f93\u51fa p2 \u7684\u6210\u5458\u503c return 0 ; }","title":"1. \u793a\u4f8b\u4ee3\u7801"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_47","text":"p2.x = 10, p2.y = 20","title":"\u8f93\u51fa\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2_6","text":"\u6210\u5458\u9010\u4e00\u590d\u5236 \uff1a \u7ed3\u6784\u4f53\u7684\u8d4b\u503c\u64cd\u4f5c\u4f1a\u5c06\u6e90\u7ed3\u6784\u4f53\u7684\u6bcf\u4e2a\u6210\u5458\u7684\u503c\u9010\u4e00\u590d\u5236\u5230\u76ee\u6807\u7ed3\u6784\u4f53\u4e2d\u3002 \u7c7b\u578b\u5fc5\u987b\u76f8\u540c \uff1a \u53ea\u6709\u76f8\u540c\u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u4e4b\u95f4\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\u3002 \u5982\u679c\u7ed3\u6784\u4f53\u7c7b\u578b\u4e0d\u540c\uff0c\u5219\u9700\u8981\u624b\u52a8\u8d4b\u503c\u6bcf\u4e2a\u6210\u5458\u3002","title":"2. \u8d4b\u503c\u7684\u89c4\u5219"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_48","text":"struct Point { int x ; int y ; }; struct Circle { int radius ; Point center ; }; int main () { Point p1 = { 10 , 20 }; Circle c1 ; // c1 = p1; // \u9519\u8bef\uff1a\u4e0d\u540c\u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u4e0d\u80fd\u76f4\u63a5\u8d4b\u503c return 0 ; }","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#3_8","text":"\u6d45\u62f7\u8d1d \uff1a \u7ed3\u6784\u4f53\u7684\u76f4\u63a5\u8d4b\u503c\u662f\u6d45\u62f7\u8d1d\u3002 \u5982\u679c\u7ed3\u6784\u4f53\u4e2d\u5305\u542b\u6307\u9488\u6210\u5458\uff0c\u8d4b\u503c\u64cd\u4f5c\u53ea\u4f1a\u590d\u5236\u6307\u9488\u7684\u5730\u5740\uff0c\u800c\u4e0d\u4f1a\u590d\u5236\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u3002","title":"3. \u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_49","text":"#include <iostream> using namespace std ; struct Data { int * ptr ; }; int main () { int a = 10 ; Data d1 = { & a }; Data d2 ; d2 = d1 ; // \u6d45\u62f7\u8d1d\uff0cd2.ptr \u548c d1.ptr \u6307\u5411\u540c\u4e00\u5757\u5185\u5b58 cout << * d1 . ptr << \", \" << * d2 . ptr << endl ; // \u8f93\u51fa\uff1a10, 10 * d2 . ptr = 20 ; // \u4fee\u6539 d2.ptr \u6307\u5411\u7684\u503c cout << * d1 . ptr << \", \" << * d2 . ptr << endl ; // \u8f93\u51fa\uff1a20, 20 return 0 ; }","title":"\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_50","text":"10, 10 20, 20 \u6df1\u62f7\u8d1d \uff1a \u5982\u679c\u9700\u8981\u6df1\u62f7\u8d1d\uff08\u590d\u5236\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\uff09\uff0c\u9700\u8981\u624b\u52a8\u5b9e\u73b0\u62f7\u8d1d\u903b\u8f91\u3002","title":"\u8f93\u51fa\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#4-c","text":"\u5728 C++ \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 \u6784\u9020\u51fd\u6570 \u3001 \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u548c \u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d \u6765\u63a7\u5236\u7ed3\u6784\u4f53\u7684\u8d4b\u503c\u884c\u4e3a\u3002","title":"4. C++ \u4e2d\u7684\u6539\u8fdb"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_51","text":"#include <iostream> using namespace std ; struct Data { int * ptr ; // \u6784\u9020\u51fd\u6570 Data ( int value ) { ptr = new int ( value ); } // \u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08\u6df1\u62f7\u8d1d\uff09 Data ( const Data & other ) { ptr = new int ( * other . ptr ); } // \u91cd\u8f7d\u8d4b\u503c\u8fd0\u7b97\u7b26\uff08\u6df1\u62f7\u8d1d\uff09 Data & operator = ( const Data & other ) { if ( this != & other ) { delete ptr ; // \u91ca\u653e\u539f\u6709\u5185\u5b58 ptr = new int ( * other . ptr ); } return * this ; } ~ Data () { delete ptr ; // \u91ca\u653e\u5185\u5b58 } }; int main () { Data d1 ( 10 ); Data d2 = d1 ; // \u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 Data d3 ( 20 ); d3 = d1 ; // \u8c03\u7528\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d cout << * d1 . ptr << \", \" << * d2 . ptr << \", \" << * d3 . ptr << endl ; // \u8f93\u51fa\uff1a10, 10, 10 * d2 . ptr = 30 ; cout << * d1 . ptr << \", \" << * d2 . ptr << \", \" << * d3 . ptr << endl ; // \u8f93\u51fa\uff1a10, 30, 10 return 0 ; }","title":"\u793a\u4f8b\uff1a\u5b9e\u73b0\u6df1\u62f7\u8d1d"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_52","text":"10, 10, 10 10, 30, 10","title":"\u8f93\u51fa\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#5_8","text":"\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c \uff1a \u7ed3\u6784\u4f53\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\uff0c\u524d\u63d0\u662f\u4e24\u4e2a\u7ed3\u6784\u4f53\u7684\u7c7b\u578b\u76f8\u540c\u3002 \u8d4b\u503c\u64cd\u4f5c\u4f1a\u9010\u4e00\u590d\u5236\u7ed3\u6784\u4f53\u7684\u6210\u5458\u3002 \u6d45\u62f7\u8d1d \uff1a \u9ed8\u8ba4\u7684\u8d4b\u503c\u64cd\u4f5c\u662f\u6d45\u62f7\u8d1d\uff0c\u6307\u9488\u6210\u5458\u53ea\u590d\u5236\u5730\u5740\u3002 \u6df1\u62f7\u8d1d \uff1a \u5982\u679c\u9700\u8981\u6df1\u62f7\u8d1d\uff0c\u53ef\u4ee5\u901a\u8fc7\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9e\u73b0\u3002","title":"5. \u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#int-bool-float-if","text":"","title":"\u5199\u51faint \u3001bool\u3001 float \u3001\u6307\u9488\u53d8\u91cf\u4e0e \u201c\u96f6\u503c\u201d\u6bd4\u8f83\u7684if \u8bed\u53e5"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1-int","text":"int a = 0 ; if ( a == 0 ) { cout << \"a \u7b49\u4e8e 0\" << endl ; } else { cout << \"a \u4e0d\u7b49\u4e8e 0\" << endl ; }","title":"1. int \u4e0e\u96f6\u503c\u6bd4\u8f83"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2-bool","text":"\u5728 C++ \u4e2d\uff0c bool \u7c7b\u578b\u7684\u96f6\u503c\u662f false \u3002 bool flag = false ; if ( flag == false ) { cout << \"flag \u4e3a false\" << endl ; } else { cout << \"flag \u4e3a true\" << endl ; }","title":"2. bool \u4e0e\u96f6\u503c\u6bd4\u8f83"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#3-float","text":"\u6d6e\u70b9\u6570\u6bd4\u8f83\u65f6\uff0c\u901a\u5e38\u9700\u8981\u8003\u8651\u7cbe\u5ea6\u95ee\u9898\uff0c\u76f4\u63a5\u6bd4\u8f83\u53ef\u80fd\u4f1a\u6709\u8bef\u5dee\u3002 float f = 0.0f ; if ( fabs ( f - 0.0f ) < 1e-6 ) { // \u4f7f\u7528\u4e00\u4e2a\u5c0f\u7684\u9608\u503c\u8fdb\u884c\u6bd4\u8f83 cout << \"f \u7b49\u4e8e 0\" << endl ; } else { cout << \"f \u4e0d\u7b49\u4e8e 0\" << endl ; }","title":"3. float \u4e0e\u96f6\u503c\u6bd4\u8f83"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#4_8","text":"\u5728 C++ \u4e2d\uff0c\u6307\u9488\u7684\u96f6\u503c\u901a\u5e38\u7528 nullptr \u6216 NULL \u8868\u793a\u3002 int * ptr = nullptr ; if ( ptr == nullptr ) { cout << \"ptr \u662f\u7a7a\u6307\u9488\" << endl ; } else { cout << \"ptr \u4e0d\u662f\u7a7a\u6307\u9488\" << endl ; }","title":"4. \u6307\u9488\u4e0e\u96f6\u503c\u6bd4\u8f83"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_53","text":"int \uff1a\u76f4\u63a5\u6bd4\u8f83 == 0 \u3002 bool \uff1a\u76f4\u63a5\u6bd4\u8f83 == false \u6216 == true \u3002 float \uff1a\u4f7f\u7528 fabs \u548c\u4e00\u4e2a\u5c0f\u9608\u503c\uff08\u5982 1e-6 \uff09\u8fdb\u884c\u6bd4\u8f83\u3002 \u6307\u9488 \uff1a\u4f7f\u7528 nullptr \u6216 NULL \u8fdb\u884c\u6bd4\u8f83\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#sizeof-strlen","text":"sizeof \u548c strlen \u90fd\u53ef\u4ee5\u7528\u6765\u83b7\u53d6\u6570\u636e\u7684\u5927\u5c0f\uff0c\u4f46\u5b83\u4eec\u7684\u7528\u9014\u548c\u5de5\u4f5c\u65b9\u5f0f\u5b8c\u5168\u4e0d\u540c\u3002","title":"sizeof \u548c strlen \u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1-sizeof","text":"\u4f5c\u7528 \uff1a \u7528\u4e8e\u83b7\u53d6\u53d8\u91cf\u3001\u6570\u636e\u7c7b\u578b\u6216\u5bf9\u8c61\u6240\u5360\u7684\u5185\u5b58\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002 \u5728\u7f16\u8bd1\u65f6\u8ba1\u7b97\u5927\u5c0f\uff0c\u4e0e\u6570\u636e\u7684\u5185\u5bb9\u65e0\u5173\u3002 \u7279\u70b9 \uff1a \u8ba1\u7b97\u7684\u662f \u5185\u5b58\u5206\u914d\u7684\u5927\u5c0f \u3002 \u5305\u62ec\u5b57\u7b26\u4e32\u7684\u7ec8\u6b62\u7b26 \\0 \u3002 \u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u7c7b\u578b\uff08\u57fa\u672c\u7c7b\u578b\u3001\u6570\u7ec4\u3001\u7ed3\u6784\u4f53\u3001\u7c7b\u7b49\uff09\u3002 \u793a\u4f8b \uff1a int a = 10 ; cout << sizeof ( a ) << endl ; // \u8f93\u51fa\uff1a4\uff08\u5047\u8bbe int \u5360 4 \u5b57\u8282\uff09 char str [] = \"hello\" ; cout << sizeof ( str ) << endl ; // \u8f93\u51fa\uff1a6\uff08\u5305\u62ec '\\0'\uff09","title":"1. sizeof"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2-strlen","text":"\u4f5c\u7528 \uff1a \u7528\u4e8e\u8ba1\u7b97\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff08\u4e0d\u5305\u62ec\u5b57\u7b26\u4e32\u7684\u7ec8\u6b62\u7b26 \\0 \uff09\u3002 \u5728\u8fd0\u884c\u65f6\u8ba1\u7b97\u5927\u5c0f\uff0c\u4e0e\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u6709\u5173\u3002 \u7279\u70b9 \uff1a \u53ea\u80fd\u7528\u4e8e\u4ee5 \\0 \u7ed3\u5c3e\u7684 C \u98ce\u683c\u5b57\u7b26\u4e32\u3002 \u4e0d\u5305\u62ec\u5b57\u7b26\u4e32\u7684\u7ec8\u6b62\u7b26 \\0 \u3002 \u793a\u4f8b \uff1a char str [] = \"hello\" ; cout << strlen ( str ) << endl ; // \u8f93\u51fa\uff1a5\uff08\u4e0d\u5305\u62ec '\\0'\uff09","title":"2. strlen"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#3_9","text":"\u7279\u6027 sizeof strlen \u4f5c\u7528 \u83b7\u53d6\u53d8\u91cf\u6216\u7c7b\u578b\u6240\u5360\u7684\u5185\u5b58\u5927\u5c0f \u83b7\u53d6\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff08\u4e0d\u5305\u62ec \\0 \uff09 \u8ba1\u7b97\u65f6\u673a \u7f16\u8bd1\u65f6\u8ba1\u7b97 \u8fd0\u884c\u65f6\u8ba1\u7b97 \u9002\u7528\u8303\u56f4 \u9002\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u7c7b\u578b \u4ec5\u9002\u7528\u4e8e\u4ee5 \\0 \u7ed3\u5c3e\u7684 C \u98ce\u683c\u5b57\u7b26\u4e32 \u662f\u5426\u5305\u542b \\0 \u5305\u62ec\u5b57\u7b26\u4e32\u7684\u7ec8\u6b62\u7b26 \\0 \u4e0d\u5305\u62ec\u5b57\u7b26\u4e32\u7684\u7ec8\u6b62\u7b26 \\0 \u4f9d\u8d56\u5185\u5bb9 \u4e0e\u6570\u636e\u5185\u5bb9\u65e0\u5173 \u4e0e\u5b57\u7b26\u4e32\u5185\u5bb9\u6709\u5173","title":"3. \u533a\u522b\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#4_9","text":"","title":"4. \u793a\u4f8b\u5bf9\u6bd4"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_54","text":"#include <iostream> #include <cstring> using namespace std ; int main () { char str [] = \"hello\" ; cout << \"sizeof(str): \" << sizeof ( str ) << endl ; // \u8f93\u51fa\uff1a6\uff08\u5305\u62ec '\\0'\uff09 cout << \"strlen(str): \" << strlen ( str ) << endl ; // \u8f93\u51fa\uff1a5\uff08\u4e0d\u5305\u62ec '\\0'\uff09 return 0 ; }","title":"\u4ee3\u7801\u793a\u4f8b\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_55","text":"sizeof(str): 6 strlen(str): 5","title":"\u8f93\u51fa\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#5_9","text":"sizeof \u7684\u7ed3\u679c\u4e0e\u6570\u636e\u7c7b\u578b\u6709\u5173 \uff1a sizeof \u8ba1\u7b97\u7684\u662f\u5185\u5b58\u5206\u914d\u7684\u5927\u5c0f\uff0c\u4e0e\u6570\u636e\u5185\u5bb9\u65e0\u5173\u3002 \u793a\u4f8b\uff1a int arr [ 10 ]; cout << sizeof ( arr ) << endl ; // \u8f93\u51fa\uff1a40\uff08\u5047\u8bbe int \u5360 4 \u5b57\u8282\uff09 strlen \u53ea\u80fd\u7528\u4e8e\u4ee5 \\0 \u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32 \uff1a \u5982\u679c\u5b57\u7b26\u4e32\u6ca1\u6709\u4ee5 \\0 \u7ed3\u5c3e\uff0c strlen \u7684\u884c\u4e3a\u662f\u672a\u5b9a\u4e49\u7684\u3002 \u793a\u4f8b\uff1a char str [ 5 ] = { 'h' , 'e' , 'l' , 'l' , 'o' }; cout << strlen ( str ) << endl ; // \u672a\u5b9a\u4e49\u884c\u4e3a\uff0c\u56e0\u4e3a\u6ca1\u6709 '\\0' sizeof \u548c\u6307\u9488 \uff1a \u5bf9\u4e8e\u6307\u9488\uff0c sizeof \u8fd4\u56de\u7684\u662f\u6307\u9488\u672c\u8eab\u7684\u5927\u5c0f\uff0c\u800c\u4e0d\u662f\u6307\u9488\u6307\u5411\u7684\u6570\u636e\u5927\u5c0f\u3002 \u793a\u4f8b\uff1a char * ptr = \"hello\" ; cout << sizeof ( ptr ) << endl ; // \u8f93\u51fa\uff1a8\uff08\u5047\u8bbe\u6307\u9488\u5360 8 \u5b57\u8282\uff09 cout << strlen ( ptr ) << endl ; // \u8f93\u51fa\uff1a5\uff08\u5b57\u7b26\u4e32\u5185\u5bb9\u7684\u957f\u5ea6\uff09","title":"5. \u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#6_7","text":"sizeof \uff1a\u7528\u4e8e\u83b7\u53d6\u53d8\u91cf\u6216\u7c7b\u578b\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u7f16\u8bd1\u65f6\u8ba1\u7b97\uff0c\u9002\u7528\u4e8e\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u3002 strlen \uff1a\u7528\u4e8e\u83b7\u53d6 C \u98ce\u683c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff08\u4e0d\u5305\u62ec \\0 \uff09\uff0c\u8fd0\u884c\u65f6\u8ba1\u7b97\uff0c\u9002\u7528\u4e8e\u5b57\u7b26\u4e32\u64cd\u4f5c\u3002 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c sizeof \u66f4\u901a\u7528\uff0c\u800c strlen \u4e13\u7528\u4e8e\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u8ba1\u7b97\u3002","title":"6. \u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#c-static-c-static","text":"static \u5173\u952e\u5b57\u5728 C \u548c C++ \u4e2d\u90fd\u6709\u7c7b\u4f3c\u7684\u4f5c\u7528\uff0c\u4f46\u5728\u67d0\u4e9b\u65b9\u9762\u5b58\u5728\u7ec6\u5fae\u7684\u5dee\u5f02\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u4e3b\u8981\u533a\u522b\u548c\u4f5c\u7528\uff1a","title":"C \u8bed\u8a00\u7684 static \u548c C++ \u7684 static \u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1-c-static","text":"","title":"1. \u5728 C \u8bed\u8a00\u4e2d\u7684 static"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_56","text":"\u4fee\u9970\u5c40\u90e8\u53d8\u91cf \uff1a \u4f7f\u5c40\u90e8\u53d8\u91cf\u5177\u6709 \u9759\u6001\u5b58\u50a8\u5468\u671f \uff0c\u5373\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u4ece\u7a0b\u5e8f\u5f00\u59cb\u5230\u7a0b\u5e8f\u7ed3\u675f\u3002 \u53d8\u91cf\u53ea\u4f1a\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u540e\u7eed\u8c03\u7528\u65f6\u4fdd\u7559\u4e0a\u4e00\u6b21\u7684\u503c\u3002 \u793a\u4f8b \uff1a #include <stdio.h> void func () { static int count = 0 ; // \u9759\u6001\u5c40\u90e8\u53d8\u91cf count ++ ; printf ( \"Count: %d \\n \" , count ); } int main () { func (); // \u8f93\u51fa\uff1aCount: 1 func (); // \u8f93\u51fa\uff1aCount: 2 func (); // \u8f93\u51fa\uff1aCount: 3 return 0 ; } \u4fee\u9970\u5168\u5c40\u53d8\u91cf \uff1a \u5c06\u5168\u5c40\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u9650\u5236\u5728\u5f53\u524d\u6587\u4ef6\uff0c\u907f\u514d\u4e0e\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u540c\u540d\u53d8\u91cf\u51b2\u7a81\uff08 \u5185\u90e8\u94fe\u63a5 \uff09\u3002 \u793a\u4f8b \uff1a static int globalVar = 10 ; // \u9759\u6001\u5168\u5c40\u53d8\u91cf\uff0c\u4ec5\u5728\u5f53\u524d\u6587\u4ef6\u4e2d\u53ef\u89c1 \u4fee\u9970\u51fd\u6570 \uff1a \u5c06\u51fd\u6570\u7684\u4f5c\u7528\u57df\u9650\u5236\u5728\u5f53\u524d\u6587\u4ef6\uff0c\u907f\u514d\u4e0e\u5176\u4ed6\u6587\u4ef6\u4e2d\u7684\u540c\u540d\u51fd\u6570\u51b2\u7a81\u3002 \u793a\u4f8b \uff1a static void func () { printf ( \"This is a static function \\n \" ); }","title":"\u4f5c\u7528\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2-c-static","text":"","title":"2. \u5728 C++ \u4e2d\u7684 static"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_57","text":"\u4fee\u9970\u5c40\u90e8\u53d8\u91cf \uff1a \u4e0e C \u8bed\u8a00\u76f8\u540c\uff0c\u4f7f\u5c40\u90e8\u53d8\u91cf\u5177\u6709 \u9759\u6001\u5b58\u50a8\u5468\u671f \u3002 \u793a\u4f8b \uff1a void func () { static int count = 0 ; // \u9759\u6001\u5c40\u90e8\u53d8\u91cf count ++ ; cout << \"Count: \" << count << endl ; } \u4fee\u9970\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570 \uff1a \u4e0e C \u8bed\u8a00\u76f8\u540c\uff0c\u5c06\u5168\u5c40\u53d8\u91cf\u6216\u51fd\u6570\u7684\u4f5c\u7528\u57df\u9650\u5236\u5728\u5f53\u524d\u6587\u4ef6\u3002 \u793a\u4f8b \uff1a static int globalVar = 10 ; // \u9759\u6001\u5168\u5c40\u53d8\u91cf static void func () { cout << \"This is a static function\" << endl ; } \u4fee\u9970\u7c7b\u7684\u6210\u5458\u53d8\u91cf \uff1a \u9759\u6001\u6210\u5458\u53d8\u91cf\u5c5e\u4e8e\u7c7b\uff0c\u800c\u4e0d\u662f\u67d0\u4e2a\u5177\u4f53\u5bf9\u8c61\u3002 \u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002 \u9759\u6001\u6210\u5458\u53d8\u91cf\u9700\u8981\u5728\u7c7b\u5916\u521d\u59cb\u5316\u3002 \u793a\u4f8b \uff1a class MyClass { public : static int count ; // \u9759\u6001\u6210\u5458\u53d8\u91cf }; int MyClass :: count = 0 ; // \u9759\u6001\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316 \u4fee\u9970\u7c7b\u7684\u6210\u5458\u51fd\u6570 \uff1a \u9759\u6001\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u7c7b\uff0c\u800c\u4e0d\u662f\u67d0\u4e2a\u5177\u4f53\u5bf9\u8c61\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u6216\u6210\u5458\u51fd\u6570\u3002 \u793a\u4f8b \uff1a class MyClass { public : static void display () { cout << \"Static function\" << endl ; } }; int main () { MyClass :: display (); // \u901a\u8fc7\u7c7b\u540d\u8c03\u7528\u9759\u6001\u51fd\u6570 return 0 ; }","title":"\u4f5c\u7528\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#3_10","text":"\u7279\u6027 C \u8bed\u8a00\u4e2d\u7684 static C++ \u4e2d\u7684 static \u5c40\u90e8\u53d8\u91cf \u751f\u547d\u5468\u671f\u5ef6\u957f\u5230\u7a0b\u5e8f\u7ed3\u675f\uff0c\u503c\u5728\u591a\u6b21\u8c03\u7528\u95f4\u4fdd\u6301\u3002 \u540c C \u8bed\u8a00\u3002 \u5168\u5c40\u53d8\u91cf/\u51fd\u6570 \u4f5c\u7528\u57df\u9650\u5236\u5728\u5f53\u524d\u6587\u4ef6\uff0c\u907f\u514d\u547d\u540d\u51b2\u7a81\u3002 \u540c C \u8bed\u8a00\u3002 \u7c7b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf \u4e0d\u652f\u6301 \u5c5e\u4e8e\u7c7b\u800c\u4e0d\u662f\u5bf9\u8c61\uff0c\u6240\u6709\u5bf9\u8c61\u5171\u4eab\uff0c\u9700\u5728\u7c7b\u5916\u521d\u59cb\u5316\u3002 \u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570 \u4e0d\u652f\u6301 \u5c5e\u4e8e\u7c7b\u800c\u4e0d\u662f\u5bf9\u8c61\uff0c\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002","title":"3. \u533a\u522b\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#4_10","text":"\u5728 C \u8bed\u8a00\u4e2d\uff0c static \u4e3b\u8981\u7528\u4e8e\u63a7\u5236\u53d8\u91cf\u548c\u51fd\u6570\u7684\u4f5c\u7528\u57df\u53ca\u751f\u547d\u5468\u671f\u3002 \u5728 C++ \u4e2d\uff0c static \u9664\u4e86\u5177\u6709 C \u8bed\u8a00\u7684\u529f\u80fd\u5916\uff0c\u8fd8\u6269\u5c55\u7528\u4e8e\u7c7b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u9759\u6001\u6210\u5458\u51fd\u6570\uff0c\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u7279\u6027\u3002","title":"4. \u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#volatile","text":"volatile \u662f C \u548c C++ \u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u7528\u4e8e\u544a\u8bc9\u7f16\u8bd1\u5668\u67d0\u4e2a\u53d8\u91cf\u7684\u503c\u53ef\u80fd\u4f1a\u88ab\u7a0b\u5e8f\u4e4b\u5916\u7684\u56e0\u7d20\u4fee\u6539\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u5728\u4f18\u5316\u4ee3\u7801\u65f6\u4e0d\u80fd\u5bf9\u8be5\u53d8\u91cf\u7684\u8bbf\u95ee\u8fdb\u884c\u4f18\u5316\u3002","title":"volatile \u7684\u4f5c\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#1-volatile","text":"\u9632\u6b62\u7f16\u8bd1\u5668\u4f18\u5316 \uff1a \u7f16\u8bd1\u5668\u901a\u5e38\u4f1a\u5bf9\u4ee3\u7801\u8fdb\u884c\u4f18\u5316\uff0c\u4f8b\u5982\u5c06\u53d8\u91cf\u7684\u503c\u7f13\u5b58\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u3002 \u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u88ab\u58f0\u660e\u4e3a volatile \uff0c\u7f16\u8bd1\u5668\u4f1a\u786e\u4fdd\u6bcf\u6b21\u8bbf\u95ee\u8be5\u53d8\u91cf\u65f6\u90fd\u76f4\u63a5\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u7f13\u5b58\u7684\u503c\u3002 \u9002\u7528\u573a\u666f \uff1a \u786c\u4ef6\u5bc4\u5b58\u5668 \uff1a \u53d8\u91cf\u7684\u503c\u53ef\u80fd\u7531\u786c\u4ef6\u8bbe\u5907\uff08\u5982 I/O \u7aef\u53e3\uff09\u4fee\u6539\u3002 \u591a\u7ebf\u7a0b\u73af\u5883 \uff1a \u53d8\u91cf\u53ef\u80fd\u88ab\u5176\u4ed6\u7ebf\u7a0b\u4fee\u6539\u3002 \u4fe1\u53f7\u5904\u7406\u51fd\u6570 \uff1a \u53d8\u91cf\u53ef\u80fd\u5728\u4e2d\u65ad\u6216\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u4e2d\u88ab\u4fee\u6539\u3002","title":"1. volatile \u7684\u4f5c\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#2_7","text":"volatile int flag = 0 ; void waitForFlag () { while ( flag == 0 ) { // \u5982\u679c\u6ca1\u6709 volatile\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f18\u5316\u4e3a\u6b7b\u5faa\u73af } cout << \"Flag is set!\" << endl ; } \u89e3\u91ca \uff1a - \u5982\u679c\u6ca1\u6709 volatile \uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u5c06 flag == 0 \u4f18\u5316\u4e3a\u4e00\u4e2a\u6b7b\u5faa\u73af\uff0c\u56e0\u4e3a\u5b83\u8ba4\u4e3a flag \u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539\u3002 - \u4f7f\u7528 volatile \u540e\uff0c\u7f16\u8bd1\u5668\u4f1a\u786e\u4fdd\u6bcf\u6b21\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6 flag \u7684\u503c\u3002","title":"2. \u793a\u4f8b"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#const-volatile","text":"\u662f\u7684\uff0c\u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u540c\u65f6\u662f const \u548c volatile \u3002","title":"\u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u65e2\u662f const \u53c8\u662f volatile \u5417\uff1f"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_58","text":"const \uff1a\u8868\u793a\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u88ab\u7a0b\u5e8f\u76f4\u63a5\u4fee\u6539\u3002 volatile \uff1a\u8868\u793a\u53d8\u91cf\u7684\u503c\u53ef\u80fd\u4f1a\u88ab\u5916\u90e8\u56e0\u7d20\u4fee\u6539\u3002","title":"\u542b\u4e49\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_59","text":"\u786c\u4ef6\u5bc4\u5b58\u5668 \uff1a \u67d0\u4e9b\u786c\u4ef6\u5bc4\u5b58\u5668\u7684\u503c\u53ef\u80fd\u4f1a\u88ab\u786c\u4ef6\u4fee\u6539\uff0c\u4f46\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u4fee\u6539\u5b83\u4eec\u3002 \u53ea\u8bfb\u5171\u4eab\u53d8\u91cf \uff1a \u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u80fd\u53ea\u8bfb\u67d0\u4e2a\u53d8\u91cf\uff0c\u800c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u80fd\u4f1a\u4fee\u6539\u5b83\u3002","title":"\u9002\u7528\u573a\u666f\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_60","text":"const volatile int statusRegister = 0xFF ; void checkStatus () { while ( statusRegister == 0xFF ) { // \u7b49\u5f85\u786c\u4ef6\u4fee\u6539 statusRegister \u7684\u503c } cout << \"Status changed!\" << endl ; } \u89e3\u91ca \uff1a - statusRegister \u662f\u4e00\u4e2a\u786c\u4ef6\u5bc4\u5b58\u5668\u3002 - \u7a0b\u5e8f\u4e0d\u80fd\u4fee\u6539 statusRegister \u7684\u503c\uff08\u56e0\u4e3a\u5b83\u662f const \uff09\u3002 - \u786c\u4ef6\u53ef\u80fd\u4f1a\u4fee\u6539 statusRegister \u7684\u503c\uff08\u56e0\u4e3a\u5b83\u662f volatile \uff09\u3002","title":"\u793a\u4f8b"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_61","text":"volatile \u7684\u4f5c\u7528 \uff1a \u9632\u6b62\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u786e\u4fdd\u6bcf\u6b21\u8bbf\u95ee\u53d8\u91cf\u65f6\u90fd\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u3002 \u5e38\u7528\u4e8e\u786c\u4ef6\u5bc4\u5b58\u5668\u3001\u591a\u7ebf\u7a0b\u53d8\u91cf\u548c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002 const \u548c volatile \u7684\u7ed3\u5408 \uff1a \u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u540c\u65f6\u662f const \u548c volatile \u3002 \u5e38\u7528\u4e8e\u786c\u4ef6\u5bc4\u5b58\u5668\u6216\u53ea\u8bfb\u5171\u4eab\u53d8\u91cf\u3002 \u6ce8\u610f\u4e8b\u9879 \uff1a volatile \u4ec5\u4fdd\u8bc1\u53d8\u91cf\u7684\u503c\u4e0d\u4f1a\u88ab\u4f18\u5316\uff0c\u4f46\u4e0d\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u3002\u5982\u679c\u9700\u8981\u7ebf\u7a0b\u5b89\u5168\uff0c\u8fd8\u9700\u8981\u4f7f\u7528\u540c\u6b65\u673a\u5236\uff08\u5982 mutex \uff09\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#volatilec","text":"","title":"\u5173\u4e8evolatile\u7684\u6d4b\u8bd5\u6211\u5728\u5927\u4e09\u4e0bc++\u6587\u4ef6\u5939\u4e13\u95e8\u505a\u4e86\u5b9e\u9a8c\u5bf9\u6bd4"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#g","text":"\u5728\u7f16\u8bd1\u5668\u9009\u9879\u4e2d\uff0c\u5927\u5199\u7684 O \uff08 -O \uff09\u4ee3\u8868 Optimization \uff08\u4f18\u5316\uff09\u3002\u5b83\u7528\u4e8e\u6307\u5b9a\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7ea7\u522b\uff0c\u4ee5\u63d0\u9ad8\u751f\u6210\u4ee3\u7801\u7684\u6027\u80fd\u6216\u51cf\u5c11\u4ee3\u7801\u7684\u5927\u5c0f\u3002","title":"g++ \u7f16\u8bd1\u9009\u9879"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#-o","text":"-O \u662f GCC \u548c G++ \u7f16\u8bd1\u5668\u7684\u4f18\u5316\u9009\u9879\u524d\u7f00\u3002 \u540e\u9762\u53ef\u4ee5\u8ddf\u4e00\u4e2a\u6570\u5b57\uff08\u5982 0 \u3001 1 \u3001 2 \u3001 3 \uff09\u6216\u7279\u5b9a\u7684\u4f18\u5316\u6807\u5fd7\uff08\u5982 s \u3001 g \uff09\u3002","title":"-O \u7684\u542b\u4e49"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_62","text":"-O0 \uff08\u9ed8\u8ba4\uff09\uff1a \u4e0d\u8fdb\u884c\u4f18\u5316\u3002 \u7f16\u8bd1\u901f\u5ea6\u6700\u5feb\uff0c\u751f\u6210\u7684\u4ee3\u7801\u53ef\u8bfb\u6027\u9ad8\uff0c\u9002\u5408\u8c03\u8bd5\u3002 -O1 \uff1a \u542f\u7528\u57fa\u672c\u4f18\u5316\u3002 \u4e0d\u4f1a\u663e\u8457\u589e\u52a0\u7f16\u8bd1\u65f6\u95f4\uff0c\u9002\u5408\u4e00\u822c\u7528\u9014\u3002 -O2 \uff1a \u542f\u7528\u66f4\u591a\u4f18\u5316\uff0c\u5305\u62ec\u4ee3\u7801\u5185\u8054\u3001\u5faa\u73af\u4f18\u5316\u7b49\u3002 \u751f\u6210\u7684\u4ee3\u7801\u8fd0\u884c\u901f\u5ea6\u66f4\u5feb\uff0c\u9002\u5408\u6027\u80fd\u8981\u6c42\u8f83\u9ad8\u7684\u573a\u666f\u3002 -O3 \uff1a \u542f\u7528\u6700\u9ad8\u7ea7\u522b\u7684\u4f18\u5316\uff0c\u5305\u62ec\u66f4\u6fc0\u8fdb\u7684\u4f18\u5316\u7b56\u7565\uff08\u5982\u5faa\u73af\u5c55\u5f00\u3001\u51fd\u6570\u5185\u8054\u7b49\uff09\u3002 \u53ef\u80fd\u4f1a\u589e\u52a0\u7f16\u8bd1\u65f6\u95f4\u548c\u4ee3\u7801\u5927\u5c0f\uff0c\u9002\u5408\u5bf9\u6027\u80fd\u8981\u6c42\u6781\u9ad8\u7684\u573a\u666f\u3002 -Os \uff1a \u4f18\u5316\u4ee3\u7801\u5927\u5c0f\uff0c\u9002\u5408\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6216\u5b58\u50a8\u7a7a\u95f4\u6709\u9650\u7684\u573a\u666f\u3002 -Og \uff1a \u4e3a\u8c03\u8bd5\u4f18\u5316\uff0c\u751f\u6210\u7684\u4ee3\u7801\u5728\u4fdd\u7559\u8c03\u8bd5\u4fe1\u606f\u7684\u540c\u65f6\u8fdb\u884c\u9002\u5ea6\u4f18\u5316\u3002","title":"\u5e38\u89c1\u4f18\u5316\u7ea7\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8814/#_63","text":"\u5927\u5199\u7684 O \u4ee3\u8868 Optimization \uff0c\u7528\u4e8e\u63a7\u5236\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u7ea7\u522b\u3002 \u5e38\u7528\u9009\u9879\u5305\u62ec -O0 \uff08\u65e0\u4f18\u5316\uff09\u3001 -O2 \uff08\u5e38\u7528\u4f18\u5316\uff09\u548c -O3 \uff08\u6700\u9ad8\u4f18\u5316\uff09\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/","text":"\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u7684\u533a\u522b \u5b9a\u4e49\u4f4d\u7f6e \uff1a \u5168\u5c40\u53d8\u91cf \uff1a\u5b9a\u4e49\u5728\u6240\u6709\u51fd\u6570\u4e4b\u5916\uff0c\u901a\u5e38\u5728\u6587\u4ef6\u7684\u9876\u90e8\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a\u5b9a\u4e49\u5728\u51fd\u6570\u6216\u4ee3\u7801\u5757\u5185\u90e8\u3002 \u4f5c\u7528\u57df \uff1a \u5168\u5c40\u53d8\u91cf \uff1a\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7a0b\u5e8f\uff0c\u6240\u6709\u51fd\u6570\u90fd\u53ef\u4ee5\u8bbf\u95ee\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a\u4f5c\u7528\u57df\u4ec5\u9650\u4e8e\u5b9a\u4e49\u5b83\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u3002 \u751f\u547d\u5468\u671f \uff1a \u5168\u5c40\u53d8\u91cf \uff1a\u4ece\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\u5230\u7a0b\u5e8f\u7ed3\u675f\uff0c\u59cb\u7ec8\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a\u4ece\u8fdb\u5165\u5176\u4f5c\u7528\u57df\u5f00\u59cb\uff0c\u5230\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u9500\u6bc1\u3002 \u5b58\u50a8\u4f4d\u7f6e \uff1a \u5168\u5c40\u53d8\u91cf \uff1a\u5b58\u50a8\u5728\u5185\u5b58\u7684\u5168\u5c40/\u9759\u6001\u533a\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a\u5b58\u50a8\u5728\u6808\u533a\u3002 \u521d\u59cb\u5316 \uff1a \u5168\u5c40\u53d8\u91cf \uff1a\u5982\u679c\u672a\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u9ed8\u8ba4\u521d\u59cb\u5316\u4e3a\u96f6\u503c\uff08\u5982 0 \u3001 nullptr \u7b49\uff09\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a\u5982\u679c\u672a\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u5176\u503c\u662f\u672a\u5b9a\u4e49\u7684\uff08\u968f\u673a\u503c\uff09\u3002 \u8bbf\u95ee\u65b9\u5f0f \uff1a \u5168\u5c40\u53d8\u91cf \uff1a\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u8bbf\u95ee\u6216\u901a\u8fc7 extern \u58f0\u660e\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u8bbf\u95ee\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a\u53ea\u80fd\u5728\u5176\u4f5c\u7528\u57df\u5185\u76f4\u63a5\u8bbf\u95ee\u3002 \u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u5982\u4f55\u533a\u5206\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf \u7f16\u8bd1\u5668\u7684\u5904\u7406 \uff1a \u5168\u5c40\u53d8\u91cf \uff1a \u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u5c06\u5168\u5c40\u53d8\u91cf\u5b58\u50a8\u5728\u5168\u5c40/\u9759\u6001\u533a\u3002 \u5168\u5c40\u53d8\u91cf\u7684\u7b26\u53f7\u4fe1\u606f\u4f1a\u88ab\u8bb0\u5f55\u5728\u7b26\u53f7\u8868\u4e2d\uff0c\u4f9b\u94fe\u63a5\u5668\u4f7f\u7528\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a \u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u4e3a\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u6808\u7a7a\u95f4\u3002 \u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\u662f\u76f8\u5bf9\u4e8e\u6808\u6307\u9488\uff08 SP \uff09\u7684\u504f\u79fb\u91cf\u3002 \u64cd\u4f5c\u7cfb\u7edf\u7684\u5904\u7406 \uff1a \u64cd\u4f5c\u7cfb\u7edf\u5e76\u4e0d\u76f4\u63a5\u533a\u5206\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u3002 \u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u52a0\u8f7d\u7a0b\u5e8f\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5c06\u5168\u5c40\u53d8\u91cf\u6240\u5728\u7684\u5168\u5c40/\u9759\u6001\u533a\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u3002 \u5c40\u90e8\u53d8\u91cf\u7684\u7ba1\u7406\u7531\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u6808\u7ba1\u7406\u673a\u5236\u5904\u7406\u3002 \u603b\u7ed3 \u5168\u5c40\u53d8\u91cf \uff1a\u4f5c\u7528\u57df\u5927\uff0c\u751f\u547d\u5468\u671f\u957f\uff0c\u5b58\u50a8\u5728\u5168\u5c40/\u9759\u6001\u533a\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a\u4f5c\u7528\u57df\u5c0f\uff0c\u751f\u547d\u5468\u671f\u77ed\uff0c\u5b58\u50a8\u5728\u6808\u533a\u3002 \u7f16\u8bd1\u5668 \uff1a\u901a\u8fc7\u53d8\u91cf\u7684\u5b9a\u4e49\u4f4d\u7f6e\u548c\u4f5c\u7528\u57df\u4fe1\u606f\u533a\u5206\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\uff0c\u5e76\u5206\u914d\u4e0d\u540c\u7684\u5b58\u50a8\u533a\u57df\u3002 \u64cd\u4f5c\u7cfb\u7edf \uff1a\u8d1f\u8d23\u52a0\u8f7d\u5168\u5c40\u53d8\u91cf\u6240\u5728\u7684\u5168\u5c40/\u9759\u6001\u533a\uff0c\u5c40\u90e8\u53d8\u91cf\u7531\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6808\u7ba1\u7406\u3002 strcpy \u3001 sprintf \u548c memcpy \u7684\u533a\u522b strcpy \u529f\u80fd \uff1a\u7528\u4e8e\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u7279\u70b9 \uff1a \u4ee5 \\0 \uff08\u7a7a\u5b57\u7b26\uff09\u4f5c\u4e3a\u5b57\u7b26\u4e32\u7ed3\u675f\u6807\u5fd7\u3002 \u53ea\u80fd\u7528\u4e8e\u5b57\u7b26\u4e32\u64cd\u4f5c\uff0c\u4e0d\u80fd\u5904\u7406\u4e8c\u8fdb\u5236\u6570\u636e\u3002 \u7528\u6cd5 \uff1a char src [] = \"Hello\" ; char dest [ 10 ]; strcpy ( dest , src ); // \u5c06 src \u590d\u5236\u5230 dest \u6ce8\u610f \uff1a\u76ee\u6807\u7f13\u51b2\u533a\u9700\u8981\u8db3\u591f\u5927\u4ee5\u5bb9\u7eb3\u6e90\u5b57\u7b26\u4e32\u548c\u7ed3\u675f\u7b26 \\0 \u3002 sprintf \u529f\u80fd \uff1a\u5c06\u683c\u5f0f\u5316\u7684\u6570\u636e\u5199\u5165\u5b57\u7b26\u4e32\u3002 \u7279\u70b9 \uff1a \u7c7b\u4f3c\u4e8e printf \uff0c\u4f46\u8f93\u51fa\u5230\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u6807\u51c6\u8f93\u51fa\u3002 \u652f\u6301\u683c\u5f0f\u5316\u64cd\u4f5c\uff08\u5982 %d \u3001 %s \u7b49\uff09\u3002 \u7528\u6cd5 \uff1a char buffer [ 50 ]; int num = 42 ; sprintf ( buffer , \"The number is %d\" , num ); // \u5c06\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u5199\u5165 buffer \u6ce8\u610f \uff1a\u9700\u8981\u786e\u4fdd\u76ee\u6807\u7f13\u51b2\u533a\u8db3\u591f\u5927\u4ee5\u5bb9\u7eb3\u683c\u5f0f\u5316\u540e\u7684\u5b57\u7b26\u4e32\u3002 memcpy \u529f\u80fd \uff1a\u7528\u4e8e\u5728\u5185\u5b58\u4e2d\u590d\u5236\u6307\u5b9a\u5927\u5c0f\u7684\u5b57\u8282\u6570\u636e\u3002 \u7279\u70b9 \uff1a \u4e0d\u5173\u5fc3\u6570\u636e\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u7528\u4e8e\u590d\u5236\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\uff08\u5305\u62ec\u4e8c\u8fdb\u5236\u6570\u636e\uff09\u3002 \u4e0d\u4f1a\u5904\u7406\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26 \\0 \u3002 \u7528\u6cd5 \uff1a char src [] = \"Hello\" ; char dest [ 10 ]; memcpy ( dest , src , 5 ); // \u5c06 src \u7684\u524d 5 \u4e2a\u5b57\u8282\u590d\u5236\u5230 dest \u6ce8\u610f \uff1a\u6e90\u548c\u76ee\u6807\u5185\u5b58\u533a\u57df\u4e0d\u80fd\u91cd\u53e0\uff0c\u91cd\u53e0\u65f6\u5e94\u4f7f\u7528 memmove \u3002 \u533a\u522b\u603b\u7ed3 \u529f\u80fd strcpy sprintf memcpy \u7528\u9014 \u5b57\u7b26\u4e32\u590d\u5236 \u683c\u5f0f\u5316\u8f93\u51fa\u5230\u5b57\u7b26\u4e32 \u5185\u5b58\u6570\u636e\u590d\u5236 \u6570\u636e\u7c7b\u578b \u4ec5\u9002\u7528\u4e8e\u5b57\u7b26\u4e32 \u9002\u7528\u4e8e\u5b57\u7b26\u4e32\uff0c\u652f\u6301\u683c\u5f0f\u5316 \u4efb\u610f\u7c7b\u578b\u6570\u636e \u662f\u5426\u5904\u7406 \\0 \u662f \u662f \u5426 \u5b89\u5168\u6027 \u53ef\u80fd\u5bfc\u81f4\u7f13\u51b2\u533a\u6ea2\u51fa \u53ef\u80fd\u5bfc\u81f4\u7f13\u51b2\u533a\u6ea2\u51fa \u9700\u8981\u786e\u4fdd\u5185\u5b58\u533a\u57df\u4e0d\u91cd\u53e0 \u9002\u7528\u573a\u666f \u5b57\u7b26\u4e32\u64cd\u4f5c \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 \u4e8c\u8fdb\u5236\u6570\u636e\u6216\u4efb\u610f\u5185\u5b58\u5757\u7684\u590d\u5236 \u5bf9\u4e8e\u4e00\u4e2a\u9891\u7e41\u4f7f\u7528\u7684\u77ed\u5c0f\u51fd\u6570\uff0c\u901a\u5e38\u5efa\u8bae\u4f7f\u7528 \u5185\u8054\u51fd\u6570\uff08inline function\uff09 \u6765\u5b9e\u73b0\u3002 \u5185\u8054\u51fd\u6570\u7684\u4f18\u7f3a\u70b9 \u4f18\u70b9 \uff1a \u51cf\u5c11\u51fd\u6570\u8c03\u7528\u5f00\u9500 \uff1a \u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u4f1a\u5c06\u51fd\u6570\u7684\u4ee3\u7801\u76f4\u63a5\u63d2\u5165\u5230\u8c03\u7528\u5904\uff0c\u907f\u514d\u4e86\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\uff08\u5982\u538b\u6808\u3001\u8df3\u8f6c\u3001\u8fd4\u56de\u7b49\u64cd\u4f5c\uff09\u3002 \u9002\u5408\u9891\u7e41\u8c03\u7528\u7684\u5c0f\u51fd\u6570\u3002 \u63d0\u9ad8\u8fd0\u884c\u6548\u7387 \uff1a \u7531\u4e8e\u7701\u53bb\u4e86\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\uff0c\u5185\u8054\u51fd\u6570\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\u3002 \u4ee3\u7801\u53ef\u8bfb\u6027 \uff1a \u5185\u8054\u51fd\u6570\u53ef\u4ee5\u50cf\u666e\u901a\u51fd\u6570\u4e00\u6837\u5b9a\u4e49\u548c\u8c03\u7528\uff0c\u4fdd\u6301\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u540c\u65f6\u907f\u514d\u4e86\u91cd\u590d\u4ee3\u7801\u3002 \u7f16\u8bd1\u5668\u4f18\u5316 \uff1a \u7f16\u8bd1\u5668\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u60c5\u51b5\u51b3\u5b9a\u662f\u5426\u5c06\u51fd\u6570\u5185\u8054\uff0c\u7075\u6d3b\u6027\u8f83\u9ad8\u3002 \u7f3a\u70b9 \uff1a \u4ee3\u7801\u81a8\u80c0 \uff1a \u5982\u679c\u5185\u8054\u51fd\u6570\u88ab\u591a\u6b21\u8c03\u7528\uff0c\u7f16\u8bd1\u5668\u4f1a\u5728\u6bcf\u4e2a\u8c03\u7528\u70b9\u63d2\u5165\u51fd\u6570\u4ee3\u7801\uff0c\u53ef\u80fd\u5bfc\u81f4\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u4f53\u79ef\u589e\u5927\uff08\u4ee3\u7801\u81a8\u80c0\uff09\u3002 \u8c03\u8bd5\u56f0\u96be \uff1a \u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u88ab\u5c55\u5f00\uff0c\u53ef\u80fd\u5bfc\u81f4\u8c03\u8bd5\u65f6\u65e0\u6cd5\u51c6\u786e\u5b9a\u4f4d\u5230\u51fd\u6570\u8c03\u7528\u70b9\u3002 \u590d\u6742\u51fd\u6570\u4e0d\u9002\u5408\u5185\u8054 \uff1a \u5185\u8054\u51fd\u6570\u9002\u5408\u77ed\u5c0f\u3001\u7b80\u5355\u7684\u51fd\u6570\u3002\u5982\u679c\u51fd\u6570\u8fc7\u4e8e\u590d\u6742\uff0c\u5185\u8054\u53ef\u80fd\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\uff0c\u751a\u81f3\u88ab\u7f16\u8bd1\u5668\u5ffd\u7565\u3002 \u9012\u5f52\u51fd\u6570\u4e0d\u80fd\u5185\u8054 \uff1a \u9012\u5f52\u51fd\u6570\u65e0\u6cd5\u5c55\u5f00\u4e3a\u5185\u8054\u51fd\u6570\uff0c\u56e0\u4e3a\u9012\u5f52\u8c03\u7528\u672c\u8d28\u4e0a\u9700\u8981\u51fd\u6570\u8c03\u7528\u6808\u3002 \u9002\u7528\u573a\u666f \u9002\u5408 \uff1a \u77ed\u5c0f\u3001\u9891\u7e41\u8c03\u7528\u7684\u51fd\u6570\uff08\u5982\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\u3001\u8bbf\u95ee\u5668\u51fd\u6570\u7b49\uff09\u3002 \u903b\u8f91\u7b80\u5355\u3001\u4ee3\u7801\u91cf\u5c11\u7684\u51fd\u6570\u3002 \u4e0d\u9002\u5408 \uff1a \u590d\u6742\u7684\u51fd\u6570\uff08\u5982\u5305\u542b\u5faa\u73af\u3001\u6761\u4ef6\u5206\u652f\u8f83\u591a\u7684\u51fd\u6570\uff09\u3002 \u9012\u5f52\u51fd\u6570\u3002 \u793a\u4f8b\u4ee3\u7801 #include <iostream> using namespace std ; // \u5b9a\u4e49\u4e00\u4e2a\u5185\u8054\u51fd\u6570 inline int add ( int a , int b ) { return a + b ; } int main () { int x = 5 , y = 10 ; cout << \"Sum: \" << add ( x , y ) << endl ; // \u8c03\u7528\u5185\u8054\u51fd\u6570 return 0 ; } \u603b\u7ed3 \u5bf9\u4e8e\u9891\u7e41\u4f7f\u7528\u7684\u77ed\u5c0f\u51fd\u6570\uff0c \u5185\u8054\u51fd\u6570 \u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u53ef\u4ee5\u51cf\u5c11\u51fd\u6570\u8c03\u7528\u5f00\u9500\uff0c\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\u3002 \u4f46\u9700\u8981\u6ce8\u610f\u907f\u514d\u4ee3\u7801\u81a8\u80c0\u548c\u8c03\u8bd5\u56f0\u96be\u7684\u95ee\u9898\uff0c\u5408\u7406\u9009\u62e9\u5185\u8054\u51fd\u6570\u7684\u4f7f\u7528\u573a\u666f\u3002 \u667a\u80fd\u6307\u9488\u7684\u6982\u5ff5 \u667a\u80fd\u6307\u9488\uff08Smart Pointer\uff09\u662f C++ \u6807\u51c6\u5e93\u4e2d\u63d0\u4f9b\u7684\u4e00\u79cd\u7c7b\u6a21\u677f\uff0c\u7528\u4e8e\u81ea\u52a8\u7ba1\u7406\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u3002\u5b83\u901a\u8fc7 RAII\uff08Resource Acquisition Is Initialization\uff09\u673a\u5236\uff0c\u5728\u667a\u80fd\u6307\u9488\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\u65f6\u81ea\u52a8\u91ca\u653e\u6240\u7ba1\u7406\u7684\u8d44\u6e90\uff0c\u4ece\u800c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002 \u667a\u80fd\u6307\u9488\u7684\u4f5c\u7528 \u81ea\u52a8\u7ba1\u7406\u5185\u5b58 \uff1a \u667a\u80fd\u6307\u9488\u4f1a\u5728\u8d85\u51fa\u4f5c\u7528\u57df\u65f6\u81ea\u52a8\u91ca\u653e\u6240\u7ba1\u7406\u7684\u5185\u5b58\uff0c\u65e0\u9700\u624b\u52a8\u8c03\u7528 delete \u3002 \u907f\u514d\u5185\u5b58\u6cc4\u6f0f \uff1a \u901a\u8fc7\u81ea\u52a8\u91ca\u653e\u5185\u5b58\uff0c\u51cf\u5c11\u7a0b\u5e8f\u4e2d\u56e0\u5fd8\u8bb0\u91ca\u653e\u5185\u5b58\u800c\u5bfc\u81f4\u7684\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898\u3002 \u63d0\u9ad8\u4ee3\u7801\u5b89\u5168\u6027 \uff1a \u667a\u80fd\u6307\u9488\u901a\u8fc7\u5c01\u88c5\u539f\u59cb\u6307\u9488\uff0c\u907f\u514d\u4e86\u76f4\u63a5\u64cd\u4f5c\u88f8\u6307\u9488\u5e26\u6765\u7684\u60ac\u7a7a\u6307\u9488\u3001\u91cd\u590d\u91ca\u653e\u7b49\u95ee\u9898\u3002 \u7b80\u5316\u8d44\u6e90\u7ba1\u7406 \uff1a \u667a\u80fd\u6307\u9488\u53ef\u4ee5\u65b9\u4fbf\u5730\u7ba1\u7406\u52a8\u6001\u5206\u914d\u7684\u8d44\u6e90\uff0c\u51cf\u5c11\u624b\u52a8\u7ba1\u7406\u7684\u590d\u6742\u6027\u3002 \u667a\u80fd\u6307\u9488\u7684\u5206\u7c7b\u53ca\u7279\u70b9 C++ \u6807\u51c6\u5e93\u4e2d\u4e3b\u8981\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u4e09\u79cd\u667a\u80fd\u6307\u9488\uff1a 1. std::unique_ptr \u7279\u70b9 \uff1a \u72ec\u5360\u6240\u6709\u6743\uff1a\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u6709\u4e00\u4e2a unique_ptr \u62e5\u6709\u67d0\u5757\u5185\u5b58\u3002 \u4e0d\u53ef\u590d\u5236\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7 std::move \u8f6c\u79fb\u6240\u6709\u6743\u3002 \u9002\u7528\u573a\u666f \uff1a \u9002\u7528\u4e8e\u9700\u8981\u660e\u786e\u552f\u4e00\u6240\u6709\u6743\u7684\u573a\u666f\u3002 \u793a\u4f8b \uff1a #include <memory> #include <iostream> using namespace std ; int main () { unique_ptr < int > ptr1 = make_unique < int > ( 10 ); // \u521b\u5efa\u4e00\u4e2a unique_ptr cout << * ptr1 << endl ; unique_ptr < int > ptr2 = move ( ptr1 ); // \u8f6c\u79fb\u6240\u6709\u6743 if ( ! ptr1 ) { cout << \"ptr1 is null\" << endl ; } return 0 ; } 2. std::shared_ptr \u7279\u70b9 \uff1a \u5171\u4eab\u6240\u6709\u6743\uff1a\u591a\u4e2a shared_ptr \u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\u3002 \u4f7f\u7528\u5f15\u7528\u8ba1\u6570\u6765\u7ba1\u7406\u5185\u5b58\uff0c\u5f53\u5f15\u7528\u8ba1\u6570\u4e3a 0 \u65f6\u91ca\u653e\u5185\u5b58\u3002 \u9002\u7528\u573a\u666f \uff1a \u9002\u7528\u4e8e\u9700\u8981\u591a\u4e2a\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u8d44\u6e90\u7684\u573a\u666f\u3002 \u793a\u4f8b \uff1a #include <memory> #include <iostream> using namespace std ; int main () { shared_ptr < int > ptr1 = make_shared < int > ( 20 ); // \u521b\u5efa\u4e00\u4e2a shared_ptr shared_ptr < int > ptr2 = ptr1 ; // \u5171\u4eab\u6240\u6709\u6743 cout << * ptr1 << \", \" << * ptr2 << endl ; cout << \"Use count: \" << ptr1 . use_count () << endl ; // \u5f15\u7528\u8ba1\u6570 return 0 ; } 3. std::weak_ptr \u7279\u70b9 \uff1a \u5f31\u5f15\u7528\uff1a\u4e0d\u4f1a\u5f71\u54cd shared_ptr \u7684\u5f15\u7528\u8ba1\u6570\u3002 \u9700\u8981\u4e0e shared_ptr \u914d\u5408\u4f7f\u7528\uff0c\u7528\u4e8e\u89e3\u51b3\u5faa\u73af\u5f15\u7528\u95ee\u9898\u3002 \u9002\u7528\u573a\u666f \uff1a \u9002\u7528\u4e8e\u9700\u8981\u89c2\u5bdf\u4f46\u4e0d\u62e5\u6709\u8d44\u6e90\u7684\u573a\u666f\uff0c\u5e38\u7528\u4e8e\u907f\u514d shared_ptr \u7684\u5faa\u73af\u5f15\u7528\u3002 \u793a\u4f8b \uff1a #include <memory> #include <iostream> using namespace std ; int main () { shared_ptr < int > shared = make_shared < int > ( 30 ); weak_ptr < int > weak = shared ; // \u521b\u5efa\u4e00\u4e2a weak_ptr cout << \"Use count: \" << shared . use_count () << endl ; if ( auto ptr = weak . lock ()) { // \u68c0\u67e5 weak_ptr \u662f\u5426\u6709\u6548 cout << * ptr << endl ; } return 0 ; } \u603b\u7ed3 \u7c7b\u578b \u7279\u70b9 \u9002\u7528\u573a\u666f std::unique_ptr \u72ec\u5360\u6240\u6709\u6743\uff0c\u4e0d\u53ef\u590d\u5236\uff0c\u53ef\u901a\u8fc7 std::move \u8f6c\u79fb\u6240\u6709\u6743\u3002 \u9700\u8981\u552f\u4e00\u6240\u6709\u6743\u7684\u573a\u666f\u3002 std::shared_ptr \u5171\u4eab\u6240\u6709\u6743\uff0c\u4f7f\u7528\u5f15\u7528\u8ba1\u6570\u7ba1\u7406\u5185\u5b58\u3002 \u9700\u8981\u591a\u4e2a\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u8d44\u6e90\u7684\u573a\u666f\u3002 std::weak_ptr \u5f31\u5f15\u7528\uff0c\u4e0d\u5f71\u54cd\u5f15\u7528\u8ba1\u6570\uff0c\u9700\u4e0e shared_ptr \u914d\u5408\u4f7f\u7528\uff0c\u907f\u514d\u5faa\u73af\u5f15\u7528\u3002 \u9700\u8981\u89c2\u5bdf\u4f46\u4e0d\u62e5\u6709\u8d44\u6e90\u7684\u573a\u666f\uff0c\u89e3\u51b3\u5faa\u73af\u5f15\u7528\u95ee\u9898\u3002 \u667a\u80fd\u6307\u9488\u901a\u8fc7\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u6781\u5927\u5730\u51cf\u5c11\u4e86\u624b\u52a8\u7ba1\u7406\u5185\u5b58\u7684\u590d\u6742\u6027\u548c\u9519\u8bef\u98ce\u9669\uff0c\u662f\u73b0\u4ee3 C++ \u7f16\u7a0b\u4e2d\u63a8\u8350\u4f7f\u7528\u7684\u5de5\u5177\u3002 std::shared_ptr \u662f C++ \u6807\u51c6\u5e93\u4e2d\u7684\u667a\u80fd\u6307\u9488\uff0c\u7528\u4e8e\u5b9e\u73b0\u5171\u4eab\u6240\u6709\u6743\u7684\u5185\u5b58\u7ba1\u7406\u3002\u5b83\u901a\u8fc7 \u5f15\u7528\u8ba1\u6570 \u6765\u7ba1\u7406\u52a8\u6001\u5206\u914d\u7684\u8d44\u6e90\uff0c\u5f53\u5f15\u7528\u8ba1\u6570\u4e3a 0 \u65f6\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\u3002 shared_ptr \u7684\u5b9e\u73b0\u539f\u7406 \u5f15\u7528\u8ba1\u6570 \uff1a shared_ptr \u4f7f\u7528\u4e00\u4e2a\u5f15\u7528\u8ba1\u6570\u5668\uff08\u901a\u5e38\u5b58\u50a8\u5728\u4e00\u4e2a\u63a7\u5236\u5757\u4e2d\uff09\u6765\u8bb0\u5f55\u5f53\u524d\u6709\u591a\u5c11\u4e2a shared_ptr \u5b9e\u4f8b\u5171\u4eab\u540c\u4e00\u5757\u8d44\u6e90\u3002 \u6bcf\u5f53\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 shared_ptr \u6216\u590d\u5236\u4e00\u4e2a shared_ptr \u65f6\uff0c\u5f15\u7528\u8ba1\u6570\u52a0 1\u3002 \u6bcf\u5f53\u4e00\u4e2a shared_ptr \u88ab\u9500\u6bc1\u6216\u91cd\u7f6e\u65f6\uff0c\u5f15\u7528\u8ba1\u6570\u51cf 1\u3002 \u5f53\u5f15\u7528\u8ba1\u6570\u51cf\u4e3a 0 \u65f6\uff0c\u8d44\u6e90\u4f1a\u88ab\u91ca\u653e\u3002 \u63a7\u5236\u5757 \uff1a shared_ptr \u7684\u5b9e\u73b0\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u63a7\u5236\u5757\uff08Control Block\uff09\uff0c\u5b83\u5305\u542b\uff1a \u5f15\u7528\u8ba1\u6570 \uff1a\u8bb0\u5f55\u5f53\u524d\u6709\u591a\u5c11\u4e2a shared_ptr \u5b9e\u4f8b\u5171\u4eab\u8d44\u6e90\u3002 \u5f31\u5f15\u7528\u8ba1\u6570 \uff1a\u8bb0\u5f55\u5f53\u524d\u6709\u591a\u5c11\u4e2a weak_ptr \u5b9e\u4f8b\u89c2\u5bdf\u8d44\u6e90\u3002 \u8d44\u6e90\u6307\u9488 \uff1a\u6307\u5411\u88ab\u7ba1\u7406\u7684\u8d44\u6e90\u3002 \u5220\u9664\u5668 \uff1a\u7528\u4e8e\u91ca\u653e\u8d44\u6e90\u7684\u81ea\u5b9a\u4e49\u5220\u9664\u5668\uff08\u5982\u679c\u63d0\u4f9b\uff09\u3002 \u7ebf\u7a0b\u5b89\u5168 \uff1a shared_ptr \u7684\u5f15\u7528\u8ba1\u6570\u64cd\u4f5c\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5b89\u5168\u5730\u5171\u4eab\u540c\u4e00\u4e2a shared_ptr \u3002 \u4f46\u5bf9\u8d44\u6e90\u672c\u8eab\u7684\u8bbf\u95ee\u9700\u8981\u989d\u5916\u7684\u540c\u6b65\u673a\u5236\uff08\u5982 std::mutex \uff09\u3002 shared_ptr \u7684\u5de5\u4f5c\u6d41\u7a0b 1. \u521b\u5efa shared_ptr std :: shared_ptr < int > sp = std :: make_shared < int > ( 10 ); - make_shared \u4f1a\u5206\u914d\u4e00\u5757\u5185\u5b58\uff0c\u540c\u65f6\u5b58\u50a8\u63a7\u5236\u5757\u548c\u8d44\u6e90\uff0c\u51cf\u5c11\u5185\u5b58\u5206\u914d\u7684\u5f00\u9500\u3002 - \u521d\u59cb\u5316\u5f15\u7528\u8ba1\u6570\u4e3a 1\u3002 2. \u590d\u5236 shared_ptr std :: shared_ptr < int > sp2 = sp ; - \u5f15\u7528\u8ba1\u6570\u52a0 1\u3002 - sp \u548c sp2 \u5171\u4eab\u540c\u4e00\u5757\u8d44\u6e90\u3002 3. \u9500\u6bc1 shared_ptr sp . reset (); - \u5f15\u7528\u8ba1\u6570\u51cf 1\u3002 - \u5982\u679c\u5f15\u7528\u8ba1\u6570\u51cf\u4e3a 0\uff0c\u91ca\u653e\u8d44\u6e90\u3002 shared_ptr \u7684\u5b9e\u73b0\u793a\u610f \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5316\u7684 shared_ptr \u5b9e\u73b0\u793a\u610f\uff1a template < typename T > class SharedPtr { private : T * ptr ; // \u88ab\u7ba1\u7406\u7684\u8d44\u6e90 int * ref_count ; // \u5f15\u7528\u8ba1\u6570 public : // \u6784\u9020\u51fd\u6570 explicit SharedPtr ( T * p = nullptr ) : ptr ( p ), ref_count ( new int ( 1 )) {} // \u62f7\u8d1d\u6784\u9020\u51fd\u6570 SharedPtr ( const SharedPtr & other ) : ptr ( other . ptr ), ref_count ( other . ref_count ) { ( * ref_count ) ++ ; } // \u8d4b\u503c\u8fd0\u7b97\u7b26 SharedPtr & operator = ( const SharedPtr & other ) { if ( this != & other ) { // \u5148\u91ca\u653e\u5f53\u524d\u8d44\u6e90 if ( -- ( * ref_count ) == 0 ) { delete ptr ; delete ref_count ; } // \u590d\u5236\u65b0\u7684\u8d44\u6e90 ptr = other . ptr ; ref_count = other . ref_count ; ( * ref_count ) ++ ; } return * this ; } // \u6790\u6784\u51fd\u6570 ~ SharedPtr () { if ( -- ( * ref_count ) == 0 ) { delete ptr ; delete ref_count ; } } // \u83b7\u53d6\u8d44\u6e90 T * get () const { return ptr ; } // \u91cd\u8f7d * \u548c -> T & operator * () const { return * ptr ; } T * operator -> () const { return ptr ; } }; shared_ptr \u7684\u4f18\u7f3a\u70b9 \u4f18\u70b9 \uff1a \u81ea\u52a8\u5185\u5b58\u7ba1\u7406 \uff1a\u901a\u8fc7\u5f15\u7528\u8ba1\u6570\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002 \u7ebf\u7a0b\u5b89\u5168 \uff1a\u5f15\u7528\u8ba1\u6570\u7684\u64cd\u4f5c\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002 \u7075\u6d3b\u6027 \uff1a\u652f\u6301\u81ea\u5b9a\u4e49\u5220\u9664\u5668\uff0c\u9002\u7528\u4e8e\u590d\u6742\u8d44\u6e90\u7ba1\u7406\u3002 \u7f3a\u70b9 \uff1a \u5faa\u73af\u5f15\u7528\u95ee\u9898 \uff1a \u5982\u679c\u4e24\u4e2a\u5bf9\u8c61\u4e92\u76f8\u6301\u6709\u5bf9\u65b9\u7684 shared_ptr \uff0c\u4f1a\u5bfc\u81f4\u5f15\u7528\u8ba1\u6570\u6c38\u8fdc\u4e0d\u4e3a 0\uff0c\u8d44\u6e90\u65e0\u6cd5\u91ca\u653e\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a\u4f7f\u7528 std::weak_ptr \u6253\u7834\u5faa\u73af\u5f15\u7528\u3002 \u6027\u80fd\u5f00\u9500 \uff1a \u5f15\u7528\u8ba1\u6570\u7684\u7ef4\u62a4\u9700\u8981\u4e00\u5b9a\u7684\u6027\u80fd\u5f00\u9500\uff0c\u5c24\u5176\u662f\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u3002 \u603b\u7ed3 shared_ptr \u901a\u8fc7\u5f15\u7528\u8ba1\u6570\u548c\u63a7\u5236\u5757\u5b9e\u73b0\u5171\u4eab\u6240\u6709\u6743\uff0c\u9002\u7528\u4e8e\u591a\u4e2a\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u8d44\u6e90\u7684\u573a\u666f\u3002 \u5b83\u7684\u5f15\u7528\u8ba1\u6570\u64cd\u4f5c\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u907f\u514d\u5faa\u73af\u5f15\u7528\u95ee\u9898\u3002 \u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u63a8\u8350\u4f7f\u7528 std::make_shared \u521b\u5efa shared_ptr \uff0c\u4ee5\u51cf\u5c11\u5185\u5b58\u5206\u914d\u7684\u5f00\u9500\u3002 \u53f3\u503c\u5f15\u7528\u7684\u4f5c\u7528 \u53f3\u503c\u5f15\u7528\uff08 T&& \uff09\u662f C++11 \u5f15\u5165\u7684\u4e00\u79cd\u65b0\u7279\u6027\uff0c\u4e3b\u8981\u7528\u4e8e\u652f\u6301 \u79fb\u52a8\u8bed\u4e49 \u548c \u5b8c\u7f8e\u8f6c\u53d1 \uff0c\u4ece\u800c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\u548c\u7075\u6d3b\u6027\u3002 \u53f3\u503c\u5f15\u7528\u7684\u4e3b\u8981\u4f5c\u7528 1. \u652f\u6301\u79fb\u52a8\u8bed\u4e49 \u79fb\u52a8\u8bed\u4e49 \u5141\u8bb8\u5bf9\u8c61\u7684\u8d44\u6e90\uff08\u5982\u5185\u5b58\u3001\u6587\u4ef6\u53e5\u67c4\u7b49\uff09\u4ece\u4e00\u4e2a\u5bf9\u8c61\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u8fdb\u884c\u6602\u8d35\u7684\u6df1\u62f7\u8d1d\u3002 \u901a\u8fc7\u53f3\u503c\u5f15\u7528\uff0c\u53ef\u4ee5\u9ad8\u6548\u5730\u8f6c\u79fb\u8d44\u6e90\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u5185\u5b58\u5206\u914d\u548c\u6570\u636e\u590d\u5236\u3002 \u793a\u4f8b \uff1a #include <iostream> #include <vector> using namespace std ; int main () { vector < int > v1 = { 1 , 2 , 3 }; vector < int > v2 = move ( v1 ); // \u4f7f\u7528\u53f3\u503c\u5f15\u7528\u8f6c\u79fb\u8d44\u6e90 cout << \"v1 size: \" << v1 . size () << endl ; // v1 \u5df2\u88ab\u6e05\u7a7a cout << \"v2 size: \" << v2 . size () << endl ; // v2 \u62e5\u6709 v1 \u7684\u8d44\u6e90 return 0 ; } \u8f93\u51fa \uff1a v1 size: 0 v2 size: 3 \u89e3\u91ca \uff1a - move(v1) \u5c06 v1 \u8f6c\u6362\u4e3a\u53f3\u503c\u5f15\u7528\uff0c\u5141\u8bb8 v2 \u63a5\u7ba1 v1 \u7684\u8d44\u6e90\uff0c\u800c\u4e0d\u662f\u590d\u5236\u6570\u636e\u3002 - \u8fd9\u79cd\u65b9\u5f0f\u907f\u514d\u4e86\u6df1\u62f7\u8d1d\uff0c\u63d0\u9ad8\u4e86\u6027\u80fd\u3002 2. \u5b9e\u73b0\u5b8c\u7f8e\u8f6c\u53d1 \u5b8c\u7f8e\u8f6c\u53d1 \u5141\u8bb8\u51fd\u6570\u6a21\u677f\u5c06\u53c2\u6570\u5b8c\u6574\u5730\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u4fdd\u7559\u53c2\u6570\u7684\u5de6\u503c\u6216\u53f3\u503c\u5c5e\u6027\u3002 \u53f3\u503c\u5f15\u7528\u7ed3\u5408 std::forward \u53ef\u4ee5\u5b9e\u73b0\u5b8c\u7f8e\u8f6c\u53d1\u3002 \u793a\u4f8b \uff1a #include <iostream> #include <utility> using namespace std ; void process ( int & x ) { cout << \"Lvalue reference: \" << x << endl ; } void process ( int && x ) { cout << \"Rvalue reference: \" << x << endl ; } template < typename T > void forwarder ( T && arg ) { process ( forward < T > ( arg )); // \u4fdd\u7559\u53c2\u6570\u7684\u5de6\u503c\u6216\u53f3\u503c\u5c5e\u6027 } int main () { int a = 10 ; forwarder ( a ); // \u4f20\u9012\u5de6\u503c forwarder ( 20 ); // \u4f20\u9012\u53f3\u503c return 0 ; } \u8f93\u51fa \uff1a Lvalue reference: 10 Rvalue reference: 20 \u89e3\u91ca \uff1a - forward<T>(arg) \u4fdd\u7559\u4e86\u53c2\u6570\u7684\u5de6\u503c\u6216\u53f3\u503c\u5c5e\u6027\uff0c\u786e\u4fdd process \u51fd\u6570\u63a5\u6536\u5230\u6b63\u786e\u7684\u5f15\u7528\u7c7b\u578b\u3002 3. \u4f18\u5316\u4e34\u65f6\u5bf9\u8c61\u7684\u4f7f\u7528 \u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u7ed1\u5b9a\u5230\u4e34\u65f6\u5bf9\u8c61\uff08\u53f3\u503c\uff09\uff0c\u4ece\u800c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u3002 \u793a\u4f8b \uff1a #include <iostream> #include <string> using namespace std ; void print ( string && str ) { cout << \"Temporary string: \" << str << endl ; } int main () { print ( \"Hello, World!\" ); // \u4e34\u65f6\u5b57\u7b26\u4e32\u7ed1\u5b9a\u5230\u53f3\u503c\u5f15\u7528 return 0 ; } \u8f93\u51fa \uff1a Temporary string: Hello, World! \u89e3\u91ca \uff1a - \u4e34\u65f6\u5b57\u7b26\u4e32 \"Hello, World!\" \u76f4\u63a5\u7ed1\u5b9a\u5230\u53f3\u503c\u5f15\u7528\u53c2\u6570 str \uff0c\u907f\u514d\u4e86\u62f7\u8d1d\u3002 \u53f3\u503c\u5f15\u7528\u7684\u4f18\u7f3a\u70b9 \u4f18\u70b9 \uff1a \u63d0\u9ad8\u6027\u80fd \uff1a \u901a\u8fc7\u79fb\u52a8\u8bed\u4e49\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u64cd\u4f5c\uff0c\u663e\u8457\u63d0\u9ad8\u7a0b\u5e8f\u6027\u80fd\u3002 \u652f\u6301\u5b8c\u7f8e\u8f6c\u53d1 \uff1a \u4fdd\u7559\u53c2\u6570\u7684\u5de6\u503c\u6216\u53f3\u503c\u5c5e\u6027\uff0c\u589e\u5f3a\u6a21\u677f\u7684\u7075\u6d3b\u6027\u3002 \u4f18\u5316\u4e34\u65f6\u5bf9\u8c61 \uff1a \u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u4e34\u65f6\u5bf9\u8c61\uff0c\u907f\u514d\u62f7\u8d1d\u3002 \u7f3a\u70b9 \uff1a \u590d\u6742\u6027\u589e\u52a0 \uff1a \u5f15\u5165\u53f3\u503c\u5f15\u7528\u540e\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7ef4\u62a4\u6027\u53ef\u80fd\u4f1a\u964d\u4f4e\uff0c\u5c24\u5176\u662f\u5728\u6a21\u677f\u7f16\u7a0b\u4e2d\u3002 \u9700\u8981\u6ce8\u610f\u8d44\u6e90\u8f6c\u79fb\u540e\u7684\u72b6\u6001 \uff1a \u4f7f\u7528 std::move \u540e\uff0c\u6e90\u5bf9\u8c61\u53ef\u80fd\u5904\u4e8e\u672a\u5b9a\u4e49\u72b6\u6001\uff0c\u9700\u8981\u8c28\u614e\u5904\u7406\u3002 \u603b\u7ed3 \u53f3\u503c\u5f15\u7528\u7684\u6838\u5fc3\u4f5c\u7528 \uff1a \u652f\u6301\u79fb\u52a8\u8bed\u4e49\uff0c\u51cf\u5c11\u62f7\u8d1d\uff0c\u63d0\u9ad8\u6027\u80fd\u3002 \u5b9e\u73b0\u5b8c\u7f8e\u8f6c\u53d1\uff0c\u589e\u5f3a\u6a21\u677f\u7684\u7075\u6d3b\u6027\u3002 \u4f18\u5316\u4e34\u65f6\u5bf9\u8c61\u7684\u4f7f\u7528\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u3002 \u53f3\u503c\u5f15\u7528\u7684\u5f15\u5165 \u4f7f\u5f97 C++ \u5728\u6027\u80fd\u4f18\u5316\u548c\u6cdb\u578b\u7f16\u7a0b\u65b9\u9762\u66f4\u52a0\u5f3a\u5927\uff0c\u4f46\u4e5f\u9700\u8981\u5f00\u53d1\u8005\u5bf9\u5176\u4f7f\u7528\u573a\u666f\u548c\u6ce8\u610f\u4e8b\u9879\u6709\u6df1\u5165\u7406\u89e3\u3002 \u5de6\u503c\u5f15\u7528\u548c\u53f3\u503c\u5f15\u7528\u7684\u6982\u5ff5 1. \u5de6\u503c\u5f15\u7528\uff08 T& \uff09 \u5b9a\u4e49 \uff1a\u5de6\u503c\u5f15\u7528\u662f\u5bf9\u4e00\u4e2a\u5de6\u503c\uff08\u5728\u5185\u5b58\u4e2d\u6709\u660e\u786e\u5730\u5740\u7684\u5bf9\u8c61\uff09\u7684\u5f15\u7528\u3002 \u7279\u70b9 \uff1a \u5de6\u503c\u5f15\u7528\u53ea\u80fd\u7ed1\u5b9a\u5230\u5de6\u503c\uff08\u5982\u53d8\u91cf\u3001\u6570\u7ec4\u5143\u7d20\u7b49\uff09\u3002 \u5de6\u503c\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\u4e0e\u88ab\u5f15\u7528\u7684\u5bf9\u8c61\u4e00\u81f4\u3002 \u793a\u4f8b \uff1a int a = 10 ; int & ref = a ; // ref \u662f a \u7684\u5de6\u503c\u5f15\u7528 ref = 20 ; // \u4fee\u6539 ref \u4f1a\u5f71\u54cd a cout << a ; // \u8f93\u51fa 20 2. \u53f3\u503c\u5f15\u7528\uff08 T&& \uff09 \u5b9a\u4e49 \uff1a\u53f3\u503c\u5f15\u7528\u662f\u5bf9\u4e00\u4e2a\u53f3\u503c\uff08\u4e34\u65f6\u5bf9\u8c61\u6216\u4e0d\u5728\u5185\u5b58\u4e2d\u6709\u660e\u786e\u5730\u5740\u7684\u5bf9\u8c61\uff09\u7684\u5f15\u7528\u3002 \u7279\u70b9 \uff1a \u53f3\u503c\u5f15\u7528\u53ea\u80fd\u7ed1\u5b9a\u5230\u53f3\u503c\uff08\u5982\u4e34\u65f6\u5bf9\u8c61\u3001\u5b57\u9762\u91cf\u7b49\uff09\u3002 \u53f3\u503c\u5f15\u7528\u901a\u5e38\u7528\u4e8e\u79fb\u52a8\u8bed\u4e49\u548c\u4f18\u5316\u4e34\u65f6\u5bf9\u8c61\u7684\u4f7f\u7528\u3002 \u793a\u4f8b \uff1a int && rref = 10 ; // rref \u662f\u4e00\u4e2a\u53f3\u503c\u5f15\u7528\uff0c\u7ed1\u5b9a\u5230\u4e34\u65f6\u503c 10 cout << rref ; // \u8f93\u51fa 10 \u5de6\u503c\u5f15\u7528\u548c\u53f3\u503c\u5f15\u7528\u7684\u533a\u522b \u7279\u6027 \u5de6\u503c\u5f15\u7528\uff08 T& \uff09 \u53f3\u503c\u5f15\u7528\uff08 T&& \uff09 \u7ed1\u5b9a\u5bf9\u8c61 \u5de6\u503c\uff08\u6709\u660e\u786e\u5730\u5740\u7684\u5bf9\u8c61\uff09 \u53f3\u503c\uff08\u4e34\u65f6\u5bf9\u8c61\u6216\u5b57\u9762\u91cf\uff09 \u7528\u9014 \u7528\u4e8e\u4f20\u9012\u548c\u4fee\u6539\u5de6\u503c \u7528\u4e8e\u79fb\u52a8\u8bed\u4e49\u548c\u4f18\u5316\u4e34\u65f6\u5bf9\u8c61 \u751f\u547d\u5468\u671f \u4e0e\u88ab\u5f15\u7528\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u4e00\u81f4 \u901a\u5e38\u7ed1\u5b9a\u5230\u77ed\u751f\u547d\u5468\u671f\u7684\u4e34\u65f6\u5bf9\u8c61 \u793a\u4f8b int& ref = a; int&& rref = 10; \u5de6\u503c\u5f15\u7528\u548c\u53f3\u503c\u5f15\u7528\u7684\u7528\u9014 1. \u5de6\u503c\u5f15\u7528\u7684\u7528\u9014 \u4fee\u6539\u53d8\u91cf \uff1a \u5de6\u503c\u5f15\u7528\u53ef\u4ee5\u7528\u6765\u4fee\u6539\u53d8\u91cf\u7684\u503c\u3002 void modify ( int & x ) { x = 42 ; } int a = 10 ; modify ( a ); // a \u88ab\u4fee\u6539\u4e3a 42 \u907f\u514d\u62f7\u8d1d \uff1a \u5de6\u503c\u5f15\u7528\u53ef\u4ee5\u907f\u514d\u5728\u51fd\u6570\u8c03\u7528\u65f6\u62f7\u8d1d\u5bf9\u8c61\uff0c\u63d0\u9ad8\u6027\u80fd\u3002 void print ( const string & str ) { // \u4f7f\u7528\u5de6\u503c\u5f15\u7528\u907f\u514d\u62f7\u8d1d cout << str << endl ; } string s = \"Hello\" ; print ( s ); 2. \u53f3\u503c\u5f15\u7528\u7684\u7528\u9014 \u79fb\u52a8\u8bed\u4e49 \uff1a \u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u901a\u8fc7 std::move \u8f6c\u79fb\u8d44\u6e90\uff0c\u907f\u514d\u6df1\u62f7\u8d1d\u3002 vector < int > v1 = { 1 , 2 , 3 }; vector < int > v2 = move ( v1 ); // v2 \u63a5\u7ba1 v1 \u7684\u8d44\u6e90 \u4f18\u5316\u4e34\u65f6\u5bf9\u8c61 \uff1a \u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u7ed1\u5b9a\u5230\u4e34\u65f6\u5bf9\u8c61\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u3002 void print ( string && str ) { // \u63a5\u53d7\u53f3\u503c\u5f15\u7528 cout << str << endl ; } print ( \"Hello, World!\" ); // \u4e34\u65f6\u5b57\u7b26\u4e32\u76f4\u63a5\u7ed1\u5b9a\u5230\u53f3\u503c\u5f15\u7528 \u5b8c\u7f8e\u8f6c\u53d1 \uff1a \u53f3\u503c\u5f15\u7528\u7ed3\u5408 std::forward \u53ef\u4ee5\u5b9e\u73b0\u5b8c\u7f8e\u8f6c\u53d1\uff0c\u4fdd\u7559\u53c2\u6570\u7684\u5de6\u503c\u6216\u53f3\u503c\u5c5e\u6027\u3002 template < typename T > void forwarder ( T && arg ) { process ( forward < T > ( arg )); // \u4fdd\u7559\u53c2\u6570\u7684\u5de6\u503c\u6216\u53f3\u503c\u5c5e\u6027 } \u603b\u7ed3 \u5de6\u503c\u5f15\u7528 \uff1a \u7528\u4e8e\u7ed1\u5b9a\u548c\u64cd\u4f5c\u5de6\u503c\uff0c\u5e38\u7528\u4e8e\u4fee\u6539\u53d8\u91cf\u6216\u907f\u514d\u62f7\u8d1d\u3002 \u53f3\u503c\u5f15\u7528 \uff1a \u7528\u4e8e\u7ed1\u5b9a\u53f3\u503c\uff0c\u652f\u6301\u79fb\u52a8\u8bed\u4e49\u3001\u4f18\u5316\u4e34\u65f6\u5bf9\u8c61\u548c\u5b9e\u73b0\u5b8c\u7f8e\u8f6c\u53d1\u3002 \u9009\u62e9\u4f7f\u7528 \uff1a \u5982\u679c\u9700\u8981\u4fee\u6539\u6216\u957f\u671f\u4f7f\u7528\u5bf9\u8c61\uff0c\u4f7f\u7528\u5de6\u503c\u5f15\u7528\u3002 \u5982\u679c\u9700\u8981\u4f18\u5316\u6027\u80fd\u6216\u5904\u7406\u4e34\u65f6\u5bf9\u8c61\uff0c\u4f7f\u7528\u53f3\u503c\u5f15\u7528\u3002 \u60ac\u6302\u6307\u9488\u4e0e\u91ce\u6307\u9488\u7684\u533a\u522b 1. \u6982\u5ff5 \u60ac\u6302\u6307\u9488\uff08Dangling Pointer\uff09 \uff1a \u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u5df2\u7ecf\u88ab\u91ca\u653e\u6216\u65e0\u6548\uff0c\u4f46\u6307\u9488\u672c\u8eab\u4ecd\u7136\u5b58\u5728\u3002 \u8bbf\u95ee\u60ac\u6302\u6307\u9488\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 \u91ce\u6307\u9488\uff08Wild Pointer\uff09 \uff1a \u6307\u9488\u672a\u88ab\u521d\u59cb\u5316\uff0c\u6307\u5411\u4e00\u4e2a\u672a\u77e5\u6216\u968f\u673a\u7684\u5185\u5b58\u5730\u5740\u3002 \u8bbf\u95ee\u91ce\u6307\u9488\u540c\u6837\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 2. \u4ea7\u751f\u539f\u56e0 \u60ac\u6302\u6307\u9488 \uff1a \u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u88ab\u91ca\u653e\u540e\uff0c\u6307\u9488\u672a\u88ab\u7f6e\u4e3a nullptr \u3002 \u4f8b\u5982\uff1a int * ptr = new int ( 10 ); delete ptr ; // \u91ca\u653e\u5185\u5b58 // \u6b64\u65f6 ptr \u662f\u60ac\u6302\u6307\u9488 \u91ce\u6307\u9488 \uff1a \u6307\u9488\u672a\u88ab\u521d\u59cb\u5316\uff0c\u76f4\u63a5\u4f7f\u7528\u3002 \u4f8b\u5982\uff1a int * ptr ; // \u672a\u521d\u59cb\u5316 * ptr = 10 ; // \u91ce\u6307\u9488\uff0c\u6307\u5411\u672a\u77e5\u5730\u5740 3. \u89e3\u51b3\u65b9\u6cd5 \u60ac\u6302\u6307\u9488 \uff1a \u5728\u91ca\u653e\u5185\u5b58\u540e\uff0c\u5c06\u6307\u9488\u7f6e\u4e3a nullptr \u3002 \u4f8b\u5982\uff1a int * ptr = new int ( 10 ); delete ptr ; ptr = nullptr ; // \u907f\u514d\u60ac\u6302\u6307\u9488 \u91ce\u6307\u9488 \uff1a \u5728\u5b9a\u4e49\u6307\u9488\u65f6\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u4f8b\u5982\uff1a int * ptr = nullptr ; // \u521d\u59cb\u5316\u4e3a nullptr 4. \u533a\u522b\u603b\u7ed3 \u7279\u6027 \u60ac\u6302\u6307\u9488 \u91ce\u6307\u9488 \u5b9a\u4e49 \u6307\u5411\u5df2\u91ca\u653e\u6216\u65e0\u6548\u5185\u5b58\u7684\u6307\u9488 \u672a\u521d\u59cb\u5316\uff0c\u6307\u5411\u672a\u77e5\u5730\u5740\u7684\u6307\u9488 \u4ea7\u751f\u539f\u56e0 \u5185\u5b58\u91ca\u653e\u540e\u672a\u5c06\u6307\u9488\u7f6e\u4e3a nullptr \u6307\u9488\u672a\u521d\u59cb\u5316 \u89e3\u51b3\u65b9\u6cd5 \u91ca\u653e\u5185\u5b58\u540e\u5c06\u6307\u9488\u7f6e\u4e3a nullptr \u5b9a\u4e49\u6307\u9488\u65f6\u8fdb\u884c\u521d\u59cb\u5316 \u5371\u5bb3 \u53ef\u80fd\u8bbf\u95ee\u5df2\u91ca\u653e\u7684\u5185\u5b58\uff0c\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a \u53ef\u80fd\u8bbf\u95ee\u968f\u673a\u5730\u5740\uff0c\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a \u603b\u7ed3 \u60ac\u6302\u6307\u9488 \uff1a\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u5df2\u88ab\u91ca\u653e\uff0c\u9700\u901a\u8fc7\u5c06\u6307\u9488\u7f6e\u4e3a nullptr \u907f\u514d\u3002 \u91ce\u6307\u9488 \uff1a\u6307\u9488\u672a\u521d\u59cb\u5316\uff0c\u9700\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\u4e3a nullptr \u3002 \u4e24\u8005\u90fd\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\uff0c\u9700\u5728\u7f16\u7a0b\u4e2d\u5c0f\u5fc3\u907f\u514d\u3002 \u52a8\u6001\u591a\u6001\u7684\u4f5c\u7528 \u52a8\u6001\u591a\u6001\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u6027\uff0c\u5141\u8bb8\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u76f8\u5e94\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u8c03\u7528\u54ea\u4e2a\u65b9\u6cd5\u3002\u5b83\u901a\u8fc7 \u865a\u51fd\u6570 \u548c \u7ee7\u627f \u5b9e\u73b0\u3002 \u4f5c\u7528 \uff1a \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027 \uff1a \u52a8\u6001\u591a\u6001\u5141\u8bb8\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\uff0c\u65b9\u4fbf\u6269\u5c55\u548c\u7ef4\u62a4\u4ee3\u7801\u3002 \u4f8b\u5982\uff0c\u53ef\u4ee5\u901a\u8fc7\u57fa\u7c7b\u63a5\u53e3\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u800c\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801\u3002 \u5b9e\u73b0\u8fd0\u884c\u65f6\u7684\u884c\u4e3a\u52a8\u6001\u7ed1\u5b9a \uff1a \u52a8\u6001\u591a\u6001\u901a\u8fc7\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u5728\u8fd0\u884c\u65f6\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff0c\u5b9e\u73b0\u52a8\u6001\u7ed1\u5b9a\u3002 \u652f\u6301\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u539f\u5219 \uff1a \u9075\u5faa \u5f00\u95ed\u539f\u5219 \uff08\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed\uff09\uff0c\u901a\u8fc7\u7ee7\u627f\u548c\u591a\u6001\u5b9e\u73b0\u4ee3\u7801\u7684\u590d\u7528\u548c\u6269\u5c55\u3002 \u7b80\u5316\u4ee3\u7801\u903b\u8f91 \uff1a \u52a8\u6001\u591a\u6001\u53ef\u4ee5\u907f\u514d\u590d\u6742\u7684\u6761\u4ef6\u5206\u652f\uff08\u5982 if-else \u6216 switch-case \uff09\uff0c\u901a\u8fc7\u591a\u6001\u673a\u5236\u76f4\u63a5\u8c03\u7528\u5408\u9002\u7684\u51fd\u6570\u3002 \u52a8\u6001\u591a\u6001\u7684\u5fc5\u8981\u6761\u4ef6 \u8981\u5b9e\u73b0\u52a8\u6001\u591a\u6001\uff0c\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a \u7ee7\u627f\u5173\u7cfb \uff1a \u5fc5\u987b\u6709\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\uff0c\u52a8\u6001\u591a\u6001\u4f9d\u8d56\u4e8e\u7ee7\u627f\u673a\u5236\u3002 \u865a\u51fd\u6570 \uff1a \u57fa\u7c7b\u4e2d\u7684\u51fd\u6570\u5fc5\u987b\u58f0\u660e\u4e3a virtual \uff0c\u4ee5\u652f\u6301\u52a8\u6001\u7ed1\u5b9a\u3002 \u5982\u679c\u57fa\u7c7b\u51fd\u6570\u672a\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u5219\u8c03\u7528\u7684\u662f\u57fa\u7c7b\u7684\u51fd\u6570\uff08\u9759\u6001\u7ed1\u5b9a\uff09\u3002 \u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528 \uff1a \u5fc5\u987b\u901a\u8fc7\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\uff0c\u624d\u80fd\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002 \u5982\u679c\u76f4\u63a5\u4f7f\u7528\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8c03\u7528\u51fd\u6570\uff0c\u5219\u662f\u9759\u6001\u7ed1\u5b9a\u3002 \u793a\u4f8b\u4ee3\u7801 \u52a8\u6001\u591a\u6001\u7684\u5b9e\u73b0 #include <iostream> using namespace std ; // \u57fa\u7c7b class Animal { public : virtual void speak () { // \u865a\u51fd\u6570 cout << \"Animal speaks\" << endl ; } virtual ~ Animal () {} // \u865a\u6790\u6784\u51fd\u6570\uff0c\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f }; // \u6d3e\u751f\u7c7b class Dog : public Animal { public : void speak () override { // \u91cd\u5199\u57fa\u7c7b\u7684\u865a\u51fd\u6570 cout << \"Dog barks\" << endl ; } }; class Cat : public Animal { public : void speak () override { // \u91cd\u5199\u57fa\u7c7b\u7684\u865a\u51fd\u6570 cout << \"Cat meows\" << endl ; } }; int main () { Animal * animal1 = new Dog (); // \u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61 Animal * animal2 = new Cat (); animal1 -> speak (); // \u8c03\u7528 Dog \u7684 speak()\uff0c\u8f93\u51fa \"Dog barks\" animal2 -> speak (); // \u8c03\u7528 Cat \u7684 speak()\uff0c\u8f93\u51fa \"Cat meows\" delete animal1 ; delete animal2 ; return 0 ; } \u8f93\u51fa \uff1a Dog barks Cat meows \u52a8\u6001\u591a\u6001\u7684\u5b9e\u73b0\u539f\u7406 \u865a\u51fd\u6570\u8868\uff08vtable\uff09 \uff1a \u6bcf\u4e2a\u7c7b\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff0c\u5b58\u50a8\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u5730\u5740\u3002 \u5f53\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u67e5\u627e\u865a\u51fd\u6570\u8868\uff0c\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u3002 \u52a8\u6001\u7ed1\u5b9a \uff1a \u5728\u8fd0\u884c\u65f6\uff0c\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u52a8\u6001\u7ed1\u5b9a\u5230\u6b63\u786e\u7684\u51fd\u6570\u5b9e\u73b0\u3002 \u9759\u6001\u591a\u6001\u4e0e\u52a8\u6001\u591a\u6001\u7684\u5bf9\u6bd4 \u7279\u6027 \u9759\u6001\u591a\u6001 \uff08\u7f16\u8bd1\u65f6\u591a\u6001\uff09 \u52a8\u6001\u591a\u6001 \uff08\u8fd0\u884c\u65f6\u591a\u6001\uff09 \u5b9e\u73b0\u65b9\u5f0f \u51fd\u6570\u91cd\u8f7d\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d \u865a\u51fd\u6570\u3001\u7ee7\u627f \u7ed1\u5b9a\u65f6\u95f4 \u7f16\u8bd1\u65f6\u7ed1\u5b9a \u8fd0\u884c\u65f6\u7ed1\u5b9a \u6027\u80fd \u65e0\u8fd0\u884c\u65f6\u5f00\u9500 \u6709\u4e00\u5b9a\u7684\u8fd0\u884c\u65f6\u5f00\u9500\uff08\u865a\u51fd\u6570\u8868\u67e5\u627e\uff09 \u7075\u6d3b\u6027 \u7075\u6d3b\u6027\u8f83\u4f4e \u7075\u6d3b\u6027\u8f83\u9ad8 \u603b\u7ed3 \u52a8\u6001\u591a\u6001\u7684\u4f5c\u7528 \uff1a \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002 \u5b9e\u73b0\u8fd0\u884c\u65f6\u7684\u52a8\u6001\u7ed1\u5b9a\u3002 \u9075\u5faa\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u539f\u5219\uff0c\u7b80\u5316\u4ee3\u7801\u903b\u8f91\u3002 \u5fc5\u8981\u6761\u4ef6 \uff1a \u5fc5\u987b\u6709\u7ee7\u627f\u5173\u7cfb\u3002 \u57fa\u7c7b\u51fd\u6570\u5fc5\u987b\u662f\u865a\u51fd\u6570\u3002 \u5fc5\u987b\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u51fd\u6570\u3002 ((void (*)())0)() \u662f\u4e00\u4e2a C/C++ \u4e2d\u7684\u590d\u6742\u8868\u8fbe\u5f0f\uff0c\u4e0b\u9762\u9010\u6b65\u89e3\u6790\u5176\u542b\u4e49\uff1a 1. \u62c6\u89e3\u8868\u8fbe\u5f0f ((void (*)())0) \uff1a \u8fd9\u662f\u4e00\u4e2a\u7c7b\u578b\u8f6c\u6362\uff0c\u5c06\u6574\u6570 0 \u8f6c\u6362\u4e3a\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u3002 void (*)() \u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u7c7b\u578b\uff0c\u8868\u793a\u6307\u5411\u8fd4\u56de\u7c7b\u578b\u4e3a void \u3001\u65e0\u53c2\u6570\u7684\u51fd\u6570\u7684\u6307\u9488\u3002 0 \u662f\u4e00\u4e2a\u7a7a\u6307\u9488\u5e38\u91cf\uff0c\u8868\u793a\u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u6307\u5411 NULL \u3002 ((void (*)())0)() \uff1a \u8fd9\u662f\u5bf9\u4e0a\u8ff0\u51fd\u6570\u6307\u9488\u7684\u8c03\u7528\u3002 \u7531\u4e8e\u51fd\u6570\u6307\u9488\u6307\u5411 NULL \uff0c\u8c03\u7528\u5b83\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 2. \u9010\u6b65\u89e3\u6790 void (*)() \u7684\u542b\u4e49 \uff1a void (*)() \u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u7c7b\u578b\uff0c\u8868\u793a\u6307\u5411\u8fd4\u56de\u7c7b\u578b\u4e3a void \u3001\u65e0\u53c2\u6570\u7684\u51fd\u6570\u7684\u6307\u9488\u3002 (void (*)())0 \u7684\u542b\u4e49 \uff1a \u5c06\u6574\u6570 0 \u8f6c\u6362\u4e3a void (*)() \u7c7b\u578b\u7684\u51fd\u6570\u6307\u9488\u3002 \u8fd9\u91cc\u7684 0 \u662f\u4e00\u4e2a\u7a7a\u6307\u9488\u5e38\u91cf\uff0c\u8868\u793a\u51fd\u6570\u6307\u9488\u672a\u6307\u5411\u4efb\u4f55\u6709\u6548\u7684\u51fd\u6570\u3002 ((void (*)())0) \u7684\u542b\u4e49 \uff1a \u8fd9\u662f\u5bf9 (void (*)())0 \u7684\u62ec\u53f7\u5305\u88f9\uff0c\u660e\u786e\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u3002 ((void (*)())0)() \u7684\u542b\u4e49 \uff1a \u8fd9\u662f\u5bf9\u51fd\u6570\u6307\u9488\u7684\u8c03\u7528\u3002 \u7531\u4e8e\u51fd\u6570\u6307\u9488\u6307\u5411 NULL \uff0c\u8c03\u7528\u5b83\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 3. \u603b\u7ed3 \u8bed\u6cd5\u4e0a \uff1a ((void (*)())0) \u5c06\u6574\u6570 0 \u8f6c\u6362\u4e3a\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u3002 () \u8868\u793a\u5bf9\u8be5\u51fd\u6570\u6307\u9488\u7684\u8c03\u7528\u3002 \u884c\u4e3a\u4e0a \uff1a \u7531\u4e8e\u51fd\u6570\u6307\u9488\u6307\u5411 NULL \uff0c\u8c03\u7528\u5b83\u4f1a\u5bfc\u81f4 \u672a\u5b9a\u4e49\u884c\u4e3a \uff0c\u53ef\u80fd\u5f15\u53d1\u7a0b\u5e8f\u5d29\u6e83\u3002 4. \u6ce8\u610f\u4e8b\u9879 \u5b9e\u9645\u610f\u4e49 \uff1a \u8fd9\u79cd\u8868\u8fbe\u5f0f\u901a\u5e38\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u53ef\u80fd\u662f\u4e3a\u4e86\u6d4b\u8bd5\u6216\u5c55\u793a\u8bed\u8a00\u7279\u6027\u3002 \u5728\u5b9e\u9645\u4ee3\u7801\u4e2d\uff0c\u8c03\u7528\u4e00\u4e2a\u7a7a\u6307\u9488\u51fd\u6570\u662f\u5371\u9669\u7684\uff0c\u5e94\u8be5\u907f\u514d\u3002 \u5b89\u5168\u6027 \uff1a \u5982\u679c\u9700\u8981\u8c03\u7528\u51fd\u6570\u6307\u9488\uff0c\u5fc5\u987b\u786e\u4fdd\u6307\u9488\u6307\u5411\u4e00\u4e2a\u6709\u6548\u7684\u51fd\u6570\u5730\u5740\u3002 \u793a\u4f8b\u4ee3\u7801 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u5b89\u5168\u8c03\u7528\u51fd\u6570\u6307\u9488\u7684\u793a\u4f8b\uff1a #include <iostream> using namespace std ; void myFunction () { cout << \"Hello, World!\" << endl ; } int main () { void ( * funcPtr )() = myFunction ; // \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u5e76\u6307\u5411\u6709\u6548\u51fd\u6570 funcPtr (); // \u8c03\u7528\u51fd\u6570\u6307\u9488\uff0c\u8f93\u51fa \"Hello, World!\" return 0 ; } \u8f93\u51fa \uff1a Hello, World! \u51fd\u6570\u6307\u9488\u6709\u4ec0\u4e48\u7528\u5904 1. \u52a8\u6001\u8c03\u7528\u51fd\u6570 \u51fd\u6570\u6307\u9488\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u3002 \u5e94\u7528\u573a\u666f \uff1a \u5b9e\u73b0\u56de\u8c03\u673a\u5236\u3002 \u6839\u636e\u6761\u4ef6\u52a8\u6001\u9009\u62e9\u4e0d\u540c\u7684\u51fd\u6570\u6267\u884c\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; void add ( int a , int b ) { cout << \"Sum: \" << a + b << endl ; } void multiply ( int a , int b ) { cout << \"Product: \" << a * b << endl ; } int main () { void ( * operation )( int , int ); // \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6307\u9488 operation = add ; // \u6307\u5411 add \u51fd\u6570 operation ( 3 , 4 ); // \u8c03\u7528 add\uff0c\u8f93\u51fa \"Sum: 7\" operation = multiply ; // \u6307\u5411 multiply \u51fd\u6570 operation ( 3 , 4 ); // \u8c03\u7528 multiply\uff0c\u8f93\u51fa \"Product: 12\" return 0 ; } 2. \u5b9e\u73b0\u56de\u8c03\u673a\u5236 \u51fd\u6570\u6307\u9488\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u5b9e\u73b0\u56de\u8c03\u673a\u5236\u3002 \u5e94\u7528\u573a\u666f \uff1a \u4e8b\u4ef6\u9a71\u52a8\u7f16\u7a0b\uff08\u5982 GUI \u7a0b\u5e8f\uff09\u3002 \u5f02\u6b65\u64cd\u4f5c\u7684\u56de\u8c03\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; void onSuccess () { cout << \"Operation succeeded!\" << endl ; } void onFailure () { cout << \"Operation failed!\" << endl ; } void performOperation ( bool success , void ( * callback )()) { if ( success ) { callback (); // \u8c03\u7528\u56de\u8c03\u51fd\u6570 } } int main () { performOperation ( true , onSuccess ); // \u8f93\u51fa \"Operation succeeded!\" performOperation ( false , onFailure ); // \u65e0\u8f93\u51fa return 0 ; } 3. \u5b9e\u73b0\u591a\u6001\u884c\u4e3a \u51fd\u6570\u6307\u9488\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u591a\u6001\u884c\u4e3a\uff0c\u5c24\u5176\u662f\u5728 C \u4e2d\uff08\u6ca1\u6709\u7c7b\u548c\u865a\u51fd\u6570\u7684\u60c5\u51b5\u4e0b\uff09\u3002 \u5e94\u7528\u573a\u666f \uff1a \u5b9e\u73b0\u7c7b\u4f3c\u4e8e C++ \u865a\u51fd\u6570\u7684\u529f\u80fd\u3002 \u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u63a5\u53e3\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; // \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5305\u542b\u4e00\u4e2a\u51fd\u6570\u6307\u9488 struct Animal { void ( * speak )(); // \u51fd\u6570\u6307\u9488\uff0c\u7528\u4e8e\u6307\u5411\u4e0d\u540c\u7684\u51fd\u6570 }; // \u5b9a\u4e49\u4e24\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u8868\u793a\u72d7\u548c\u732b\u7684\u884c\u4e3a void dogSpeak () { cout << \"Dog barks\" << endl ; } void catSpeak () { cout << \"Cat meows\" << endl ; } int main () { // \u521b\u5efa\u4e24\u4e2a Animal \u5bf9\u8c61\uff0c\u5e76\u5c06\u51fd\u6570\u6307\u9488\u6307\u5411\u4e0d\u540c\u7684\u51fd\u6570 Animal dog = { dogSpeak }; Animal cat = { catSpeak }; // \u8c03\u7528\u51fd\u6570\u6307\u9488\uff0c\u6267\u884c\u5bf9\u5e94\u7684\u884c\u4e3a dog . speak (); // \u8f93\u51fa \"Dog barks\" cat . speak (); // \u8f93\u51fa \"Cat meows\" return 0 ; } 4. \u5b9e\u73b0\u51fd\u6570\u8868\u6216\u8df3\u8f6c\u8868 \u51fd\u6570\u6307\u9488\u53ef\u4ee5\u7528\u6765\u6784\u5efa\u51fd\u6570\u8868\u6216\u8df3\u8f6c\u8868\uff0c\u65b9\u4fbf\u5b9e\u73b0\u9ad8\u6548\u7684\u5206\u652f\u903b\u8f91\u3002 \u5e94\u7528\u573a\u666f \uff1a \u72b6\u6001\u673a\u3002 \u547d\u4ee4\u89e3\u6790\u5668\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; void option1 () { cout << \"Option 1 selected\" << endl ; } void option2 () { cout << \"Option 2 selected\" << endl ; } void option3 () { cout << \"Option 3 selected\" << endl ; } int main () { void ( * menu [ 3 ])() = { option1 , option2 , option3 }; // \u51fd\u6570\u6307\u9488\u6570\u7ec4 int choice ; cout << \"Enter option (0-2): \" ; cin >> choice ; if ( choice >= 0 && choice < 3 ) { menu [ choice ](); // \u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570 } else { cout << \"Invalid option\" << endl ; } return 0 ; } 5. \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027 \u51fd\u6570\u6307\u9488\u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u52a0\u7075\u6d3b\uff0c\u51cf\u5c11\u786c\u7f16\u7801\u3002 \u5e94\u7528\u573a\u666f \uff1a \u66ff\u4ee3 switch-case \u6216 if-else \u8bed\u53e5\u3002 \u5b9e\u73b0\u63d2\u4ef6\u673a\u5236\u6216\u52a8\u6001\u6269\u5c55\u529f\u80fd\u3002 \u603b\u7ed3 \u51fd\u6570\u6307\u9488\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u63d0\u4f9b\u52a8\u6001\u8c03\u7528\u7684\u80fd\u529b\uff0c\u9002\u7528\u4e8e\u4ee5\u4e0b\u573a\u666f\uff1a 1. \u52a8\u6001\u9009\u62e9\u51fd\u6570\u6267\u884c\u3002 2. \u5b9e\u73b0\u56de\u8c03\u673a\u5236\u3002 3. \u6a21\u62df\u591a\u6001\u884c\u4e3a\u3002 4. \u6784\u5efa\u51fd\u6570\u8868\u6216\u8df3\u8f6c\u8868\u3002 5. \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002 \u5728\u73b0\u4ee3 C++ \u4e2d\uff0c\u51fd\u6570\u6307\u9488\u7684\u529f\u80fd\u901a\u5e38\u88ab std::function \u548c lambda \u8868\u8fbe\u5f0f \u66ff\u4ee3\uff0c\u4f46\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6216\u6027\u80fd\u654f\u611f\u7684\u573a\u666f\u4e2d\uff0c\u51fd\u6570\u6307\u9488\u4ecd\u7136\u975e\u5e38\u6709\u7528\u3002 C\u8bed\u8a00\u7684\u6307\u9488\u548c\u5f15\u7528\u4e0eC++\u7684\u533a\u522b 1. C\u8bed\u8a00\u4e2d\u6ca1\u6709\u5f15\u7528 C\u8bed\u8a00 \uff1a C\u8bed\u8a00\u4e2d\u6ca1\u6709\u5f15\u7528\u7684\u6982\u5ff5\uff0c\u53ea\u6709\u6307\u9488\u3002 \u6307\u9488\u7528\u4e8e\u95f4\u63a5\u8bbf\u95ee\u53d8\u91cf\u6216\u5185\u5b58\u5730\u5740\u3002 \u901a\u8fc7\u6307\u9488\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u5f15\u7528\u7684\u529f\u80fd\uff0c\u4f46\u9700\u8981\u663e\u5f0f\u89e3\u5f15\u7528\u64cd\u4f5c\u3002 C++ \uff1a C++ \u5f15\u5165\u4e86\u5f15\u7528\uff08 & \uff09\uff0c\u4f5c\u4e3a\u6307\u9488\u7684\u9ad8\u7ea7\u62bd\u8c61\u3002 \u5f15\u7528\u662f\u53d8\u91cf\u7684\u522b\u540d\uff0c\u64cd\u4f5c\u5f15\u7528\u5c31\u50cf\u64cd\u4f5c\u539f\u53d8\u91cf\u4e00\u6837\uff0c\u65e0\u9700\u663e\u5f0f\u89e3\u5f15\u7528\u3002 \u793a\u4f8b \uff1a // C\u8bed\u8a00\u4e2d\u901a\u8fc7\u6307\u9488\u5b9e\u73b0\u7c7b\u4f3c\u5f15\u7528\u7684\u529f\u80fd #include <stdio.h> void modify ( int * ptr ) { * ptr = 42 ; // \u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u503c } int main () { int a = 10 ; modify ( & a ); // \u4f20\u9012\u53d8\u91cf\u5730\u5740 printf ( \"%d \\n \" , a ); // \u8f93\u51fa 42 return 0 ; } // C++\u4e2d\u76f4\u63a5\u4f7f\u7528\u5f15\u7528 #include <iostream> void modify ( int & ref ) { ref = 42 ; // \u4fee\u6539\u5f15\u7528\u7684\u503c } int main () { int a = 10 ; modify ( a ); // \u76f4\u63a5\u4f20\u9012\u53d8\u91cf std :: cout << a << std :: endl ; // \u8f93\u51fa 42 return 0 ; } 2. \u6307\u9488\u7684\u529f\u80fd\u5728C\u548cC++\u4e2d\u7684\u533a\u522b C\u8bed\u8a00 \uff1a \u6307\u9488\u662f C \u8bed\u8a00\u4e2d\u64cd\u4f5c\u5185\u5b58\u7684\u6838\u5fc3\u5de5\u5177\u3002 \u5e38\u7528\u4e8e\u52a8\u6001\u5185\u5b58\u5206\u914d\u3001\u6570\u7ec4\u64cd\u4f5c\u3001\u51fd\u6570\u53c2\u6570\u4f20\u9012\u7b49\u3002 \u6ca1\u6709\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u5bb9\u6613\u51fa\u73b0\u60ac\u6302\u6307\u9488\u3001\u91ce\u6307\u9488\u7b49\u95ee\u9898\u3002 C++ \uff1a C++ \u4e2d\u6307\u9488\u7684\u529f\u80fd\u4e0e C \u57fa\u672c\u76f8\u540c\uff0c\u4f46 C++ \u63d0\u4f9b\u4e86\u66f4\u9ad8\u7ea7\u7684\u5de5\u5177\uff08\u5982\u5f15\u7528\u3001\u667a\u80fd\u6307\u9488\uff09\u6765\u66ff\u4ee3\u6307\u9488\u7684\u90e8\u5206\u529f\u80fd\u3002 C++ \u4e2d\u7684\u6307\u9488\u53ef\u4ee5\u4e0e\u7c7b\u548c\u5bf9\u8c61\u7ed3\u5408\u4f7f\u7528\uff0c\u652f\u6301\u591a\u6001\u548c\u52a8\u6001\u7ed1\u5b9a\u3002 \u793a\u4f8b \uff1a // C\u8bed\u8a00\u4e2d\u4f7f\u7528\u6307\u9488\u64cd\u4f5c\u6570\u7ec4 #include <stdio.h> int main () { int arr [] = { 1 , 2 , 3 }; int * ptr = arr ; // \u6307\u9488\u6307\u5411\u6570\u7ec4 for ( int i = 0 ; i < 3 ; i ++ ) { printf ( \"%d \" , * ( ptr + i )); // \u89e3\u5f15\u7528\u8bbf\u95ee\u6570\u7ec4\u5143\u7d20 } return 0 ; } // C++\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5f15\u7528\u7b80\u5316\u64cd\u4f5c #include <iostream> int main () { int arr [] = { 1 , 2 , 3 }; for ( int & elem : arr ) { // \u4f7f\u7528\u5f15\u7528\u904d\u5386\u6570\u7ec4 std :: cout << elem << \" \" ; } return 0 ; } 3. \u52a8\u6001\u5185\u5b58\u7ba1\u7406 C\u8bed\u8a00 \uff1a \u4f7f\u7528 malloc \u548c free \u8fdb\u884c\u52a8\u6001\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u3002 \u9700\u8981\u663e\u5f0f\u6307\u5b9a\u5185\u5b58\u5927\u5c0f\uff0c\u4e14\u8fd4\u56de void* \uff0c\u9700\u8981\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002 \u5bb9\u6613\u51fa\u73b0\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898\u3002 C++ \uff1a \u4f7f\u7528 new \u548c delete \u8fdb\u884c\u52a8\u6001\u5185\u5b58\u7ba1\u7406\u3002 new \u4f1a\u81ea\u52a8\u8ba1\u7b97\u6240\u9700\u5185\u5b58\u5927\u5c0f\u5e76\u8fd4\u56de\u6b63\u786e\u7c7b\u578b\u7684\u6307\u9488\u3002 C++11 \u5f15\u5165\u4e86\u667a\u80fd\u6307\u9488\uff08\u5982 std::unique_ptr \u548c std::shared_ptr \uff09\uff0c\u8fdb\u4e00\u6b65\u7b80\u5316\u4e86\u5185\u5b58\u7ba1\u7406\u3002 \u793a\u4f8b \uff1a // C\u8bed\u8a00\u52a8\u6001\u5185\u5b58\u7ba1\u7406 #include <stdio.h> #include <stdlib.h> int main () { int * ptr = ( int * ) malloc ( sizeof ( int )); // \u5206\u914d\u5185\u5b58 * ptr = 42 ; printf ( \"%d \\n \" , * ptr ); free ( ptr ); // \u91ca\u653e\u5185\u5b58 return 0 ; } // C++\u52a8\u6001\u5185\u5b58\u7ba1\u7406 #include <iostream> int main () { int * ptr = new int ( 42 ); // \u5206\u914d\u5185\u5b58\u5e76\u521d\u59cb\u5316 std :: cout << * ptr << std :: endl ; delete ptr ; // \u91ca\u653e\u5185\u5b58 return 0 ; } 4. \u7c7b\u578b\u5b89\u5168 C\u8bed\u8a00 \uff1a \u6307\u9488\u64cd\u4f5c\u4e0d\u5177\u5907\u7c7b\u578b\u5b89\u5168\uff0c\u5bb9\u6613\u51fa\u73b0\u7c7b\u578b\u8f6c\u6362\u9519\u8bef\u3002 \u4f8b\u5982\uff0c void* \u53ef\u4ee5\u6307\u5411\u4efb\u4f55\u7c7b\u578b\u7684\u5185\u5b58\uff0c\u4f46\u9700\u8981\u624b\u52a8\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 C++ \uff1a C++ \u63d0\u4f9b\u4e86\u66f4\u4e25\u683c\u7684\u7c7b\u578b\u68c0\u67e5\uff0c\u51cf\u5c11\u4e86\u7c7b\u578b\u8f6c\u6362\u9519\u8bef\u3002 C++11 \u5f15\u5165\u4e86 nullptr \uff0c\u66ff\u4ee3 C \u4e2d\u7684 NULL \uff0c\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u5b89\u5168\u6027\u3002 \u793a\u4f8b \uff1a // C\u8bed\u8a00\u4e2d\u7684\u7c7b\u578b\u4e0d\u5b89\u5168 #include <stdio.h> void print ( void * ptr ) { printf ( \"%d \\n \" , * ( int * ) ptr ); // \u9700\u8981\u624b\u52a8\u7c7b\u578b\u8f6c\u6362 } int main () { int a = 42 ; print ( & a ); return 0 ; } // C++\u4e2d\u7684\u7c7b\u578b\u5b89\u5168 #include <iostream> void print ( int * ptr ) { std :: cout << * ptr << std :: endl ; // \u7c7b\u578b\u5b89\u5168 } int main () { int a = 42 ; print ( & a ); return 0 ; } 5. \u9ad8\u7ea7\u7279\u6027 C\u8bed\u8a00 \uff1a \u6307\u9488\u4e3b\u8981\u7528\u4e8e\u64cd\u4f5c\u5185\u5b58\uff0c\u529f\u80fd\u8f83\u4e3a\u57fa\u7840\u3002 \u6ca1\u6709\u5f15\u7528\u3001\u667a\u80fd\u6307\u9488\u7b49\u9ad8\u7ea7\u7279\u6027\u3002 C++ \uff1a \u5f15\u5165\u4e86\u5f15\u7528\uff08 & \uff09\u548c\u667a\u80fd\u6307\u9488\uff08\u5982 std::unique_ptr \u3001 std::shared_ptr \uff09\u3002 \u667a\u80fd\u6307\u9488\u901a\u8fc7 RAII \u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u51cf\u5c11\u4e86\u5185\u5b58\u6cc4\u6f0f\u7684\u98ce\u9669\u3002 \u793a\u4f8b \uff1a #include <iostream> #include <memory> using namespace std ; int main () { unique_ptr < int > ptr = make_unique < int > ( 42 ); // \u4f7f\u7528\u667a\u80fd\u6307\u9488 cout << * ptr << endl ; // \u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u65e0\u9700\u624b\u52a8\u91ca\u653e return 0 ; } \u603b\u7ed3 \u7279\u6027 C\u8bed\u8a00 C++ \u5f15\u7528 \u4e0d\u652f\u6301\u5f15\u7528 \u652f\u6301\u5f15\u7528\uff0c\u4f5c\u4e3a\u6307\u9488\u7684\u9ad8\u7ea7\u62bd\u8c61 \u6307\u9488\u529f\u80fd \u64cd\u4f5c\u5185\u5b58\u7684\u6838\u5fc3\u5de5\u5177 \u63d0\u4f9b\u6307\u9488\uff0c\u4f46\u6709\u5f15\u7528\u548c\u667a\u80fd\u6307\u9488\u66ff\u4ee3\u90e8\u5206\u529f\u80fd \u52a8\u6001\u5185\u5b58\u7ba1\u7406 \u4f7f\u7528 malloc \u548c free \u4f7f\u7528 new \u548c delete \uff0c\u652f\u6301\u667a\u80fd\u6307\u9488 \u7c7b\u578b\u5b89\u5168 \u7c7b\u578b\u68c0\u67e5\u8f83\u5f31\uff0c\u9700\u624b\u52a8\u7c7b\u578b\u8f6c\u6362 \u7c7b\u578b\u68c0\u67e5\u66f4\u4e25\u683c\uff0c\u652f\u6301 nullptr \u9ad8\u7ea7\u7279\u6027 \u65e0\u5f15\u7528\u548c\u667a\u80fd\u6307\u9488 \u652f\u6301\u5f15\u7528\u548c\u667a\u80fd\u6307\u9488\uff0c\u7b80\u5316\u5185\u5b58\u7ba1\u7406 C++ \u5728 C \u7684\u57fa\u7840\u4e0a\u5f15\u5165\u4e86\u5f15\u7528\u548c\u667a\u80fd\u6307\u9488\uff0c\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7684\u62bd\u8c61\u548c\u5b89\u5168\u6027\uff0c\u540c\u65f6\u4fdd\u7559\u4e86\u6307\u9488\u7684\u7075\u6d3b\u6027\u3002 \u6307\u9488\u5e38\u91cf\u4e0e\u5e38\u91cf\u6307\u9488\u7684\u533a\u522b 1. \u5b9a\u4e49 \u6307\u9488\u5e38\u91cf\uff08Pointer Constant\uff09 \uff1a \u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u6307\u5411\u5176\u4ed6\u5730\u5740\uff0c\u4f46\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u53ef\u4ee5\u4fee\u6539\u3002 \u5b9a\u4e49\u5f62\u5f0f\uff1a int* const ptr; \u5e38\u91cf\u6307\u9488\uff08Pointer to Constant\uff09 \uff1a \u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\uff0c\u4f46\u6307\u9488\u672c\u8eab\u53ef\u4ee5\u6307\u5411\u5176\u4ed6\u5730\u5740\u3002 \u5b9a\u4e49\u5f62\u5f0f\uff1a const int* ptr; 2. \u7279\u6027\u5bf9\u6bd4 \u7279\u6027 \u6307\u9488\u5e38\u91cf \u5e38\u91cf\u6307\u9488 \u6307\u9488\u672c\u8eab \u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5730\u5740 \u4e0d\u662f\u5e38\u91cf\uff0c\u53ef\u4ee5\u4fee\u6539\u6307\u5411\u7684\u5730\u5740 \u6307\u5411\u7684\u5185\u5bb9 \u4e0d\u662f\u5e38\u91cf\uff0c\u53ef\u4ee5\u4fee\u6539\u6307\u5411\u7684\u5185\u5bb9 \u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5185\u5bb9 \u5b9a\u4e49\u5f62\u5f0f int* const ptr; const int* ptr; \u6216 int const* ptr; 3. \u793a\u4f8b\u4ee3\u7801 \u6307\u9488\u5e38\u91cf #include <iostream> using namespace std ; int main () { int a = 10 , b = 20 ; int * const ptr = & a ; // \u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\uff0c\u5fc5\u987b\u521d\u59cb\u5316 * ptr = 15 ; // \u53ef\u4ee5\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9 cout << \"a = \" << a << endl ; // ptr = &b; // \u9519\u8bef\uff1a\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5730\u5740 return 0 ; } \u8f93\u51fa \uff1a a = 15 \u5e38\u91cf\u6307\u9488 #include <iostream> using namespace std ; int main () { int a = 10 , b = 20 ; const int * ptr = & a ; // \u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf // *ptr = 15; // \u9519\u8bef\uff1a\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9 ptr = & b ; // \u53ef\u4ee5\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5730\u5740 cout << \"b = \" << * ptr << endl ; return 0 ; } \u8f93\u51fa \uff1a b = 20 4. \u7ec4\u5408\u5f62\u5f0f \u6307\u9488\u5e38\u91cf\u548c\u5e38\u91cf\u6307\u9488\u53ef\u4ee5\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5f62\u6210 \u5e38\u91cf\u6307\u9488\u5e38\u91cf \uff0c\u5373\u6307\u9488\u672c\u8eab\u548c\u6307\u5411\u7684\u5185\u5bb9\u90fd\u4e0d\u80fd\u4fee\u6539\u3002 \u5e38\u91cf\u6307\u9488\u5e38\u91cf #include <iostream> using namespace std ; int main () { int a = 10 ; const int * const ptr = & a ; // \u6307\u9488\u672c\u8eab\u548c\u6307\u5411\u7684\u5185\u5bb9\u90fd\u662f\u5e38\u91cf // *ptr = 15; // \u9519\u8bef\uff1a\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9 // ptr = &b; // \u9519\u8bef\uff1a\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u672c\u8eab\u7684\u5730\u5740 cout << \"a = \" << * ptr << endl ; return 0 ; } \u8f93\u51fa \uff1a a = 10 5. \u603b\u7ed3 \u7279\u6027 \u6307\u9488\u5e38\u91cf \u5e38\u91cf\u6307\u9488 \u5e38\u91cf\u6307\u9488\u5e38\u91cf \u6307\u9488\u672c\u8eab \u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5730\u5740 \u4e0d\u662f\u5e38\u91cf\uff0c\u53ef\u4ee5\u4fee\u6539\u6307\u5411\u7684\u5730\u5740 \u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5730\u5740 \u6307\u5411\u7684\u5185\u5bb9 \u4e0d\u662f\u5e38\u91cf\uff0c\u53ef\u4ee5\u4fee\u6539\u6307\u5411\u7684\u5185\u5bb9 \u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5185\u5bb9 \u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5185\u5bb9 \u5b9a\u4e49\u5f62\u5f0f int* const ptr; const int* ptr; \u6216 int const* ptr; const int* const ptr; \u6307\u9488\u5e38\u91cf \uff1a\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5730\u5740\u3002 \u5e38\u91cf\u6307\u9488 \uff1a\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u5185\u5bb9\u3002 \u5e38\u91cf\u6307\u9488\u5e38\u91cf \uff1a\u6307\u9488\u672c\u8eab\u548c\u6307\u5411\u7684\u5185\u5bb9\u90fd\u4e0d\u80fd\u4fee\u6539\u3002 \u961f\u5217\u548c\u6808\u7684\u5f02\u540c 1. \u76f8\u540c\u70b9 \u7ebf\u6027\u6570\u636e\u7ed3\u6784 \uff1a \u961f\u5217\u548c\u6808\u90fd\u662f\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u5143\u7d20\u6309\u987a\u5e8f\u6392\u5217\u3002 \u64cd\u4f5c\u53d7\u9650 \uff1a \u4e24\u8005\u90fd\u53ea\u80fd\u5728\u7279\u5b9a\u4f4d\u7f6e\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002 \u5b58\u50a8\u65b9\u5f0f \uff1a \u90fd\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u6216\u94fe\u8868\u5b9e\u73b0\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a \u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a $O(1)$\u3002 2. \u4e0d\u540c\u70b9 \u7279\u6027 \u961f\u5217 \u6808 \u64cd\u4f5c\u89c4\u5219 \u5148\u8fdb\u5148\u51fa\uff08FIFO\uff0cFirst In First Out\uff09 \u540e\u8fdb\u5148\u51fa\uff08LIFO\uff0cLast In First Out\uff09 \u63d2\u5165\u4f4d\u7f6e \u961f\u5c3e\uff08\u5c3e\u90e8\uff09 \u6808\u9876 \u5220\u9664\u4f4d\u7f6e \u961f\u5934\uff08\u5934\u90e8\uff09 \u6808\u9876 \u5178\u578b\u64cd\u4f5c enqueue \uff08\u5165\u961f\uff09\uff0c dequeue \uff08\u51fa\u961f\uff09 push \uff08\u5165\u6808\uff09\uff0c pop \uff08\u51fa\u6808\uff09 \u5b9e\u73b0\u65b9\u5f0f \u901a\u5e38\u9700\u8981\u4e24\u4e2a\u6307\u9488\uff08\u5934\u6307\u9488\u548c\u5c3e\u6307\u9488\uff09 \u53ea\u9700\u8981\u4e00\u4e2a\u6307\u9488\uff08\u6808\u9876\u6307\u9488\uff09 \u5e94\u7528\u573a\u666f \u4efb\u52a1\u8c03\u5ea6\u3001\u6d88\u606f\u961f\u5217\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7b49 \u51fd\u6570\u8c03\u7528\u3001\u8868\u8fbe\u5f0f\u6c42\u503c\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7b49 3. \u793a\u4f8b\u4ee3\u7801 \u961f\u5217\u793a\u4f8b #include <iostream> #include <queue> using namespace std ; int main () { queue < int > q ; // \u5165\u961f q . push ( 1 ); q . push ( 2 ); q . push ( 3 ); // \u51fa\u961f while ( ! q . empty ()) { cout << q . front () << \" \" ; // \u67e5\u770b\u961f\u5934 q . pop (); // \u5220\u9664\u961f\u5934 } return 0 ; } \u8f93\u51fa \uff1a 1 2 3 \u6808\u793a\u4f8b #include <iostream> #include <stack> using namespace std ; int main () { stack < int > s ; // \u5165\u6808 s . push ( 1 ); s . push ( 2 ); s . push ( 3 ); // \u51fa\u6808 while ( ! s . empty ()) { cout << s . top () << \" \" ; // \u67e5\u770b\u6808\u9876 s . pop (); // \u5220\u9664\u6808\u9876 } return 0 ; } \u8f93\u51fa \uff1a 3 2 1 4. \u5e94\u7528\u573a\u666f \u573a\u666f \u961f\u5217 \u6808 \u4efb\u52a1\u8c03\u5ea6 \u4efb\u52a1\u6309\u5230\u8fbe\u987a\u5e8f\u6267\u884c\uff08\u5982\u6253\u5370\u961f\u5217\uff09 \u4e0d\u9002\u7528 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09 \u4f7f\u7528\u961f\u5217\u5b58\u50a8\u4e0b\u4e00\u5c42\u8282\u70b9 \u4e0d\u9002\u7528 \u51fd\u6570\u8c03\u7528 \u4e0d\u9002\u7528 \u4f7f\u7528\u6808\u4fdd\u5b58\u51fd\u6570\u8c03\u7528\u7684\u8fd4\u56de\u5730\u5740 \u8868\u8fbe\u5f0f\u6c42\u503c \u4e0d\u9002\u7528 \u4f7f\u7528\u6808\u4fdd\u5b58\u64cd\u4f5c\u6570\u548c\u64cd\u4f5c\u7b26 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09 \u4e0d\u9002\u7528 \u4f7f\u7528\u6808\u5b58\u50a8\u4e0b\u4e00\u6b65\u8981\u8bbf\u95ee\u7684\u8282\u70b9 \u603b\u7ed3 \u961f\u5217 \uff1a\u5148\u8fdb\u5148\u51fa\uff0c\u9002\u5408\u6309\u987a\u5e8f\u5904\u7406\u4efb\u52a1\uff0c\u5982\u4efb\u52a1\u8c03\u5ea6\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3002 \u6808 \uff1a\u540e\u8fdb\u5148\u51fa\uff0c\u9002\u5408\u5904\u7406\u9012\u5f52\u3001\u51fd\u6570\u8c03\u7528\u3001\u8868\u8fbe\u5f0f\u6c42\u503c\u7b49\u573a\u666f\u3002 \u4e24\u8005\u5728\u64cd\u4f5c\u89c4\u5219\u548c\u5e94\u7528\u573a\u666f\u4e0a\u6709\u663e\u8457\u533a\u522b\uff0c\u4f46\u90fd\u5c5e\u4e8e\u5e38\u7528\u7684\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u3002 \u5185\u5b58\u5730\u5740\u8d4b\u503c \u5728 C++ \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u76f4\u63a5\u8bbf\u95ee\u6307\u5b9a\u5185\u5b58\u5730\u5740\u5e76\u8bbe\u7f6e\u503c\u3002\u4ee5\u4e0b\u662f\u5b9e\u73b0\u4ee3\u7801\uff1a #include <iostream> using namespace std ; int main () { int * ptr = ( int * ) 0x67a9 ; // \u5c06\u5730\u5740 0x67a9 \u8f6c\u6362\u4e3a\u6574\u578b\u6307\u9488 * ptr = 0xaa66 ; // \u8bbe\u7f6e\u5730\u5740 0x67a9 \u7684\u503c\u4e3a 0xaa66 cout << \"Value at address 0x67a9: \" << hex << * ptr << endl ; // \u8f93\u51fa\u8bbe\u7f6e\u7684\u503c return 0 ; } \u6ce8\u610f\u4e8b\u9879 \u5730\u5740\u6709\u6548\u6027 \uff1a \u786e\u4fdd\u5730\u5740 0x67a9 \u662f\u6709\u6548\u7684\u5185\u5b58\u5730\u5740\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u6216\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 \u5728\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u76f4\u63a5\u8bbf\u95ee\u786c\u7f16\u7801\u7684\u5185\u5b58\u5730\u5740\u901a\u5e38\u4f1a\u88ab\u7981\u6b62\u3002 \u6743\u9650\u95ee\u9898 \uff1a \u5982\u679c\u5730\u5740 0x67a9 \u5c5e\u4e8e\u53d7\u4fdd\u62a4\u7684\u5185\u5b58\u533a\u57df\uff08\u5982\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7a7a\u95f4\uff09\uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u56e0\u8bbf\u95ee\u6743\u9650\u4e0d\u8db3\u800c\u5d29\u6e83\u3002 \u8c03\u8bd5\u73af\u5883 \uff1a \u8fd9\u79cd\u64cd\u4f5c\u901a\u5e38\u7528\u4e8e\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6216\u7279\u5b9a\u7684\u786c\u4ef6\u73af\u5883\uff0c\u5728\u666e\u901a\u7528\u6237\u6001\u7a0b\u5e8f\u4e2d\u4e0d\u5efa\u8bae\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\u5730\u5740\u3002 \u5efa\u8bae \u5982\u679c\u9700\u8981\u64cd\u4f5c\u7279\u5b9a\u5185\u5b58\u5730\u5740\uff0c\u5efa\u8bae\u5728\u5d4c\u5165\u5f0f\u5f00\u53d1\u6216\u786c\u4ef6\u76f8\u5173\u7684\u573a\u666f\u4e2d\u4f7f\u7528\uff0c\u5e76\u786e\u4fdd\u5730\u5740\u7684\u5408\u6cd5\u6027\u548c\u5b89\u5168\u6027\u3002 \u53e5\u67c4\u548c\u6307\u9488\u7684\u533a\u522b\u4e0e\u8054\u7cfb 1. \u5b9a\u4e49 \u6307\u9488\uff08Pointer\uff09 \uff1a \u6307\u9488\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b58\u50a8\u7684\u662f\u5185\u5b58\u5730\u5740\u3002 \u901a\u8fc7\u6307\u9488\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5185\u5b58\u4e2d\u7684\u6570\u636e\u3002 \u53e5\u67c4\uff08Handle\uff09 \uff1a \u53e5\u67c4\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u6807\u8bc6\u7b26\uff0c\u7528\u4e8e\u95f4\u63a5\u5f15\u7528\u7cfb\u7edf\u8d44\u6e90\uff08\u5982\u6587\u4ef6\u3001\u7a97\u53e3\u3001\u7ebf\u7a0b\u7b49\uff09\u3002 \u53e5\u67c4\u901a\u5e38\u7531\u64cd\u4f5c\u7cfb\u7edf\u6216\u5e93\u751f\u6210\uff0c\u7528\u6237\u65e0\u6cd5\u76f4\u63a5\u64cd\u4f5c\u5176\u6307\u5411\u7684\u8d44\u6e90\u3002 2. \u533a\u522b \u7279\u6027 \u6307\u9488 \u53e5\u67c4 \u672c\u8d28 \u5b58\u50a8\u5185\u5b58\u5730\u5740\uff0c\u76f4\u63a5\u6307\u5411\u6570\u636e \u62bd\u8c61\u6807\u8bc6\u7b26\uff0c\u95f4\u63a5\u5f15\u7528\u7cfb\u7edf\u8d44\u6e90 \u64cd\u4f5c\u65b9\u5f0f \u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\u5730\u5740 \u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u6216\u5e93\u7684 API \u64cd\u4f5c\u8d44\u6e90 \u5b89\u5168\u6027 \u53ef\u80fd\u5bfc\u81f4\u60ac\u6302\u6307\u9488\u3001\u91ce\u6307\u9488\u7b49\u95ee\u9898 \u66f4\u5b89\u5168\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u7ba1\u7406\u8d44\u6e90 \u7528\u9014 \u7528\u4e8e\u8bbf\u95ee\u5185\u5b58\u4e2d\u7684\u6570\u636e \u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u8d44\u6e90\uff08\u5982\u6587\u4ef6\u3001\u7a97\u53e3\u7b49\uff09 \u751f\u6210\u65b9\u5f0f \u7531\u7a0b\u5e8f\u5458\u663e\u5f0f\u5b9a\u4e49 \u7531\u64cd\u4f5c\u7cfb\u7edf\u6216\u5e93\u751f\u6210 \u8de8\u5e73\u53f0\u6027 \u4e0e\u5e73\u53f0\u65e0\u5173\uff0c\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58 \u4e0e\u5e73\u53f0\u76f8\u5173\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u73b0 3. \u8054\u7cfb \u95f4\u63a5\u6027 \uff1a \u6307\u9488\u548c\u53e5\u67c4\u90fd\u53ef\u4ee5\u7528\u6765\u95f4\u63a5\u8bbf\u95ee\u8d44\u6e90\u3002 \u6307\u9488\u95f4\u63a5\u8bbf\u95ee\u5185\u5b58\u4e2d\u7684\u6570\u636e\uff0c\u53e5\u67c4\u95f4\u63a5\u8bbf\u95ee\u7cfb\u7edf\u8d44\u6e90\u3002 \u5b9e\u73b0\u65b9\u5f0f \uff1a \u5728\u67d0\u4e9b\u5b9e\u73b0\u4e2d\uff0c\u53e5\u67c4\u53ef\u80fd\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u8d44\u6e90\u7684\u63a7\u5236\u5757\u3002 \u4f46\u53e5\u67c4\u901a\u5e38\u88ab\u5c01\u88c5\u4e3a\u62bd\u8c61\u6807\u8bc6\u7b26\uff0c\u9690\u85cf\u4e86\u5e95\u5c42\u5b9e\u73b0\u7ec6\u8282\u3002 4. \u793a\u4f8b \u6307\u9488\u793a\u4f8b #include <iostream> using namespace std ; int main () { int a = 10 ; int * ptr = & a ; // \u6307\u9488\u5b58\u50a8\u53d8\u91cf a \u7684\u5730\u5740 cout << \"Value of a: \" << * ptr << endl ; // \u901a\u8fc7\u6307\u9488\u8bbf\u95ee a \u7684\u503c return 0 ; } \u8f93\u51fa \uff1a Value of a: 10 \u53e5\u67c4\u793a\u4f8b #include <windows.h> #include <iostream> using namespace std ; int main () { HANDLE fileHandle = CreateFile ( \"example.txt\" , // \u6587\u4ef6\u540d GENERIC_WRITE , // \u5199\u6743\u9650 0 , // \u4e0d\u5171\u4eab NULL , // \u9ed8\u8ba4\u5b89\u5168\u5c5e\u6027 CREATE_ALWAYS , // \u59cb\u7ec8\u521b\u5efa\u65b0\u6587\u4ef6 FILE_ATTRIBUTE_NORMAL , // \u666e\u901a\u6587\u4ef6 NULL // \u65e0\u6a21\u677f\u6587\u4ef6 ); if ( fileHandle == INVALID_HANDLE_VALUE ) { cout << \"Failed to create file.\" << endl ; } else { cout << \"File created successfully.\" << endl ; CloseHandle ( fileHandle ); // \u5173\u95ed\u53e5\u67c4 } return 0 ; } \u8f93\u51fa \uff1a File created successfully. 5. \u5e94\u7528\u573a\u666f \u573a\u666f \u6307\u9488 \u53e5\u67c4 \u5185\u5b58\u64cd\u4f5c \u7528\u4e8e\u52a8\u6001\u5185\u5b58\u5206\u914d\u3001\u6570\u7ec4\u64cd\u4f5c\u7b49 \u4e0d\u9002\u7528 \u7cfb\u7edf\u8d44\u6e90 \u4e0d\u9002\u7528 \u7528\u4e8e\u6587\u4ef6\u3001\u7a97\u53e3\u3001\u7ebf\u7a0b\u7b49\u7cfb\u7edf\u8d44\u6e90\u7ba1\u7406 \u8de8\u5e73\u53f0\u5f00\u53d1 \u4e0e\u5e73\u53f0\u65e0\u5173\uff0c\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58 \u4e0e\u5e73\u53f0\u76f8\u5173\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b API 6. \u603b\u7ed3 \u6307\u9488 \uff1a \u7528\u4e8e\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\uff0c\u7075\u6d3b\u4f46\u5bb9\u6613\u51fa\u9519\u3002 \u9002\u5408\u7a0b\u5e8f\u5458\u63a7\u5236\u7684\u5185\u5b58\u7ba1\u7406\u573a\u666f\u3002 \u53e5\u67c4 \uff1a \u7528\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u7684\u62bd\u8c61\u6807\u8bc6\u7b26\uff0c\u5b89\u5168\u6027\u66f4\u9ad8\u3002 \u9002\u5408\u9700\u8981\u64cd\u4f5c\u6587\u4ef6\u3001\u7a97\u53e3\u3001\u7ebf\u7a0b\u7b49\u7cfb\u7edf\u8d44\u6e90\u7684\u573a\u666f\u3002 \u4e24\u8005\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u64cd\u4f5c\u5bf9\u8c61\u7684\u4e0d\u540c\uff1a\u6307\u9488\u7528\u4e8e\u5185\u5b58\uff0c\u53e5\u67c4\u7528\u4e8e\u7cfb\u7edf\u8d44\u6e90\u3002 extern \"C\" \u7684\u4f5c\u7528 extern \"C\" \u662f C++ \u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u7528\u4e8e\u6307\u793a\u7f16\u8bd1\u5668\u6309\u7167 C \u8bed\u8a00\u7684\u65b9\u5f0f\u5bf9\u51fd\u6570\u6216\u53d8\u91cf\u8fdb\u884c\u94fe\u63a5\u3002\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u89e3\u51b3 C++ \u548c C \u8bed\u8a00\u4e4b\u95f4\u7684\u51fd\u6570\u540d\u4fee\u9970\uff08Name Mangling\uff09\u95ee\u9898 \uff0c\u4ece\u800c\u5b9e\u73b0 C \u548c C++ \u4ee3\u7801\u7684\u4e92\u64cd\u4f5c\u3002 \u4e3a\u4ec0\u4e48\u9700\u8981 extern \"C\" 1. \u540d\u5b57\u4fee\u9970\uff08Name Mangling\uff09 \u5728 C++ \u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u5bf9\u51fd\u6570\u540d\u8fdb\u884c\u4fee\u9970\uff08Name Mangling\uff09\uff0c\u4ee5\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u548c\u5176\u4ed6\u7279\u6027\u3002 \u4fee\u9970\u540e\u7684\u51fd\u6570\u540d\u53ef\u80fd\u5305\u542b\u51fd\u6570\u7684\u53c2\u6570\u7c7b\u578b\u3001\u547d\u540d\u7a7a\u95f4\u7b49\u4fe1\u606f\u3002 \u800c C \u8bed\u8a00\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u51fd\u6570\u540d\u4e0d\u4f1a\u88ab\u4fee\u9970\u3002 \u793a\u4f8b \uff1a // C++ \u4e2d\u7684\u51fd\u6570 void func ( int a ) {} // \u7f16\u8bd1\u540e\u53ef\u80fd\u88ab\u4fee\u9970\u4e3a\uff1a _Z4funci \u5982\u679c C++ \u8c03\u7528 C \u7684\u51fd\u6570\uff0c\u6216\u8005 C \u8c03\u7528 C++ \u7684\u51fd\u6570\uff0c\u540d\u5b57\u4fee\u9970\u4f1a\u5bfc\u81f4\u94fe\u63a5\u9519\u8bef\u3002 2. extern \"C\" \u7684\u4f5c\u7528 \u4f7f\u7528 extern \"C\" \uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u6309\u7167 C \u7684\u65b9\u5f0f\u751f\u6210\u51fd\u6570\u540d\uff08\u4e0d\u8fdb\u884c\u540d\u5b57\u4fee\u9970\uff09\u3002 \u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd C \u548c C++ \u4e4b\u95f4\u7684\u51fd\u6570\u540d\u4e00\u81f4\uff0c\u4ece\u800c\u89e3\u51b3\u94fe\u63a5\u95ee\u9898\u3002 \u4f7f\u7528\u573a\u666f 1. \u5728 C++ \u4e2d\u8c03\u7528 C \u51fd\u6570 \u5982\u679c\u9700\u8981\u5728 C++ \u4e2d\u8c03\u7528 C \u51fd\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 extern \"C\" \u58f0\u660e\u8fd9\u4e9b\u51fd\u6570\u3002 \u793a\u4f8b \uff1a // C \u5934\u6587\u4ef6\uff08example.h\uff09 #ifndef EXAMPLE_H #define EXAMPLE_H #ifdef __cplusplus extern \"C\" { #endif void c_function (); #ifdef __cplusplus } #endif #endif C++ \u6587\u4ef6 \uff1a #include \"example.h\" int main () { c_function (); // \u8c03\u7528 C \u51fd\u6570 return 0 ; } 2. \u5728 C \u4e2d\u8c03\u7528 C++ \u51fd\u6570 \u5982\u679c\u9700\u8981\u5728 C \u4e2d\u8c03\u7528 C++ \u51fd\u6570\uff0c\u53ef\u4ee5\u5728 C++ \u6587\u4ef6\u4e2d\u4f7f\u7528 extern \"C\" \u3002 \u793a\u4f8b \uff1a // C++ \u6587\u4ef6 extern \"C\" void cpp_function () { // C++ \u5b9e\u73b0 } C \u6587\u4ef6 \uff1a void cpp_function (); int main () { cpp_function (); // \u8c03\u7528 C++ \u51fd\u6570 return 0 ; } 3. \u6df7\u5408\u4f7f\u7528 C \u548c C++ \u4ee3\u7801 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0cC \u548c C++ \u4ee3\u7801\u7ecf\u5e38\u9700\u8981\u6df7\u5408\u4f7f\u7528\uff0c extern \"C\" \u662f\u5b9e\u73b0\u4e92\u64cd\u4f5c\u7684\u5173\u952e\u3002 \u6ce8\u610f\u4e8b\u9879 \u53ea\u80fd\u7528\u4e8e\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf \uff1a extern \"C\" \u53ea\u80fd\u7528\u4e8e\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\uff0c\u4e0d\u80fd\u7528\u4e8e\u7c7b\u6216 C++ \u7279\u6709\u7684\u7279\u6027\uff08\u5982\u6a21\u677f\u3001\u547d\u540d\u7a7a\u95f4\u7b49\uff09\u3002 \u4e0d\u80fd\u7528\u4e8e\u91cd\u8f7d\u51fd\u6570 \uff1a C \u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u56e0\u6b64 extern \"C\" \u7684\u51fd\u6570\u4e0d\u80fd\u91cd\u8f7d\u3002 \u5b8f\u5b9a\u4e49\u7684\u4f7f\u7528 \uff1a \u901a\u5e38\u5728\u5934\u6587\u4ef6\u4e2d\u4f7f\u7528\u5b8f\u5b9a\u4e49\u6765\u533a\u5206 C \u548c C++ \u73af\u5883\uff1a #ifdef __cplusplus extern \"C\" { #endif void c_function (); #ifdef __cplusplus } #endif \u603b\u7ed3 \u4f5c\u7528 \uff1a \u89e3\u51b3 C \u548c C++ \u4e4b\u95f4\u7684\u540d\u5b57\u4fee\u9970\u95ee\u9898\uff0c\u5b9e\u73b0\u8de8\u8bed\u8a00\u8c03\u7528\u3002 \u4f7f\u7528\u573a\u666f \uff1a \u5728 C++ \u4e2d\u8c03\u7528 C \u51fd\u6570\u3002 \u5728 C \u4e2d\u8c03\u7528 C++ \u51fd\u6570\u3002 \u6df7\u5408\u4f7f\u7528 C \u548c C++ \u4ee3\u7801\u3002 \u9650\u5236 \uff1a \u53ea\u80fd\u7528\u4e8e\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\uff0c\u4e0d\u80fd\u7528\u4e8e C++ \u7279\u6709\u7684\u7279\u6027\u3002 extern \"C\" \u662f C \u548c C++ \u4e92\u64cd\u4f5c\u7684\u6865\u6881\uff0c\u5728\u8de8\u8bed\u8a00\u5f00\u53d1\u4e2d\u975e\u5e38\u91cd\u8981\u3002 C++ \u4e2d\u7684\u9876\u5c42 const \u548c\u5e95\u5c42 const 1. \u5b9a\u4e49 \u9876\u5c42 const \uff1a \u4fee\u9970\u53d8\u91cf\u672c\u8eab\uff0c\u4f7f\u53d8\u91cf\u6210\u4e3a\u5e38\u91cf\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\u3002 \u9876\u5c42 const \u4ec5\u5f71\u54cd\u53d8\u91cf\u672c\u8eab\uff0c\u4e0d\u5f71\u54cd\u5176\u6307\u5411\u7684\u5185\u5bb9\u3002 \u5e95\u5c42 const \uff1a \u4fee\u9970\u6307\u9488\u6216\u5f15\u7528\u6240\u6307\u5411\u7684\u5185\u5bb9\uff0c\u4f7f\u6307\u5411\u7684\u5185\u5bb9\u6210\u4e3a\u5e38\u91cf\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\u3002 \u5e95\u5c42 const \u5f71\u54cd\u6307\u9488\u6216\u5f15\u7528\u7684\u64cd\u4f5c\u3002 2. \u533a\u522b \u7279\u6027 \u9876\u5c42 const \u5e95\u5c42 const \u4fee\u9970\u5bf9\u8c61 \u4fee\u9970\u53d8\u91cf\u672c\u8eab \u4fee\u9970\u6307\u9488\u6216\u5f15\u7528\u6240\u6307\u5411\u7684\u5185\u5bb9 \u5f71\u54cd\u8303\u56f4 \u53d8\u91cf\u672c\u8eab\u4e0d\u80fd\u4fee\u6539 \u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u7684\u5185\u5bb9\u4e0d\u80fd\u4fee\u6539 \u4f20\u9012\u884c\u4e3a \u5728\u51fd\u6570\u4f20\u53c2\u65f6\u4f1a\u88ab\u5ffd\u7565 \u5728\u51fd\u6570\u4f20\u53c2\u65f6\u4f1a\u4fdd\u7559 3. \u793a\u4f8b\u4ee3\u7801 \u9876\u5c42 const \u793a\u4f8b #include <iostream> using namespace std ; int main () { const int a = 10 ; // \u9876\u5c42 const\uff0ca \u662f\u5e38\u91cf // a = 20; // \u9519\u8bef\uff1aa \u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539 int b = 20 ; const int * ptr = & b ; // \u5e95\u5c42 const\uff0c\u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf ptr = & a ; // \u5408\u6cd5\uff1a\u6307\u9488\u53ef\u4ee5\u6307\u5411\u5176\u4ed6\u5730\u5740 // *ptr = 30; // \u9519\u8bef\uff1a\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539 return 0 ; } \u5e95\u5c42 const \u793a\u4f8b #include <iostream> using namespace std ; int main () { int x = 10 ; int y = 20 ; const int * ptr = & x ; // \u5e95\u5c42 const\uff0c\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf ptr = & y ; // \u5408\u6cd5\uff1a\u6307\u9488\u53ef\u4ee5\u6307\u5411\u5176\u4ed6\u5730\u5740 // *ptr = 30; // \u9519\u8bef\uff1a\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539 int * const ptr2 = & x ; // \u9876\u5c42 const\uff0c\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf * ptr2 = 40 ; // \u5408\u6cd5\uff1a\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u53ef\u4ee5\u4fee\u6539 // ptr2 = &y; // \u9519\u8bef\uff1a\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u5730\u5740 return 0 ; } 4. \u51fd\u6570\u4f20\u53c2\u4e2d\u7684\u884c\u4e3a \u9876\u5c42 const \uff1a \u5728\u51fd\u6570\u4f20\u53c2\u65f6\u4f1a\u88ab\u5ffd\u7565\uff0c\u4f20\u9012\u7684\u662f\u53d8\u91cf\u7684\u526f\u672c\u3002 void func ( int a ) { a = 20 ; // \u5408\u6cd5\uff1aa \u662f\u5f62\u53c2\uff0c\u4e0e\u539f\u53d8\u91cf\u65e0\u5173 } int main () { const int x = 10 ; // \u9876\u5c42 const func ( x ); // \u9876\u5c42 const \u88ab\u5ffd\u7565 return 0 ; } \u5e95\u5c42 const \uff1a \u5728\u51fd\u6570\u4f20\u53c2\u65f6\u4f1a\u4fdd\u7559\uff0c\u786e\u4fdd\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u7684\u5185\u5bb9\u4e0d\u80fd\u88ab\u4fee\u6539\u3002 void func ( const int * ptr ) { // *ptr = 20; // \u9519\u8bef\uff1a\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf } int main () { int x = 10 ; func ( & x ); // \u5e95\u5c42 const \u4fdd\u7559 return 0 ; } 5. \u603b\u7ed3 \u7279\u6027 \u9876\u5c42 const \u5e95\u5c42 const \u4fee\u9970\u5bf9\u8c61 \u4fee\u9970\u53d8\u91cf\u672c\u8eab \u4fee\u9970\u6307\u9488\u6216\u5f15\u7528\u6240\u6307\u5411\u7684\u5185\u5bb9 \u5f71\u54cd\u8303\u56f4 \u53d8\u91cf\u672c\u8eab\u4e0d\u80fd\u4fee\u6539 \u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u7684\u5185\u5bb9\u4e0d\u80fd\u4fee\u6539 \u4f20\u9012\u884c\u4e3a \u5728\u51fd\u6570\u4f20\u53c2\u65f6\u4f1a\u88ab\u5ffd\u7565 \u5728\u51fd\u6570\u4f20\u53c2\u65f6\u4f1a\u4fdd\u7559 \u9876\u5c42 const \uff1a\u9650\u5236\u53d8\u91cf\u672c\u8eab\uff0c\u5e38\u7528\u4e8e\u5b9a\u4e49\u5e38\u91cf\u3002 \u5e95\u5c42 const \uff1a\u9650\u5236\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u7684\u5185\u5bb9\uff0c\u5e38\u7528\u4e8e\u4fdd\u62a4\u6570\u636e\u4e0d\u88ab\u4fee\u6539\u3002 C++ \u5f02\u5e38\u673a\u5236 C++ \u63d0\u4f9b\u4e86\u4e00\u5957\u5b8c\u6574\u7684\u5f02\u5e38\u5904\u7406\u673a\u5236\uff0c\u7528\u4e8e\u6355\u83b7\u548c\u5904\u7406\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u9519\u8bef\u3002\u5f02\u5e38\u673a\u5236\u901a\u8fc7 try \u3001 catch \u548c throw \u5173\u952e\u5b57\u5b9e\u73b0\uff0c\u80fd\u591f\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 1. \u5f02\u5e38\u673a\u5236\u7684\u57fa\u672c\u6982\u5ff5 1.1 \u5f02\u5e38\u7684\u5b9a\u4e49 \u5f02\u5e38\u662f\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u53d1\u751f\u7684\u975e\u6b63\u5e38\u60c5\u51b5\uff08\u5982\u9664\u96f6\u3001\u5185\u5b58\u4e0d\u8db3\u3001\u6587\u4ef6\u672a\u627e\u5230\u7b49\uff09\u3002 \u5f02\u5e38\u673a\u5236\u5141\u8bb8\u7a0b\u5e8f\u5728\u9519\u8bef\u53d1\u751f\u65f6\u8df3\u8f6c\u5230\u7279\u5b9a\u7684\u4ee3\u7801\u5757\u8fdb\u884c\u5904\u7406\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5d29\u6e83\u3002 1.2 \u5f02\u5e38\u5904\u7406\u7684\u5173\u952e\u5b57 try \uff1a \u7528\u4e8e\u5b9a\u4e49\u4e00\u4e2a\u5f02\u5e38\u68c0\u6d4b\u5757\uff0c\u76d1\u63a7\u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u7684\u4ee3\u7801\u3002 throw \uff1a \u7528\u4e8e\u629b\u51fa\u5f02\u5e38\uff0c\u901a\u5e38\u4f34\u968f\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61\u3002 catch \uff1a \u7528\u4e8e\u6355\u83b7\u5f02\u5e38\u5e76\u5904\u7406\u3002 2. \u5f02\u5e38\u5904\u7406\u7684\u57fa\u672c\u8bed\u6cd5 #include <iostream> using namespace std ; int main () { try { // \u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u7684\u4ee3\u7801 throw \"An error occurred\" ; // \u629b\u51fa\u5f02\u5e38 } catch ( const char * e ) { // \u6355\u83b7\u5e76\u5904\u7406\u5f02\u5e38 cout << \"Caught exception: \" << e << endl ; } return 0 ; } \u8f93\u51fa \uff1a Caught exception: An error occurred 3. \u5f02\u5e38\u5904\u7406\u7684\u6d41\u7a0b \u5f02\u5e38\u68c0\u6d4b \uff1a \u5728 try \u5757\u4e2d\u6267\u884c\u4ee3\u7801\uff0c\u76d1\u63a7\u662f\u5426\u53d1\u751f\u5f02\u5e38\u3002 \u5f02\u5e38\u629b\u51fa \uff1a \u5982\u679c\u53d1\u751f\u5f02\u5e38\uff0c\u4f7f\u7528 throw \u629b\u51fa\u5f02\u5e38\u3002 \u5f02\u5e38\u6355\u83b7 \uff1a \u7a0b\u5e8f\u8df3\u8f6c\u5230\u4e0e\u5f02\u5e38\u7c7b\u578b\u5339\u914d\u7684 catch \u5757\uff0c\u6267\u884c\u5f02\u5e38\u5904\u7406\u4ee3\u7801\u3002 4. \u5f02\u5e38\u7684\u7c7b\u578b C++ \u4e2d\u53ef\u4ee5\u629b\u51fa\u4efb\u610f\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5305\u62ec\uff1a 1. \u5185\u7f6e\u7c7b\u578b \uff1a - \u5982 int \u3001 double \u3001 const char* \u7b49\u3002 2. \u7c7b\u5bf9\u8c61 \uff1a - \u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b\uff0c\u7528\u4e8e\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u9519\u8bef\u4fe1\u606f\u3002 3. \u6807\u51c6\u5f02\u5e38\u7c7b \uff1a - C++ \u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u4e00\u7ec4\u5f02\u5e38\u7c7b\uff08\u5982 std::exception \uff09\uff0c\u7528\u4e8e\u5904\u7406\u5e38\u89c1\u7684\u5f02\u5e38\u3002 5. \u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b \u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f std::exception \u521b\u5efa\u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b\u3002 \u793a\u4f8b \uff1a #include <iostream> #include <exception> using namespace std ; // \u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b class MyException : public exception { public : const char * what () const noexcept override { return \"My custom exception\" ; } }; int main () { try { throw MyException (); // \u629b\u51fa\u81ea\u5b9a\u4e49\u5f02\u5e38 } catch ( const MyException & e ) { cout << \"Caught exception: \" << e . what () << endl ; } return 0 ; } \u8f93\u51fa \uff1a Caught exception: My custom exception 6. \u591a\u4e2a catch \u5757 \u53ef\u4ee5\u4e3a\u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38\u5b9a\u4e49\u591a\u4e2a catch \u5757\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; int main () { try { throw 42 ; // \u629b\u51fa\u6574\u6570\u5f02\u5e38 } catch ( int e ) { cout << \"Caught integer exception: \" << e << endl ; } catch (...) { // \u6355\u83b7\u6240\u6709\u5176\u4ed6\u7c7b\u578b\u7684\u5f02\u5e38 cout << \"Caught unknown exception\" << endl ; } return 0 ; } \u8f93\u51fa \uff1a Caught integer exception: 42 7. \u6807\u51c6\u5f02\u5e38\u7c7b C++ \u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u4e00\u7ec4\u5f02\u5e38\u7c7b\uff0c\u5e38\u89c1\u7684\u6709\uff1a - std::exception \uff1a\u6240\u6709\u6807\u51c6\u5f02\u5e38\u7684\u57fa\u7c7b\u3002 - std::runtime_error \uff1a\u8fd0\u884c\u65f6\u9519\u8bef\u3002 - std::logic_error \uff1a\u903b\u8f91\u9519\u8bef\u3002 - std::bad_alloc \uff1a\u5185\u5b58\u5206\u914d\u5931\u8d25\u3002 - std::out_of_range \uff1a\u8d85\u51fa\u8303\u56f4\u7684\u9519\u8bef\u3002 \u793a\u4f8b \uff1a #include <iostream> #include <stdexcept> using namespace std ; int main () { try { throw runtime_error ( \"Runtime error occurred\" ); } catch ( const runtime_error & e ) { cout << \"Caught exception: \" << e . what () << endl ; } return 0 ; } \u8f93\u51fa \uff1a Caught exception: Runtime error occurred 8. \u5f02\u5e38\u7684\u6ce8\u610f\u4e8b\u9879 \u5f02\u5e38\u7684\u5339\u914d\u987a\u5e8f \uff1a catch \u5757\u6309\u7167\u5b9a\u4e49\u987a\u5e8f\u5339\u914d\u5f02\u5e38\uff0c\u7b2c\u4e00\u4e2a\u5339\u914d\u7684 catch \u5757\u4f1a\u88ab\u6267\u884c\u3002 \u901a\u914d\u7b26 catch(...) \u5e94\u653e\u5728\u6700\u540e\u3002 \u5f02\u5e38\u7684\u91cd\u65b0\u629b\u51fa \uff1a \u53ef\u4ee5\u5728 catch \u5757\u4e2d\u4f7f\u7528 throw \u91cd\u65b0\u629b\u51fa\u5f02\u5e38\u3002 try { throw 42 ; } catch ( int e ) { cout << \"Caught exception: \" << e << endl ; throw ; // \u91cd\u65b0\u629b\u51fa\u5f02\u5e38 } \u5f02\u5e38\u7684\u6027\u80fd\u5f00\u9500 \uff1a \u5f02\u5e38\u5904\u7406\u4f1a\u589e\u52a0\u7a0b\u5e8f\u7684\u8fd0\u884c\u5f00\u9500\uff0c\u5e94\u907f\u514d\u5728\u6027\u80fd\u654f\u611f\u7684\u4ee3\u7801\u4e2d\u9891\u7e41\u4f7f\u7528\u3002 \u6790\u6784\u51fd\u6570\u4e2d\u4e0d\u5e94\u629b\u51fa\u5f02\u5e38 \uff1a \u5982\u679c\u6790\u6784\u51fd\u6570\u629b\u51fa\u5f02\u5e38\uff0c\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002 9. \u603b\u7ed3 C++ \u5f02\u5e38\u673a\u5236 \u901a\u8fc7 try \u3001 throw \u548c catch \u5b9e\u73b0\uff0c\u7528\u4e8e\u6355\u83b7\u548c\u5904\u7406\u8fd0\u884c\u65f6\u9519\u8bef\u3002 \u5e38\u89c1\u7528\u6cd5 \uff1a \u4f7f\u7528 try \u5757\u76d1\u63a7\u4ee3\u7801\u3002 \u4f7f\u7528 throw \u629b\u51fa\u5f02\u5e38\u3002 \u4f7f\u7528 catch \u6355\u83b7\u5e76\u5904\u7406\u5f02\u5e38\u3002 \u6807\u51c6\u5f02\u5e38\u7c7b \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u4fbf\u4e8e\u5904\u7406\u5e38\u89c1\u9519\u8bef\u3002 \u6ce8\u610f\u4e8b\u9879 \uff1a \u907f\u514d\u5728\u6790\u6784\u51fd\u6570\u4e2d\u629b\u51fa\u5f02\u5e38\u3002 \u901a\u914d\u7b26 catch(...) \u5e94\u653e\u5728\u6700\u540e\u3002 \u4e3a\u4ec0\u4e48\u8981\u7528throw\u62a5\u9519\uff0c\u6211\u7528cout\u4e0d\u884c\u5417 throw \u548c cout \u7684\u7528\u9014\u4e0d\u540c\uff0c throw \u662f\u7528\u4e8e\u5f02\u5e38\u5904\u7406\u7684\uff0c\u800c cout \u53ea\u662f\u7528\u4e8e\u8f93\u51fa\u4fe1\u606f\u3002\u4ee5\u4e0b\u662f\u4e24\u8005\u7684\u533a\u522b\u548c\u4e3a\u4ec0\u4e48\u9700\u8981\u4f7f\u7528 throw \u7684\u539f\u56e0\uff1a 1. throw \u548c cout \u7684\u533a\u522b \u7279\u6027 throw cout \u7528\u9014 \u7528\u4e8e\u629b\u51fa\u5f02\u5e38\u5e76\u8df3\u8f6c\u5230\u5f02\u5e38\u5904\u7406\u4ee3\u7801 \u7528\u4e8e\u8f93\u51fa\u4fe1\u606f\u5230\u63a7\u5236\u53f0 \u9519\u8bef\u5904\u7406\u673a\u5236 \u652f\u6301\u5f02\u5e38\u5904\u7406\u673a\u5236\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u6355\u83b7\u5e76\u5904\u7406\u9519\u8bef \u4e0d\u652f\u6301\u5f02\u5e38\u5904\u7406\uff0c\u53ea\u662f\u7b80\u5355\u5730\u6253\u5370\u4fe1\u606f \u7a0b\u5e8f\u6d41\u63a7\u5236 \u4f1a\u4e2d\u65ad\u5f53\u524d\u4ee3\u7801\u7684\u6267\u884c\uff0c\u8df3\u8f6c\u5230 catch \u5757 \u4e0d\u4f1a\u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c\uff0c\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u4ee3\u7801 \u9002\u7528\u573a\u666f \u9002\u7528\u4e8e\u9700\u8981\u5904\u7406\u9519\u8bef\u5e76\u6062\u590d\u7a0b\u5e8f\u7684\u573a\u666f \u9002\u7528\u4e8e\u8c03\u8bd5\u6216\u6253\u5370\u666e\u901a\u4fe1\u606f 2. \u4e3a\u4ec0\u4e48\u9700\u8981 throw 2.1 \u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c \u5f53\u53d1\u751f\u4e25\u91cd\u9519\u8bef\u65f6\uff0c throw \u4f1a\u4e2d\u65ad\u5f53\u524d\u4ee3\u7801\u7684\u6267\u884c\uff0c\u76f4\u63a5\u8df3\u8f6c\u5230\u5f02\u5e38\u5904\u7406\u4ee3\u7801\u3002 \u5982\u679c\u4ec5\u4f7f\u7528 cout \u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff0c\u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u4ee3\u7801\uff0c\u53ef\u80fd\u5bfc\u81f4\u66f4\u591a\u9519\u8bef\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; void divide ( int a , int b ) { if ( b == 0 ) { throw \"Division by zero!\" ; // \u629b\u51fa\u5f02\u5e38 } cout << \"Result: \" << a / b << endl ; } int main () { try { divide ( 10 , 0 ); // \u4f1a\u629b\u51fa\u5f02\u5e38 cout << \"This line will not execute.\" << endl ; } catch ( const char * e ) { cout << \"Caught exception: \" << e << endl ; } return 0 ; } \u8f93\u51fa \uff1a Caught exception: Division by zero! \u5982\u679c\u7528 cout \u66ff\u4ee3 throw \uff0c\u540e\u7eed\u4ee3\u7801\uff08\u5982 cout << \"This line will not execute.\" \uff09\u4ecd\u4f1a\u6267\u884c\uff0c\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u903b\u8f91\u9519\u8bef\u3002 2.2 \u63d0\u4f9b\u9519\u8bef\u5904\u7406\u673a\u5236 throw \u914d\u5408 try-catch \u63d0\u4f9b\u4e86\u4e00\u79cd\u7ed3\u6784\u5316\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\u3002 \u4f60\u53ef\u4ee5\u5728 catch \u5757\u4e2d\u96c6\u4e2d\u5904\u7406\u9519\u8bef\uff0c\u800c\u4e0d\u662f\u5728\u6bcf\u4e2a\u53ef\u80fd\u51fa\u9519\u7684\u5730\u65b9\u90fd\u5199\u91cd\u590d\u7684\u9519\u8bef\u68c0\u67e5\u4ee3\u7801\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; void readFile () { throw \"File not found!\" ; // \u629b\u51fa\u5f02\u5e38 } void processFile () { readFile (); // \u8c03\u7528\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u51fd\u6570 } int main () { try { processFile (); // \u6355\u83b7\u5f02\u5e38 } catch ( const char * e ) { cout << \"Error: \" << e << endl ; } return 0 ; } \u8f93\u51fa \uff1a Error: File not found! \u5982\u679c\u4e0d\u7528 throw \uff0c\u4f60\u9700\u8981\u5728\u6bcf\u4e2a\u51fd\u6570\u4e2d\u68c0\u67e5\u9519\u8bef\u5e76\u8fd4\u56de\u9519\u8bef\u7801\uff0c\u4ee3\u7801\u4f1a\u53d8\u5f97\u5197\u957f\u4e14\u96be\u4ee5\u7ef4\u62a4\u3002 2.3 \u652f\u6301\u591a\u5c42\u9519\u8bef\u4f20\u64ad throw \u53ef\u4ee5\u5c06\u9519\u8bef\u4ece\u4e00\u4e2a\u51fd\u6570\u4f20\u64ad\u5230\u8c03\u7528\u5b83\u7684\u51fd\u6570\uff0c\u76f4\u5230\u627e\u5230\u5408\u9002\u7684 catch \u5757\u5904\u7406\u9519\u8bef\u3002 \u8fd9\u79cd\u673a\u5236\u975e\u5e38\u9002\u5408\u590d\u6742\u7684\u7a0b\u5e8f\u7ed3\u6784\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; void level3 () { throw \"Error at level 3\" ; // \u629b\u51fa\u5f02\u5e38 } void level2 () { level3 (); // \u4e0d\u5904\u7406\u5f02\u5e38\uff0c\u5411\u4e0a\u4f20\u64ad } void level1 () { level2 (); // \u4e0d\u5904\u7406\u5f02\u5e38\uff0c\u5411\u4e0a\u4f20\u64ad } int main () { try { level1 (); // \u6355\u83b7\u5f02\u5e38 } catch ( const char * e ) { cout << \"Caught exception: \" << e << endl ; } return 0 ; } \u8f93\u51fa \uff1a Caught exception: Error at level 3 \u5982\u679c\u4e0d\u7528 throw \uff0c\u4f60\u9700\u8981\u5728\u6bcf\u4e00\u5c42\u51fd\u6570\u4e2d\u68c0\u67e5\u9519\u8bef\u5e76\u8fd4\u56de\u9519\u8bef\u7801\uff0c\u4ee3\u7801\u4f1a\u53d8\u5f97\u975e\u5e38\u590d\u6742\u3002 3. \u603b\u7ed3\uff1a\u4e3a\u4ec0\u4e48\u7528 throw \u800c\u4e0d\u662f cout \u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c \uff1a throw \u4f1a\u4e2d\u65ad\u5f53\u524d\u4ee3\u7801\u7684\u6267\u884c\uff0c\u907f\u514d\u9519\u8bef\u8fdb\u4e00\u6b65\u6269\u6563\u3002 cout \u53ea\u662f\u8f93\u51fa\u4fe1\u606f\uff0c\u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u6267\u884c\uff0c\u53ef\u80fd\u5bfc\u81f4\u66f4\u591a\u95ee\u9898\u3002 \u7ed3\u6784\u5316\u9519\u8bef\u5904\u7406 \uff1a throw \u914d\u5408 try-catch \u63d0\u4f9b\u4e86\u4e00\u79cd\u96c6\u4e2d\u5904\u7406\u9519\u8bef\u7684\u673a\u5236\u3002 cout \u53ea\u80fd\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff0c\u65e0\u6cd5\u63d0\u4f9b\u9519\u8bef\u5904\u7406\u80fd\u529b\u3002 \u652f\u6301\u9519\u8bef\u4f20\u64ad \uff1a throw \u53ef\u4ee5\u5c06\u9519\u8bef\u4ece\u4e00\u4e2a\u51fd\u6570\u4f20\u64ad\u5230\u8c03\u7528\u5b83\u7684\u51fd\u6570\uff0c\u76f4\u5230\u627e\u5230\u5408\u9002\u7684 catch \u5757\u3002 cout \u65e0\u6cd5\u5b9e\u73b0\u8fd9\u79cd\u529f\u80fd\u3002 \u4ee3\u7801\u53ef\u7ef4\u62a4\u6027 \uff1a \u4f7f\u7528 throw \u548c try-catch \u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u7b80\u6d01\u3001\u66f4\u6613\u7ef4\u62a4\u3002 \u5982\u679c\u4ec5\u7528 cout \uff0c\u9700\u8981\u5728\u6bcf\u4e2a\u53ef\u80fd\u51fa\u9519\u7684\u5730\u65b9\u624b\u52a8\u68c0\u67e5\u5e76\u5904\u7406\u9519\u8bef\uff0c\u4ee3\u7801\u4f1a\u53d8\u5f97\u5197\u957f\u4e14\u96be\u4ee5\u7ef4\u62a4\u3002 \u56e0\u6b64\uff0c throw \u662f\u4e00\u79cd\u66f4\u5f3a\u5927\u3001\u66f4\u7075\u6d3b\u7684\u9519\u8bef\u5904\u7406\u5de5\u5177\uff0c\u800c cout \u4ec5\u9002\u7528\u4e8e\u7b80\u5355\u7684\u8c03\u8bd5\u6216\u8f93\u51fa\u4fe1\u606f\u3002","title":"5\u670815\u57fa\u7840\u77e5\u8bc6"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_1","text":"\u5b9a\u4e49\u4f4d\u7f6e \uff1a \u5168\u5c40\u53d8\u91cf \uff1a\u5b9a\u4e49\u5728\u6240\u6709\u51fd\u6570\u4e4b\u5916\uff0c\u901a\u5e38\u5728\u6587\u4ef6\u7684\u9876\u90e8\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a\u5b9a\u4e49\u5728\u51fd\u6570\u6216\u4ee3\u7801\u5757\u5185\u90e8\u3002 \u4f5c\u7528\u57df \uff1a \u5168\u5c40\u53d8\u91cf \uff1a\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7a0b\u5e8f\uff0c\u6240\u6709\u51fd\u6570\u90fd\u53ef\u4ee5\u8bbf\u95ee\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a\u4f5c\u7528\u57df\u4ec5\u9650\u4e8e\u5b9a\u4e49\u5b83\u7684\u51fd\u6570\u6216\u4ee3\u7801\u5757\u3002 \u751f\u547d\u5468\u671f \uff1a \u5168\u5c40\u53d8\u91cf \uff1a\u4ece\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\u5230\u7a0b\u5e8f\u7ed3\u675f\uff0c\u59cb\u7ec8\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a\u4ece\u8fdb\u5165\u5176\u4f5c\u7528\u57df\u5f00\u59cb\uff0c\u5230\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u9500\u6bc1\u3002 \u5b58\u50a8\u4f4d\u7f6e \uff1a \u5168\u5c40\u53d8\u91cf \uff1a\u5b58\u50a8\u5728\u5185\u5b58\u7684\u5168\u5c40/\u9759\u6001\u533a\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a\u5b58\u50a8\u5728\u6808\u533a\u3002 \u521d\u59cb\u5316 \uff1a \u5168\u5c40\u53d8\u91cf \uff1a\u5982\u679c\u672a\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u9ed8\u8ba4\u521d\u59cb\u5316\u4e3a\u96f6\u503c\uff08\u5982 0 \u3001 nullptr \u7b49\uff09\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a\u5982\u679c\u672a\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u5176\u503c\u662f\u672a\u5b9a\u4e49\u7684\uff08\u968f\u673a\u503c\uff09\u3002 \u8bbf\u95ee\u65b9\u5f0f \uff1a \u5168\u5c40\u53d8\u91cf \uff1a\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u8bbf\u95ee\u6216\u901a\u8fc7 extern \u58f0\u660e\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u8bbf\u95ee\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a\u53ea\u80fd\u5728\u5176\u4f5c\u7528\u57df\u5185\u76f4\u63a5\u8bbf\u95ee\u3002","title":"\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_2","text":"\u7f16\u8bd1\u5668\u7684\u5904\u7406 \uff1a \u5168\u5c40\u53d8\u91cf \uff1a \u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u5c06\u5168\u5c40\u53d8\u91cf\u5b58\u50a8\u5728\u5168\u5c40/\u9759\u6001\u533a\u3002 \u5168\u5c40\u53d8\u91cf\u7684\u7b26\u53f7\u4fe1\u606f\u4f1a\u88ab\u8bb0\u5f55\u5728\u7b26\u53f7\u8868\u4e2d\uff0c\u4f9b\u94fe\u63a5\u5668\u4f7f\u7528\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a \u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u4e3a\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u6808\u7a7a\u95f4\u3002 \u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\u662f\u76f8\u5bf9\u4e8e\u6808\u6307\u9488\uff08 SP \uff09\u7684\u504f\u79fb\u91cf\u3002 \u64cd\u4f5c\u7cfb\u7edf\u7684\u5904\u7406 \uff1a \u64cd\u4f5c\u7cfb\u7edf\u5e76\u4e0d\u76f4\u63a5\u533a\u5206\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u3002 \u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u52a0\u8f7d\u7a0b\u5e8f\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5c06\u5168\u5c40\u53d8\u91cf\u6240\u5728\u7684\u5168\u5c40/\u9759\u6001\u533a\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u3002 \u5c40\u90e8\u53d8\u91cf\u7684\u7ba1\u7406\u7531\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u6808\u7ba1\u7406\u673a\u5236\u5904\u7406\u3002","title":"\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f16\u8bd1\u5668\u5982\u4f55\u533a\u5206\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_3","text":"\u5168\u5c40\u53d8\u91cf \uff1a\u4f5c\u7528\u57df\u5927\uff0c\u751f\u547d\u5468\u671f\u957f\uff0c\u5b58\u50a8\u5728\u5168\u5c40/\u9759\u6001\u533a\u3002 \u5c40\u90e8\u53d8\u91cf \uff1a\u4f5c\u7528\u57df\u5c0f\uff0c\u751f\u547d\u5468\u671f\u77ed\uff0c\u5b58\u50a8\u5728\u6808\u533a\u3002 \u7f16\u8bd1\u5668 \uff1a\u901a\u8fc7\u53d8\u91cf\u7684\u5b9a\u4e49\u4f4d\u7f6e\u548c\u4f5c\u7528\u57df\u4fe1\u606f\u533a\u5206\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\uff0c\u5e76\u5206\u914d\u4e0d\u540c\u7684\u5b58\u50a8\u533a\u57df\u3002 \u64cd\u4f5c\u7cfb\u7edf \uff1a\u8d1f\u8d23\u52a0\u8f7d\u5168\u5c40\u53d8\u91cf\u6240\u5728\u7684\u5168\u5c40/\u9759\u6001\u533a\uff0c\u5c40\u90e8\u53d8\u91cf\u7531\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6808\u7ba1\u7406\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#strcpysprintf-memcpy","text":"strcpy \u529f\u80fd \uff1a\u7528\u4e8e\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u7279\u70b9 \uff1a \u4ee5 \\0 \uff08\u7a7a\u5b57\u7b26\uff09\u4f5c\u4e3a\u5b57\u7b26\u4e32\u7ed3\u675f\u6807\u5fd7\u3002 \u53ea\u80fd\u7528\u4e8e\u5b57\u7b26\u4e32\u64cd\u4f5c\uff0c\u4e0d\u80fd\u5904\u7406\u4e8c\u8fdb\u5236\u6570\u636e\u3002 \u7528\u6cd5 \uff1a char src [] = \"Hello\" ; char dest [ 10 ]; strcpy ( dest , src ); // \u5c06 src \u590d\u5236\u5230 dest \u6ce8\u610f \uff1a\u76ee\u6807\u7f13\u51b2\u533a\u9700\u8981\u8db3\u591f\u5927\u4ee5\u5bb9\u7eb3\u6e90\u5b57\u7b26\u4e32\u548c\u7ed3\u675f\u7b26 \\0 \u3002 sprintf \u529f\u80fd \uff1a\u5c06\u683c\u5f0f\u5316\u7684\u6570\u636e\u5199\u5165\u5b57\u7b26\u4e32\u3002 \u7279\u70b9 \uff1a \u7c7b\u4f3c\u4e8e printf \uff0c\u4f46\u8f93\u51fa\u5230\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u6807\u51c6\u8f93\u51fa\u3002 \u652f\u6301\u683c\u5f0f\u5316\u64cd\u4f5c\uff08\u5982 %d \u3001 %s \u7b49\uff09\u3002 \u7528\u6cd5 \uff1a char buffer [ 50 ]; int num = 42 ; sprintf ( buffer , \"The number is %d\" , num ); // \u5c06\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u5199\u5165 buffer \u6ce8\u610f \uff1a\u9700\u8981\u786e\u4fdd\u76ee\u6807\u7f13\u51b2\u533a\u8db3\u591f\u5927\u4ee5\u5bb9\u7eb3\u683c\u5f0f\u5316\u540e\u7684\u5b57\u7b26\u4e32\u3002 memcpy \u529f\u80fd \uff1a\u7528\u4e8e\u5728\u5185\u5b58\u4e2d\u590d\u5236\u6307\u5b9a\u5927\u5c0f\u7684\u5b57\u8282\u6570\u636e\u3002 \u7279\u70b9 \uff1a \u4e0d\u5173\u5fc3\u6570\u636e\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u7528\u4e8e\u590d\u5236\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\uff08\u5305\u62ec\u4e8c\u8fdb\u5236\u6570\u636e\uff09\u3002 \u4e0d\u4f1a\u5904\u7406\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26 \\0 \u3002 \u7528\u6cd5 \uff1a char src [] = \"Hello\" ; char dest [ 10 ]; memcpy ( dest , src , 5 ); // \u5c06 src \u7684\u524d 5 \u4e2a\u5b57\u8282\u590d\u5236\u5230 dest \u6ce8\u610f \uff1a\u6e90\u548c\u76ee\u6807\u5185\u5b58\u533a\u57df\u4e0d\u80fd\u91cd\u53e0\uff0c\u91cd\u53e0\u65f6\u5e94\u4f7f\u7528 memmove \u3002","title":"strcpy\u3001sprintf \u548c memcpy \u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_4","text":"\u529f\u80fd strcpy sprintf memcpy \u7528\u9014 \u5b57\u7b26\u4e32\u590d\u5236 \u683c\u5f0f\u5316\u8f93\u51fa\u5230\u5b57\u7b26\u4e32 \u5185\u5b58\u6570\u636e\u590d\u5236 \u6570\u636e\u7c7b\u578b \u4ec5\u9002\u7528\u4e8e\u5b57\u7b26\u4e32 \u9002\u7528\u4e8e\u5b57\u7b26\u4e32\uff0c\u652f\u6301\u683c\u5f0f\u5316 \u4efb\u610f\u7c7b\u578b\u6570\u636e \u662f\u5426\u5904\u7406 \\0 \u662f \u662f \u5426 \u5b89\u5168\u6027 \u53ef\u80fd\u5bfc\u81f4\u7f13\u51b2\u533a\u6ea2\u51fa \u53ef\u80fd\u5bfc\u81f4\u7f13\u51b2\u533a\u6ea2\u51fa \u9700\u8981\u786e\u4fdd\u5185\u5b58\u533a\u57df\u4e0d\u91cd\u53e0 \u9002\u7528\u573a\u666f \u5b57\u7b26\u4e32\u64cd\u4f5c \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 \u4e8c\u8fdb\u5236\u6570\u636e\u6216\u4efb\u610f\u5185\u5b58\u5757\u7684\u590d\u5236 \u5bf9\u4e8e\u4e00\u4e2a\u9891\u7e41\u4f7f\u7528\u7684\u77ed\u5c0f\u51fd\u6570\uff0c\u901a\u5e38\u5efa\u8bae\u4f7f\u7528 \u5185\u8054\u51fd\u6570\uff08inline function\uff09 \u6765\u5b9e\u73b0\u3002","title":"\u533a\u522b\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_5","text":"","title":"\u5185\u8054\u51fd\u6570\u7684\u4f18\u7f3a\u70b9"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_6","text":"\u51cf\u5c11\u51fd\u6570\u8c03\u7528\u5f00\u9500 \uff1a \u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u4f1a\u5c06\u51fd\u6570\u7684\u4ee3\u7801\u76f4\u63a5\u63d2\u5165\u5230\u8c03\u7528\u5904\uff0c\u907f\u514d\u4e86\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\uff08\u5982\u538b\u6808\u3001\u8df3\u8f6c\u3001\u8fd4\u56de\u7b49\u64cd\u4f5c\uff09\u3002 \u9002\u5408\u9891\u7e41\u8c03\u7528\u7684\u5c0f\u51fd\u6570\u3002 \u63d0\u9ad8\u8fd0\u884c\u6548\u7387 \uff1a \u7531\u4e8e\u7701\u53bb\u4e86\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\uff0c\u5185\u8054\u51fd\u6570\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\u3002 \u4ee3\u7801\u53ef\u8bfb\u6027 \uff1a \u5185\u8054\u51fd\u6570\u53ef\u4ee5\u50cf\u666e\u901a\u51fd\u6570\u4e00\u6837\u5b9a\u4e49\u548c\u8c03\u7528\uff0c\u4fdd\u6301\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u540c\u65f6\u907f\u514d\u4e86\u91cd\u590d\u4ee3\u7801\u3002 \u7f16\u8bd1\u5668\u4f18\u5316 \uff1a \u7f16\u8bd1\u5668\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u60c5\u51b5\u51b3\u5b9a\u662f\u5426\u5c06\u51fd\u6570\u5185\u8054\uff0c\u7075\u6d3b\u6027\u8f83\u9ad8\u3002","title":"\u4f18\u70b9\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_7","text":"\u4ee3\u7801\u81a8\u80c0 \uff1a \u5982\u679c\u5185\u8054\u51fd\u6570\u88ab\u591a\u6b21\u8c03\u7528\uff0c\u7f16\u8bd1\u5668\u4f1a\u5728\u6bcf\u4e2a\u8c03\u7528\u70b9\u63d2\u5165\u51fd\u6570\u4ee3\u7801\uff0c\u53ef\u80fd\u5bfc\u81f4\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u4f53\u79ef\u589e\u5927\uff08\u4ee3\u7801\u81a8\u80c0\uff09\u3002 \u8c03\u8bd5\u56f0\u96be \uff1a \u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u88ab\u5c55\u5f00\uff0c\u53ef\u80fd\u5bfc\u81f4\u8c03\u8bd5\u65f6\u65e0\u6cd5\u51c6\u786e\u5b9a\u4f4d\u5230\u51fd\u6570\u8c03\u7528\u70b9\u3002 \u590d\u6742\u51fd\u6570\u4e0d\u9002\u5408\u5185\u8054 \uff1a \u5185\u8054\u51fd\u6570\u9002\u5408\u77ed\u5c0f\u3001\u7b80\u5355\u7684\u51fd\u6570\u3002\u5982\u679c\u51fd\u6570\u8fc7\u4e8e\u590d\u6742\uff0c\u5185\u8054\u53ef\u80fd\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\uff0c\u751a\u81f3\u88ab\u7f16\u8bd1\u5668\u5ffd\u7565\u3002 \u9012\u5f52\u51fd\u6570\u4e0d\u80fd\u5185\u8054 \uff1a \u9012\u5f52\u51fd\u6570\u65e0\u6cd5\u5c55\u5f00\u4e3a\u5185\u8054\u51fd\u6570\uff0c\u56e0\u4e3a\u9012\u5f52\u8c03\u7528\u672c\u8d28\u4e0a\u9700\u8981\u51fd\u6570\u8c03\u7528\u6808\u3002","title":"\u7f3a\u70b9\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_8","text":"\u9002\u5408 \uff1a \u77ed\u5c0f\u3001\u9891\u7e41\u8c03\u7528\u7684\u51fd\u6570\uff08\u5982\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\u3001\u8bbf\u95ee\u5668\u51fd\u6570\u7b49\uff09\u3002 \u903b\u8f91\u7b80\u5355\u3001\u4ee3\u7801\u91cf\u5c11\u7684\u51fd\u6570\u3002 \u4e0d\u9002\u5408 \uff1a \u590d\u6742\u7684\u51fd\u6570\uff08\u5982\u5305\u542b\u5faa\u73af\u3001\u6761\u4ef6\u5206\u652f\u8f83\u591a\u7684\u51fd\u6570\uff09\u3002 \u9012\u5f52\u51fd\u6570\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_9","text":"#include <iostream> using namespace std ; // \u5b9a\u4e49\u4e00\u4e2a\u5185\u8054\u51fd\u6570 inline int add ( int a , int b ) { return a + b ; } int main () { int x = 5 , y = 10 ; cout << \"Sum: \" << add ( x , y ) << endl ; // \u8c03\u7528\u5185\u8054\u51fd\u6570 return 0 ; }","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_10","text":"\u5bf9\u4e8e\u9891\u7e41\u4f7f\u7528\u7684\u77ed\u5c0f\u51fd\u6570\uff0c \u5185\u8054\u51fd\u6570 \u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u53ef\u4ee5\u51cf\u5c11\u51fd\u6570\u8c03\u7528\u5f00\u9500\uff0c\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\u3002 \u4f46\u9700\u8981\u6ce8\u610f\u907f\u514d\u4ee3\u7801\u81a8\u80c0\u548c\u8c03\u8bd5\u56f0\u96be\u7684\u95ee\u9898\uff0c\u5408\u7406\u9009\u62e9\u5185\u8054\u51fd\u6570\u7684\u4f7f\u7528\u573a\u666f\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_11","text":"\u667a\u80fd\u6307\u9488\uff08Smart Pointer\uff09\u662f C++ \u6807\u51c6\u5e93\u4e2d\u63d0\u4f9b\u7684\u4e00\u79cd\u7c7b\u6a21\u677f\uff0c\u7528\u4e8e\u81ea\u52a8\u7ba1\u7406\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u3002\u5b83\u901a\u8fc7 RAII\uff08Resource Acquisition Is Initialization\uff09\u673a\u5236\uff0c\u5728\u667a\u80fd\u6307\u9488\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f\u65f6\u81ea\u52a8\u91ca\u653e\u6240\u7ba1\u7406\u7684\u8d44\u6e90\uff0c\u4ece\u800c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002","title":"\u667a\u80fd\u6307\u9488\u7684\u6982\u5ff5"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_12","text":"\u81ea\u52a8\u7ba1\u7406\u5185\u5b58 \uff1a \u667a\u80fd\u6307\u9488\u4f1a\u5728\u8d85\u51fa\u4f5c\u7528\u57df\u65f6\u81ea\u52a8\u91ca\u653e\u6240\u7ba1\u7406\u7684\u5185\u5b58\uff0c\u65e0\u9700\u624b\u52a8\u8c03\u7528 delete \u3002 \u907f\u514d\u5185\u5b58\u6cc4\u6f0f \uff1a \u901a\u8fc7\u81ea\u52a8\u91ca\u653e\u5185\u5b58\uff0c\u51cf\u5c11\u7a0b\u5e8f\u4e2d\u56e0\u5fd8\u8bb0\u91ca\u653e\u5185\u5b58\u800c\u5bfc\u81f4\u7684\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898\u3002 \u63d0\u9ad8\u4ee3\u7801\u5b89\u5168\u6027 \uff1a \u667a\u80fd\u6307\u9488\u901a\u8fc7\u5c01\u88c5\u539f\u59cb\u6307\u9488\uff0c\u907f\u514d\u4e86\u76f4\u63a5\u64cd\u4f5c\u88f8\u6307\u9488\u5e26\u6765\u7684\u60ac\u7a7a\u6307\u9488\u3001\u91cd\u590d\u91ca\u653e\u7b49\u95ee\u9898\u3002 \u7b80\u5316\u8d44\u6e90\u7ba1\u7406 \uff1a \u667a\u80fd\u6307\u9488\u53ef\u4ee5\u65b9\u4fbf\u5730\u7ba1\u7406\u52a8\u6001\u5206\u914d\u7684\u8d44\u6e90\uff0c\u51cf\u5c11\u624b\u52a8\u7ba1\u7406\u7684\u590d\u6742\u6027\u3002","title":"\u667a\u80fd\u6307\u9488\u7684\u4f5c\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_13","text":"C++ \u6807\u51c6\u5e93\u4e2d\u4e3b\u8981\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u4e09\u79cd\u667a\u80fd\u6307\u9488\uff1a","title":"\u667a\u80fd\u6307\u9488\u7684\u5206\u7c7b\u53ca\u7279\u70b9"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1-stdunique_ptr","text":"\u7279\u70b9 \uff1a \u72ec\u5360\u6240\u6709\u6743\uff1a\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u6709\u4e00\u4e2a unique_ptr \u62e5\u6709\u67d0\u5757\u5185\u5b58\u3002 \u4e0d\u53ef\u590d\u5236\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7 std::move \u8f6c\u79fb\u6240\u6709\u6743\u3002 \u9002\u7528\u573a\u666f \uff1a \u9002\u7528\u4e8e\u9700\u8981\u660e\u786e\u552f\u4e00\u6240\u6709\u6743\u7684\u573a\u666f\u3002 \u793a\u4f8b \uff1a #include <memory> #include <iostream> using namespace std ; int main () { unique_ptr < int > ptr1 = make_unique < int > ( 10 ); // \u521b\u5efa\u4e00\u4e2a unique_ptr cout << * ptr1 << endl ; unique_ptr < int > ptr2 = move ( ptr1 ); // \u8f6c\u79fb\u6240\u6709\u6743 if ( ! ptr1 ) { cout << \"ptr1 is null\" << endl ; } return 0 ; }","title":"1. std::unique_ptr"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2-stdshared_ptr","text":"\u7279\u70b9 \uff1a \u5171\u4eab\u6240\u6709\u6743\uff1a\u591a\u4e2a shared_ptr \u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\u3002 \u4f7f\u7528\u5f15\u7528\u8ba1\u6570\u6765\u7ba1\u7406\u5185\u5b58\uff0c\u5f53\u5f15\u7528\u8ba1\u6570\u4e3a 0 \u65f6\u91ca\u653e\u5185\u5b58\u3002 \u9002\u7528\u573a\u666f \uff1a \u9002\u7528\u4e8e\u9700\u8981\u591a\u4e2a\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u8d44\u6e90\u7684\u573a\u666f\u3002 \u793a\u4f8b \uff1a #include <memory> #include <iostream> using namespace std ; int main () { shared_ptr < int > ptr1 = make_shared < int > ( 20 ); // \u521b\u5efa\u4e00\u4e2a shared_ptr shared_ptr < int > ptr2 = ptr1 ; // \u5171\u4eab\u6240\u6709\u6743 cout << * ptr1 << \", \" << * ptr2 << endl ; cout << \"Use count: \" << ptr1 . use_count () << endl ; // \u5f15\u7528\u8ba1\u6570 return 0 ; }","title":"2. std::shared_ptr"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#3-stdweak_ptr","text":"\u7279\u70b9 \uff1a \u5f31\u5f15\u7528\uff1a\u4e0d\u4f1a\u5f71\u54cd shared_ptr \u7684\u5f15\u7528\u8ba1\u6570\u3002 \u9700\u8981\u4e0e shared_ptr \u914d\u5408\u4f7f\u7528\uff0c\u7528\u4e8e\u89e3\u51b3\u5faa\u73af\u5f15\u7528\u95ee\u9898\u3002 \u9002\u7528\u573a\u666f \uff1a \u9002\u7528\u4e8e\u9700\u8981\u89c2\u5bdf\u4f46\u4e0d\u62e5\u6709\u8d44\u6e90\u7684\u573a\u666f\uff0c\u5e38\u7528\u4e8e\u907f\u514d shared_ptr \u7684\u5faa\u73af\u5f15\u7528\u3002 \u793a\u4f8b \uff1a #include <memory> #include <iostream> using namespace std ; int main () { shared_ptr < int > shared = make_shared < int > ( 30 ); weak_ptr < int > weak = shared ; // \u521b\u5efa\u4e00\u4e2a weak_ptr cout << \"Use count: \" << shared . use_count () << endl ; if ( auto ptr = weak . lock ()) { // \u68c0\u67e5 weak_ptr \u662f\u5426\u6709\u6548 cout << * ptr << endl ; } return 0 ; }","title":"3. std::weak_ptr"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_14","text":"\u7c7b\u578b \u7279\u70b9 \u9002\u7528\u573a\u666f std::unique_ptr \u72ec\u5360\u6240\u6709\u6743\uff0c\u4e0d\u53ef\u590d\u5236\uff0c\u53ef\u901a\u8fc7 std::move \u8f6c\u79fb\u6240\u6709\u6743\u3002 \u9700\u8981\u552f\u4e00\u6240\u6709\u6743\u7684\u573a\u666f\u3002 std::shared_ptr \u5171\u4eab\u6240\u6709\u6743\uff0c\u4f7f\u7528\u5f15\u7528\u8ba1\u6570\u7ba1\u7406\u5185\u5b58\u3002 \u9700\u8981\u591a\u4e2a\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u8d44\u6e90\u7684\u573a\u666f\u3002 std::weak_ptr \u5f31\u5f15\u7528\uff0c\u4e0d\u5f71\u54cd\u5f15\u7528\u8ba1\u6570\uff0c\u9700\u4e0e shared_ptr \u914d\u5408\u4f7f\u7528\uff0c\u907f\u514d\u5faa\u73af\u5f15\u7528\u3002 \u9700\u8981\u89c2\u5bdf\u4f46\u4e0d\u62e5\u6709\u8d44\u6e90\u7684\u573a\u666f\uff0c\u89e3\u51b3\u5faa\u73af\u5f15\u7528\u95ee\u9898\u3002 \u667a\u80fd\u6307\u9488\u901a\u8fc7\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u6781\u5927\u5730\u51cf\u5c11\u4e86\u624b\u52a8\u7ba1\u7406\u5185\u5b58\u7684\u590d\u6742\u6027\u548c\u9519\u8bef\u98ce\u9669\uff0c\u662f\u73b0\u4ee3 C++ \u7f16\u7a0b\u4e2d\u63a8\u8350\u4f7f\u7528\u7684\u5de5\u5177\u3002 std::shared_ptr \u662f C++ \u6807\u51c6\u5e93\u4e2d\u7684\u667a\u80fd\u6307\u9488\uff0c\u7528\u4e8e\u5b9e\u73b0\u5171\u4eab\u6240\u6709\u6743\u7684\u5185\u5b58\u7ba1\u7406\u3002\u5b83\u901a\u8fc7 \u5f15\u7528\u8ba1\u6570 \u6765\u7ba1\u7406\u52a8\u6001\u5206\u914d\u7684\u8d44\u6e90\uff0c\u5f53\u5f15\u7528\u8ba1\u6570\u4e3a 0 \u65f6\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#shared_ptr","text":"\u5f15\u7528\u8ba1\u6570 \uff1a shared_ptr \u4f7f\u7528\u4e00\u4e2a\u5f15\u7528\u8ba1\u6570\u5668\uff08\u901a\u5e38\u5b58\u50a8\u5728\u4e00\u4e2a\u63a7\u5236\u5757\u4e2d\uff09\u6765\u8bb0\u5f55\u5f53\u524d\u6709\u591a\u5c11\u4e2a shared_ptr \u5b9e\u4f8b\u5171\u4eab\u540c\u4e00\u5757\u8d44\u6e90\u3002 \u6bcf\u5f53\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 shared_ptr \u6216\u590d\u5236\u4e00\u4e2a shared_ptr \u65f6\uff0c\u5f15\u7528\u8ba1\u6570\u52a0 1\u3002 \u6bcf\u5f53\u4e00\u4e2a shared_ptr \u88ab\u9500\u6bc1\u6216\u91cd\u7f6e\u65f6\uff0c\u5f15\u7528\u8ba1\u6570\u51cf 1\u3002 \u5f53\u5f15\u7528\u8ba1\u6570\u51cf\u4e3a 0 \u65f6\uff0c\u8d44\u6e90\u4f1a\u88ab\u91ca\u653e\u3002 \u63a7\u5236\u5757 \uff1a shared_ptr \u7684\u5b9e\u73b0\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u63a7\u5236\u5757\uff08Control Block\uff09\uff0c\u5b83\u5305\u542b\uff1a \u5f15\u7528\u8ba1\u6570 \uff1a\u8bb0\u5f55\u5f53\u524d\u6709\u591a\u5c11\u4e2a shared_ptr \u5b9e\u4f8b\u5171\u4eab\u8d44\u6e90\u3002 \u5f31\u5f15\u7528\u8ba1\u6570 \uff1a\u8bb0\u5f55\u5f53\u524d\u6709\u591a\u5c11\u4e2a weak_ptr \u5b9e\u4f8b\u89c2\u5bdf\u8d44\u6e90\u3002 \u8d44\u6e90\u6307\u9488 \uff1a\u6307\u5411\u88ab\u7ba1\u7406\u7684\u8d44\u6e90\u3002 \u5220\u9664\u5668 \uff1a\u7528\u4e8e\u91ca\u653e\u8d44\u6e90\u7684\u81ea\u5b9a\u4e49\u5220\u9664\u5668\uff08\u5982\u679c\u63d0\u4f9b\uff09\u3002 \u7ebf\u7a0b\u5b89\u5168 \uff1a shared_ptr \u7684\u5f15\u7528\u8ba1\u6570\u64cd\u4f5c\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5b89\u5168\u5730\u5171\u4eab\u540c\u4e00\u4e2a shared_ptr \u3002 \u4f46\u5bf9\u8d44\u6e90\u672c\u8eab\u7684\u8bbf\u95ee\u9700\u8981\u989d\u5916\u7684\u540c\u6b65\u673a\u5236\uff08\u5982 std::mutex \uff09\u3002","title":"shared_ptr \u7684\u5b9e\u73b0\u539f\u7406"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#shared_ptr_1","text":"","title":"shared_ptr \u7684\u5de5\u4f5c\u6d41\u7a0b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1-shared_ptr","text":"std :: shared_ptr < int > sp = std :: make_shared < int > ( 10 ); - make_shared \u4f1a\u5206\u914d\u4e00\u5757\u5185\u5b58\uff0c\u540c\u65f6\u5b58\u50a8\u63a7\u5236\u5757\u548c\u8d44\u6e90\uff0c\u51cf\u5c11\u5185\u5b58\u5206\u914d\u7684\u5f00\u9500\u3002 - \u521d\u59cb\u5316\u5f15\u7528\u8ba1\u6570\u4e3a 1\u3002","title":"1. \u521b\u5efa shared_ptr"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2-shared_ptr","text":"std :: shared_ptr < int > sp2 = sp ; - \u5f15\u7528\u8ba1\u6570\u52a0 1\u3002 - sp \u548c sp2 \u5171\u4eab\u540c\u4e00\u5757\u8d44\u6e90\u3002","title":"2. \u590d\u5236 shared_ptr"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#3-shared_ptr","text":"sp . reset (); - \u5f15\u7528\u8ba1\u6570\u51cf 1\u3002 - \u5982\u679c\u5f15\u7528\u8ba1\u6570\u51cf\u4e3a 0\uff0c\u91ca\u653e\u8d44\u6e90\u3002","title":"3. \u9500\u6bc1 shared_ptr"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#shared_ptr_2","text":"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5316\u7684 shared_ptr \u5b9e\u73b0\u793a\u610f\uff1a template < typename T > class SharedPtr { private : T * ptr ; // \u88ab\u7ba1\u7406\u7684\u8d44\u6e90 int * ref_count ; // \u5f15\u7528\u8ba1\u6570 public : // \u6784\u9020\u51fd\u6570 explicit SharedPtr ( T * p = nullptr ) : ptr ( p ), ref_count ( new int ( 1 )) {} // \u62f7\u8d1d\u6784\u9020\u51fd\u6570 SharedPtr ( const SharedPtr & other ) : ptr ( other . ptr ), ref_count ( other . ref_count ) { ( * ref_count ) ++ ; } // \u8d4b\u503c\u8fd0\u7b97\u7b26 SharedPtr & operator = ( const SharedPtr & other ) { if ( this != & other ) { // \u5148\u91ca\u653e\u5f53\u524d\u8d44\u6e90 if ( -- ( * ref_count ) == 0 ) { delete ptr ; delete ref_count ; } // \u590d\u5236\u65b0\u7684\u8d44\u6e90 ptr = other . ptr ; ref_count = other . ref_count ; ( * ref_count ) ++ ; } return * this ; } // \u6790\u6784\u51fd\u6570 ~ SharedPtr () { if ( -- ( * ref_count ) == 0 ) { delete ptr ; delete ref_count ; } } // \u83b7\u53d6\u8d44\u6e90 T * get () const { return ptr ; } // \u91cd\u8f7d * \u548c -> T & operator * () const { return * ptr ; } T * operator -> () const { return ptr ; } };","title":"shared_ptr \u7684\u5b9e\u73b0\u793a\u610f"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#shared_ptr_3","text":"","title":"shared_ptr \u7684\u4f18\u7f3a\u70b9"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_15","text":"\u81ea\u52a8\u5185\u5b58\u7ba1\u7406 \uff1a\u901a\u8fc7\u5f15\u7528\u8ba1\u6570\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002 \u7ebf\u7a0b\u5b89\u5168 \uff1a\u5f15\u7528\u8ba1\u6570\u7684\u64cd\u4f5c\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002 \u7075\u6d3b\u6027 \uff1a\u652f\u6301\u81ea\u5b9a\u4e49\u5220\u9664\u5668\uff0c\u9002\u7528\u4e8e\u590d\u6742\u8d44\u6e90\u7ba1\u7406\u3002","title":"\u4f18\u70b9\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_16","text":"\u5faa\u73af\u5f15\u7528\u95ee\u9898 \uff1a \u5982\u679c\u4e24\u4e2a\u5bf9\u8c61\u4e92\u76f8\u6301\u6709\u5bf9\u65b9\u7684 shared_ptr \uff0c\u4f1a\u5bfc\u81f4\u5f15\u7528\u8ba1\u6570\u6c38\u8fdc\u4e0d\u4e3a 0\uff0c\u8d44\u6e90\u65e0\u6cd5\u91ca\u653e\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a\u4f7f\u7528 std::weak_ptr \u6253\u7834\u5faa\u73af\u5f15\u7528\u3002 \u6027\u80fd\u5f00\u9500 \uff1a \u5f15\u7528\u8ba1\u6570\u7684\u7ef4\u62a4\u9700\u8981\u4e00\u5b9a\u7684\u6027\u80fd\u5f00\u9500\uff0c\u5c24\u5176\u662f\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u3002","title":"\u7f3a\u70b9\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_17","text":"shared_ptr \u901a\u8fc7\u5f15\u7528\u8ba1\u6570\u548c\u63a7\u5236\u5757\u5b9e\u73b0\u5171\u4eab\u6240\u6709\u6743\uff0c\u9002\u7528\u4e8e\u591a\u4e2a\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u8d44\u6e90\u7684\u573a\u666f\u3002 \u5b83\u7684\u5f15\u7528\u8ba1\u6570\u64cd\u4f5c\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u907f\u514d\u5faa\u73af\u5f15\u7528\u95ee\u9898\u3002 \u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u63a8\u8350\u4f7f\u7528 std::make_shared \u521b\u5efa shared_ptr \uff0c\u4ee5\u51cf\u5c11\u5185\u5b58\u5206\u914d\u7684\u5f00\u9500\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_18","text":"\u53f3\u503c\u5f15\u7528\uff08 T&& \uff09\u662f C++11 \u5f15\u5165\u7684\u4e00\u79cd\u65b0\u7279\u6027\uff0c\u4e3b\u8981\u7528\u4e8e\u652f\u6301 \u79fb\u52a8\u8bed\u4e49 \u548c \u5b8c\u7f8e\u8f6c\u53d1 \uff0c\u4ece\u800c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\u548c\u7075\u6d3b\u6027\u3002","title":"\u53f3\u503c\u5f15\u7528\u7684\u4f5c\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_19","text":"","title":"\u53f3\u503c\u5f15\u7528\u7684\u4e3b\u8981\u4f5c\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1","text":"\u79fb\u52a8\u8bed\u4e49 \u5141\u8bb8\u5bf9\u8c61\u7684\u8d44\u6e90\uff08\u5982\u5185\u5b58\u3001\u6587\u4ef6\u53e5\u67c4\u7b49\uff09\u4ece\u4e00\u4e2a\u5bf9\u8c61\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u8fdb\u884c\u6602\u8d35\u7684\u6df1\u62f7\u8d1d\u3002 \u901a\u8fc7\u53f3\u503c\u5f15\u7528\uff0c\u53ef\u4ee5\u9ad8\u6548\u5730\u8f6c\u79fb\u8d44\u6e90\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u5185\u5b58\u5206\u914d\u548c\u6570\u636e\u590d\u5236\u3002 \u793a\u4f8b \uff1a #include <iostream> #include <vector> using namespace std ; int main () { vector < int > v1 = { 1 , 2 , 3 }; vector < int > v2 = move ( v1 ); // \u4f7f\u7528\u53f3\u503c\u5f15\u7528\u8f6c\u79fb\u8d44\u6e90 cout << \"v1 size: \" << v1 . size () << endl ; // v1 \u5df2\u88ab\u6e05\u7a7a cout << \"v2 size: \" << v2 . size () << endl ; // v2 \u62e5\u6709 v1 \u7684\u8d44\u6e90 return 0 ; } \u8f93\u51fa \uff1a v1 size: 0 v2 size: 3 \u89e3\u91ca \uff1a - move(v1) \u5c06 v1 \u8f6c\u6362\u4e3a\u53f3\u503c\u5f15\u7528\uff0c\u5141\u8bb8 v2 \u63a5\u7ba1 v1 \u7684\u8d44\u6e90\uff0c\u800c\u4e0d\u662f\u590d\u5236\u6570\u636e\u3002 - \u8fd9\u79cd\u65b9\u5f0f\u907f\u514d\u4e86\u6df1\u62f7\u8d1d\uff0c\u63d0\u9ad8\u4e86\u6027\u80fd\u3002","title":"1. \u652f\u6301\u79fb\u52a8\u8bed\u4e49"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2","text":"\u5b8c\u7f8e\u8f6c\u53d1 \u5141\u8bb8\u51fd\u6570\u6a21\u677f\u5c06\u53c2\u6570\u5b8c\u6574\u5730\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u4fdd\u7559\u53c2\u6570\u7684\u5de6\u503c\u6216\u53f3\u503c\u5c5e\u6027\u3002 \u53f3\u503c\u5f15\u7528\u7ed3\u5408 std::forward \u53ef\u4ee5\u5b9e\u73b0\u5b8c\u7f8e\u8f6c\u53d1\u3002 \u793a\u4f8b \uff1a #include <iostream> #include <utility> using namespace std ; void process ( int & x ) { cout << \"Lvalue reference: \" << x << endl ; } void process ( int && x ) { cout << \"Rvalue reference: \" << x << endl ; } template < typename T > void forwarder ( T && arg ) { process ( forward < T > ( arg )); // \u4fdd\u7559\u53c2\u6570\u7684\u5de6\u503c\u6216\u53f3\u503c\u5c5e\u6027 } int main () { int a = 10 ; forwarder ( a ); // \u4f20\u9012\u5de6\u503c forwarder ( 20 ); // \u4f20\u9012\u53f3\u503c return 0 ; } \u8f93\u51fa \uff1a Lvalue reference: 10 Rvalue reference: 20 \u89e3\u91ca \uff1a - forward<T>(arg) \u4fdd\u7559\u4e86\u53c2\u6570\u7684\u5de6\u503c\u6216\u53f3\u503c\u5c5e\u6027\uff0c\u786e\u4fdd process \u51fd\u6570\u63a5\u6536\u5230\u6b63\u786e\u7684\u5f15\u7528\u7c7b\u578b\u3002","title":"2. \u5b9e\u73b0\u5b8c\u7f8e\u8f6c\u53d1"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#3","text":"\u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u7ed1\u5b9a\u5230\u4e34\u65f6\u5bf9\u8c61\uff08\u53f3\u503c\uff09\uff0c\u4ece\u800c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u3002 \u793a\u4f8b \uff1a #include <iostream> #include <string> using namespace std ; void print ( string && str ) { cout << \"Temporary string: \" << str << endl ; } int main () { print ( \"Hello, World!\" ); // \u4e34\u65f6\u5b57\u7b26\u4e32\u7ed1\u5b9a\u5230\u53f3\u503c\u5f15\u7528 return 0 ; } \u8f93\u51fa \uff1a Temporary string: Hello, World! \u89e3\u91ca \uff1a - \u4e34\u65f6\u5b57\u7b26\u4e32 \"Hello, World!\" \u76f4\u63a5\u7ed1\u5b9a\u5230\u53f3\u503c\u5f15\u7528\u53c2\u6570 str \uff0c\u907f\u514d\u4e86\u62f7\u8d1d\u3002","title":"3. \u4f18\u5316\u4e34\u65f6\u5bf9\u8c61\u7684\u4f7f\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_20","text":"","title":"\u53f3\u503c\u5f15\u7528\u7684\u4f18\u7f3a\u70b9"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_21","text":"\u63d0\u9ad8\u6027\u80fd \uff1a \u901a\u8fc7\u79fb\u52a8\u8bed\u4e49\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u64cd\u4f5c\uff0c\u663e\u8457\u63d0\u9ad8\u7a0b\u5e8f\u6027\u80fd\u3002 \u652f\u6301\u5b8c\u7f8e\u8f6c\u53d1 \uff1a \u4fdd\u7559\u53c2\u6570\u7684\u5de6\u503c\u6216\u53f3\u503c\u5c5e\u6027\uff0c\u589e\u5f3a\u6a21\u677f\u7684\u7075\u6d3b\u6027\u3002 \u4f18\u5316\u4e34\u65f6\u5bf9\u8c61 \uff1a \u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u4e34\u65f6\u5bf9\u8c61\uff0c\u907f\u514d\u62f7\u8d1d\u3002","title":"\u4f18\u70b9\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_22","text":"\u590d\u6742\u6027\u589e\u52a0 \uff1a \u5f15\u5165\u53f3\u503c\u5f15\u7528\u540e\uff0c\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7ef4\u62a4\u6027\u53ef\u80fd\u4f1a\u964d\u4f4e\uff0c\u5c24\u5176\u662f\u5728\u6a21\u677f\u7f16\u7a0b\u4e2d\u3002 \u9700\u8981\u6ce8\u610f\u8d44\u6e90\u8f6c\u79fb\u540e\u7684\u72b6\u6001 \uff1a \u4f7f\u7528 std::move \u540e\uff0c\u6e90\u5bf9\u8c61\u53ef\u80fd\u5904\u4e8e\u672a\u5b9a\u4e49\u72b6\u6001\uff0c\u9700\u8981\u8c28\u614e\u5904\u7406\u3002","title":"\u7f3a\u70b9\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_23","text":"\u53f3\u503c\u5f15\u7528\u7684\u6838\u5fc3\u4f5c\u7528 \uff1a \u652f\u6301\u79fb\u52a8\u8bed\u4e49\uff0c\u51cf\u5c11\u62f7\u8d1d\uff0c\u63d0\u9ad8\u6027\u80fd\u3002 \u5b9e\u73b0\u5b8c\u7f8e\u8f6c\u53d1\uff0c\u589e\u5f3a\u6a21\u677f\u7684\u7075\u6d3b\u6027\u3002 \u4f18\u5316\u4e34\u65f6\u5bf9\u8c61\u7684\u4f7f\u7528\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u3002 \u53f3\u503c\u5f15\u7528\u7684\u5f15\u5165 \u4f7f\u5f97 C++ \u5728\u6027\u80fd\u4f18\u5316\u548c\u6cdb\u578b\u7f16\u7a0b\u65b9\u9762\u66f4\u52a0\u5f3a\u5927\uff0c\u4f46\u4e5f\u9700\u8981\u5f00\u53d1\u8005\u5bf9\u5176\u4f7f\u7528\u573a\u666f\u548c\u6ce8\u610f\u4e8b\u9879\u6709\u6df1\u5165\u7406\u89e3\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_24","text":"","title":"\u5de6\u503c\u5f15\u7528\u548c\u53f3\u503c\u5f15\u7528\u7684\u6982\u5ff5"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1-t","text":"\u5b9a\u4e49 \uff1a\u5de6\u503c\u5f15\u7528\u662f\u5bf9\u4e00\u4e2a\u5de6\u503c\uff08\u5728\u5185\u5b58\u4e2d\u6709\u660e\u786e\u5730\u5740\u7684\u5bf9\u8c61\uff09\u7684\u5f15\u7528\u3002 \u7279\u70b9 \uff1a \u5de6\u503c\u5f15\u7528\u53ea\u80fd\u7ed1\u5b9a\u5230\u5de6\u503c\uff08\u5982\u53d8\u91cf\u3001\u6570\u7ec4\u5143\u7d20\u7b49\uff09\u3002 \u5de6\u503c\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\u4e0e\u88ab\u5f15\u7528\u7684\u5bf9\u8c61\u4e00\u81f4\u3002 \u793a\u4f8b \uff1a int a = 10 ; int & ref = a ; // ref \u662f a \u7684\u5de6\u503c\u5f15\u7528 ref = 20 ; // \u4fee\u6539 ref \u4f1a\u5f71\u54cd a cout << a ; // \u8f93\u51fa 20","title":"1. \u5de6\u503c\u5f15\u7528\uff08T&amp;\uff09"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2-t","text":"\u5b9a\u4e49 \uff1a\u53f3\u503c\u5f15\u7528\u662f\u5bf9\u4e00\u4e2a\u53f3\u503c\uff08\u4e34\u65f6\u5bf9\u8c61\u6216\u4e0d\u5728\u5185\u5b58\u4e2d\u6709\u660e\u786e\u5730\u5740\u7684\u5bf9\u8c61\uff09\u7684\u5f15\u7528\u3002 \u7279\u70b9 \uff1a \u53f3\u503c\u5f15\u7528\u53ea\u80fd\u7ed1\u5b9a\u5230\u53f3\u503c\uff08\u5982\u4e34\u65f6\u5bf9\u8c61\u3001\u5b57\u9762\u91cf\u7b49\uff09\u3002 \u53f3\u503c\u5f15\u7528\u901a\u5e38\u7528\u4e8e\u79fb\u52a8\u8bed\u4e49\u548c\u4f18\u5316\u4e34\u65f6\u5bf9\u8c61\u7684\u4f7f\u7528\u3002 \u793a\u4f8b \uff1a int && rref = 10 ; // rref \u662f\u4e00\u4e2a\u53f3\u503c\u5f15\u7528\uff0c\u7ed1\u5b9a\u5230\u4e34\u65f6\u503c 10 cout << rref ; // \u8f93\u51fa 10","title":"2. \u53f3\u503c\u5f15\u7528\uff08T&amp;&amp;\uff09"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_25","text":"\u7279\u6027 \u5de6\u503c\u5f15\u7528\uff08 T& \uff09 \u53f3\u503c\u5f15\u7528\uff08 T&& \uff09 \u7ed1\u5b9a\u5bf9\u8c61 \u5de6\u503c\uff08\u6709\u660e\u786e\u5730\u5740\u7684\u5bf9\u8c61\uff09 \u53f3\u503c\uff08\u4e34\u65f6\u5bf9\u8c61\u6216\u5b57\u9762\u91cf\uff09 \u7528\u9014 \u7528\u4e8e\u4f20\u9012\u548c\u4fee\u6539\u5de6\u503c \u7528\u4e8e\u79fb\u52a8\u8bed\u4e49\u548c\u4f18\u5316\u4e34\u65f6\u5bf9\u8c61 \u751f\u547d\u5468\u671f \u4e0e\u88ab\u5f15\u7528\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u4e00\u81f4 \u901a\u5e38\u7ed1\u5b9a\u5230\u77ed\u751f\u547d\u5468\u671f\u7684\u4e34\u65f6\u5bf9\u8c61 \u793a\u4f8b int& ref = a; int&& rref = 10;","title":"\u5de6\u503c\u5f15\u7528\u548c\u53f3\u503c\u5f15\u7528\u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_26","text":"","title":"\u5de6\u503c\u5f15\u7528\u548c\u53f3\u503c\u5f15\u7528\u7684\u7528\u9014"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1_1","text":"\u4fee\u6539\u53d8\u91cf \uff1a \u5de6\u503c\u5f15\u7528\u53ef\u4ee5\u7528\u6765\u4fee\u6539\u53d8\u91cf\u7684\u503c\u3002 void modify ( int & x ) { x = 42 ; } int a = 10 ; modify ( a ); // a \u88ab\u4fee\u6539\u4e3a 42 \u907f\u514d\u62f7\u8d1d \uff1a \u5de6\u503c\u5f15\u7528\u53ef\u4ee5\u907f\u514d\u5728\u51fd\u6570\u8c03\u7528\u65f6\u62f7\u8d1d\u5bf9\u8c61\uff0c\u63d0\u9ad8\u6027\u80fd\u3002 void print ( const string & str ) { // \u4f7f\u7528\u5de6\u503c\u5f15\u7528\u907f\u514d\u62f7\u8d1d cout << str << endl ; } string s = \"Hello\" ; print ( s );","title":"1. \u5de6\u503c\u5f15\u7528\u7684\u7528\u9014"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2_1","text":"\u79fb\u52a8\u8bed\u4e49 \uff1a \u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u901a\u8fc7 std::move \u8f6c\u79fb\u8d44\u6e90\uff0c\u907f\u514d\u6df1\u62f7\u8d1d\u3002 vector < int > v1 = { 1 , 2 , 3 }; vector < int > v2 = move ( v1 ); // v2 \u63a5\u7ba1 v1 \u7684\u8d44\u6e90 \u4f18\u5316\u4e34\u65f6\u5bf9\u8c61 \uff1a \u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u7ed1\u5b9a\u5230\u4e34\u65f6\u5bf9\u8c61\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u3002 void print ( string && str ) { // \u63a5\u53d7\u53f3\u503c\u5f15\u7528 cout << str << endl ; } print ( \"Hello, World!\" ); // \u4e34\u65f6\u5b57\u7b26\u4e32\u76f4\u63a5\u7ed1\u5b9a\u5230\u53f3\u503c\u5f15\u7528 \u5b8c\u7f8e\u8f6c\u53d1 \uff1a \u53f3\u503c\u5f15\u7528\u7ed3\u5408 std::forward \u53ef\u4ee5\u5b9e\u73b0\u5b8c\u7f8e\u8f6c\u53d1\uff0c\u4fdd\u7559\u53c2\u6570\u7684\u5de6\u503c\u6216\u53f3\u503c\u5c5e\u6027\u3002 template < typename T > void forwarder ( T && arg ) { process ( forward < T > ( arg )); // \u4fdd\u7559\u53c2\u6570\u7684\u5de6\u503c\u6216\u53f3\u503c\u5c5e\u6027 }","title":"2. \u53f3\u503c\u5f15\u7528\u7684\u7528\u9014"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_27","text":"\u5de6\u503c\u5f15\u7528 \uff1a \u7528\u4e8e\u7ed1\u5b9a\u548c\u64cd\u4f5c\u5de6\u503c\uff0c\u5e38\u7528\u4e8e\u4fee\u6539\u53d8\u91cf\u6216\u907f\u514d\u62f7\u8d1d\u3002 \u53f3\u503c\u5f15\u7528 \uff1a \u7528\u4e8e\u7ed1\u5b9a\u53f3\u503c\uff0c\u652f\u6301\u79fb\u52a8\u8bed\u4e49\u3001\u4f18\u5316\u4e34\u65f6\u5bf9\u8c61\u548c\u5b9e\u73b0\u5b8c\u7f8e\u8f6c\u53d1\u3002 \u9009\u62e9\u4f7f\u7528 \uff1a \u5982\u679c\u9700\u8981\u4fee\u6539\u6216\u957f\u671f\u4f7f\u7528\u5bf9\u8c61\uff0c\u4f7f\u7528\u5de6\u503c\u5f15\u7528\u3002 \u5982\u679c\u9700\u8981\u4f18\u5316\u6027\u80fd\u6216\u5904\u7406\u4e34\u65f6\u5bf9\u8c61\uff0c\u4f7f\u7528\u53f3\u503c\u5f15\u7528\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_28","text":"","title":"\u60ac\u6302\u6307\u9488\u4e0e\u91ce\u6307\u9488\u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1_2","text":"\u60ac\u6302\u6307\u9488\uff08Dangling Pointer\uff09 \uff1a \u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u5df2\u7ecf\u88ab\u91ca\u653e\u6216\u65e0\u6548\uff0c\u4f46\u6307\u9488\u672c\u8eab\u4ecd\u7136\u5b58\u5728\u3002 \u8bbf\u95ee\u60ac\u6302\u6307\u9488\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 \u91ce\u6307\u9488\uff08Wild Pointer\uff09 \uff1a \u6307\u9488\u672a\u88ab\u521d\u59cb\u5316\uff0c\u6307\u5411\u4e00\u4e2a\u672a\u77e5\u6216\u968f\u673a\u7684\u5185\u5b58\u5730\u5740\u3002 \u8bbf\u95ee\u91ce\u6307\u9488\u540c\u6837\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002","title":"1. \u6982\u5ff5"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2_2","text":"\u60ac\u6302\u6307\u9488 \uff1a \u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u88ab\u91ca\u653e\u540e\uff0c\u6307\u9488\u672a\u88ab\u7f6e\u4e3a nullptr \u3002 \u4f8b\u5982\uff1a int * ptr = new int ( 10 ); delete ptr ; // \u91ca\u653e\u5185\u5b58 // \u6b64\u65f6 ptr \u662f\u60ac\u6302\u6307\u9488 \u91ce\u6307\u9488 \uff1a \u6307\u9488\u672a\u88ab\u521d\u59cb\u5316\uff0c\u76f4\u63a5\u4f7f\u7528\u3002 \u4f8b\u5982\uff1a int * ptr ; // \u672a\u521d\u59cb\u5316 * ptr = 10 ; // \u91ce\u6307\u9488\uff0c\u6307\u5411\u672a\u77e5\u5730\u5740","title":"2. \u4ea7\u751f\u539f\u56e0"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#3_1","text":"\u60ac\u6302\u6307\u9488 \uff1a \u5728\u91ca\u653e\u5185\u5b58\u540e\uff0c\u5c06\u6307\u9488\u7f6e\u4e3a nullptr \u3002 \u4f8b\u5982\uff1a int * ptr = new int ( 10 ); delete ptr ; ptr = nullptr ; // \u907f\u514d\u60ac\u6302\u6307\u9488 \u91ce\u6307\u9488 \uff1a \u5728\u5b9a\u4e49\u6307\u9488\u65f6\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u4f8b\u5982\uff1a int * ptr = nullptr ; // \u521d\u59cb\u5316\u4e3a nullptr","title":"3. \u89e3\u51b3\u65b9\u6cd5"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#4","text":"\u7279\u6027 \u60ac\u6302\u6307\u9488 \u91ce\u6307\u9488 \u5b9a\u4e49 \u6307\u5411\u5df2\u91ca\u653e\u6216\u65e0\u6548\u5185\u5b58\u7684\u6307\u9488 \u672a\u521d\u59cb\u5316\uff0c\u6307\u5411\u672a\u77e5\u5730\u5740\u7684\u6307\u9488 \u4ea7\u751f\u539f\u56e0 \u5185\u5b58\u91ca\u653e\u540e\u672a\u5c06\u6307\u9488\u7f6e\u4e3a nullptr \u6307\u9488\u672a\u521d\u59cb\u5316 \u89e3\u51b3\u65b9\u6cd5 \u91ca\u653e\u5185\u5b58\u540e\u5c06\u6307\u9488\u7f6e\u4e3a nullptr \u5b9a\u4e49\u6307\u9488\u65f6\u8fdb\u884c\u521d\u59cb\u5316 \u5371\u5bb3 \u53ef\u80fd\u8bbf\u95ee\u5df2\u91ca\u653e\u7684\u5185\u5b58\uff0c\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a \u53ef\u80fd\u8bbf\u95ee\u968f\u673a\u5730\u5740\uff0c\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a","title":"4. \u533a\u522b\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_29","text":"\u60ac\u6302\u6307\u9488 \uff1a\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u5df2\u88ab\u91ca\u653e\uff0c\u9700\u901a\u8fc7\u5c06\u6307\u9488\u7f6e\u4e3a nullptr \u907f\u514d\u3002 \u91ce\u6307\u9488 \uff1a\u6307\u9488\u672a\u521d\u59cb\u5316\uff0c\u9700\u5728\u5b9a\u4e49\u65f6\u521d\u59cb\u5316\u4e3a nullptr \u3002 \u4e24\u8005\u90fd\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\uff0c\u9700\u5728\u7f16\u7a0b\u4e2d\u5c0f\u5fc3\u907f\u514d\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_30","text":"\u52a8\u6001\u591a\u6001\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u6027\uff0c\u5141\u8bb8\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u76f8\u5e94\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u8c03\u7528\u54ea\u4e2a\u65b9\u6cd5\u3002\u5b83\u901a\u8fc7 \u865a\u51fd\u6570 \u548c \u7ee7\u627f \u5b9e\u73b0\u3002","title":"\u52a8\u6001\u591a\u6001\u7684\u4f5c\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_31","text":"\u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027 \uff1a \u52a8\u6001\u591a\u6001\u5141\u8bb8\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u5b9e\u73b0\uff0c\u65b9\u4fbf\u6269\u5c55\u548c\u7ef4\u62a4\u4ee3\u7801\u3002 \u4f8b\u5982\uff0c\u53ef\u4ee5\u901a\u8fc7\u57fa\u7c7b\u63a5\u53e3\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u800c\u65e0\u9700\u4fee\u6539\u73b0\u6709\u4ee3\u7801\u3002 \u5b9e\u73b0\u8fd0\u884c\u65f6\u7684\u884c\u4e3a\u52a8\u6001\u7ed1\u5b9a \uff1a \u52a8\u6001\u591a\u6001\u901a\u8fc7\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u5728\u8fd0\u884c\u65f6\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff0c\u5b9e\u73b0\u52a8\u6001\u7ed1\u5b9a\u3002 \u652f\u6301\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u539f\u5219 \uff1a \u9075\u5faa \u5f00\u95ed\u539f\u5219 \uff08\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed\uff09\uff0c\u901a\u8fc7\u7ee7\u627f\u548c\u591a\u6001\u5b9e\u73b0\u4ee3\u7801\u7684\u590d\u7528\u548c\u6269\u5c55\u3002 \u7b80\u5316\u4ee3\u7801\u903b\u8f91 \uff1a \u52a8\u6001\u591a\u6001\u53ef\u4ee5\u907f\u514d\u590d\u6742\u7684\u6761\u4ef6\u5206\u652f\uff08\u5982 if-else \u6216 switch-case \uff09\uff0c\u901a\u8fc7\u591a\u6001\u673a\u5236\u76f4\u63a5\u8c03\u7528\u5408\u9002\u7684\u51fd\u6570\u3002","title":"\u4f5c\u7528\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_32","text":"\u8981\u5b9e\u73b0\u52a8\u6001\u591a\u6001\uff0c\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a \u7ee7\u627f\u5173\u7cfb \uff1a \u5fc5\u987b\u6709\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\uff0c\u52a8\u6001\u591a\u6001\u4f9d\u8d56\u4e8e\u7ee7\u627f\u673a\u5236\u3002 \u865a\u51fd\u6570 \uff1a \u57fa\u7c7b\u4e2d\u7684\u51fd\u6570\u5fc5\u987b\u58f0\u660e\u4e3a virtual \uff0c\u4ee5\u652f\u6301\u52a8\u6001\u7ed1\u5b9a\u3002 \u5982\u679c\u57fa\u7c7b\u51fd\u6570\u672a\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u5219\u8c03\u7528\u7684\u662f\u57fa\u7c7b\u7684\u51fd\u6570\uff08\u9759\u6001\u7ed1\u5b9a\uff09\u3002 \u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528 \uff1a \u5fc5\u987b\u901a\u8fc7\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\uff0c\u624d\u80fd\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3002 \u5982\u679c\u76f4\u63a5\u4f7f\u7528\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8c03\u7528\u51fd\u6570\uff0c\u5219\u662f\u9759\u6001\u7ed1\u5b9a\u3002","title":"\u52a8\u6001\u591a\u6001\u7684\u5fc5\u8981\u6761\u4ef6"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_33","text":"","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_34","text":"#include <iostream> using namespace std ; // \u57fa\u7c7b class Animal { public : virtual void speak () { // \u865a\u51fd\u6570 cout << \"Animal speaks\" << endl ; } virtual ~ Animal () {} // \u865a\u6790\u6784\u51fd\u6570\uff0c\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f }; // \u6d3e\u751f\u7c7b class Dog : public Animal { public : void speak () override { // \u91cd\u5199\u57fa\u7c7b\u7684\u865a\u51fd\u6570 cout << \"Dog barks\" << endl ; } }; class Cat : public Animal { public : void speak () override { // \u91cd\u5199\u57fa\u7c7b\u7684\u865a\u51fd\u6570 cout << \"Cat meows\" << endl ; } }; int main () { Animal * animal1 = new Dog (); // \u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61 Animal * animal2 = new Cat (); animal1 -> speak (); // \u8c03\u7528 Dog \u7684 speak()\uff0c\u8f93\u51fa \"Dog barks\" animal2 -> speak (); // \u8c03\u7528 Cat \u7684 speak()\uff0c\u8f93\u51fa \"Cat meows\" delete animal1 ; delete animal2 ; return 0 ; }","title":"\u52a8\u6001\u591a\u6001\u7684\u5b9e\u73b0"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_35","text":"Dog barks Cat meows","title":"\u8f93\u51fa\uff1a"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_36","text":"\u865a\u51fd\u6570\u8868\uff08vtable\uff09 \uff1a \u6bcf\u4e2a\u7c7b\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff0c\u5b58\u50a8\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u5730\u5740\u3002 \u5f53\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u67e5\u627e\u865a\u51fd\u6570\u8868\uff0c\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u3002 \u52a8\u6001\u7ed1\u5b9a \uff1a \u5728\u8fd0\u884c\u65f6\uff0c\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u52a8\u6001\u7ed1\u5b9a\u5230\u6b63\u786e\u7684\u51fd\u6570\u5b9e\u73b0\u3002","title":"\u52a8\u6001\u591a\u6001\u7684\u5b9e\u73b0\u539f\u7406"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_37","text":"\u7279\u6027 \u9759\u6001\u591a\u6001 \uff08\u7f16\u8bd1\u65f6\u591a\u6001\uff09 \u52a8\u6001\u591a\u6001 \uff08\u8fd0\u884c\u65f6\u591a\u6001\uff09 \u5b9e\u73b0\u65b9\u5f0f \u51fd\u6570\u91cd\u8f7d\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d \u865a\u51fd\u6570\u3001\u7ee7\u627f \u7ed1\u5b9a\u65f6\u95f4 \u7f16\u8bd1\u65f6\u7ed1\u5b9a \u8fd0\u884c\u65f6\u7ed1\u5b9a \u6027\u80fd \u65e0\u8fd0\u884c\u65f6\u5f00\u9500 \u6709\u4e00\u5b9a\u7684\u8fd0\u884c\u65f6\u5f00\u9500\uff08\u865a\u51fd\u6570\u8868\u67e5\u627e\uff09 \u7075\u6d3b\u6027 \u7075\u6d3b\u6027\u8f83\u4f4e \u7075\u6d3b\u6027\u8f83\u9ad8","title":"\u9759\u6001\u591a\u6001\u4e0e\u52a8\u6001\u591a\u6001\u7684\u5bf9\u6bd4"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_38","text":"\u52a8\u6001\u591a\u6001\u7684\u4f5c\u7528 \uff1a \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002 \u5b9e\u73b0\u8fd0\u884c\u65f6\u7684\u52a8\u6001\u7ed1\u5b9a\u3002 \u9075\u5faa\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u539f\u5219\uff0c\u7b80\u5316\u4ee3\u7801\u903b\u8f91\u3002 \u5fc5\u8981\u6761\u4ef6 \uff1a \u5fc5\u987b\u6709\u7ee7\u627f\u5173\u7cfb\u3002 \u57fa\u7c7b\u51fd\u6570\u5fc5\u987b\u662f\u865a\u51fd\u6570\u3002 \u5fc5\u987b\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u51fd\u6570\u3002 ((void (*)())0)() \u662f\u4e00\u4e2a C/C++ \u4e2d\u7684\u590d\u6742\u8868\u8fbe\u5f0f\uff0c\u4e0b\u9762\u9010\u6b65\u89e3\u6790\u5176\u542b\u4e49\uff1a","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1_3","text":"((void (*)())0) \uff1a \u8fd9\u662f\u4e00\u4e2a\u7c7b\u578b\u8f6c\u6362\uff0c\u5c06\u6574\u6570 0 \u8f6c\u6362\u4e3a\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u3002 void (*)() \u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u7c7b\u578b\uff0c\u8868\u793a\u6307\u5411\u8fd4\u56de\u7c7b\u578b\u4e3a void \u3001\u65e0\u53c2\u6570\u7684\u51fd\u6570\u7684\u6307\u9488\u3002 0 \u662f\u4e00\u4e2a\u7a7a\u6307\u9488\u5e38\u91cf\uff0c\u8868\u793a\u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u6307\u5411 NULL \u3002 ((void (*)())0)() \uff1a \u8fd9\u662f\u5bf9\u4e0a\u8ff0\u51fd\u6570\u6307\u9488\u7684\u8c03\u7528\u3002 \u7531\u4e8e\u51fd\u6570\u6307\u9488\u6307\u5411 NULL \uff0c\u8c03\u7528\u5b83\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002","title":"1. \u62c6\u89e3\u8868\u8fbe\u5f0f"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2_3","text":"void (*)() \u7684\u542b\u4e49 \uff1a void (*)() \u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u7c7b\u578b\uff0c\u8868\u793a\u6307\u5411\u8fd4\u56de\u7c7b\u578b\u4e3a void \u3001\u65e0\u53c2\u6570\u7684\u51fd\u6570\u7684\u6307\u9488\u3002 (void (*)())0 \u7684\u542b\u4e49 \uff1a \u5c06\u6574\u6570 0 \u8f6c\u6362\u4e3a void (*)() \u7c7b\u578b\u7684\u51fd\u6570\u6307\u9488\u3002 \u8fd9\u91cc\u7684 0 \u662f\u4e00\u4e2a\u7a7a\u6307\u9488\u5e38\u91cf\uff0c\u8868\u793a\u51fd\u6570\u6307\u9488\u672a\u6307\u5411\u4efb\u4f55\u6709\u6548\u7684\u51fd\u6570\u3002 ((void (*)())0) \u7684\u542b\u4e49 \uff1a \u8fd9\u662f\u5bf9 (void (*)())0 \u7684\u62ec\u53f7\u5305\u88f9\uff0c\u660e\u786e\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u3002 ((void (*)())0)() \u7684\u542b\u4e49 \uff1a \u8fd9\u662f\u5bf9\u51fd\u6570\u6307\u9488\u7684\u8c03\u7528\u3002 \u7531\u4e8e\u51fd\u6570\u6307\u9488\u6307\u5411 NULL \uff0c\u8c03\u7528\u5b83\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002","title":"2. \u9010\u6b65\u89e3\u6790"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#3_2","text":"\u8bed\u6cd5\u4e0a \uff1a ((void (*)())0) \u5c06\u6574\u6570 0 \u8f6c\u6362\u4e3a\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u3002 () \u8868\u793a\u5bf9\u8be5\u51fd\u6570\u6307\u9488\u7684\u8c03\u7528\u3002 \u884c\u4e3a\u4e0a \uff1a \u7531\u4e8e\u51fd\u6570\u6307\u9488\u6307\u5411 NULL \uff0c\u8c03\u7528\u5b83\u4f1a\u5bfc\u81f4 \u672a\u5b9a\u4e49\u884c\u4e3a \uff0c\u53ef\u80fd\u5f15\u53d1\u7a0b\u5e8f\u5d29\u6e83\u3002","title":"3. \u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#4_1","text":"\u5b9e\u9645\u610f\u4e49 \uff1a \u8fd9\u79cd\u8868\u8fbe\u5f0f\u901a\u5e38\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u53ef\u80fd\u662f\u4e3a\u4e86\u6d4b\u8bd5\u6216\u5c55\u793a\u8bed\u8a00\u7279\u6027\u3002 \u5728\u5b9e\u9645\u4ee3\u7801\u4e2d\uff0c\u8c03\u7528\u4e00\u4e2a\u7a7a\u6307\u9488\u51fd\u6570\u662f\u5371\u9669\u7684\uff0c\u5e94\u8be5\u907f\u514d\u3002 \u5b89\u5168\u6027 \uff1a \u5982\u679c\u9700\u8981\u8c03\u7528\u51fd\u6570\u6307\u9488\uff0c\u5fc5\u987b\u786e\u4fdd\u6307\u9488\u6307\u5411\u4e00\u4e2a\u6709\u6548\u7684\u51fd\u6570\u5730\u5740\u3002","title":"4. \u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_39","text":"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5b89\u5168\u8c03\u7528\u51fd\u6570\u6307\u9488\u7684\u793a\u4f8b\uff1a #include <iostream> using namespace std ; void myFunction () { cout << \"Hello, World!\" << endl ; } int main () { void ( * funcPtr )() = myFunction ; // \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u5e76\u6307\u5411\u6709\u6548\u51fd\u6570 funcPtr (); // \u8c03\u7528\u51fd\u6570\u6307\u9488\uff0c\u8f93\u51fa \"Hello, World!\" return 0 ; } \u8f93\u51fa \uff1a Hello, World!","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_40","text":"","title":"\u51fd\u6570\u6307\u9488\u6709\u4ec0\u4e48\u7528\u5904"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1_4","text":"\u51fd\u6570\u6307\u9488\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u3002 \u5e94\u7528\u573a\u666f \uff1a \u5b9e\u73b0\u56de\u8c03\u673a\u5236\u3002 \u6839\u636e\u6761\u4ef6\u52a8\u6001\u9009\u62e9\u4e0d\u540c\u7684\u51fd\u6570\u6267\u884c\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; void add ( int a , int b ) { cout << \"Sum: \" << a + b << endl ; } void multiply ( int a , int b ) { cout << \"Product: \" << a * b << endl ; } int main () { void ( * operation )( int , int ); // \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6307\u9488 operation = add ; // \u6307\u5411 add \u51fd\u6570 operation ( 3 , 4 ); // \u8c03\u7528 add\uff0c\u8f93\u51fa \"Sum: 7\" operation = multiply ; // \u6307\u5411 multiply \u51fd\u6570 operation ( 3 , 4 ); // \u8c03\u7528 multiply\uff0c\u8f93\u51fa \"Product: 12\" return 0 ; }","title":"1. \u52a8\u6001\u8c03\u7528\u51fd\u6570"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2_4","text":"\u51fd\u6570\u6307\u9488\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u5b9e\u73b0\u56de\u8c03\u673a\u5236\u3002 \u5e94\u7528\u573a\u666f \uff1a \u4e8b\u4ef6\u9a71\u52a8\u7f16\u7a0b\uff08\u5982 GUI \u7a0b\u5e8f\uff09\u3002 \u5f02\u6b65\u64cd\u4f5c\u7684\u56de\u8c03\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; void onSuccess () { cout << \"Operation succeeded!\" << endl ; } void onFailure () { cout << \"Operation failed!\" << endl ; } void performOperation ( bool success , void ( * callback )()) { if ( success ) { callback (); // \u8c03\u7528\u56de\u8c03\u51fd\u6570 } } int main () { performOperation ( true , onSuccess ); // \u8f93\u51fa \"Operation succeeded!\" performOperation ( false , onFailure ); // \u65e0\u8f93\u51fa return 0 ; }","title":"2. \u5b9e\u73b0\u56de\u8c03\u673a\u5236"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#3_3","text":"\u51fd\u6570\u6307\u9488\u53ef\u4ee5\u7528\u6765\u6a21\u62df\u591a\u6001\u884c\u4e3a\uff0c\u5c24\u5176\u662f\u5728 C \u4e2d\uff08\u6ca1\u6709\u7c7b\u548c\u865a\u51fd\u6570\u7684\u60c5\u51b5\u4e0b\uff09\u3002 \u5e94\u7528\u573a\u666f \uff1a \u5b9e\u73b0\u7c7b\u4f3c\u4e8e C++ \u865a\u51fd\u6570\u7684\u529f\u80fd\u3002 \u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u63a5\u53e3\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; // \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u5305\u542b\u4e00\u4e2a\u51fd\u6570\u6307\u9488 struct Animal { void ( * speak )(); // \u51fd\u6570\u6307\u9488\uff0c\u7528\u4e8e\u6307\u5411\u4e0d\u540c\u7684\u51fd\u6570 }; // \u5b9a\u4e49\u4e24\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u8868\u793a\u72d7\u548c\u732b\u7684\u884c\u4e3a void dogSpeak () { cout << \"Dog barks\" << endl ; } void catSpeak () { cout << \"Cat meows\" << endl ; } int main () { // \u521b\u5efa\u4e24\u4e2a Animal \u5bf9\u8c61\uff0c\u5e76\u5c06\u51fd\u6570\u6307\u9488\u6307\u5411\u4e0d\u540c\u7684\u51fd\u6570 Animal dog = { dogSpeak }; Animal cat = { catSpeak }; // \u8c03\u7528\u51fd\u6570\u6307\u9488\uff0c\u6267\u884c\u5bf9\u5e94\u7684\u884c\u4e3a dog . speak (); // \u8f93\u51fa \"Dog barks\" cat . speak (); // \u8f93\u51fa \"Cat meows\" return 0 ; }","title":"3. \u5b9e\u73b0\u591a\u6001\u884c\u4e3a"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#4_2","text":"\u51fd\u6570\u6307\u9488\u53ef\u4ee5\u7528\u6765\u6784\u5efa\u51fd\u6570\u8868\u6216\u8df3\u8f6c\u8868\uff0c\u65b9\u4fbf\u5b9e\u73b0\u9ad8\u6548\u7684\u5206\u652f\u903b\u8f91\u3002 \u5e94\u7528\u573a\u666f \uff1a \u72b6\u6001\u673a\u3002 \u547d\u4ee4\u89e3\u6790\u5668\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; void option1 () { cout << \"Option 1 selected\" << endl ; } void option2 () { cout << \"Option 2 selected\" << endl ; } void option3 () { cout << \"Option 3 selected\" << endl ; } int main () { void ( * menu [ 3 ])() = { option1 , option2 , option3 }; // \u51fd\u6570\u6307\u9488\u6570\u7ec4 int choice ; cout << \"Enter option (0-2): \" ; cin >> choice ; if ( choice >= 0 && choice < 3 ) { menu [ choice ](); // \u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570 } else { cout << \"Invalid option\" << endl ; } return 0 ; }","title":"4. \u5b9e\u73b0\u51fd\u6570\u8868\u6216\u8df3\u8f6c\u8868"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#5","text":"\u51fd\u6570\u6307\u9488\u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u52a0\u7075\u6d3b\uff0c\u51cf\u5c11\u786c\u7f16\u7801\u3002 \u5e94\u7528\u573a\u666f \uff1a \u66ff\u4ee3 switch-case \u6216 if-else \u8bed\u53e5\u3002 \u5b9e\u73b0\u63d2\u4ef6\u673a\u5236\u6216\u52a8\u6001\u6269\u5c55\u529f\u80fd\u3002","title":"5. \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_41","text":"\u51fd\u6570\u6307\u9488\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u63d0\u4f9b\u52a8\u6001\u8c03\u7528\u7684\u80fd\u529b\uff0c\u9002\u7528\u4e8e\u4ee5\u4e0b\u573a\u666f\uff1a 1. \u52a8\u6001\u9009\u62e9\u51fd\u6570\u6267\u884c\u3002 2. \u5b9e\u73b0\u56de\u8c03\u673a\u5236\u3002 3. \u6a21\u62df\u591a\u6001\u884c\u4e3a\u3002 4. \u6784\u5efa\u51fd\u6570\u8868\u6216\u8df3\u8f6c\u8868\u3002 5. \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002 \u5728\u73b0\u4ee3 C++ \u4e2d\uff0c\u51fd\u6570\u6307\u9488\u7684\u529f\u80fd\u901a\u5e38\u88ab std::function \u548c lambda \u8868\u8fbe\u5f0f \u66ff\u4ee3\uff0c\u4f46\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6216\u6027\u80fd\u654f\u611f\u7684\u573a\u666f\u4e2d\uff0c\u51fd\u6570\u6307\u9488\u4ecd\u7136\u975e\u5e38\u6709\u7528\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#cc","text":"","title":"C\u8bed\u8a00\u7684\u6307\u9488\u548c\u5f15\u7528\u4e0eC++\u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1-c","text":"C\u8bed\u8a00 \uff1a C\u8bed\u8a00\u4e2d\u6ca1\u6709\u5f15\u7528\u7684\u6982\u5ff5\uff0c\u53ea\u6709\u6307\u9488\u3002 \u6307\u9488\u7528\u4e8e\u95f4\u63a5\u8bbf\u95ee\u53d8\u91cf\u6216\u5185\u5b58\u5730\u5740\u3002 \u901a\u8fc7\u6307\u9488\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u5f15\u7528\u7684\u529f\u80fd\uff0c\u4f46\u9700\u8981\u663e\u5f0f\u89e3\u5f15\u7528\u64cd\u4f5c\u3002 C++ \uff1a C++ \u5f15\u5165\u4e86\u5f15\u7528\uff08 & \uff09\uff0c\u4f5c\u4e3a\u6307\u9488\u7684\u9ad8\u7ea7\u62bd\u8c61\u3002 \u5f15\u7528\u662f\u53d8\u91cf\u7684\u522b\u540d\uff0c\u64cd\u4f5c\u5f15\u7528\u5c31\u50cf\u64cd\u4f5c\u539f\u53d8\u91cf\u4e00\u6837\uff0c\u65e0\u9700\u663e\u5f0f\u89e3\u5f15\u7528\u3002 \u793a\u4f8b \uff1a // C\u8bed\u8a00\u4e2d\u901a\u8fc7\u6307\u9488\u5b9e\u73b0\u7c7b\u4f3c\u5f15\u7528\u7684\u529f\u80fd #include <stdio.h> void modify ( int * ptr ) { * ptr = 42 ; // \u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u503c } int main () { int a = 10 ; modify ( & a ); // \u4f20\u9012\u53d8\u91cf\u5730\u5740 printf ( \"%d \\n \" , a ); // \u8f93\u51fa 42 return 0 ; } // C++\u4e2d\u76f4\u63a5\u4f7f\u7528\u5f15\u7528 #include <iostream> void modify ( int & ref ) { ref = 42 ; // \u4fee\u6539\u5f15\u7528\u7684\u503c } int main () { int a = 10 ; modify ( a ); // \u76f4\u63a5\u4f20\u9012\u53d8\u91cf std :: cout << a << std :: endl ; // \u8f93\u51fa 42 return 0 ; }","title":"1. C\u8bed\u8a00\u4e2d\u6ca1\u6709\u5f15\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2-cc","text":"C\u8bed\u8a00 \uff1a \u6307\u9488\u662f C \u8bed\u8a00\u4e2d\u64cd\u4f5c\u5185\u5b58\u7684\u6838\u5fc3\u5de5\u5177\u3002 \u5e38\u7528\u4e8e\u52a8\u6001\u5185\u5b58\u5206\u914d\u3001\u6570\u7ec4\u64cd\u4f5c\u3001\u51fd\u6570\u53c2\u6570\u4f20\u9012\u7b49\u3002 \u6ca1\u6709\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u5bb9\u6613\u51fa\u73b0\u60ac\u6302\u6307\u9488\u3001\u91ce\u6307\u9488\u7b49\u95ee\u9898\u3002 C++ \uff1a C++ \u4e2d\u6307\u9488\u7684\u529f\u80fd\u4e0e C \u57fa\u672c\u76f8\u540c\uff0c\u4f46 C++ \u63d0\u4f9b\u4e86\u66f4\u9ad8\u7ea7\u7684\u5de5\u5177\uff08\u5982\u5f15\u7528\u3001\u667a\u80fd\u6307\u9488\uff09\u6765\u66ff\u4ee3\u6307\u9488\u7684\u90e8\u5206\u529f\u80fd\u3002 C++ \u4e2d\u7684\u6307\u9488\u53ef\u4ee5\u4e0e\u7c7b\u548c\u5bf9\u8c61\u7ed3\u5408\u4f7f\u7528\uff0c\u652f\u6301\u591a\u6001\u548c\u52a8\u6001\u7ed1\u5b9a\u3002 \u793a\u4f8b \uff1a // C\u8bed\u8a00\u4e2d\u4f7f\u7528\u6307\u9488\u64cd\u4f5c\u6570\u7ec4 #include <stdio.h> int main () { int arr [] = { 1 , 2 , 3 }; int * ptr = arr ; // \u6307\u9488\u6307\u5411\u6570\u7ec4 for ( int i = 0 ; i < 3 ; i ++ ) { printf ( \"%d \" , * ( ptr + i )); // \u89e3\u5f15\u7528\u8bbf\u95ee\u6570\u7ec4\u5143\u7d20 } return 0 ; } // C++\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5f15\u7528\u7b80\u5316\u64cd\u4f5c #include <iostream> int main () { int arr [] = { 1 , 2 , 3 }; for ( int & elem : arr ) { // \u4f7f\u7528\u5f15\u7528\u904d\u5386\u6570\u7ec4 std :: cout << elem << \" \" ; } return 0 ; }","title":"2. \u6307\u9488\u7684\u529f\u80fd\u5728C\u548cC++\u4e2d\u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#3_4","text":"C\u8bed\u8a00 \uff1a \u4f7f\u7528 malloc \u548c free \u8fdb\u884c\u52a8\u6001\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u3002 \u9700\u8981\u663e\u5f0f\u6307\u5b9a\u5185\u5b58\u5927\u5c0f\uff0c\u4e14\u8fd4\u56de void* \uff0c\u9700\u8981\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002 \u5bb9\u6613\u51fa\u73b0\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898\u3002 C++ \uff1a \u4f7f\u7528 new \u548c delete \u8fdb\u884c\u52a8\u6001\u5185\u5b58\u7ba1\u7406\u3002 new \u4f1a\u81ea\u52a8\u8ba1\u7b97\u6240\u9700\u5185\u5b58\u5927\u5c0f\u5e76\u8fd4\u56de\u6b63\u786e\u7c7b\u578b\u7684\u6307\u9488\u3002 C++11 \u5f15\u5165\u4e86\u667a\u80fd\u6307\u9488\uff08\u5982 std::unique_ptr \u548c std::shared_ptr \uff09\uff0c\u8fdb\u4e00\u6b65\u7b80\u5316\u4e86\u5185\u5b58\u7ba1\u7406\u3002 \u793a\u4f8b \uff1a // C\u8bed\u8a00\u52a8\u6001\u5185\u5b58\u7ba1\u7406 #include <stdio.h> #include <stdlib.h> int main () { int * ptr = ( int * ) malloc ( sizeof ( int )); // \u5206\u914d\u5185\u5b58 * ptr = 42 ; printf ( \"%d \\n \" , * ptr ); free ( ptr ); // \u91ca\u653e\u5185\u5b58 return 0 ; } // C++\u52a8\u6001\u5185\u5b58\u7ba1\u7406 #include <iostream> int main () { int * ptr = new int ( 42 ); // \u5206\u914d\u5185\u5b58\u5e76\u521d\u59cb\u5316 std :: cout << * ptr << std :: endl ; delete ptr ; // \u91ca\u653e\u5185\u5b58 return 0 ; }","title":"3. \u52a8\u6001\u5185\u5b58\u7ba1\u7406"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#4_3","text":"C\u8bed\u8a00 \uff1a \u6307\u9488\u64cd\u4f5c\u4e0d\u5177\u5907\u7c7b\u578b\u5b89\u5168\uff0c\u5bb9\u6613\u51fa\u73b0\u7c7b\u578b\u8f6c\u6362\u9519\u8bef\u3002 \u4f8b\u5982\uff0c void* \u53ef\u4ee5\u6307\u5411\u4efb\u4f55\u7c7b\u578b\u7684\u5185\u5b58\uff0c\u4f46\u9700\u8981\u624b\u52a8\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002 C++ \uff1a C++ \u63d0\u4f9b\u4e86\u66f4\u4e25\u683c\u7684\u7c7b\u578b\u68c0\u67e5\uff0c\u51cf\u5c11\u4e86\u7c7b\u578b\u8f6c\u6362\u9519\u8bef\u3002 C++11 \u5f15\u5165\u4e86 nullptr \uff0c\u66ff\u4ee3 C \u4e2d\u7684 NULL \uff0c\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u5b89\u5168\u6027\u3002 \u793a\u4f8b \uff1a // C\u8bed\u8a00\u4e2d\u7684\u7c7b\u578b\u4e0d\u5b89\u5168 #include <stdio.h> void print ( void * ptr ) { printf ( \"%d \\n \" , * ( int * ) ptr ); // \u9700\u8981\u624b\u52a8\u7c7b\u578b\u8f6c\u6362 } int main () { int a = 42 ; print ( & a ); return 0 ; } // C++\u4e2d\u7684\u7c7b\u578b\u5b89\u5168 #include <iostream> void print ( int * ptr ) { std :: cout << * ptr << std :: endl ; // \u7c7b\u578b\u5b89\u5168 } int main () { int a = 42 ; print ( & a ); return 0 ; }","title":"4. \u7c7b\u578b\u5b89\u5168"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#5_1","text":"C\u8bed\u8a00 \uff1a \u6307\u9488\u4e3b\u8981\u7528\u4e8e\u64cd\u4f5c\u5185\u5b58\uff0c\u529f\u80fd\u8f83\u4e3a\u57fa\u7840\u3002 \u6ca1\u6709\u5f15\u7528\u3001\u667a\u80fd\u6307\u9488\u7b49\u9ad8\u7ea7\u7279\u6027\u3002 C++ \uff1a \u5f15\u5165\u4e86\u5f15\u7528\uff08 & \uff09\u548c\u667a\u80fd\u6307\u9488\uff08\u5982 std::unique_ptr \u3001 std::shared_ptr \uff09\u3002 \u667a\u80fd\u6307\u9488\u901a\u8fc7 RAII \u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u51cf\u5c11\u4e86\u5185\u5b58\u6cc4\u6f0f\u7684\u98ce\u9669\u3002 \u793a\u4f8b \uff1a #include <iostream> #include <memory> using namespace std ; int main () { unique_ptr < int > ptr = make_unique < int > ( 42 ); // \u4f7f\u7528\u667a\u80fd\u6307\u9488 cout << * ptr << endl ; // \u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u65e0\u9700\u624b\u52a8\u91ca\u653e return 0 ; }","title":"5. \u9ad8\u7ea7\u7279\u6027"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_42","text":"\u7279\u6027 C\u8bed\u8a00 C++ \u5f15\u7528 \u4e0d\u652f\u6301\u5f15\u7528 \u652f\u6301\u5f15\u7528\uff0c\u4f5c\u4e3a\u6307\u9488\u7684\u9ad8\u7ea7\u62bd\u8c61 \u6307\u9488\u529f\u80fd \u64cd\u4f5c\u5185\u5b58\u7684\u6838\u5fc3\u5de5\u5177 \u63d0\u4f9b\u6307\u9488\uff0c\u4f46\u6709\u5f15\u7528\u548c\u667a\u80fd\u6307\u9488\u66ff\u4ee3\u90e8\u5206\u529f\u80fd \u52a8\u6001\u5185\u5b58\u7ba1\u7406 \u4f7f\u7528 malloc \u548c free \u4f7f\u7528 new \u548c delete \uff0c\u652f\u6301\u667a\u80fd\u6307\u9488 \u7c7b\u578b\u5b89\u5168 \u7c7b\u578b\u68c0\u67e5\u8f83\u5f31\uff0c\u9700\u624b\u52a8\u7c7b\u578b\u8f6c\u6362 \u7c7b\u578b\u68c0\u67e5\u66f4\u4e25\u683c\uff0c\u652f\u6301 nullptr \u9ad8\u7ea7\u7279\u6027 \u65e0\u5f15\u7528\u548c\u667a\u80fd\u6307\u9488 \u652f\u6301\u5f15\u7528\u548c\u667a\u80fd\u6307\u9488\uff0c\u7b80\u5316\u5185\u5b58\u7ba1\u7406 C++ \u5728 C \u7684\u57fa\u7840\u4e0a\u5f15\u5165\u4e86\u5f15\u7528\u548c\u667a\u80fd\u6307\u9488\uff0c\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7684\u62bd\u8c61\u548c\u5b89\u5168\u6027\uff0c\u540c\u65f6\u4fdd\u7559\u4e86\u6307\u9488\u7684\u7075\u6d3b\u6027\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_43","text":"","title":"\u6307\u9488\u5e38\u91cf\u4e0e\u5e38\u91cf\u6307\u9488\u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1_5","text":"\u6307\u9488\u5e38\u91cf\uff08Pointer Constant\uff09 \uff1a \u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u6307\u5411\u5176\u4ed6\u5730\u5740\uff0c\u4f46\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u53ef\u4ee5\u4fee\u6539\u3002 \u5b9a\u4e49\u5f62\u5f0f\uff1a int* const ptr; \u5e38\u91cf\u6307\u9488\uff08Pointer to Constant\uff09 \uff1a \u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\uff0c\u4f46\u6307\u9488\u672c\u8eab\u53ef\u4ee5\u6307\u5411\u5176\u4ed6\u5730\u5740\u3002 \u5b9a\u4e49\u5f62\u5f0f\uff1a const int* ptr;","title":"1. \u5b9a\u4e49"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2_5","text":"\u7279\u6027 \u6307\u9488\u5e38\u91cf \u5e38\u91cf\u6307\u9488 \u6307\u9488\u672c\u8eab \u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5730\u5740 \u4e0d\u662f\u5e38\u91cf\uff0c\u53ef\u4ee5\u4fee\u6539\u6307\u5411\u7684\u5730\u5740 \u6307\u5411\u7684\u5185\u5bb9 \u4e0d\u662f\u5e38\u91cf\uff0c\u53ef\u4ee5\u4fee\u6539\u6307\u5411\u7684\u5185\u5bb9 \u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5185\u5bb9 \u5b9a\u4e49\u5f62\u5f0f int* const ptr; const int* ptr; \u6216 int const* ptr;","title":"2. \u7279\u6027\u5bf9\u6bd4"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#3_5","text":"","title":"3. \u793a\u4f8b\u4ee3\u7801"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_44","text":"#include <iostream> using namespace std ; int main () { int a = 10 , b = 20 ; int * const ptr = & a ; // \u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\uff0c\u5fc5\u987b\u521d\u59cb\u5316 * ptr = 15 ; // \u53ef\u4ee5\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9 cout << \"a = \" << a << endl ; // ptr = &b; // \u9519\u8bef\uff1a\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5730\u5740 return 0 ; } \u8f93\u51fa \uff1a a = 15","title":"\u6307\u9488\u5e38\u91cf"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_45","text":"#include <iostream> using namespace std ; int main () { int a = 10 , b = 20 ; const int * ptr = & a ; // \u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf // *ptr = 15; // \u9519\u8bef\uff1a\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9 ptr = & b ; // \u53ef\u4ee5\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5730\u5740 cout << \"b = \" << * ptr << endl ; return 0 ; } \u8f93\u51fa \uff1a b = 20","title":"\u5e38\u91cf\u6307\u9488"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#4_4","text":"\u6307\u9488\u5e38\u91cf\u548c\u5e38\u91cf\u6307\u9488\u53ef\u4ee5\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u5f62\u6210 \u5e38\u91cf\u6307\u9488\u5e38\u91cf \uff0c\u5373\u6307\u9488\u672c\u8eab\u548c\u6307\u5411\u7684\u5185\u5bb9\u90fd\u4e0d\u80fd\u4fee\u6539\u3002","title":"4. \u7ec4\u5408\u5f62\u5f0f"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_46","text":"#include <iostream> using namespace std ; int main () { int a = 10 ; const int * const ptr = & a ; // \u6307\u9488\u672c\u8eab\u548c\u6307\u5411\u7684\u5185\u5bb9\u90fd\u662f\u5e38\u91cf // *ptr = 15; // \u9519\u8bef\uff1a\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9 // ptr = &b; // \u9519\u8bef\uff1a\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u672c\u8eab\u7684\u5730\u5740 cout << \"a = \" << * ptr << endl ; return 0 ; } \u8f93\u51fa \uff1a a = 10","title":"\u5e38\u91cf\u6307\u9488\u5e38\u91cf"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#5_2","text":"\u7279\u6027 \u6307\u9488\u5e38\u91cf \u5e38\u91cf\u6307\u9488 \u5e38\u91cf\u6307\u9488\u5e38\u91cf \u6307\u9488\u672c\u8eab \u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5730\u5740 \u4e0d\u662f\u5e38\u91cf\uff0c\u53ef\u4ee5\u4fee\u6539\u6307\u5411\u7684\u5730\u5740 \u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5730\u5740 \u6307\u5411\u7684\u5185\u5bb9 \u4e0d\u662f\u5e38\u91cf\uff0c\u53ef\u4ee5\u4fee\u6539\u6307\u5411\u7684\u5185\u5bb9 \u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5185\u5bb9 \u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5185\u5bb9 \u5b9a\u4e49\u5f62\u5f0f int* const ptr; const int* ptr; \u6216 int const* ptr; const int* const ptr; \u6307\u9488\u5e38\u91cf \uff1a\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u6307\u5411\u7684\u5730\u5740\u3002 \u5e38\u91cf\u6307\u9488 \uff1a\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u5185\u5bb9\u3002 \u5e38\u91cf\u6307\u9488\u5e38\u91cf \uff1a\u6307\u9488\u672c\u8eab\u548c\u6307\u5411\u7684\u5185\u5bb9\u90fd\u4e0d\u80fd\u4fee\u6539\u3002","title":"5. \u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_47","text":"","title":"\u961f\u5217\u548c\u6808\u7684\u5f02\u540c"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1_6","text":"\u7ebf\u6027\u6570\u636e\u7ed3\u6784 \uff1a \u961f\u5217\u548c\u6808\u90fd\u662f\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u5143\u7d20\u6309\u987a\u5e8f\u6392\u5217\u3002 \u64cd\u4f5c\u53d7\u9650 \uff1a \u4e24\u8005\u90fd\u53ea\u80fd\u5728\u7279\u5b9a\u4f4d\u7f6e\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002 \u5b58\u50a8\u65b9\u5f0f \uff1a \u90fd\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u6216\u94fe\u8868\u5b9e\u73b0\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a \u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a $O(1)$\u3002","title":"1. \u76f8\u540c\u70b9"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2_6","text":"\u7279\u6027 \u961f\u5217 \u6808 \u64cd\u4f5c\u89c4\u5219 \u5148\u8fdb\u5148\u51fa\uff08FIFO\uff0cFirst In First Out\uff09 \u540e\u8fdb\u5148\u51fa\uff08LIFO\uff0cLast In First Out\uff09 \u63d2\u5165\u4f4d\u7f6e \u961f\u5c3e\uff08\u5c3e\u90e8\uff09 \u6808\u9876 \u5220\u9664\u4f4d\u7f6e \u961f\u5934\uff08\u5934\u90e8\uff09 \u6808\u9876 \u5178\u578b\u64cd\u4f5c enqueue \uff08\u5165\u961f\uff09\uff0c dequeue \uff08\u51fa\u961f\uff09 push \uff08\u5165\u6808\uff09\uff0c pop \uff08\u51fa\u6808\uff09 \u5b9e\u73b0\u65b9\u5f0f \u901a\u5e38\u9700\u8981\u4e24\u4e2a\u6307\u9488\uff08\u5934\u6307\u9488\u548c\u5c3e\u6307\u9488\uff09 \u53ea\u9700\u8981\u4e00\u4e2a\u6307\u9488\uff08\u6808\u9876\u6307\u9488\uff09 \u5e94\u7528\u573a\u666f \u4efb\u52a1\u8c03\u5ea6\u3001\u6d88\u606f\u961f\u5217\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7b49 \u51fd\u6570\u8c03\u7528\u3001\u8868\u8fbe\u5f0f\u6c42\u503c\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7b49","title":"2. \u4e0d\u540c\u70b9"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#3_6","text":"","title":"3. \u793a\u4f8b\u4ee3\u7801"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_48","text":"#include <iostream> #include <queue> using namespace std ; int main () { queue < int > q ; // \u5165\u961f q . push ( 1 ); q . push ( 2 ); q . push ( 3 ); // \u51fa\u961f while ( ! q . empty ()) { cout << q . front () << \" \" ; // \u67e5\u770b\u961f\u5934 q . pop (); // \u5220\u9664\u961f\u5934 } return 0 ; } \u8f93\u51fa \uff1a 1 2 3","title":"\u961f\u5217\u793a\u4f8b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_49","text":"#include <iostream> #include <stack> using namespace std ; int main () { stack < int > s ; // \u5165\u6808 s . push ( 1 ); s . push ( 2 ); s . push ( 3 ); // \u51fa\u6808 while ( ! s . empty ()) { cout << s . top () << \" \" ; // \u67e5\u770b\u6808\u9876 s . pop (); // \u5220\u9664\u6808\u9876 } return 0 ; } \u8f93\u51fa \uff1a 3 2 1","title":"\u6808\u793a\u4f8b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#4_5","text":"\u573a\u666f \u961f\u5217 \u6808 \u4efb\u52a1\u8c03\u5ea6 \u4efb\u52a1\u6309\u5230\u8fbe\u987a\u5e8f\u6267\u884c\uff08\u5982\u6253\u5370\u961f\u5217\uff09 \u4e0d\u9002\u7528 \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09 \u4f7f\u7528\u961f\u5217\u5b58\u50a8\u4e0b\u4e00\u5c42\u8282\u70b9 \u4e0d\u9002\u7528 \u51fd\u6570\u8c03\u7528 \u4e0d\u9002\u7528 \u4f7f\u7528\u6808\u4fdd\u5b58\u51fd\u6570\u8c03\u7528\u7684\u8fd4\u56de\u5730\u5740 \u8868\u8fbe\u5f0f\u6c42\u503c \u4e0d\u9002\u7528 \u4f7f\u7528\u6808\u4fdd\u5b58\u64cd\u4f5c\u6570\u548c\u64cd\u4f5c\u7b26 \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09 \u4e0d\u9002\u7528 \u4f7f\u7528\u6808\u5b58\u50a8\u4e0b\u4e00\u6b65\u8981\u8bbf\u95ee\u7684\u8282\u70b9","title":"4. \u5e94\u7528\u573a\u666f"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_50","text":"\u961f\u5217 \uff1a\u5148\u8fdb\u5148\u51fa\uff0c\u9002\u5408\u6309\u987a\u5e8f\u5904\u7406\u4efb\u52a1\uff0c\u5982\u4efb\u52a1\u8c03\u5ea6\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3002 \u6808 \uff1a\u540e\u8fdb\u5148\u51fa\uff0c\u9002\u5408\u5904\u7406\u9012\u5f52\u3001\u51fd\u6570\u8c03\u7528\u3001\u8868\u8fbe\u5f0f\u6c42\u503c\u7b49\u573a\u666f\u3002 \u4e24\u8005\u5728\u64cd\u4f5c\u89c4\u5219\u548c\u5e94\u7528\u573a\u666f\u4e0a\u6709\u663e\u8457\u533a\u522b\uff0c\u4f46\u90fd\u5c5e\u4e8e\u5e38\u7528\u7684\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_51","text":"\u5728 C++ \u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u76f4\u63a5\u8bbf\u95ee\u6307\u5b9a\u5185\u5b58\u5730\u5740\u5e76\u8bbe\u7f6e\u503c\u3002\u4ee5\u4e0b\u662f\u5b9e\u73b0\u4ee3\u7801\uff1a #include <iostream> using namespace std ; int main () { int * ptr = ( int * ) 0x67a9 ; // \u5c06\u5730\u5740 0x67a9 \u8f6c\u6362\u4e3a\u6574\u578b\u6307\u9488 * ptr = 0xaa66 ; // \u8bbe\u7f6e\u5730\u5740 0x67a9 \u7684\u503c\u4e3a 0xaa66 cout << \"Value at address 0x67a9: \" << hex << * ptr << endl ; // \u8f93\u51fa\u8bbe\u7f6e\u7684\u503c return 0 ; }","title":"\u5185\u5b58\u5730\u5740\u8d4b\u503c"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_52","text":"\u5730\u5740\u6709\u6548\u6027 \uff1a \u786e\u4fdd\u5730\u5740 0x67a9 \u662f\u6709\u6548\u7684\u5185\u5b58\u5730\u5740\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u6216\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 \u5728\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u76f4\u63a5\u8bbf\u95ee\u786c\u7f16\u7801\u7684\u5185\u5b58\u5730\u5740\u901a\u5e38\u4f1a\u88ab\u7981\u6b62\u3002 \u6743\u9650\u95ee\u9898 \uff1a \u5982\u679c\u5730\u5740 0x67a9 \u5c5e\u4e8e\u53d7\u4fdd\u62a4\u7684\u5185\u5b58\u533a\u57df\uff08\u5982\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7a7a\u95f4\uff09\uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u56e0\u8bbf\u95ee\u6743\u9650\u4e0d\u8db3\u800c\u5d29\u6e83\u3002 \u8c03\u8bd5\u73af\u5883 \uff1a \u8fd9\u79cd\u64cd\u4f5c\u901a\u5e38\u7528\u4e8e\u5d4c\u5165\u5f0f\u7cfb\u7edf\u6216\u7279\u5b9a\u7684\u786c\u4ef6\u73af\u5883\uff0c\u5728\u666e\u901a\u7528\u6237\u6001\u7a0b\u5e8f\u4e2d\u4e0d\u5efa\u8bae\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\u5730\u5740\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_53","text":"\u5982\u679c\u9700\u8981\u64cd\u4f5c\u7279\u5b9a\u5185\u5b58\u5730\u5740\uff0c\u5efa\u8bae\u5728\u5d4c\u5165\u5f0f\u5f00\u53d1\u6216\u786c\u4ef6\u76f8\u5173\u7684\u573a\u666f\u4e2d\u4f7f\u7528\uff0c\u5e76\u786e\u4fdd\u5730\u5740\u7684\u5408\u6cd5\u6027\u548c\u5b89\u5168\u6027\u3002","title":"\u5efa\u8bae"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_54","text":"","title":"\u53e5\u67c4\u548c\u6307\u9488\u7684\u533a\u522b\u4e0e\u8054\u7cfb"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1_7","text":"\u6307\u9488\uff08Pointer\uff09 \uff1a \u6307\u9488\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b58\u50a8\u7684\u662f\u5185\u5b58\u5730\u5740\u3002 \u901a\u8fc7\u6307\u9488\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5185\u5b58\u4e2d\u7684\u6570\u636e\u3002 \u53e5\u67c4\uff08Handle\uff09 \uff1a \u53e5\u67c4\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u6807\u8bc6\u7b26\uff0c\u7528\u4e8e\u95f4\u63a5\u5f15\u7528\u7cfb\u7edf\u8d44\u6e90\uff08\u5982\u6587\u4ef6\u3001\u7a97\u53e3\u3001\u7ebf\u7a0b\u7b49\uff09\u3002 \u53e5\u67c4\u901a\u5e38\u7531\u64cd\u4f5c\u7cfb\u7edf\u6216\u5e93\u751f\u6210\uff0c\u7528\u6237\u65e0\u6cd5\u76f4\u63a5\u64cd\u4f5c\u5176\u6307\u5411\u7684\u8d44\u6e90\u3002","title":"1. \u5b9a\u4e49"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2_7","text":"\u7279\u6027 \u6307\u9488 \u53e5\u67c4 \u672c\u8d28 \u5b58\u50a8\u5185\u5b58\u5730\u5740\uff0c\u76f4\u63a5\u6307\u5411\u6570\u636e \u62bd\u8c61\u6807\u8bc6\u7b26\uff0c\u95f4\u63a5\u5f15\u7528\u7cfb\u7edf\u8d44\u6e90 \u64cd\u4f5c\u65b9\u5f0f \u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\u5730\u5740 \u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u6216\u5e93\u7684 API \u64cd\u4f5c\u8d44\u6e90 \u5b89\u5168\u6027 \u53ef\u80fd\u5bfc\u81f4\u60ac\u6302\u6307\u9488\u3001\u91ce\u6307\u9488\u7b49\u95ee\u9898 \u66f4\u5b89\u5168\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u7ba1\u7406\u8d44\u6e90 \u7528\u9014 \u7528\u4e8e\u8bbf\u95ee\u5185\u5b58\u4e2d\u7684\u6570\u636e \u7528\u4e8e\u8bbf\u95ee\u7cfb\u7edf\u8d44\u6e90\uff08\u5982\u6587\u4ef6\u3001\u7a97\u53e3\u7b49\uff09 \u751f\u6210\u65b9\u5f0f \u7531\u7a0b\u5e8f\u5458\u663e\u5f0f\u5b9a\u4e49 \u7531\u64cd\u4f5c\u7cfb\u7edf\u6216\u5e93\u751f\u6210 \u8de8\u5e73\u53f0\u6027 \u4e0e\u5e73\u53f0\u65e0\u5173\uff0c\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58 \u4e0e\u5e73\u53f0\u76f8\u5173\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u73b0","title":"2. \u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#3_7","text":"\u95f4\u63a5\u6027 \uff1a \u6307\u9488\u548c\u53e5\u67c4\u90fd\u53ef\u4ee5\u7528\u6765\u95f4\u63a5\u8bbf\u95ee\u8d44\u6e90\u3002 \u6307\u9488\u95f4\u63a5\u8bbf\u95ee\u5185\u5b58\u4e2d\u7684\u6570\u636e\uff0c\u53e5\u67c4\u95f4\u63a5\u8bbf\u95ee\u7cfb\u7edf\u8d44\u6e90\u3002 \u5b9e\u73b0\u65b9\u5f0f \uff1a \u5728\u67d0\u4e9b\u5b9e\u73b0\u4e2d\uff0c\u53e5\u67c4\u53ef\u80fd\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u8d44\u6e90\u7684\u63a7\u5236\u5757\u3002 \u4f46\u53e5\u67c4\u901a\u5e38\u88ab\u5c01\u88c5\u4e3a\u62bd\u8c61\u6807\u8bc6\u7b26\uff0c\u9690\u85cf\u4e86\u5e95\u5c42\u5b9e\u73b0\u7ec6\u8282\u3002","title":"3. \u8054\u7cfb"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#4_6","text":"","title":"4. \u793a\u4f8b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_55","text":"#include <iostream> using namespace std ; int main () { int a = 10 ; int * ptr = & a ; // \u6307\u9488\u5b58\u50a8\u53d8\u91cf a \u7684\u5730\u5740 cout << \"Value of a: \" << * ptr << endl ; // \u901a\u8fc7\u6307\u9488\u8bbf\u95ee a \u7684\u503c return 0 ; } \u8f93\u51fa \uff1a Value of a: 10","title":"\u6307\u9488\u793a\u4f8b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_56","text":"#include <windows.h> #include <iostream> using namespace std ; int main () { HANDLE fileHandle = CreateFile ( \"example.txt\" , // \u6587\u4ef6\u540d GENERIC_WRITE , // \u5199\u6743\u9650 0 , // \u4e0d\u5171\u4eab NULL , // \u9ed8\u8ba4\u5b89\u5168\u5c5e\u6027 CREATE_ALWAYS , // \u59cb\u7ec8\u521b\u5efa\u65b0\u6587\u4ef6 FILE_ATTRIBUTE_NORMAL , // \u666e\u901a\u6587\u4ef6 NULL // \u65e0\u6a21\u677f\u6587\u4ef6 ); if ( fileHandle == INVALID_HANDLE_VALUE ) { cout << \"Failed to create file.\" << endl ; } else { cout << \"File created successfully.\" << endl ; CloseHandle ( fileHandle ); // \u5173\u95ed\u53e5\u67c4 } return 0 ; } \u8f93\u51fa \uff1a File created successfully.","title":"\u53e5\u67c4\u793a\u4f8b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#5_3","text":"\u573a\u666f \u6307\u9488 \u53e5\u67c4 \u5185\u5b58\u64cd\u4f5c \u7528\u4e8e\u52a8\u6001\u5185\u5b58\u5206\u914d\u3001\u6570\u7ec4\u64cd\u4f5c\u7b49 \u4e0d\u9002\u7528 \u7cfb\u7edf\u8d44\u6e90 \u4e0d\u9002\u7528 \u7528\u4e8e\u6587\u4ef6\u3001\u7a97\u53e3\u3001\u7ebf\u7a0b\u7b49\u7cfb\u7edf\u8d44\u6e90\u7ba1\u7406 \u8de8\u5e73\u53f0\u5f00\u53d1 \u4e0e\u5e73\u53f0\u65e0\u5173\uff0c\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58 \u4e0e\u5e73\u53f0\u76f8\u5173\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b API","title":"5. \u5e94\u7528\u573a\u666f"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#6","text":"\u6307\u9488 \uff1a \u7528\u4e8e\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\uff0c\u7075\u6d3b\u4f46\u5bb9\u6613\u51fa\u9519\u3002 \u9002\u5408\u7a0b\u5e8f\u5458\u63a7\u5236\u7684\u5185\u5b58\u7ba1\u7406\u573a\u666f\u3002 \u53e5\u67c4 \uff1a \u7528\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u7684\u62bd\u8c61\u6807\u8bc6\u7b26\uff0c\u5b89\u5168\u6027\u66f4\u9ad8\u3002 \u9002\u5408\u9700\u8981\u64cd\u4f5c\u6587\u4ef6\u3001\u7a97\u53e3\u3001\u7ebf\u7a0b\u7b49\u7cfb\u7edf\u8d44\u6e90\u7684\u573a\u666f\u3002 \u4e24\u8005\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u64cd\u4f5c\u5bf9\u8c61\u7684\u4e0d\u540c\uff1a\u6307\u9488\u7528\u4e8e\u5185\u5b58\uff0c\u53e5\u67c4\u7528\u4e8e\u7cfb\u7edf\u8d44\u6e90\u3002","title":"6. \u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#extern-c","text":"extern \"C\" \u662f C++ \u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u7528\u4e8e\u6307\u793a\u7f16\u8bd1\u5668\u6309\u7167 C \u8bed\u8a00\u7684\u65b9\u5f0f\u5bf9\u51fd\u6570\u6216\u53d8\u91cf\u8fdb\u884c\u94fe\u63a5\u3002\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u89e3\u51b3 C++ \u548c C \u8bed\u8a00\u4e4b\u95f4\u7684\u51fd\u6570\u540d\u4fee\u9970\uff08Name Mangling\uff09\u95ee\u9898 \uff0c\u4ece\u800c\u5b9e\u73b0 C \u548c C++ \u4ee3\u7801\u7684\u4e92\u64cd\u4f5c\u3002","title":"extern \"C\" \u7684\u4f5c\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#extern-c_1","text":"","title":"\u4e3a\u4ec0\u4e48\u9700\u8981 extern \"C\""},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1-name-mangling","text":"\u5728 C++ \u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u5bf9\u51fd\u6570\u540d\u8fdb\u884c\u4fee\u9970\uff08Name Mangling\uff09\uff0c\u4ee5\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u548c\u5176\u4ed6\u7279\u6027\u3002 \u4fee\u9970\u540e\u7684\u51fd\u6570\u540d\u53ef\u80fd\u5305\u542b\u51fd\u6570\u7684\u53c2\u6570\u7c7b\u578b\u3001\u547d\u540d\u7a7a\u95f4\u7b49\u4fe1\u606f\u3002 \u800c C \u8bed\u8a00\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u51fd\u6570\u540d\u4e0d\u4f1a\u88ab\u4fee\u9970\u3002 \u793a\u4f8b \uff1a // C++ \u4e2d\u7684\u51fd\u6570 void func ( int a ) {} // \u7f16\u8bd1\u540e\u53ef\u80fd\u88ab\u4fee\u9970\u4e3a\uff1a _Z4funci \u5982\u679c C++ \u8c03\u7528 C \u7684\u51fd\u6570\uff0c\u6216\u8005 C \u8c03\u7528 C++ \u7684\u51fd\u6570\uff0c\u540d\u5b57\u4fee\u9970\u4f1a\u5bfc\u81f4\u94fe\u63a5\u9519\u8bef\u3002","title":"1. \u540d\u5b57\u4fee\u9970\uff08Name Mangling\uff09"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2-extern-c","text":"\u4f7f\u7528 extern \"C\" \uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u6309\u7167 C \u7684\u65b9\u5f0f\u751f\u6210\u51fd\u6570\u540d\uff08\u4e0d\u8fdb\u884c\u540d\u5b57\u4fee\u9970\uff09\u3002 \u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd C \u548c C++ \u4e4b\u95f4\u7684\u51fd\u6570\u540d\u4e00\u81f4\uff0c\u4ece\u800c\u89e3\u51b3\u94fe\u63a5\u95ee\u9898\u3002","title":"2. extern \"C\" \u7684\u4f5c\u7528"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_57","text":"","title":"\u4f7f\u7528\u573a\u666f"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1-c-c","text":"\u5982\u679c\u9700\u8981\u5728 C++ \u4e2d\u8c03\u7528 C \u51fd\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 extern \"C\" \u58f0\u660e\u8fd9\u4e9b\u51fd\u6570\u3002 \u793a\u4f8b \uff1a // C \u5934\u6587\u4ef6\uff08example.h\uff09 #ifndef EXAMPLE_H #define EXAMPLE_H #ifdef __cplusplus extern \"C\" { #endif void c_function (); #ifdef __cplusplus } #endif #endif C++ \u6587\u4ef6 \uff1a #include \"example.h\" int main () { c_function (); // \u8c03\u7528 C \u51fd\u6570 return 0 ; }","title":"1. \u5728 C++ \u4e2d\u8c03\u7528 C \u51fd\u6570"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2-c-c","text":"\u5982\u679c\u9700\u8981\u5728 C \u4e2d\u8c03\u7528 C++ \u51fd\u6570\uff0c\u53ef\u4ee5\u5728 C++ \u6587\u4ef6\u4e2d\u4f7f\u7528 extern \"C\" \u3002 \u793a\u4f8b \uff1a // C++ \u6587\u4ef6 extern \"C\" void cpp_function () { // C++ \u5b9e\u73b0 } C \u6587\u4ef6 \uff1a void cpp_function (); int main () { cpp_function (); // \u8c03\u7528 C++ \u51fd\u6570 return 0 ; }","title":"2. \u5728 C \u4e2d\u8c03\u7528 C++ \u51fd\u6570"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#3-c-c","text":"\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0cC \u548c C++ \u4ee3\u7801\u7ecf\u5e38\u9700\u8981\u6df7\u5408\u4f7f\u7528\uff0c extern \"C\" \u662f\u5b9e\u73b0\u4e92\u64cd\u4f5c\u7684\u5173\u952e\u3002","title":"3. \u6df7\u5408\u4f7f\u7528 C \u548c C++ \u4ee3\u7801"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_58","text":"\u53ea\u80fd\u7528\u4e8e\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf \uff1a extern \"C\" \u53ea\u80fd\u7528\u4e8e\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\uff0c\u4e0d\u80fd\u7528\u4e8e\u7c7b\u6216 C++ \u7279\u6709\u7684\u7279\u6027\uff08\u5982\u6a21\u677f\u3001\u547d\u540d\u7a7a\u95f4\u7b49\uff09\u3002 \u4e0d\u80fd\u7528\u4e8e\u91cd\u8f7d\u51fd\u6570 \uff1a C \u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u56e0\u6b64 extern \"C\" \u7684\u51fd\u6570\u4e0d\u80fd\u91cd\u8f7d\u3002 \u5b8f\u5b9a\u4e49\u7684\u4f7f\u7528 \uff1a \u901a\u5e38\u5728\u5934\u6587\u4ef6\u4e2d\u4f7f\u7528\u5b8f\u5b9a\u4e49\u6765\u533a\u5206 C \u548c C++ \u73af\u5883\uff1a #ifdef __cplusplus extern \"C\" { #endif void c_function (); #ifdef __cplusplus } #endif","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#_59","text":"\u4f5c\u7528 \uff1a \u89e3\u51b3 C \u548c C++ \u4e4b\u95f4\u7684\u540d\u5b57\u4fee\u9970\u95ee\u9898\uff0c\u5b9e\u73b0\u8de8\u8bed\u8a00\u8c03\u7528\u3002 \u4f7f\u7528\u573a\u666f \uff1a \u5728 C++ \u4e2d\u8c03\u7528 C \u51fd\u6570\u3002 \u5728 C \u4e2d\u8c03\u7528 C++ \u51fd\u6570\u3002 \u6df7\u5408\u4f7f\u7528 C \u548c C++ \u4ee3\u7801\u3002 \u9650\u5236 \uff1a \u53ea\u80fd\u7528\u4e8e\u51fd\u6570\u548c\u5168\u5c40\u53d8\u91cf\uff0c\u4e0d\u80fd\u7528\u4e8e C++ \u7279\u6709\u7684\u7279\u6027\u3002 extern \"C\" \u662f C \u548c C++ \u4e92\u64cd\u4f5c\u7684\u6865\u6881\uff0c\u5728\u8de8\u8bed\u8a00\u5f00\u53d1\u4e2d\u975e\u5e38\u91cd\u8981\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#c-const-const","text":"","title":"C++ \u4e2d\u7684\u9876\u5c42 const \u548c\u5e95\u5c42 const"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1_8","text":"\u9876\u5c42 const \uff1a \u4fee\u9970\u53d8\u91cf\u672c\u8eab\uff0c\u4f7f\u53d8\u91cf\u6210\u4e3a\u5e38\u91cf\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\u3002 \u9876\u5c42 const \u4ec5\u5f71\u54cd\u53d8\u91cf\u672c\u8eab\uff0c\u4e0d\u5f71\u54cd\u5176\u6307\u5411\u7684\u5185\u5bb9\u3002 \u5e95\u5c42 const \uff1a \u4fee\u9970\u6307\u9488\u6216\u5f15\u7528\u6240\u6307\u5411\u7684\u5185\u5bb9\uff0c\u4f7f\u6307\u5411\u7684\u5185\u5bb9\u6210\u4e3a\u5e38\u91cf\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\u3002 \u5e95\u5c42 const \u5f71\u54cd\u6307\u9488\u6216\u5f15\u7528\u7684\u64cd\u4f5c\u3002","title":"1. \u5b9a\u4e49"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2_8","text":"\u7279\u6027 \u9876\u5c42 const \u5e95\u5c42 const \u4fee\u9970\u5bf9\u8c61 \u4fee\u9970\u53d8\u91cf\u672c\u8eab \u4fee\u9970\u6307\u9488\u6216\u5f15\u7528\u6240\u6307\u5411\u7684\u5185\u5bb9 \u5f71\u54cd\u8303\u56f4 \u53d8\u91cf\u672c\u8eab\u4e0d\u80fd\u4fee\u6539 \u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u7684\u5185\u5bb9\u4e0d\u80fd\u4fee\u6539 \u4f20\u9012\u884c\u4e3a \u5728\u51fd\u6570\u4f20\u53c2\u65f6\u4f1a\u88ab\u5ffd\u7565 \u5728\u51fd\u6570\u4f20\u53c2\u65f6\u4f1a\u4fdd\u7559","title":"2. \u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#3_8","text":"","title":"3. \u793a\u4f8b\u4ee3\u7801"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#const","text":"#include <iostream> using namespace std ; int main () { const int a = 10 ; // \u9876\u5c42 const\uff0ca \u662f\u5e38\u91cf // a = 20; // \u9519\u8bef\uff1aa \u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539 int b = 20 ; const int * ptr = & b ; // \u5e95\u5c42 const\uff0c\u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf ptr = & a ; // \u5408\u6cd5\uff1a\u6307\u9488\u53ef\u4ee5\u6307\u5411\u5176\u4ed6\u5730\u5740 // *ptr = 30; // \u9519\u8bef\uff1a\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539 return 0 ; }","title":"\u9876\u5c42 const \u793a\u4f8b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#const_1","text":"#include <iostream> using namespace std ; int main () { int x = 10 ; int y = 20 ; const int * ptr = & x ; // \u5e95\u5c42 const\uff0c\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf ptr = & y ; // \u5408\u6cd5\uff1a\u6307\u9488\u53ef\u4ee5\u6307\u5411\u5176\u4ed6\u5730\u5740 // *ptr = 30; // \u9519\u8bef\uff1a\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539 int * const ptr2 = & x ; // \u9876\u5c42 const\uff0c\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf * ptr2 = 40 ; // \u5408\u6cd5\uff1a\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u53ef\u4ee5\u4fee\u6539 // ptr2 = &y; // \u9519\u8bef\uff1a\u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\uff0c\u4e0d\u80fd\u4fee\u6539\u5730\u5740 return 0 ; }","title":"\u5e95\u5c42 const \u793a\u4f8b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#4_7","text":"\u9876\u5c42 const \uff1a \u5728\u51fd\u6570\u4f20\u53c2\u65f6\u4f1a\u88ab\u5ffd\u7565\uff0c\u4f20\u9012\u7684\u662f\u53d8\u91cf\u7684\u526f\u672c\u3002 void func ( int a ) { a = 20 ; // \u5408\u6cd5\uff1aa \u662f\u5f62\u53c2\uff0c\u4e0e\u539f\u53d8\u91cf\u65e0\u5173 } int main () { const int x = 10 ; // \u9876\u5c42 const func ( x ); // \u9876\u5c42 const \u88ab\u5ffd\u7565 return 0 ; } \u5e95\u5c42 const \uff1a \u5728\u51fd\u6570\u4f20\u53c2\u65f6\u4f1a\u4fdd\u7559\uff0c\u786e\u4fdd\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u7684\u5185\u5bb9\u4e0d\u80fd\u88ab\u4fee\u6539\u3002 void func ( const int * ptr ) { // *ptr = 20; // \u9519\u8bef\uff1a\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u662f\u5e38\u91cf } int main () { int x = 10 ; func ( & x ); // \u5e95\u5c42 const \u4fdd\u7559 return 0 ; }","title":"4. \u51fd\u6570\u4f20\u53c2\u4e2d\u7684\u884c\u4e3a"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#5_4","text":"\u7279\u6027 \u9876\u5c42 const \u5e95\u5c42 const \u4fee\u9970\u5bf9\u8c61 \u4fee\u9970\u53d8\u91cf\u672c\u8eab \u4fee\u9970\u6307\u9488\u6216\u5f15\u7528\u6240\u6307\u5411\u7684\u5185\u5bb9 \u5f71\u54cd\u8303\u56f4 \u53d8\u91cf\u672c\u8eab\u4e0d\u80fd\u4fee\u6539 \u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u7684\u5185\u5bb9\u4e0d\u80fd\u4fee\u6539 \u4f20\u9012\u884c\u4e3a \u5728\u51fd\u6570\u4f20\u53c2\u65f6\u4f1a\u88ab\u5ffd\u7565 \u5728\u51fd\u6570\u4f20\u53c2\u65f6\u4f1a\u4fdd\u7559 \u9876\u5c42 const \uff1a\u9650\u5236\u53d8\u91cf\u672c\u8eab\uff0c\u5e38\u7528\u4e8e\u5b9a\u4e49\u5e38\u91cf\u3002 \u5e95\u5c42 const \uff1a\u9650\u5236\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u7684\u5185\u5bb9\uff0c\u5e38\u7528\u4e8e\u4fdd\u62a4\u6570\u636e\u4e0d\u88ab\u4fee\u6539\u3002","title":"5. \u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#c","text":"C++ \u63d0\u4f9b\u4e86\u4e00\u5957\u5b8c\u6574\u7684\u5f02\u5e38\u5904\u7406\u673a\u5236\uff0c\u7528\u4e8e\u6355\u83b7\u548c\u5904\u7406\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u9519\u8bef\u3002\u5f02\u5e38\u673a\u5236\u901a\u8fc7 try \u3001 catch \u548c throw \u5173\u952e\u5b57\u5b9e\u73b0\uff0c\u80fd\u591f\u63d0\u9ad8\u7a0b\u5e8f\u7684\u5065\u58ee\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002","title":"C++ \u5f02\u5e38\u673a\u5236"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1_9","text":"","title":"1. \u5f02\u5e38\u673a\u5236\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#11","text":"\u5f02\u5e38\u662f\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u53d1\u751f\u7684\u975e\u6b63\u5e38\u60c5\u51b5\uff08\u5982\u9664\u96f6\u3001\u5185\u5b58\u4e0d\u8db3\u3001\u6587\u4ef6\u672a\u627e\u5230\u7b49\uff09\u3002 \u5f02\u5e38\u673a\u5236\u5141\u8bb8\u7a0b\u5e8f\u5728\u9519\u8bef\u53d1\u751f\u65f6\u8df3\u8f6c\u5230\u7279\u5b9a\u7684\u4ee3\u7801\u5757\u8fdb\u884c\u5904\u7406\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5d29\u6e83\u3002","title":"1.1 \u5f02\u5e38\u7684\u5b9a\u4e49"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#12","text":"try \uff1a \u7528\u4e8e\u5b9a\u4e49\u4e00\u4e2a\u5f02\u5e38\u68c0\u6d4b\u5757\uff0c\u76d1\u63a7\u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u7684\u4ee3\u7801\u3002 throw \uff1a \u7528\u4e8e\u629b\u51fa\u5f02\u5e38\uff0c\u901a\u5e38\u4f34\u968f\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61\u3002 catch \uff1a \u7528\u4e8e\u6355\u83b7\u5f02\u5e38\u5e76\u5904\u7406\u3002","title":"1.2 \u5f02\u5e38\u5904\u7406\u7684\u5173\u952e\u5b57"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2_9","text":"#include <iostream> using namespace std ; int main () { try { // \u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u7684\u4ee3\u7801 throw \"An error occurred\" ; // \u629b\u51fa\u5f02\u5e38 } catch ( const char * e ) { // \u6355\u83b7\u5e76\u5904\u7406\u5f02\u5e38 cout << \"Caught exception: \" << e << endl ; } return 0 ; } \u8f93\u51fa \uff1a Caught exception: An error occurred","title":"2. \u5f02\u5e38\u5904\u7406\u7684\u57fa\u672c\u8bed\u6cd5"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#3_9","text":"\u5f02\u5e38\u68c0\u6d4b \uff1a \u5728 try \u5757\u4e2d\u6267\u884c\u4ee3\u7801\uff0c\u76d1\u63a7\u662f\u5426\u53d1\u751f\u5f02\u5e38\u3002 \u5f02\u5e38\u629b\u51fa \uff1a \u5982\u679c\u53d1\u751f\u5f02\u5e38\uff0c\u4f7f\u7528 throw \u629b\u51fa\u5f02\u5e38\u3002 \u5f02\u5e38\u6355\u83b7 \uff1a \u7a0b\u5e8f\u8df3\u8f6c\u5230\u4e0e\u5f02\u5e38\u7c7b\u578b\u5339\u914d\u7684 catch \u5757\uff0c\u6267\u884c\u5f02\u5e38\u5904\u7406\u4ee3\u7801\u3002","title":"3. \u5f02\u5e38\u5904\u7406\u7684\u6d41\u7a0b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#4_8","text":"C++ \u4e2d\u53ef\u4ee5\u629b\u51fa\u4efb\u610f\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5305\u62ec\uff1a 1. \u5185\u7f6e\u7c7b\u578b \uff1a - \u5982 int \u3001 double \u3001 const char* \u7b49\u3002 2. \u7c7b\u5bf9\u8c61 \uff1a - \u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b\uff0c\u7528\u4e8e\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u9519\u8bef\u4fe1\u606f\u3002 3. \u6807\u51c6\u5f02\u5e38\u7c7b \uff1a - C++ \u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u4e00\u7ec4\u5f02\u5e38\u7c7b\uff08\u5982 std::exception \uff09\uff0c\u7528\u4e8e\u5904\u7406\u5e38\u89c1\u7684\u5f02\u5e38\u3002","title":"4. \u5f02\u5e38\u7684\u7c7b\u578b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#5_5","text":"\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f std::exception \u521b\u5efa\u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b\u3002 \u793a\u4f8b \uff1a #include <iostream> #include <exception> using namespace std ; // \u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b class MyException : public exception { public : const char * what () const noexcept override { return \"My custom exception\" ; } }; int main () { try { throw MyException (); // \u629b\u51fa\u81ea\u5b9a\u4e49\u5f02\u5e38 } catch ( const MyException & e ) { cout << \"Caught exception: \" << e . what () << endl ; } return 0 ; } \u8f93\u51fa \uff1a Caught exception: My custom exception","title":"5. \u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#6-catch","text":"\u53ef\u4ee5\u4e3a\u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38\u5b9a\u4e49\u591a\u4e2a catch \u5757\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; int main () { try { throw 42 ; // \u629b\u51fa\u6574\u6570\u5f02\u5e38 } catch ( int e ) { cout << \"Caught integer exception: \" << e << endl ; } catch (...) { // \u6355\u83b7\u6240\u6709\u5176\u4ed6\u7c7b\u578b\u7684\u5f02\u5e38 cout << \"Caught unknown exception\" << endl ; } return 0 ; } \u8f93\u51fa \uff1a Caught integer exception: 42","title":"6. \u591a\u4e2a catch \u5757"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#7","text":"C++ \u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u4e00\u7ec4\u5f02\u5e38\u7c7b\uff0c\u5e38\u89c1\u7684\u6709\uff1a - std::exception \uff1a\u6240\u6709\u6807\u51c6\u5f02\u5e38\u7684\u57fa\u7c7b\u3002 - std::runtime_error \uff1a\u8fd0\u884c\u65f6\u9519\u8bef\u3002 - std::logic_error \uff1a\u903b\u8f91\u9519\u8bef\u3002 - std::bad_alloc \uff1a\u5185\u5b58\u5206\u914d\u5931\u8d25\u3002 - std::out_of_range \uff1a\u8d85\u51fa\u8303\u56f4\u7684\u9519\u8bef\u3002 \u793a\u4f8b \uff1a #include <iostream> #include <stdexcept> using namespace std ; int main () { try { throw runtime_error ( \"Runtime error occurred\" ); } catch ( const runtime_error & e ) { cout << \"Caught exception: \" << e . what () << endl ; } return 0 ; } \u8f93\u51fa \uff1a Caught exception: Runtime error occurred","title":"7. \u6807\u51c6\u5f02\u5e38\u7c7b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#8","text":"\u5f02\u5e38\u7684\u5339\u914d\u987a\u5e8f \uff1a catch \u5757\u6309\u7167\u5b9a\u4e49\u987a\u5e8f\u5339\u914d\u5f02\u5e38\uff0c\u7b2c\u4e00\u4e2a\u5339\u914d\u7684 catch \u5757\u4f1a\u88ab\u6267\u884c\u3002 \u901a\u914d\u7b26 catch(...) \u5e94\u653e\u5728\u6700\u540e\u3002 \u5f02\u5e38\u7684\u91cd\u65b0\u629b\u51fa \uff1a \u53ef\u4ee5\u5728 catch \u5757\u4e2d\u4f7f\u7528 throw \u91cd\u65b0\u629b\u51fa\u5f02\u5e38\u3002 try { throw 42 ; } catch ( int e ) { cout << \"Caught exception: \" << e << endl ; throw ; // \u91cd\u65b0\u629b\u51fa\u5f02\u5e38 } \u5f02\u5e38\u7684\u6027\u80fd\u5f00\u9500 \uff1a \u5f02\u5e38\u5904\u7406\u4f1a\u589e\u52a0\u7a0b\u5e8f\u7684\u8fd0\u884c\u5f00\u9500\uff0c\u5e94\u907f\u514d\u5728\u6027\u80fd\u654f\u611f\u7684\u4ee3\u7801\u4e2d\u9891\u7e41\u4f7f\u7528\u3002 \u6790\u6784\u51fd\u6570\u4e2d\u4e0d\u5e94\u629b\u51fa\u5f02\u5e38 \uff1a \u5982\u679c\u6790\u6784\u51fd\u6570\u629b\u51fa\u5f02\u5e38\uff0c\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002","title":"8. \u5f02\u5e38\u7684\u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#9","text":"C++ \u5f02\u5e38\u673a\u5236 \u901a\u8fc7 try \u3001 throw \u548c catch \u5b9e\u73b0\uff0c\u7528\u4e8e\u6355\u83b7\u548c\u5904\u7406\u8fd0\u884c\u65f6\u9519\u8bef\u3002 \u5e38\u89c1\u7528\u6cd5 \uff1a \u4f7f\u7528 try \u5757\u76d1\u63a7\u4ee3\u7801\u3002 \u4f7f\u7528 throw \u629b\u51fa\u5f02\u5e38\u3002 \u4f7f\u7528 catch \u6355\u83b7\u5e76\u5904\u7406\u5f02\u5e38\u3002 \u6807\u51c6\u5f02\u5e38\u7c7b \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u4fbf\u4e8e\u5904\u7406\u5e38\u89c1\u9519\u8bef\u3002 \u6ce8\u610f\u4e8b\u9879 \uff1a \u907f\u514d\u5728\u6790\u6784\u51fd\u6570\u4e2d\u629b\u51fa\u5f02\u5e38\u3002 \u901a\u914d\u7b26 catch(...) \u5e94\u653e\u5728\u6700\u540e\u3002","title":"9. \u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#throwcout","text":"throw \u548c cout \u7684\u7528\u9014\u4e0d\u540c\uff0c throw \u662f\u7528\u4e8e\u5f02\u5e38\u5904\u7406\u7684\uff0c\u800c cout \u53ea\u662f\u7528\u4e8e\u8f93\u51fa\u4fe1\u606f\u3002\u4ee5\u4e0b\u662f\u4e24\u8005\u7684\u533a\u522b\u548c\u4e3a\u4ec0\u4e48\u9700\u8981\u4f7f\u7528 throw \u7684\u539f\u56e0\uff1a","title":"\u4e3a\u4ec0\u4e48\u8981\u7528throw\u62a5\u9519\uff0c\u6211\u7528cout\u4e0d\u884c\u5417"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#1-throw-cout","text":"\u7279\u6027 throw cout \u7528\u9014 \u7528\u4e8e\u629b\u51fa\u5f02\u5e38\u5e76\u8df3\u8f6c\u5230\u5f02\u5e38\u5904\u7406\u4ee3\u7801 \u7528\u4e8e\u8f93\u51fa\u4fe1\u606f\u5230\u63a7\u5236\u53f0 \u9519\u8bef\u5904\u7406\u673a\u5236 \u652f\u6301\u5f02\u5e38\u5904\u7406\u673a\u5236\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u6355\u83b7\u5e76\u5904\u7406\u9519\u8bef \u4e0d\u652f\u6301\u5f02\u5e38\u5904\u7406\uff0c\u53ea\u662f\u7b80\u5355\u5730\u6253\u5370\u4fe1\u606f \u7a0b\u5e8f\u6d41\u63a7\u5236 \u4f1a\u4e2d\u65ad\u5f53\u524d\u4ee3\u7801\u7684\u6267\u884c\uff0c\u8df3\u8f6c\u5230 catch \u5757 \u4e0d\u4f1a\u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c\uff0c\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u4ee3\u7801 \u9002\u7528\u573a\u666f \u9002\u7528\u4e8e\u9700\u8981\u5904\u7406\u9519\u8bef\u5e76\u6062\u590d\u7a0b\u5e8f\u7684\u573a\u666f \u9002\u7528\u4e8e\u8c03\u8bd5\u6216\u6253\u5370\u666e\u901a\u4fe1\u606f","title":"1. throw \u548c cout \u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#2-throw","text":"","title":"2. \u4e3a\u4ec0\u4e48\u9700\u8981 throw"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#21","text":"\u5f53\u53d1\u751f\u4e25\u91cd\u9519\u8bef\u65f6\uff0c throw \u4f1a\u4e2d\u65ad\u5f53\u524d\u4ee3\u7801\u7684\u6267\u884c\uff0c\u76f4\u63a5\u8df3\u8f6c\u5230\u5f02\u5e38\u5904\u7406\u4ee3\u7801\u3002 \u5982\u679c\u4ec5\u4f7f\u7528 cout \u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff0c\u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u4ee3\u7801\uff0c\u53ef\u80fd\u5bfc\u81f4\u66f4\u591a\u9519\u8bef\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; void divide ( int a , int b ) { if ( b == 0 ) { throw \"Division by zero!\" ; // \u629b\u51fa\u5f02\u5e38 } cout << \"Result: \" << a / b << endl ; } int main () { try { divide ( 10 , 0 ); // \u4f1a\u629b\u51fa\u5f02\u5e38 cout << \"This line will not execute.\" << endl ; } catch ( const char * e ) { cout << \"Caught exception: \" << e << endl ; } return 0 ; } \u8f93\u51fa \uff1a Caught exception: Division by zero! \u5982\u679c\u7528 cout \u66ff\u4ee3 throw \uff0c\u540e\u7eed\u4ee3\u7801\uff08\u5982 cout << \"This line will not execute.\" \uff09\u4ecd\u4f1a\u6267\u884c\uff0c\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u903b\u8f91\u9519\u8bef\u3002","title":"2.1 \u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#22","text":"throw \u914d\u5408 try-catch \u63d0\u4f9b\u4e86\u4e00\u79cd\u7ed3\u6784\u5316\u7684\u9519\u8bef\u5904\u7406\u673a\u5236\u3002 \u4f60\u53ef\u4ee5\u5728 catch \u5757\u4e2d\u96c6\u4e2d\u5904\u7406\u9519\u8bef\uff0c\u800c\u4e0d\u662f\u5728\u6bcf\u4e2a\u53ef\u80fd\u51fa\u9519\u7684\u5730\u65b9\u90fd\u5199\u91cd\u590d\u7684\u9519\u8bef\u68c0\u67e5\u4ee3\u7801\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; void readFile () { throw \"File not found!\" ; // \u629b\u51fa\u5f02\u5e38 } void processFile () { readFile (); // \u8c03\u7528\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u51fd\u6570 } int main () { try { processFile (); // \u6355\u83b7\u5f02\u5e38 } catch ( const char * e ) { cout << \"Error: \" << e << endl ; } return 0 ; } \u8f93\u51fa \uff1a Error: File not found! \u5982\u679c\u4e0d\u7528 throw \uff0c\u4f60\u9700\u8981\u5728\u6bcf\u4e2a\u51fd\u6570\u4e2d\u68c0\u67e5\u9519\u8bef\u5e76\u8fd4\u56de\u9519\u8bef\u7801\uff0c\u4ee3\u7801\u4f1a\u53d8\u5f97\u5197\u957f\u4e14\u96be\u4ee5\u7ef4\u62a4\u3002","title":"2.2 \u63d0\u4f9b\u9519\u8bef\u5904\u7406\u673a\u5236"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#23","text":"throw \u53ef\u4ee5\u5c06\u9519\u8bef\u4ece\u4e00\u4e2a\u51fd\u6570\u4f20\u64ad\u5230\u8c03\u7528\u5b83\u7684\u51fd\u6570\uff0c\u76f4\u5230\u627e\u5230\u5408\u9002\u7684 catch \u5757\u5904\u7406\u9519\u8bef\u3002 \u8fd9\u79cd\u673a\u5236\u975e\u5e38\u9002\u5408\u590d\u6742\u7684\u7a0b\u5e8f\u7ed3\u6784\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; void level3 () { throw \"Error at level 3\" ; // \u629b\u51fa\u5f02\u5e38 } void level2 () { level3 (); // \u4e0d\u5904\u7406\u5f02\u5e38\uff0c\u5411\u4e0a\u4f20\u64ad } void level1 () { level2 (); // \u4e0d\u5904\u7406\u5f02\u5e38\uff0c\u5411\u4e0a\u4f20\u64ad } int main () { try { level1 (); // \u6355\u83b7\u5f02\u5e38 } catch ( const char * e ) { cout << \"Caught exception: \" << e << endl ; } return 0 ; } \u8f93\u51fa \uff1a Caught exception: Error at level 3 \u5982\u679c\u4e0d\u7528 throw \uff0c\u4f60\u9700\u8981\u5728\u6bcf\u4e00\u5c42\u51fd\u6570\u4e2d\u68c0\u67e5\u9519\u8bef\u5e76\u8fd4\u56de\u9519\u8bef\u7801\uff0c\u4ee3\u7801\u4f1a\u53d8\u5f97\u975e\u5e38\u590d\u6742\u3002","title":"2.3 \u652f\u6301\u591a\u5c42\u9519\u8bef\u4f20\u64ad"},{"location":"C%2B%2B/interview/5%E6%9C%8815/#3-throw-cout","text":"\u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c \uff1a throw \u4f1a\u4e2d\u65ad\u5f53\u524d\u4ee3\u7801\u7684\u6267\u884c\uff0c\u907f\u514d\u9519\u8bef\u8fdb\u4e00\u6b65\u6269\u6563\u3002 cout \u53ea\u662f\u8f93\u51fa\u4fe1\u606f\uff0c\u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u6267\u884c\uff0c\u53ef\u80fd\u5bfc\u81f4\u66f4\u591a\u95ee\u9898\u3002 \u7ed3\u6784\u5316\u9519\u8bef\u5904\u7406 \uff1a throw \u914d\u5408 try-catch \u63d0\u4f9b\u4e86\u4e00\u79cd\u96c6\u4e2d\u5904\u7406\u9519\u8bef\u7684\u673a\u5236\u3002 cout \u53ea\u80fd\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff0c\u65e0\u6cd5\u63d0\u4f9b\u9519\u8bef\u5904\u7406\u80fd\u529b\u3002 \u652f\u6301\u9519\u8bef\u4f20\u64ad \uff1a throw \u53ef\u4ee5\u5c06\u9519\u8bef\u4ece\u4e00\u4e2a\u51fd\u6570\u4f20\u64ad\u5230\u8c03\u7528\u5b83\u7684\u51fd\u6570\uff0c\u76f4\u5230\u627e\u5230\u5408\u9002\u7684 catch \u5757\u3002 cout \u65e0\u6cd5\u5b9e\u73b0\u8fd9\u79cd\u529f\u80fd\u3002 \u4ee3\u7801\u53ef\u7ef4\u62a4\u6027 \uff1a \u4f7f\u7528 throw \u548c try-catch \u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u7b80\u6d01\u3001\u66f4\u6613\u7ef4\u62a4\u3002 \u5982\u679c\u4ec5\u7528 cout \uff0c\u9700\u8981\u5728\u6bcf\u4e2a\u53ef\u80fd\u51fa\u9519\u7684\u5730\u65b9\u624b\u52a8\u68c0\u67e5\u5e76\u5904\u7406\u9519\u8bef\uff0c\u4ee3\u7801\u4f1a\u53d8\u5f97\u5197\u957f\u4e14\u96be\u4ee5\u7ef4\u62a4\u3002 \u56e0\u6b64\uff0c throw \u662f\u4e00\u79cd\u66f4\u5f3a\u5927\u3001\u66f4\u7075\u6d3b\u7684\u9519\u8bef\u5904\u7406\u5de5\u5177\uff0c\u800c cout \u4ec5\u9002\u7528\u4e8e\u7b80\u5355\u7684\u8c03\u8bd5\u6216\u8f93\u51fa\u4fe1\u606f\u3002","title":"3. \u603b\u7ed3\uff1a\u4e3a\u4ec0\u4e48\u7528 throw \u800c\u4e0d\u662f cout"},{"location":"C%2B%2B/interview/5%E6%9C%8818/","text":"\u4ec0\u4e48\u662f\u79fb\u52a8\u8bed\u4e49\uff1f \u79fb\u52a8\u8bed\u4e49\uff08Move Semantics\uff09\u662fC++11\u5f15\u5165\u7684\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u9ad8\u6548\u5730\u8f6c\u79fb\u8d44\u6e90\u7684\u6240\u6709\u6743\uff0c\u800c\u4e0d\u662f\u590d\u5236\u8d44\u6e90\u3002\u5b83\u901a\u8fc7\u53f3\u503c\u5f15\u7528\uff08 T&& \uff09\u5b9e\u73b0\uff0c\u5141\u8bb8\u7a0b\u5e8f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u6df1\u62f7\u8d1d\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002 \u79fb\u52a8\u8bed\u4e49\u7684\u6838\u5fc3\u601d\u60f3 \u8d44\u6e90\u8f6c\u79fb \uff1a \u79fb\u52a8\u8bed\u4e49\u7684\u76ee\u6807\u662f\u5c06\u8d44\u6e90\uff08\u5982\u52a8\u6001\u5185\u5b58\u3001\u6587\u4ef6\u53e5\u67c4\u7b49\uff09\u4ece\u4e00\u4e2a\u5bf9\u8c61\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u590d\u5236\u8d44\u6e90\u3002 \u8f6c\u79fb\u540e\uff0c\u6e90\u5bf9\u8c61\u7684\u8d44\u6e90\u4f1a\u88ab\u7f6e\u4e3a\u7a7a\u6216\u91cd\u7f6e\u4e3a\u9ed8\u8ba4\u72b6\u6001\u3002 \u53f3\u503c\u5f15\u7528\uff08 T&& \uff09 \uff1a \u79fb\u52a8\u8bed\u4e49\u4f9d\u8d56\u53f3\u503c\u5f15\u7528\u6765\u533a\u5206\u53f3\u503c\u548c\u5de6\u503c\u3002 \u53f3\u503c\u5f15\u7528\u5141\u8bb8\u5bf9\u4e34\u65f6\u5bf9\u8c61\uff08\u53f3\u503c\uff09\u8fdb\u884c\u4fee\u6539\u6216\u8d44\u6e90\u8f6c\u79fb\u3002 \u4e3a\u4ec0\u4e48\u9700\u8981\u79fb\u52a8\u8bed\u4e49\uff1f \u5728\u4f20\u7edf\u7684C++\u4e2d\uff0c\u590d\u5236\u5bf9\u8c61\u901a\u5e38\u9700\u8981\u6df1\u62f7\u8d1d\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6027\u80fd\u5f00\u9500\u3002\u4f8b\u5982\uff1a #include <iostream> #include <vector> using namespace std ; int main () { vector < int > v1 = { 1 , 2 , 3 , 4 , 5 }; vector < int > v2 = v1 ; // \u6df1\u62f7\u8d1d\uff0c\u590d\u5236\u6240\u6709\u5143\u7d20 return 0 ; } \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c v2 \u4f1a\u590d\u5236 v1 \u7684\u6240\u6709\u5143\u7d20\uff0c\u8fd9\u5728\u6570\u636e\u91cf\u8f83\u5927\u65f6\u4f1a\u5bfc\u81f4\u6027\u80fd\u95ee\u9898\u3002 \u901a\u8fc7\u79fb\u52a8\u8bed\u4e49\uff0c\u53ef\u4ee5\u907f\u514d\u8fd9\u79cd\u6df1\u62f7\u8d1d\uff0c\u76f4\u63a5\u8f6c\u79fb\u8d44\u6e90\uff1a #include <iostream> #include <vector> using namespace std ; int main () { vector < int > v1 = { 1 , 2 , 3 , 4 , 5 }; vector < int > v2 = move ( v1 ); // \u79fb\u52a8\u8bed\u4e49\uff0c\u8f6c\u79fb\u8d44\u6e90 return 0 ; } \u79fb\u52a8\u8bed\u4e49\u7684\u5b9e\u73b0 \u79fb\u52a8\u8bed\u4e49\u901a\u5e38\u901a\u8fc7 \u79fb\u52a8\u6784\u9020\u51fd\u6570 \u548c \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26 \u5b9e\u73b0\u3002 1. \u79fb\u52a8\u6784\u9020\u51fd\u6570 #include <iostream> #include <vector> using namespace std ; class MyClass { int * data ; public : // \u6784\u9020\u51fd\u6570 MyClass ( int value ) : data ( new int ( value )) {} // \u79fb\u52a8\u6784\u9020\u51fd\u6570 MyClass ( MyClass && other ) noexcept : data ( other . data ) { other . data = nullptr ; // \u8f6c\u79fb\u8d44\u6e90\u540e\u5c06\u6e90\u5bf9\u8c61\u7f6e\u4e3a\u7a7a } ~ MyClass () { delete data ; } }; int main () { MyClass obj1 ( 10 ); MyClass obj2 = move ( obj1 ); // \u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570 return 0 ; } 2. \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26 MyClass & operator = ( MyClass && other ) noexcept { if ( this != & other ) { delete data ; // \u91ca\u653e\u5f53\u524d\u5bf9\u8c61\u7684\u8d44\u6e90 data = other . data ; // \u8f6c\u79fb\u8d44\u6e90 other . data = nullptr ; // \u5c06\u6e90\u5bf9\u8c61\u7f6e\u4e3a\u7a7a } return * this ; } \u79fb\u52a8\u8bed\u4e49\u7684\u4f18\u70b9 \u63d0\u9ad8\u6027\u80fd \uff1a \u907f\u514d\u4e86\u4e0d\u5fc5\u8981\u7684\u6df1\u62f7\u8d1d\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u5927\u5bf9\u8c61\u6216\u5bb9\u5668\u65f6\u3002 \u51cf\u5c11\u8d44\u6e90\u6d88\u8017 \uff1a \u901a\u8fc7\u8f6c\u79fb\u8d44\u6e90\uff0c\u51cf\u5c11\u4e86\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u7684\u5f00\u9500\u3002 \u652f\u6301\u4e34\u65f6\u5bf9\u8c61\u7684\u9ad8\u6548\u64cd\u4f5c \uff1a \u4e34\u65f6\u5bf9\u8c61\uff08\u53f3\u503c\uff09\u53ef\u4ee5\u76f4\u63a5\u8f6c\u79fb\u8d44\u6e90\uff0c\u800c\u4e0d\u9700\u8981\u989d\u5916\u7684\u62f7\u8d1d\u3002 \u603b\u7ed3 \u79fb\u52a8\u8bed\u4e49\u662fC++11\u7684\u4e00\u9879\u91cd\u8981\u7279\u6027\uff0c\u901a\u8fc7\u53f3\u503c\u5f15\u7528\u5b9e\u73b0\u8d44\u6e90\u7684\u9ad8\u6548\u8f6c\u79fb\uff0c\u907f\u514d\u4e86\u6df1\u62f7\u8d1d\u7684\u6027\u80fd\u5f00\u9500\u3002\u5b83\u5728\u73b0\u4ee3C++\u4e2d\u88ab\u5e7f\u6cdb\u5e94\u7528\uff0c\u5c24\u5176\u662f\u5728\u6807\u51c6\u5e93\u5bb9\u5668\uff08\u5982 std::vector \u3001 std::string \uff09\u7684\u5b9e\u73b0\u4e2d\u3002 \u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u533a\u522b 1. \u5b9a\u4e49 \u8fdb\u7a0b \uff1a \u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d\u3002 \u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\u548c\u7cfb\u7edf\u8d44\u6e90\u3002 \u7ebf\u7a0b \uff1a \u7ebf\u7a0b\u662f\u8fdb\u7a0b\u4e2d\u7684\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff0c\u662fCPU\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002 \u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90\u3002 2. \u8d44\u6e90\u5206\u914d \u8fdb\u7a0b \uff1a \u6bcf\u4e2a\u8fdb\u7a0b\u6709\u72ec\u7acb\u7684\u8d44\u6e90\uff0c\u5982\u5185\u5b58\u5730\u5740\u7a7a\u95f4\u3001\u6587\u4ef6\u63cf\u8ff0\u7b26\u7b49\u3002 \u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u9700\u8981\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff09\u673a\u5236\uff0c\u5982\u7ba1\u9053\u3001\u6d88\u606f\u961f\u5217\u3001\u5171\u4eab\u5185\u5b58\u7b49\u3002 \u7ebf\u7a0b \uff1a \u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90\uff0c\u5982\u5185\u5b58\u3001\u6587\u4ef6\u53e5\u67c4\u7b49\u3002 \u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u66f4\u9ad8\u6548\uff0c\u56e0\u4e3a\u5b83\u4eec\u5171\u4eab\u540c\u4e00\u8fdb\u7a0b\u7684\u8d44\u6e90\u3002 3. \u5f00\u9500 \u8fdb\u7a0b \uff1a \u521b\u5efa\u548c\u9500\u6bc1\u8fdb\u7a0b\u7684\u5f00\u9500\u8f83\u5927\u3002 \u8fdb\u7a0b\u5207\u6362\u9700\u8981\u4fdd\u5b58\u548c\u6062\u590d\u4e0a\u4e0b\u6587\uff0c\u5f00\u9500\u8f83\u9ad8\u3002 \u7ebf\u7a0b \uff1a \u521b\u5efa\u548c\u9500\u6bc1\u7ebf\u7a0b\u7684\u5f00\u9500\u8f83\u5c0f\u3002 \u7ebf\u7a0b\u5207\u6362\u7684\u5f00\u9500\u6bd4\u8fdb\u7a0b\u5207\u6362\u4f4e\u3002 4. \u72ec\u7acb\u6027 \u8fdb\u7a0b \uff1a \u8fdb\u7a0b\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5d29\u6e83\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u8fdb\u7a0b\u3002 \u7ebf\u7a0b \uff1a \u540c\u4e00\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u76f8\u4e92\u4f9d\u8d56\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5d29\u6e83\u53ef\u80fd\u5bfc\u81f4\u6574\u4e2a\u8fdb\u7a0b\u7ec8\u6b62\u3002 5. \u5e76\u53d1\u6027 \u8fdb\u7a0b \uff1a \u8fdb\u7a0b\u4e4b\u95f4\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u3002 \u9002\u5408\u591a\u4efb\u52a1\u5e76\u53d1\u5904\u7406\u3002 \u7ebf\u7a0b \uff1a \u540c\u4e00\u8fdb\u7a0b\u4e2d\u7684\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u3002 \u9002\u5408\u9700\u8981\u9891\u7e41\u901a\u4fe1\u548c\u5171\u4eab\u6570\u636e\u7684\u4efb\u52a1\u3002 \u8fdb\u7a0b\u6709\u54ea\u4e9b\u8d44\u6e90\uff1f \u8fdb\u7a0b\u62e5\u6709\u4ee5\u4e0b\u8d44\u6e90\uff1a 1. \u5185\u5b58\u7a7a\u95f4 \uff1a - \u5305\u62ec\u4ee3\u7801\u6bb5\u3001\u6570\u636e\u6bb5\u3001\u5806\u3001\u6808\u7b49\u3002 2. \u6587\u4ef6\u63cf\u8ff0\u7b26 \uff1a - \u6253\u5f00\u7684\u6587\u4ef6\u3001\u7ba1\u9053\u3001\u5957\u63a5\u5b57\u7b49\u3002 3. CPU\u65f6\u95f4 \uff1a - \u64cd\u4f5c\u7cfb\u7edf\u4e3a\u8fdb\u7a0b\u5206\u914d\u7684CPU\u6267\u884c\u65f6\u95f4\u3002 4. \u4fe1\u53f7\u5904\u7406 \uff1a - \u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u4fe1\u53f7\u5904\u7406\u673a\u5236\u3002 5. \u8fdb\u7a0b\u63a7\u5236\u5757\uff08PCB\uff09 \uff1a - \u5305\u542b\u8fdb\u7a0b\u7684\u72b6\u6001\u4fe1\u606f\u3001\u5bc4\u5b58\u5668\u5185\u5bb9\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668\u7b49\u3002 \u7ebf\u7a0b\u6709\u54ea\u4e9b\u79c1\u6709\u8d44\u6e90\uff1f \u7ebf\u7a0b\u62e5\u6709\u4ee5\u4e0b\u79c1\u6709\u8d44\u6e90\uff1a 1. \u7ebf\u7a0b\u6808 \uff1a - \u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684\u6808\uff0c\u7528\u4e8e\u5b58\u50a8\u51fd\u6570\u8c03\u7528\u4fe1\u606f\u3001\u672c\u5730\u53d8\u91cf\u7b49\u3002 2. \u5bc4\u5b58\u5668\u4e0a\u4e0b\u6587 \uff1a - \u5305\u62ec\u7a0b\u5e8f\u8ba1\u6570\u5668\uff08PC\uff09\u3001\u6808\u6307\u9488\uff08SP\uff09\u7b49\uff0c\u7528\u4e8e\u4fdd\u5b58\u7ebf\u7a0b\u7684\u6267\u884c\u72b6\u6001\u3002 3. \u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\uff08TLS\uff09 \uff1a - \u7528\u4e8e\u5b58\u50a8\u7ebf\u7a0b\u79c1\u6709\u7684\u6570\u636e\u3002 \u603b\u7ed3\u5bf9\u6bd4\u8868 \u7279\u6027 \u8fdb\u7a0b \u7ebf\u7a0b \u5b9a\u4e49 \u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d CPU\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d \u8d44\u6e90 \u72ec\u7acb\u8d44\u6e90 \u5171\u4eab\u8fdb\u7a0b\u8d44\u6e90 \u901a\u4fe1 \u901a\u8fc7IPC\u673a\u5236\uff0c\u6548\u7387\u8f83\u4f4e \u5171\u4eab\u5185\u5b58\uff0c\u6548\u7387\u8f83\u9ad8 \u5f00\u9500 \u521b\u5efa\u3001\u5207\u6362\u5f00\u9500\u5927 \u521b\u5efa\u3001\u5207\u6362\u5f00\u9500\u5c0f \u72ec\u7acb\u6027 \u76f8\u4e92\u72ec\u7acb \u540c\u4e00\u8fdb\u7a0b\u5185\u7ebf\u7a0b\u76f8\u4e92\u4f9d\u8d56 \u9002\u7528\u573a\u666f \u591a\u4efb\u52a1\u5e76\u53d1 \u9700\u8981\u9891\u7e41\u901a\u4fe1\u548c\u5171\u4eab\u6570\u636e\u7684\u4efb\u52a1 \u793a\u4f8b\u4ee3\u7801 \u8fdb\u7a0b #include <iostream> #include <unistd.h> // fork using namespace std ; int main () { pid_t pid = fork (); // \u521b\u5efa\u5b50\u8fdb\u7a0b if ( pid == 0 ) { cout << \"This is the child process.\" << endl ; } else { cout << \"This is the parent process.\" << endl ; } return 0 ; } \u7ebf\u7a0b #include <iostream> #include <pthread.h> using namespace std ; void * threadFunc ( void * arg ) { cout << \"This is a thread.\" << endl ; return nullptr ; } int main () { pthread_t thread ; pthread_create ( & thread , nullptr , threadFunc , nullptr ); // \u521b\u5efa\u7ebf\u7a0b pthread_join ( thread , nullptr ); // \u7b49\u5f85\u7ebf\u7a0b\u7ed3\u675f return 0 ; }","title":"5\u670818\u57fa\u7840\u77e5\u8bc6"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#_1","text":"\u79fb\u52a8\u8bed\u4e49\uff08Move Semantics\uff09\u662fC++11\u5f15\u5165\u7684\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u9ad8\u6548\u5730\u8f6c\u79fb\u8d44\u6e90\u7684\u6240\u6709\u6743\uff0c\u800c\u4e0d\u662f\u590d\u5236\u8d44\u6e90\u3002\u5b83\u901a\u8fc7\u53f3\u503c\u5f15\u7528\uff08 T&& \uff09\u5b9e\u73b0\uff0c\u5141\u8bb8\u7a0b\u5e8f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u6df1\u62f7\u8d1d\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002","title":"\u4ec0\u4e48\u662f\u79fb\u52a8\u8bed\u4e49\uff1f"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#_2","text":"\u8d44\u6e90\u8f6c\u79fb \uff1a \u79fb\u52a8\u8bed\u4e49\u7684\u76ee\u6807\u662f\u5c06\u8d44\u6e90\uff08\u5982\u52a8\u6001\u5185\u5b58\u3001\u6587\u4ef6\u53e5\u67c4\u7b49\uff09\u4ece\u4e00\u4e2a\u5bf9\u8c61\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u590d\u5236\u8d44\u6e90\u3002 \u8f6c\u79fb\u540e\uff0c\u6e90\u5bf9\u8c61\u7684\u8d44\u6e90\u4f1a\u88ab\u7f6e\u4e3a\u7a7a\u6216\u91cd\u7f6e\u4e3a\u9ed8\u8ba4\u72b6\u6001\u3002 \u53f3\u503c\u5f15\u7528\uff08 T&& \uff09 \uff1a \u79fb\u52a8\u8bed\u4e49\u4f9d\u8d56\u53f3\u503c\u5f15\u7528\u6765\u533a\u5206\u53f3\u503c\u548c\u5de6\u503c\u3002 \u53f3\u503c\u5f15\u7528\u5141\u8bb8\u5bf9\u4e34\u65f6\u5bf9\u8c61\uff08\u53f3\u503c\uff09\u8fdb\u884c\u4fee\u6539\u6216\u8d44\u6e90\u8f6c\u79fb\u3002","title":"\u79fb\u52a8\u8bed\u4e49\u7684\u6838\u5fc3\u601d\u60f3"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#_3","text":"\u5728\u4f20\u7edf\u7684C++\u4e2d\uff0c\u590d\u5236\u5bf9\u8c61\u901a\u5e38\u9700\u8981\u6df1\u62f7\u8d1d\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6027\u80fd\u5f00\u9500\u3002\u4f8b\u5982\uff1a #include <iostream> #include <vector> using namespace std ; int main () { vector < int > v1 = { 1 , 2 , 3 , 4 , 5 }; vector < int > v2 = v1 ; // \u6df1\u62f7\u8d1d\uff0c\u590d\u5236\u6240\u6709\u5143\u7d20 return 0 ; } \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c v2 \u4f1a\u590d\u5236 v1 \u7684\u6240\u6709\u5143\u7d20\uff0c\u8fd9\u5728\u6570\u636e\u91cf\u8f83\u5927\u65f6\u4f1a\u5bfc\u81f4\u6027\u80fd\u95ee\u9898\u3002 \u901a\u8fc7\u79fb\u52a8\u8bed\u4e49\uff0c\u53ef\u4ee5\u907f\u514d\u8fd9\u79cd\u6df1\u62f7\u8d1d\uff0c\u76f4\u63a5\u8f6c\u79fb\u8d44\u6e90\uff1a #include <iostream> #include <vector> using namespace std ; int main () { vector < int > v1 = { 1 , 2 , 3 , 4 , 5 }; vector < int > v2 = move ( v1 ); // \u79fb\u52a8\u8bed\u4e49\uff0c\u8f6c\u79fb\u8d44\u6e90 return 0 ; }","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u79fb\u52a8\u8bed\u4e49\uff1f"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#_4","text":"\u79fb\u52a8\u8bed\u4e49\u901a\u5e38\u901a\u8fc7 \u79fb\u52a8\u6784\u9020\u51fd\u6570 \u548c \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26 \u5b9e\u73b0\u3002","title":"\u79fb\u52a8\u8bed\u4e49\u7684\u5b9e\u73b0"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#1","text":"#include <iostream> #include <vector> using namespace std ; class MyClass { int * data ; public : // \u6784\u9020\u51fd\u6570 MyClass ( int value ) : data ( new int ( value )) {} // \u79fb\u52a8\u6784\u9020\u51fd\u6570 MyClass ( MyClass && other ) noexcept : data ( other . data ) { other . data = nullptr ; // \u8f6c\u79fb\u8d44\u6e90\u540e\u5c06\u6e90\u5bf9\u8c61\u7f6e\u4e3a\u7a7a } ~ MyClass () { delete data ; } }; int main () { MyClass obj1 ( 10 ); MyClass obj2 = move ( obj1 ); // \u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570 return 0 ; }","title":"1. \u79fb\u52a8\u6784\u9020\u51fd\u6570"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#2","text":"MyClass & operator = ( MyClass && other ) noexcept { if ( this != & other ) { delete data ; // \u91ca\u653e\u5f53\u524d\u5bf9\u8c61\u7684\u8d44\u6e90 data = other . data ; // \u8f6c\u79fb\u8d44\u6e90 other . data = nullptr ; // \u5c06\u6e90\u5bf9\u8c61\u7f6e\u4e3a\u7a7a } return * this ; }","title":"2. \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#_5","text":"\u63d0\u9ad8\u6027\u80fd \uff1a \u907f\u514d\u4e86\u4e0d\u5fc5\u8981\u7684\u6df1\u62f7\u8d1d\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u5927\u5bf9\u8c61\u6216\u5bb9\u5668\u65f6\u3002 \u51cf\u5c11\u8d44\u6e90\u6d88\u8017 \uff1a \u901a\u8fc7\u8f6c\u79fb\u8d44\u6e90\uff0c\u51cf\u5c11\u4e86\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u7684\u5f00\u9500\u3002 \u652f\u6301\u4e34\u65f6\u5bf9\u8c61\u7684\u9ad8\u6548\u64cd\u4f5c \uff1a \u4e34\u65f6\u5bf9\u8c61\uff08\u53f3\u503c\uff09\u53ef\u4ee5\u76f4\u63a5\u8f6c\u79fb\u8d44\u6e90\uff0c\u800c\u4e0d\u9700\u8981\u989d\u5916\u7684\u62f7\u8d1d\u3002","title":"\u79fb\u52a8\u8bed\u4e49\u7684\u4f18\u70b9"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#_6","text":"\u79fb\u52a8\u8bed\u4e49\u662fC++11\u7684\u4e00\u9879\u91cd\u8981\u7279\u6027\uff0c\u901a\u8fc7\u53f3\u503c\u5f15\u7528\u5b9e\u73b0\u8d44\u6e90\u7684\u9ad8\u6548\u8f6c\u79fb\uff0c\u907f\u514d\u4e86\u6df1\u62f7\u8d1d\u7684\u6027\u80fd\u5f00\u9500\u3002\u5b83\u5728\u73b0\u4ee3C++\u4e2d\u88ab\u5e7f\u6cdb\u5e94\u7528\uff0c\u5c24\u5176\u662f\u5728\u6807\u51c6\u5e93\u5bb9\u5668\uff08\u5982 std::vector \u3001 std::string \uff09\u7684\u5b9e\u73b0\u4e2d\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#_7","text":"","title":"\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u533a\u522b"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#1_1","text":"\u8fdb\u7a0b \uff1a \u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d\u3002 \u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\u548c\u7cfb\u7edf\u8d44\u6e90\u3002 \u7ebf\u7a0b \uff1a \u7ebf\u7a0b\u662f\u8fdb\u7a0b\u4e2d\u7684\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff0c\u662fCPU\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002 \u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90\u3002","title":"1. \u5b9a\u4e49"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#2_1","text":"\u8fdb\u7a0b \uff1a \u6bcf\u4e2a\u8fdb\u7a0b\u6709\u72ec\u7acb\u7684\u8d44\u6e90\uff0c\u5982\u5185\u5b58\u5730\u5740\u7a7a\u95f4\u3001\u6587\u4ef6\u63cf\u8ff0\u7b26\u7b49\u3002 \u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u9700\u8981\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff09\u673a\u5236\uff0c\u5982\u7ba1\u9053\u3001\u6d88\u606f\u961f\u5217\u3001\u5171\u4eab\u5185\u5b58\u7b49\u3002 \u7ebf\u7a0b \uff1a \u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90\uff0c\u5982\u5185\u5b58\u3001\u6587\u4ef6\u53e5\u67c4\u7b49\u3002 \u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u66f4\u9ad8\u6548\uff0c\u56e0\u4e3a\u5b83\u4eec\u5171\u4eab\u540c\u4e00\u8fdb\u7a0b\u7684\u8d44\u6e90\u3002","title":"2. \u8d44\u6e90\u5206\u914d"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#3","text":"\u8fdb\u7a0b \uff1a \u521b\u5efa\u548c\u9500\u6bc1\u8fdb\u7a0b\u7684\u5f00\u9500\u8f83\u5927\u3002 \u8fdb\u7a0b\u5207\u6362\u9700\u8981\u4fdd\u5b58\u548c\u6062\u590d\u4e0a\u4e0b\u6587\uff0c\u5f00\u9500\u8f83\u9ad8\u3002 \u7ebf\u7a0b \uff1a \u521b\u5efa\u548c\u9500\u6bc1\u7ebf\u7a0b\u7684\u5f00\u9500\u8f83\u5c0f\u3002 \u7ebf\u7a0b\u5207\u6362\u7684\u5f00\u9500\u6bd4\u8fdb\u7a0b\u5207\u6362\u4f4e\u3002","title":"3. \u5f00\u9500"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#4","text":"\u8fdb\u7a0b \uff1a \u8fdb\u7a0b\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5d29\u6e83\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u8fdb\u7a0b\u3002 \u7ebf\u7a0b \uff1a \u540c\u4e00\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u76f8\u4e92\u4f9d\u8d56\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5d29\u6e83\u53ef\u80fd\u5bfc\u81f4\u6574\u4e2a\u8fdb\u7a0b\u7ec8\u6b62\u3002","title":"4. \u72ec\u7acb\u6027"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#5","text":"\u8fdb\u7a0b \uff1a \u8fdb\u7a0b\u4e4b\u95f4\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u3002 \u9002\u5408\u591a\u4efb\u52a1\u5e76\u53d1\u5904\u7406\u3002 \u7ebf\u7a0b \uff1a \u540c\u4e00\u8fdb\u7a0b\u4e2d\u7684\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u3002 \u9002\u5408\u9700\u8981\u9891\u7e41\u901a\u4fe1\u548c\u5171\u4eab\u6570\u636e\u7684\u4efb\u52a1\u3002","title":"5. \u5e76\u53d1\u6027"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#_8","text":"\u8fdb\u7a0b\u62e5\u6709\u4ee5\u4e0b\u8d44\u6e90\uff1a 1. \u5185\u5b58\u7a7a\u95f4 \uff1a - \u5305\u62ec\u4ee3\u7801\u6bb5\u3001\u6570\u636e\u6bb5\u3001\u5806\u3001\u6808\u7b49\u3002 2. \u6587\u4ef6\u63cf\u8ff0\u7b26 \uff1a - \u6253\u5f00\u7684\u6587\u4ef6\u3001\u7ba1\u9053\u3001\u5957\u63a5\u5b57\u7b49\u3002 3. CPU\u65f6\u95f4 \uff1a - \u64cd\u4f5c\u7cfb\u7edf\u4e3a\u8fdb\u7a0b\u5206\u914d\u7684CPU\u6267\u884c\u65f6\u95f4\u3002 4. \u4fe1\u53f7\u5904\u7406 \uff1a - \u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u4fe1\u53f7\u5904\u7406\u673a\u5236\u3002 5. \u8fdb\u7a0b\u63a7\u5236\u5757\uff08PCB\uff09 \uff1a - \u5305\u542b\u8fdb\u7a0b\u7684\u72b6\u6001\u4fe1\u606f\u3001\u5bc4\u5b58\u5668\u5185\u5bb9\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668\u7b49\u3002","title":"\u8fdb\u7a0b\u6709\u54ea\u4e9b\u8d44\u6e90\uff1f"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#_9","text":"\u7ebf\u7a0b\u62e5\u6709\u4ee5\u4e0b\u79c1\u6709\u8d44\u6e90\uff1a 1. \u7ebf\u7a0b\u6808 \uff1a - \u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684\u6808\uff0c\u7528\u4e8e\u5b58\u50a8\u51fd\u6570\u8c03\u7528\u4fe1\u606f\u3001\u672c\u5730\u53d8\u91cf\u7b49\u3002 2. \u5bc4\u5b58\u5668\u4e0a\u4e0b\u6587 \uff1a - \u5305\u62ec\u7a0b\u5e8f\u8ba1\u6570\u5668\uff08PC\uff09\u3001\u6808\u6307\u9488\uff08SP\uff09\u7b49\uff0c\u7528\u4e8e\u4fdd\u5b58\u7ebf\u7a0b\u7684\u6267\u884c\u72b6\u6001\u3002 3. \u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\uff08TLS\uff09 \uff1a - \u7528\u4e8e\u5b58\u50a8\u7ebf\u7a0b\u79c1\u6709\u7684\u6570\u636e\u3002","title":"\u7ebf\u7a0b\u6709\u54ea\u4e9b\u79c1\u6709\u8d44\u6e90\uff1f"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#_10","text":"\u7279\u6027 \u8fdb\u7a0b \u7ebf\u7a0b \u5b9a\u4e49 \u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d CPU\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d \u8d44\u6e90 \u72ec\u7acb\u8d44\u6e90 \u5171\u4eab\u8fdb\u7a0b\u8d44\u6e90 \u901a\u4fe1 \u901a\u8fc7IPC\u673a\u5236\uff0c\u6548\u7387\u8f83\u4f4e \u5171\u4eab\u5185\u5b58\uff0c\u6548\u7387\u8f83\u9ad8 \u5f00\u9500 \u521b\u5efa\u3001\u5207\u6362\u5f00\u9500\u5927 \u521b\u5efa\u3001\u5207\u6362\u5f00\u9500\u5c0f \u72ec\u7acb\u6027 \u76f8\u4e92\u72ec\u7acb \u540c\u4e00\u8fdb\u7a0b\u5185\u7ebf\u7a0b\u76f8\u4e92\u4f9d\u8d56 \u9002\u7528\u573a\u666f \u591a\u4efb\u52a1\u5e76\u53d1 \u9700\u8981\u9891\u7e41\u901a\u4fe1\u548c\u5171\u4eab\u6570\u636e\u7684\u4efb\u52a1","title":"\u603b\u7ed3\u5bf9\u6bd4\u8868"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#_11","text":"","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#_12","text":"#include <iostream> #include <unistd.h> // fork using namespace std ; int main () { pid_t pid = fork (); // \u521b\u5efa\u5b50\u8fdb\u7a0b if ( pid == 0 ) { cout << \"This is the child process.\" << endl ; } else { cout << \"This is the parent process.\" << endl ; } return 0 ; }","title":"\u8fdb\u7a0b"},{"location":"C%2B%2B/interview/5%E6%9C%8818/#_13","text":"#include <iostream> #include <pthread.h> using namespace std ; void * threadFunc ( void * arg ) { cout << \"This is a thread.\" << endl ; return nullptr ; } int main () { pthread_t thread ; pthread_create ( & thread , nullptr , threadFunc , nullptr ); // \u521b\u5efa\u7ebf\u7a0b pthread_join ( thread , nullptr ); // \u7b49\u5f85\u7ebf\u7a0b\u7ed3\u675f return 0 ; }","title":"\u7ebf\u7a0b"},{"location":"C%2B%2B/interview/timi/","text":"\u817e\u8baf\u5929\u7f8e\u6e38\u620f\u5ba2\u6237\u7aef\u5f00\u53d1\uff0c \u7535\u8bdd\u9762(30min) 1.C++\u57fa\u7840\u5185\u7f6e\u7c7b\u578b\u5927\u5c0f int 4; long 4\u62168 ;long long 8 ;float 4 ; double 8; 2.\u503c\u4f20\u53c2\u548c\u5f15\u7528\u4f20\u53c2\u7684\u533a\u522b 3.\u503c\u4f20\u53c2\u548c\u5f15\u7528\u4f20\u53c2\u4f20\u9012\u6548\u7387\u7684\u533a\u522b, \u5bf9\u4e8e\u5185\u7f6e\u7c7b\u578b\u4e5f\u662f\u5f15\u7528\u4f20\u53c2\u7684\u6548\u7387\u9ad8\u5417 4.int\u6700\u5c0f\u503c, \u6700\u5927\u503c\u7684\u4e8c\u8fdb\u5236\u8868\u793a 5.\u6709\u7b26\u53f7\u6574\u6570\u548c\u65e0\u7b26\u53f7\u6574\u6570\u7684\u53f3\u79fb\u64cd\u4f5c 6.\u65e0\u7b26\u53f7\u6574\u6570\u6700\u5927\u503c, \u53f3\u79fb\u4e00\u4f4d\u6700\u9ad8\u4f4d\u662f1\u8fd8\u662f0 7.\u77e5\u9053\u4e0a\u9762\u7684\u79fb\u4f4d\u6982\u5ff5\u5417 8.C\u8bed\u8a00 \u4f4d\u6bb5/\u4f4d\u57df 9.const int \u548c int const const int \u6307\u9488\u6307\u5411\u7684\u662f\u5e38\u91cf\uff0cint const \u6307\u9488\u662f\u5e38\u91cf 10.const\u4fee\u9970\u51fd\u6570\u4f53 11.const\u662f\u5426\u53ef\u4ee5\u4fee\u9970\u5168\u5c40\u51fd\u6570\u6216\u9759\u6001\u6210\u5458\u51fd\u6570 12.void*\u7684\u7528\u6cd5 13.void* \u7c7b\u578b\u662f\u5426\u80fd\u505a\u7b97\u672f\u8fd0\u7b97 14.\u666e\u901a\u51fd\u6570\u6307\u9488\u548c\u6210\u5458\u51fd\u6570\u6307\u9488\u7684\u533a\u522b 15.\u4ec0\u4e48\u662f\u5b57\u8282\u5e8f, \u5b57\u8282\u5e8f\u7684\u5b9a\u4e49, \u4ec0\u4e48\u60c5\u51b5\u4e0b\u9700\u8981\u6ce8\u610f\u5b57\u8282\u5e8f, \u5982\u4f55\u5224\u65ad\u672c\u673a\u7684\u5b57\u8282\u5e8f 16.new \u548c malloc \u7684\u533a\u522b new \u5728\u5206\u914d\u5185\u5b58\u65f6\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570(\u5982\u679c\u662f\u5bf9\u8c61),\u5b83\u8fd4\u56de\u7684\u662f\u6307\u5b9a\u7c7b\u578b\u7684\u6307\u9488\uff0c\u65e0\u9700\u663e\u793a\u8f6c\u6362\u3002 malloc\u4ec5\u5206\u914d\u5185\u5b58\uff0c\u4e0d\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u8fd4\u56devoid* 17.\u77e5\u4e0d\u77e5\u9053\u4ec0\u4e48\u662fplacement new 18.\u4ec0\u4e48\u662f\u5185\u5b58\u5bf9\u9f50, \u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u5185\u5b58\u5bf9\u9f50 \u4e3a\u63d0\u9ad8\u5185\u5b58\u8bbf\u95ee\u6548\u7387\uff0c\u6570\u636e\u662f\u67d0\u4e2a\u5bf9\u9f50\u5355\u4f4d\u7684\u6574\u6570\u500d\uff0c\u6bd4\u5982int(4 byte)\u5b83\u7684\u8d77\u59cb\u5730\u5740\u5c31\u662f4\u7684\u500d\u6570; \u4f46\u662f\u5bf9\u9f50\u53ef\u80fd\u4f1a\u6d6a\u8d39\u5185\u5b58\u7a7a\u95f4\uff0c\u6bd4\u5982\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e2d\u6709\u4e2achar\uff0c\u8fd8\u6709\u4e2aint\uff0cchar\u540e\u9762\u53ef\u80fd\u4f1a\u586b\u5145\u4e09\u4e2a\u5b57\u8282\u7684\u7a7a\u9699\u3002 19.C++\u4e2d\u4e00\u4e2a\u7a7a\u7684class\u5927\u5c0f \u901a\u5e38\u662f\u4e00\u4e2a\u5b57\u8282\uff0c\u5373\u4f7fclass\u662f\u7a7a\u7684\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u6bcf\u4e2a\u5bf9\u8c61\u4e5f\u9700\u8981\u5206\u914d\u4e00\u4e2a\u5730\u5740\u3002 20.\u542b\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u6210\u5458\u7684class\u5927\u5c0f \u542b\u6709\u865a\u51fd\u6570\u7684class\u901a\u5e38\u6bd4\u7a7a\u7684class\u8981\u5927\uff0c\u91cc\u9762\u6709\u4e2a\u865a\u51fd\u6570\u8868\u5b58\u50a8\u865a\u51fd\u6570\u5730\u5740\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4f1a\u6709\u4e00\u4e2a\u6307\u9488\u6307\u5411\u865a\u51fd\u6570\u8868\u300264\u4f4d\u7cfb\u7edf\u4e2dvptr\u901a\u5e38\u4e3a8\u5b57\u8282\uff0c64/8bit=8\u5b57\u8282 21.\u8bb2\u8bb2\u667a\u80fd\u6307\u9488\u7684\u4f5c\u7528 \u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\uff0c\u65e0\u9700\u624b\u52a8delete \u7ba1\u7406\u8d44\u6e90\uff0c\u6709shared_ptr ,unique_ptr 22.\u5de6\u503c\u548c\u53f3\u503c\u7684\u5b9a\u4e49, \u5de6\u503c\u5f15\u7528\u53ef\u4ee5\u6307\u5411\u53f3\u503c\u5417 \u5de6\u503c\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u6709\u5b58\u50a8\u5730\u5740\u7684\u8868\u8fbe\u5f0f\uff0c\u4ed6\u53ef\u4ee5\u51fa\u73b0\u5728\u8d4b\u503c\u8fd0\u7b97\u7b26\u5de6\u4fa7\uff0c\u4e5f\u53ef\u4ee5\u653e\u5728\u53f3\u4fa7\uff0c\u53f3\u503c\u901a\u5e38\u662f\u4e34\u65f6\u503c\uff0c\u5b57\u9762\u91cf\uff0c\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\uff0c\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u6ca1\u6709\u660e\u786e\u5b58\u50a8\u5730\u5740 \u666e\u901a\u5de6\u503c\u5f15\u7528\u65e0\u6cd5\u7ed1\u5b9a\u53f3\u503c\uff0c\u4f46\u662fconst\u5de6\u503c\u5f15\u7528\u53ef\u4ee5\u7ed1\u5b9a\uff0c\u53f3\u503c\u7684\u751f\u547d\u5468\u671f\u4e5f\u4f1a\u5ef6\u957f\u5230\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f int a = 10 ; int & ref = 10 ; // \u9519\u8bef\uff1a\u666e\u901a\u5de6\u503c\u5f15\u7528\u4e0d\u80fd\u7ed1\u5b9a\u53f3\u503c const int & ref = 10 ; // \u5408\u6cd5\uff1aconst \u5de6\u503c\u5f15\u7528\u53ef\u4ee5\u7ed1\u5b9a\u53f3\u503c std :: cout << ref << std :: endl ; // \u8f93\u51fa 10 23.\u79fb\u52a8\u8bed\u4e49\u7684\u76ee\u7684 \u5c06\u8d44\u6e90\u4ece\u4e00\u4e2a\u5bf9\u8c61\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u907f\u514d\u76f4\u63a5\u8d4b\u503c\u7684\u6df1\u62f7\u8d1d\u8fc7\u7a0b\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\uff0c vector < int > v2 = move ( v1 ); // \u79fb\u52a8\u8bed\u4e49\uff0c\u8f6c\u79fb\u8d44\u6e90 \u79fb\u52a8\u540e\u539f\u6765\u5bf9\u8c61\u7684\u6307\u9488\u4f1a\u6307\u5411nullptr \u79fb\u52a8\u540e\u7684\u539f\u5bf9\u8c61\u4ecd\u7136\u662f\u6709\u6548\u7684\uff0c\u4f46\u5b83\u7684\u8d44\u6e90\u5df2\u7ecf\u88ab\u8f6c\u79fb\uff0c\u901a\u5e38\u4e0d\u518d\u6301\u6709\u4efb\u4f55\u6709\u610f\u4e49\u7684\u6570\u636e\u3002\u539f\u5bf9\u8c61\u53ef\u4ee5\u88ab\u5b89\u5168\u9500\u6bc1\u6216\u91cd\u65b0\u8d4b\u503c\u3002 24.C++\u7684class\u548cstruct\u6709\u4ec0\u4e48\u533a\u522b 25.\u8bb2\u4e00\u4e0b\u6570\u7ec4\u548c\u94fe\u8868\u7684\u533a\u522b \u6570\u7ec4\u8fde\u7eed\u5b58\u50a8\uff0c\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u94fe\u8868\u5728\u5185\u5b58\u4e2d\u975e\u8fde\u7eed\u5b58\u50a8\uff0c\u6bcf\u4e2a\u8282\u70b9\u901a\u8fc7\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u6570\u7ec4\u5728\u8bbf\u95ee\u65f6\u65b9\u4fbf\uff0c\u4f46\u63d2\u5165\u5220\u9664\u4f1a\u79fb\u52a8\u5927\u91cf\u6570\u636e\uff0c\u94fe\u8868\u5728\u63d2\u5165\u5220\u9664\u5f88\u53cb\u597d \u6570\u7ec4\u5728\u521b\u5efa\u65f6\u9700\u8981\u5206\u914d\u597d\u56fa\u5b9a\u7684\u5185\u5b58\uff0c\u94fe\u8868\u5185\u5b58\u53ef\u4ee5\u662f\u52a8\u6001\u5206\u914d\u3002 26.\u5982\u4f55\u627e\u5230\u4e00\u4e2a\u94fe\u8868\u7684\u4e2d\u95f4\u8282\u70b9 \u8981\u662f\u94fe\u8868\u662f\u53cc\u5411\u94fe\u8868\u53ef\u4ee5 \u7528\u4e24\u4e2a\u6307\u9488\uff0c\u4e00\u4e2a\u6307\u5411\u5934\u8282\u70b9\uff0c\u4e00\u4e2a\u6307\u5411\u5c3e\u8282\u70b9\uff0c\u4e24\u4e2a\u6309\u7167\u540c\u6837\u7684\u901f\u5ea6\u5411\u4e2d\u95f4\u79fb\u52a8 \u5355\u5411\u94fe\u8868\u4e5f\u53ef\u4ee5\u5feb\u6162\u6307\u9488\uff0c\u5f00\u59cb\u4e00\u4e2afast\uff0c\u4e00\u4e2aslow\u6307\u9488\u6307\u5411\u5934\u8282\u70b9\uff0c\u5feb\u6307\u9488\u6bcf\u6b21\u79fb\u52a8\u4e24\u6b65\uff0c\u6162\u6307\u9488\u79fb\u52a8\u4e00\u6b65\uff0c\u5feb\u6307\u9488\u5230\u672b\u5c3e\u65f6\uff0c\u6162\u6307\u9488\u5c31\u8d70\u5230\u4e2d\u95f4\u3002 27.STL\u7684sort\u51fd\u6570\u7531\u4ec0\u4e48\u7ec4\u6210 \u5b83\u662f\u4e2a\u6df7\u5408\u6392\u5e8f\u7b97\u6cd5\uff0c\u6709\u5feb\u6392(O(nlogn)),\u6570\u636e\u91cf\u8f83\u5c0f\u65f6\u5c31\u7528\u63d2\u5165\u6392\u5e8f(O(n^2)) \u67d0\u4e9b\u60c5\u51b5\u4f7f\u9012\u5f52\u6df1\u5ea6\u592a\u5927\uff0c\u907f\u514d\u9677\u5165\u5feb\u901f\u6392\u5e8f\u7684\u6700\u574f\u60c5\u51b5\u4f1a\u5207\u6362\u5230\u5806\u6392\u5e8f\u3002 sort()\u662f\u4e0d\u7a33\u5b9a\u6392\u5e8f\uff0cstable_sort()\u662f\u7a33\u5b9a\u7684 28.\u5feb\u6392\u7684\u57fa\u672c\u601d\u8def, \u4ec0\u4e48\u60c5\u51b5\u51fa\u73b0\u6700\u574f\u60c5\u51b5 \u9009\u4e00\u4e2a\u57fa\u51c6(\u6bd4\u5982\u8981\u6392\u5e8f\u6bb5\u7684\u7b2c\u4e00\u4e2a\u503c\u4e3a\u7d22\u5f15)\uff0c\u5c06\u5927\u4e8e\u57fa\u51c6\u7684\u503c\u653e\u5230\u57fa\u51c6\u540e\u9762\uff0c\u5c0f\u4e8e\u57fa\u51c6\u7684\u503c\u653e\u5230\u57fa\u51c6\u524d\u9762\uff0c\u7136\u540e\u9012\u5f52\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5bf9\u524d\u534a\u6bb5\u548c\u540e\u534a\u6bb5\u5feb\u6392\u3002 29.\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u533a\u522b, \u8fdb\u7a0b\u6709\u54ea\u4e9b\u8d44\u6e90, \u7ebf\u7a0b\u6709\u54ea\u4e9b\u79c1\u6709\u8d44\u6e90 \u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\u548c\u7cfb\u7edf\u8d44\u6e90 \u7ebf\u7a0b\u662f\u8fdb\u7a0b\u4e2d\u7684\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff0c\u662fCPU\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d 30.\u5e73\u65f6\u5f00\u53d1\u6709\u6ca1\u6709\u7528\u5230\u4e00\u4e9b\u8bbe\u8ba1\u6a21\u5f0f 31.\u77e5\u4e0d\u77e5\u9053ECS\u67b6\u6784, MVC\u67b6\u6784 32.\u7b14\u8bd5\u9898\u6709\u6ca1\u6709\u6ca1\u505a\u51fa\u6765\uff0c\u540e\u9762\u770b\u4e86\u77e5\u8bc6\u70b9\u7684","title":"\u817e\u8baf\u5929\u7f8e\u6e38\u620f\u5ba2\u6237\u7aef\u4e00\u9762"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/","text":"\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u5f81 \u5c01\u88c5\uff08Encapsulation\uff09 \uff1a \u5b9a\u4e49 \uff1a \u5c01\u88c5\u662f\u5c06\u6570\u636e\uff08\u5c5e\u6027\uff09\u548c\u64cd\u4f5c\u6570\u636e\u7684\u51fd\u6570\uff08\u65b9\u6cd5\uff09\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u9690\u85cf\u5bf9\u8c61\u7684\u5185\u90e8\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u5bf9\u5916\u66b4\u9732\u5fc5\u8981\u7684\u63a5\u53e3\u3002 \u4f5c\u7528 \uff1a \u63d0\u9ad8\u4ee3\u7801\u7684\u5b89\u5168\u6027\uff0c\u9632\u6b62\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee\u548c\u4fee\u6539\u5bf9\u8c61\u7684\u5185\u90e8\u6570\u636e\u3002 \u63d0\u4f9b\u6e05\u6670\u7684\u63a5\u53e3\uff0c\u65b9\u4fbf\u4f7f\u7528\u548c\u7ef4\u62a4\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Person { private : string name ; // \u79c1\u6709\u5c5e\u6027 public : void setName ( string n ) { // \u516c\u6709\u65b9\u6cd5 name = n ; } string getName () { return name ; } }; int main () { Person p ; p . setName ( \"Alice\" ); // \u901a\u8fc7\u65b9\u6cd5\u8bbe\u7f6e\u5c5e\u6027 cout << p . getName () << endl ; // \u901a\u8fc7\u65b9\u6cd5\u83b7\u53d6\u5c5e\u6027 return 0 ; } \u7ee7\u627f\uff08Inheritance\uff09 \uff1a \u5b9a\u4e49 \uff1a \u7ee7\u627f\u662f\u4e00\u4e2a\u7c7b\uff08\u5b50\u7c7b\uff09\u4ece\u53e6\u4e00\u4e2a\u7c7b\uff08\u7236\u7c7b\uff09\u83b7\u53d6\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u673a\u5236\uff0c\u5b50\u7c7b\u53ef\u4ee5\u590d\u7528\u7236\u7c7b\u7684\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u6269\u5c55\u6216\u91cd\u5199\u7236\u7c7b\u7684\u529f\u80fd\u3002 \u4f5c\u7528 \uff1a \u63d0\u9ad8\u4ee3\u7801\u7684\u590d\u7528\u6027\uff0c\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u3002 \u5b9e\u73b0\u7c7b\u4e4b\u95f4\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u4fbf\u4e8e\u6269\u5c55\u548c\u7ef4\u62a4\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Animal { public : void eat () { cout << \"I can eat!\" << endl ; } }; class Dog : public Animal { // Dog \u7ee7\u627f\u81ea Animal public : void bark () { cout << \"I can bark!\" << endl ; } }; int main () { Dog d ; d . eat (); // \u8c03\u7528\u7236\u7c7b\u65b9\u6cd5 d . bark (); // \u8c03\u7528\u5b50\u7c7b\u65b9\u6cd5 return 0 ; } \u591a\u6001\uff08Polymorphism\uff09 \uff1a \u5b9a\u4e49 \uff1a \u591a\u6001\u662f\u6307\u540c\u4e00\u4e2a\u63a5\u53e3\u53ef\u4ee5\u8868\u73b0\u51fa\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u5206\u4e3a \u7f16\u8bd1\u65f6\u591a\u6001 \uff08\u51fd\u6570\u91cd\u8f7d\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff09\u548c \u8fd0\u884c\u65f6\u591a\u6001 \uff08\u865a\u51fd\u6570\uff09\u3002 \u4f5c\u7528 \uff1a \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002 \u901a\u8fc7\u7edf\u4e00\u63a5\u53e3\u5b9e\u73b0\u4e0d\u540c\u7684\u529f\u80fd\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Animal { public : virtual void speak () { // \u865a\u51fd\u6570 cout << \"Animal speaks\" << endl ; } }; class Dog : public Animal { public : void speak () override { // \u91cd\u5199\u7236\u7c7b\u65b9\u6cd5 cout << \"Dog barks\" << endl ; } }; int main () { Animal * a = new Dog (); // \u7236\u7c7b\u6307\u9488\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61 a -> speak (); // \u8c03\u7528\u5b50\u7c7b\u7684\u91cd\u5199\u65b9\u6cd5 delete a ; return 0 ; } \u603b\u7ed3 \u7279\u6027 \u5b9a\u4e49 \u4f5c\u7528 \u793a\u4f8b \u5c01\u88c5 \u5c06\u6570\u636e\u548c\u65b9\u6cd5\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u66b4\u9732\u5fc5\u8981\u63a5\u53e3 \u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u4fbf\u4e8e\u4f7f\u7528\u548c\u7ef4\u62a4 \u79c1\u6709\u5c5e\u6027 + \u516c\u6709\u65b9\u6cd5 \u7ee7\u627f \u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u590d\u7528\u4ee3\u7801 \u63d0\u9ad8\u4ee3\u7801\u590d\u7528\u6027\uff0c\u4fbf\u4e8e\u6269\u5c55\u548c\u7ef4\u62a4 \u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\uff0c\u6269\u5c55\u6216\u91cd\u5199\u529f\u80fd \u591a\u6001 \u540c\u4e00\u63a5\u53e3\u8868\u73b0\u4e0d\u540c\u884c\u4e3a\uff0c\u5206\u4e3a\u7f16\u8bd1\u65f6\u591a\u6001\u548c\u8fd0\u884c\u65f6\u591a\u6001 \u63d0\u9ad8\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027 \u51fd\u6570\u91cd\u8f7d\u3001\u865a\u51fd\u6570 \u8fd9\u4e09\u5927\u7279\u6027\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u6838\u5fc3\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u7f16\u5199\u66f4\u5b89\u5168\u3001\u53ef\u7ef4\u62a4\u3001\u53ef\u6269\u5c55\u7684\u4ee3\u7801\u3002 C++ \u4e2d\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650 C++ \u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\u901a\u8fc7 \u8bbf\u95ee\u63a7\u5236\u7b26 \u6765\u5b9a\u4e49\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e09\u79cd\uff1a 1. public \uff08\u516c\u6709\uff09 \u5b9a\u4e49 \uff1a \u516c\u6709\u6210\u5458\u53ef\u4ee5\u88ab\u7c7b\u7684\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee\u3002 \u7279\u70b9 \uff1a \u6ca1\u6709\u8bbf\u95ee\u9650\u5236\uff0c\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u8bbf\u95ee\u3002 \u901a\u5e38\u7528\u4e8e\u5b9a\u4e49\u7c7b\u7684\u63a5\u53e3\uff08\u5982\u516c\u6709\u65b9\u6cd5\uff09\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Person { public : string name ; // \u516c\u6709\u6210\u5458 void display () { cout << \"Name: \" << name << endl ; } }; int main () { Person p ; p . name = \"Alice\" ; // \u76f4\u63a5\u8bbf\u95ee\u516c\u6709\u6210\u5458 p . display (); // \u8c03\u7528\u516c\u6709\u65b9\u6cd5 return 0 ; } 2. private \uff08\u79c1\u6709\uff09 \u5b9a\u4e49 \uff1a \u79c1\u6709\u6210\u5458\u53ea\u80fd\u88ab\u7c7b\u7684\u5185\u90e8\u8bbf\u95ee\uff0c\u4e0d\u80fd\u88ab\u7c7b\u7684\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee\u3002 \u7279\u70b9 \uff1a \u9ed8\u8ba4\u8bbf\u95ee\u6743\u9650\uff08\u5982\u679c\u672a\u6307\u5b9a\u8bbf\u95ee\u63a7\u5236\u7b26\uff0c\u6210\u5458\u9ed8\u8ba4\u4e3a private \uff09\u3002 \u901a\u5e38\u7528\u4e8e\u4fdd\u62a4\u7c7b\u7684\u5185\u90e8\u5b9e\u73b0\u7ec6\u8282\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Person { private : string name ; // \u79c1\u6709\u6210\u5458 public : void setName ( string n ) { name = n ; // \u901a\u8fc7\u516c\u6709\u65b9\u6cd5\u8bbf\u95ee\u79c1\u6709\u6210\u5458 } void display () { cout << \"Name: \" << name << endl ; } }; int main () { Person p ; // p.name = \"Alice\"; // \u9519\u8bef\uff1a\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u79c1\u6709\u6210\u5458 p . setName ( \"Alice\" ); // \u901a\u8fc7\u516c\u6709\u65b9\u6cd5\u8bbe\u7f6e\u79c1\u6709\u6210\u5458 p . display (); return 0 ; } 3. protected \uff08\u53d7\u4fdd\u62a4\uff09 \u5b9a\u4e49 \uff1a \u53d7\u4fdd\u62a4\u6210\u5458\u53ef\u4ee5\u88ab\u7c7b\u7684\u5185\u90e8\u548c\u5b50\u7c7b\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u7c7b\u7684\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee\u3002 \u7279\u70b9 \uff1a \u4e3b\u8981\u7528\u4e8e\u7ee7\u627f\uff0c\u5141\u8bb8\u5b50\u7c7b\u8bbf\u95ee\u7236\u7c7b\u7684\u53d7\u4fdd\u62a4\u6210\u5458\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Animal { protected : string species ; // \u53d7\u4fdd\u62a4\u6210\u5458 public : void setSpecies ( string s ) { species = s ; } }; class Dog : public Animal { public : void display () { cout << \"Species: \" << species << endl ; // \u5b50\u7c7b\u53ef\u4ee5\u8bbf\u95ee\u53d7\u4fdd\u62a4\u6210\u5458 } }; int main () { Dog d ; d . setSpecies ( \"Canine\" ); d . display (); return 0 ; } 4. \u8bbf\u95ee\u6743\u9650\u603b\u7ed3 \u8bbf\u95ee\u63a7\u5236\u7b26 \u7c7b\u5185\u90e8 \u5b50\u7c7b \u7c7b\u5916\u90e8 public \u53ef\u4ee5\u8bbf\u95ee \u53ef\u4ee5\u8bbf\u95ee \u53ef\u4ee5\u8bbf\u95ee protected \u53ef\u4ee5\u8bbf\u95ee \u53ef\u4ee5\u8bbf\u95ee \u4e0d\u53ef\u8bbf\u95ee private \u53ef\u4ee5\u8bbf\u95ee \u4e0d\u53ef\u8bbf\u95ee \u4e0d\u53ef\u8bbf\u95ee 5. \u6ce8\u610f\u4e8b\u9879 \u9ed8\u8ba4\u8bbf\u95ee\u6743\u9650 \uff1a \u7c7b\u7684\u6210\u5458\u9ed8\u8ba4\u662f private \u3002 \u7ed3\u6784\u4f53\uff08 struct \uff09\u7684\u6210\u5458\u9ed8\u8ba4\u662f public \u3002 \u7ee7\u627f\u4e2d\u7684\u8bbf\u95ee\u6743\u9650 \uff1a \u5728\u7ee7\u627f\u65f6\uff0c\u57fa\u7c7b\u7684\u8bbf\u95ee\u6743\u9650\u53ef\u80fd\u4f1a\u53d7\u5230\u7ee7\u627f\u65b9\u5f0f\uff08 public \u3001 protected \u3001 private \uff09\u7684\u5f71\u54cd\u3002 \u5c01\u88c5\u6027 \uff1a \u4f7f\u7528 private \u548c protected \u53ef\u4ee5\u9690\u85cf\u7c7b\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u589e\u5f3a\u5c01\u88c5\u6027\u3002 6. \u793a\u4f8b\uff1a\u7efc\u5408\u4f7f\u7528\u8bbf\u95ee\u6743\u9650 #include <iostream> using namespace std ; class Base { private : int privateVar ; // \u79c1\u6709\u6210\u5458 protected : int protectedVar ; // \u53d7\u4fdd\u62a4\u6210\u5458 public : int publicVar ; // \u516c\u6709\u6210\u5458 Base () : privateVar ( 1 ), protectedVar ( 2 ), publicVar ( 3 ) {} }; class Derived : public Base { public : void display () { // cout << privateVar; // \u9519\u8bef\uff1a\u65e0\u6cd5\u8bbf\u95ee\u79c1\u6709\u6210\u5458 cout << \"Protected: \" << protectedVar << endl ; // \u53ef\u4ee5\u8bbf\u95ee\u53d7\u4fdd\u62a4\u6210\u5458 cout << \"Public: \" << publicVar << endl ; // \u53ef\u4ee5\u8bbf\u95ee\u516c\u6709\u6210\u5458 } }; int main () { Derived d ; d . display (); // cout << d.protectedVar; // \u9519\u8bef\uff1a\u65e0\u6cd5\u8bbf\u95ee\u53d7\u4fdd\u62a4\u6210\u5458 cout << \"Public: \" << d . publicVar << endl ; // \u53ef\u4ee5\u8bbf\u95ee\u516c\u6709\u6210\u5458 return 0 ; } \u8f93\u51fa \uff1a Protected: 2 Public: 3 Public: 3 \u603b\u7ed3 public \uff1a\u5bf9\u6240\u6709\u5730\u65b9\u53ef\u89c1\uff0c\u901a\u5e38\u7528\u4e8e\u7c7b\u7684\u63a5\u53e3\u3002 private \uff1a\u4ec5\u5bf9\u7c7b\u7684\u5185\u90e8\u53ef\u89c1\uff0c\u4fdd\u62a4\u7c7b\u7684\u5b9e\u73b0\u7ec6\u8282\u3002 protected \uff1a\u5bf9\u5b50\u7c7b\u53ef\u89c1\uff0c\u901a\u5e38\u7528\u4e8e\u7ee7\u627f\u573a\u666f\u3002 \u5408\u7406\u4f7f\u7528\u8bbf\u95ee\u63a7\u5236\u7b26\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u5b89\u5168\u6027\u3001\u53ef\u7ef4\u62a4\u6027\u548c\u5c01\u88c5\u6027\u3002 C++ \u4e2d\u591a\u6001\u7684\u5b9e\u73b0\u65b9\u5f0f C++ \u4e2d\u591a\u6001\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a \u7f16\u8bd1\u65f6\u591a\u6001 \u548c \u8fd0\u884c\u65f6\u591a\u6001 \u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a 1. \u7f16\u8bd1\u65f6\u591a\u6001\uff08\u9759\u6001\u591a\u6001\uff09 \u7f16\u8bd1\u65f6\u591a\u6001\u662f\u5728\u7f16\u8bd1\u9636\u6bb5\u786e\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff0c\u4e3b\u8981\u901a\u8fc7 \u51fd\u6570\u91cd\u8f7d \u548c \u8fd0\u7b97\u7b26\u91cd\u8f7d \u5b9e\u73b0\u3002 1.1 \u51fd\u6570\u91cd\u8f7d \u5b9a\u4e49 \uff1a \u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u4f46\u53c2\u6570\u5217\u8868\u4e0d\u540c\uff08\u53c2\u6570\u7684\u7c7b\u578b\u3001\u6570\u91cf\u6216\u987a\u5e8f\u4e0d\u540c\uff09\u3002 \u7279\u70b9 \uff1a \u7f16\u8bd1\u5668\u6839\u636e\u51fd\u6570\u8c03\u7528\u65f6\u7684\u53c2\u6570\u7c7b\u578b\u548c\u6570\u91cf\u9009\u62e9\u5408\u9002\u7684\u51fd\u6570\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Calculator { public : int add ( int a , int b ) { return a + b ; } double add ( double a , double b ) { return a + b ; } }; int main () { Calculator calc ; cout << calc . add ( 3 , 5 ) << endl ; // \u8c03\u7528 int \u7248\u672c cout << calc . add ( 2.5 , 3.5 ) << endl ; // \u8c03\u7528 double \u7248\u672c return 0 ; } 1.2 \u8fd0\u7b97\u7b26\u91cd\u8f7d \u5b9a\u4e49 \uff1a \u91cd\u5b9a\u4e49 C++ \u4e2d\u7684\u8fd0\u7b97\u7b26\uff0c\u4f7f\u5176\u9002\u7528\u4e8e\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002 \u7279\u70b9 \uff1a \u901a\u8fc7\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u4e3a\u7c7b\u5bf9\u8c61\u5b9a\u4e49\u7279\u5b9a\u7684\u8fd0\u7b97\u884c\u4e3a\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Complex { public : double real , imag ; Complex ( double r , double i ) : real ( r ), imag ( i ) {} // \u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 Complex operator + ( const Complex & c ) { return Complex ( real + c . real , imag + c . imag ); } void display () { cout << real << \" + \" << imag << \"i\" << endl ; } }; int main () { Complex c1 ( 1.2 , 3.4 ), c2 ( 2.3 , 4.5 ); Complex c3 = c1 + c2 ; // \u4f7f\u7528\u91cd\u8f7d\u7684\u52a0\u6cd5\u8fd0\u7b97\u7b26 c3 . display (); return 0 ; } 2. \u8fd0\u884c\u65f6\u591a\u6001\uff08\u52a8\u6001\u591a\u6001\uff09 \u8fd0\u884c\u65f6\u591a\u6001\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff0c\u4e3b\u8981\u901a\u8fc7 \u865a\u51fd\u6570 \u5b9e\u73b0\u3002 2.1 \u865a\u51fd\u6570 \u5b9a\u4e49 \uff1a \u5728\u57fa\u7c7b\u4e2d\u4f7f\u7528 virtual \u5173\u952e\u5b57\u58f0\u660e\u7684\u51fd\u6570\uff0c\u5141\u8bb8\u5b50\u7c7b\u91cd\u5199\u3002 \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u3002 \u7279\u70b9 \uff1a \u4f9d\u8d56\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u5b9e\u73b0\u3002 \u5fc5\u987b\u901a\u8fc7\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\uff0c\u76f4\u63a5\u8c03\u7528\u5bf9\u8c61\u7684\u865a\u51fd\u6570\u4e0d\u4f1a\u8868\u73b0\u51fa\u591a\u6001\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Animal { public : virtual void speak () { // \u865a\u51fd\u6570 cout << \"Animal speaks\" << endl ; } }; class Dog : public Animal { public : void speak () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Dog barks\" << endl ; } }; class Cat : public Animal { public : void speak () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Cat meows\" << endl ; } }; int main () { Animal * a1 = new Dog (); Animal * a2 = new Cat (); a1 -> speak (); // \u8c03\u7528 Dog \u7684 speak() a2 -> speak (); // \u8c03\u7528 Cat \u7684 speak() delete a1 ; delete a2 ; return 0 ; } \u8f93\u51fa \uff1a Dog barks Cat meows 3. \u7f16\u8bd1\u65f6\u591a\u6001\u4e0e\u8fd0\u884c\u65f6\u591a\u6001\u7684\u5bf9\u6bd4 \u7279\u6027 \u7f16\u8bd1\u65f6\u591a\u6001 \u8fd0\u884c\u65f6\u591a\u6001 \u5b9e\u73b0\u65b9\u5f0f \u51fd\u6570\u91cd\u8f7d\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d \u865a\u51fd\u6570 \u7ed1\u5b9a\u65f6\u95f4 \u7f16\u8bd1\u65f6\u7ed1\u5b9a \u8fd0\u884c\u65f6\u7ed1\u5b9a \u6027\u80fd \u65e0\u8fd0\u884c\u65f6\u5f00\u9500 \u6709\u4e00\u5b9a\u7684\u8fd0\u884c\u65f6\u5f00\u9500\uff08\u865a\u51fd\u6570\u8868\u67e5\u627e\uff09 \u7075\u6d3b\u6027 \u7075\u6d3b\u6027\u8f83\u4f4e \u7075\u6d3b\u6027\u8f83\u9ad8 \u9002\u7528\u573a\u666f \u53c2\u6570\u7c7b\u578b\u5df2\u77e5\uff0c\u884c\u4e3a\u56fa\u5b9a\u7684\u573a\u666f \u9700\u8981\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u884c\u4e3a\u7684\u573a\u666f 4. \u603b\u7ed3 C++ \u4e2d\u591a\u6001\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e3b\u8981\u6709\u4e24\u79cd\uff1a 1. \u7f16\u8bd1\u65f6\u591a\u6001 \uff1a - \u901a\u8fc7\u51fd\u6570\u91cd\u8f7d\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9e\u73b0\u3002 - \u5728\u7f16\u8bd1\u9636\u6bb5\u786e\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 - \u6027\u80fd\u8f83\u9ad8\uff0c\u4f46\u7075\u6d3b\u6027\u8f83\u4f4e\u3002 \u8fd0\u884c\u65f6\u591a\u6001 \uff1a \u901a\u8fc7\u865a\u51fd\u6570\u5b9e\u73b0\u3002 \u5728\u8fd0\u884c\u9636\u6bb5\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 \u6027\u80fd\u7a0d\u4f4e\uff0c\u4f46\u7075\u6d3b\u6027\u8f83\u9ad8\u3002 \u4e24\u79cd\u591a\u6001\u5404\u6709\u9002\u7528\u573a\u666f\uff0c\u7f16\u8bd1\u65f6\u591a\u6001\u9002\u5408\u9759\u6001\u884c\u4e3a\uff0c\u8fd0\u884c\u65f6\u591a\u6001\u9002\u5408\u52a8\u6001\u884c\u4e3a\u3002 \u52a8\u6001\u7ed1\u5b9a\u7684\u5b9e\u73b0\u539f\u7406 \u52a8\u6001\u7ed1\u5b9a\uff08Dynamic Binding\uff09\u662f C++ \u4e2d\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001\u7684\u6838\u5fc3\u673a\u5236\u3002\u5b83\u5141\u8bb8\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002\u52a8\u6001\u7ed1\u5b9a\u4e3b\u8981\u901a\u8fc7 \u865a\u51fd\u6570\u8868\uff08vtable\uff09 \u548c \u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09 \u5b9e\u73b0\u3002 \u52a8\u6001\u7ed1\u5b9a\u7684\u5b9e\u73b0\u6b65\u9aa4 1. \u865a\u51fd\u6570\u8868\uff08vtable\uff09 \u5b9a\u4e49 \uff1a \u865a\u51fd\u6570\u8868\u662f\u4e00\u4e2a\u7531\u7f16\u8bd1\u5668\u751f\u6210\u7684\u8868\u683c\uff0c\u5b58\u50a8\u7c7b\u4e2d\u6240\u6709\u865a\u51fd\u6570\u7684\u5730\u5740\u3002 \u6bcf\u4e2a\u7c7b\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff0c\u8868\u4e2d\u8bb0\u5f55\u4e86\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u5b9e\u73b0\u3002 \u7279\u70b9 \uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u6ca1\u6709\u865a\u51fd\u6570\uff0c\u5219\u4e0d\u4f1a\u751f\u6210\u865a\u51fd\u6570\u8868\u3002 \u5982\u679c\u4e00\u4e2a\u7c7b\u6709\u865a\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u4e3a\u8be5\u7c7b\u751f\u6210\u4e00\u4e2a\u865a\u51fd\u6570\u8868\u3002 2. \u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09 \u5b9a\u4e49 \uff1a \u865a\u51fd\u6570\u6307\u9488\u662f\u4e00\u4e2a\u9690\u85cf\u7684\u6307\u9488\uff0c\u5b58\u50a8\u5728\u6bcf\u4e2a\u5bf9\u8c61\u4e2d\uff0c\u6307\u5411\u8be5\u5bf9\u8c61\u6240\u5c5e\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 \u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u6307\u9488\uff0c\u7528\u4e8e\u52a8\u6001\u7ed1\u5b9a\u865a\u51fd\u6570\u3002 \u7279\u70b9 \uff1a \u5f53\u5bf9\u8c61\u88ab\u521b\u5efa\u65f6\uff0c\u865a\u51fd\u6570\u6307\u9488\u4f1a\u88ab\u521d\u59cb\u5316\uff0c\u6307\u5411\u8be5\u5bf9\u8c61\u6240\u5c5e\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 \u5982\u679c\u5bf9\u8c61\u7684\u7c7b\u578b\u53d1\u751f\u53d8\u5316\uff08\u5982\u901a\u8fc7\u7ee7\u627f\uff09\uff0c\u865a\u51fd\u6570\u6307\u9488\u4f1a\u6307\u5411\u65b0\u7684\u865a\u51fd\u6570\u8868\u3002 3. \u52a8\u6001\u7ed1\u5b9a\u7684\u8fc7\u7a0b \u5f53\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff1a \u7a0b\u5e8f\u901a\u8fc7\u5bf9\u8c61\u7684\u865a\u51fd\u6570\u6307\u9488\uff08 vptr \uff09\u627e\u5230\u5bf9\u5e94\u7684\u865a\u51fd\u6570\u8868\uff08 vtable \uff09\u3002 \u5728\u865a\u51fd\u6570\u8868\u4e2d\u67e5\u627e\u865a\u51fd\u6570\u7684\u5730\u5740\u3002 \u8c03\u7528\u865a\u51fd\u6570\u8868\u4e2d\u5b58\u50a8\u7684\u51fd\u6570\u5730\u5740\uff0c\u6267\u884c\u5b9e\u9645\u7684\u51fd\u6570\u5b9e\u73b0\u3002 \u52a8\u6001\u7ed1\u5b9a\u7684\u793a\u4f8b \u4ee3\u7801\u793a\u4f8b #include <iostream> using namespace std ; class Base { public : virtual void speak () { // \u865a\u51fd\u6570 cout << \"Base speaks\" << endl ; } virtual ~ Base () {} // \u865a\u6790\u6784\u51fd\u6570\uff0c\u786e\u4fdd\u6b63\u786e\u91ca\u653e\u8d44\u6e90 }; class Derived : public Base { public : void speak () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived speaks\" << endl ; } }; int main () { Base * obj = new Derived (); // \u57fa\u7c7b\u6307\u9488\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61 obj -> speak (); // \u52a8\u6001\u7ed1\u5b9a\uff0c\u8c03\u7528 Derived \u7684 speak() delete obj ; return 0 ; } \u8f93\u51fa Derived speaks \u52a8\u6001\u7ed1\u5b9a\u7684\u5b9e\u73b0\u7ec6\u8282 1. \u865a\u51fd\u6570\u8868\u7684\u7ed3\u6784 \u5bf9\u4e8e Base \u7c7b\uff0c\u865a\u51fd\u6570\u8868\u53ef\u80fd\u5982\u4e0b\uff1a vtable for Base: +------------------+ | &Base::speak | -> \u5730\u5740\u6307\u5411 Base::speak \u7684\u5b9e\u73b0 +------------------+ \u5bf9\u4e8e Derived \u7c7b\uff0c\u865a\u51fd\u6570\u8868\u53ef\u80fd\u5982\u4e0b\uff1a vtable for Derived: +------------------+ | &Derived::speak | -> \u5730\u5740\u6307\u5411 Derived::speak \u7684\u5b9e\u73b0 +------------------+ 2. \u865a\u51fd\u6570\u6307\u9488\u7684\u5de5\u4f5c \u5f53 Base* obj = new Derived(); \u6267\u884c\u65f6\uff1a obj \u7684\u865a\u51fd\u6570\u6307\u9488\uff08 vptr \uff09\u4f1a\u6307\u5411 Derived \u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 \u8c03\u7528 obj->speak() \u65f6\uff0c\u7a0b\u5e8f\u901a\u8fc7 vptr \u627e\u5230 Derived \u7684\u865a\u51fd\u6570\u8868\uff0c\u5e76\u8c03\u7528 Derived::speak() \u3002 \u52a8\u6001\u7ed1\u5b9a\u7684\u4f18\u7f3a\u70b9 \u4f18\u70b9 \u7075\u6d3b\u6027 \uff1a \u52a8\u6001\u7ed1\u5b9a\u5141\u8bb8\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u51fd\u6570\uff0c\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001\u3002 \u4ee3\u7801\u590d\u7528 \uff1a \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u64cd\u4f5c\u5b50\u7c7b\u5bf9\u8c61\uff0c\u51cf\u5c11\u4ee3\u7801\u91cd\u590d\u3002 \u6269\u5c55\u6027 \uff1a \u65b0\u589e\u5b50\u7c7b\u65f6\u65e0\u9700\u4fee\u6539\u57fa\u7c7b\u4ee3\u7801\uff0c\u7b26\u5408\u5f00\u95ed\u539f\u5219\u3002 \u7f3a\u70b9 \u6027\u80fd\u5f00\u9500 \uff1a \u52a8\u6001\u7ed1\u5b9a\u9700\u8981\u901a\u8fc7\u865a\u51fd\u6570\u6307\u9488\u67e5\u627e\u865a\u51fd\u6570\u8868\uff0c\u589e\u52a0\u4e86\u8fd0\u884c\u65f6\u5f00\u9500\u3002 \u590d\u6742\u6027 \uff1a \u52a8\u6001\u7ed1\u5b9a\u4f9d\u8d56\u865a\u51fd\u6570\u8868\u548c\u865a\u51fd\u6570\u6307\u9488\uff0c\u589e\u52a0\u4e86\u7f16\u8bd1\u5668\u7684\u5b9e\u73b0\u590d\u6742\u6027\u3002 \u8c03\u8bd5\u96be\u5ea6 \uff1a \u52a8\u6001\u7ed1\u5b9a\u7684\u884c\u4e3a\u5728\u8fd0\u884c\u65f6\u51b3\u5b9a\uff0c\u53ef\u80fd\u589e\u52a0\u8c03\u8bd5\u7684\u96be\u5ea6\u3002 \u52a8\u6001\u7ed1\u5b9a\u7684\u6ce8\u610f\u4e8b\u9879 \u865a\u51fd\u6570\u5fc5\u987b\u901a\u8fc7\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528 \uff1a \u5982\u679c\u76f4\u63a5\u901a\u8fc7\u5bf9\u8c61\u8c03\u7528\u865a\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u8fdb\u884c\u9759\u6001\u7ed1\u5b9a\u3002 Derived d ; d . speak (); // \u9759\u6001\u7ed1\u5b9a\uff0c\u76f4\u63a5\u8c03\u7528 Derived::speak() \u865a\u51fd\u6570\u8868\u7684\u5f00\u9500 \uff1a \u6bcf\u4e2a\u7c7b\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u6307\u9488\uff0c\u53ef\u80fd\u589e\u52a0\u5185\u5b58\u5f00\u9500\u3002 \u865a\u6790\u6784\u51fd\u6570 \uff1a \u5982\u679c\u57fa\u7c7b\u6709\u865a\u51fd\u6570\uff0c\u5efa\u8bae\u5c06\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u4ee5\u786e\u4fdd\u6b63\u786e\u91ca\u653e\u5b50\u7c7b\u8d44\u6e90\u3002 virtual ~ Base () {} \u603b\u7ed3 \u52a8\u6001\u7ed1\u5b9a\u7684\u6838\u5fc3 \uff1a \u901a\u8fc7\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u548c\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\u5b9e\u73b0\u3002 \u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u3002 \u5b9e\u73b0\u8fc7\u7a0b \uff1a \u5bf9\u8c61\u7684\u865a\u51fd\u6570\u6307\u9488\u6307\u5411\u6240\u5c5e\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 \u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u901a\u8fc7\u865a\u51fd\u6570\u6307\u9488\u627e\u5230\u865a\u51fd\u6570\u8868\u3002 \u5728\u865a\u51fd\u6570\u8868\u4e2d\u67e5\u627e\u51fd\u6570\u5730\u5740\u5e76\u8c03\u7528\u3002 \u9002\u7528\u573a\u666f \uff1a \u52a8\u6001\u7ed1\u5b9a\u9002\u7528\u4e8e\u9700\u8981\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u6267\u884c\u4e0d\u540c\u884c\u4e3a\u7684\u573a\u666f\uff0c\u662f\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001\u7684\u5173\u952e\u673a\u5236\u3002","title":"5\u670815\u65e5\u57fa\u7840\u77e5\u8bc6"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#_1","text":"\u5c01\u88c5\uff08Encapsulation\uff09 \uff1a \u5b9a\u4e49 \uff1a \u5c01\u88c5\u662f\u5c06\u6570\u636e\uff08\u5c5e\u6027\uff09\u548c\u64cd\u4f5c\u6570\u636e\u7684\u51fd\u6570\uff08\u65b9\u6cd5\uff09\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u9690\u85cf\u5bf9\u8c61\u7684\u5185\u90e8\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u5bf9\u5916\u66b4\u9732\u5fc5\u8981\u7684\u63a5\u53e3\u3002 \u4f5c\u7528 \uff1a \u63d0\u9ad8\u4ee3\u7801\u7684\u5b89\u5168\u6027\uff0c\u9632\u6b62\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee\u548c\u4fee\u6539\u5bf9\u8c61\u7684\u5185\u90e8\u6570\u636e\u3002 \u63d0\u4f9b\u6e05\u6670\u7684\u63a5\u53e3\uff0c\u65b9\u4fbf\u4f7f\u7528\u548c\u7ef4\u62a4\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Person { private : string name ; // \u79c1\u6709\u5c5e\u6027 public : void setName ( string n ) { // \u516c\u6709\u65b9\u6cd5 name = n ; } string getName () { return name ; } }; int main () { Person p ; p . setName ( \"Alice\" ); // \u901a\u8fc7\u65b9\u6cd5\u8bbe\u7f6e\u5c5e\u6027 cout << p . getName () << endl ; // \u901a\u8fc7\u65b9\u6cd5\u83b7\u53d6\u5c5e\u6027 return 0 ; } \u7ee7\u627f\uff08Inheritance\uff09 \uff1a \u5b9a\u4e49 \uff1a \u7ee7\u627f\u662f\u4e00\u4e2a\u7c7b\uff08\u5b50\u7c7b\uff09\u4ece\u53e6\u4e00\u4e2a\u7c7b\uff08\u7236\u7c7b\uff09\u83b7\u53d6\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u673a\u5236\uff0c\u5b50\u7c7b\u53ef\u4ee5\u590d\u7528\u7236\u7c7b\u7684\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u6269\u5c55\u6216\u91cd\u5199\u7236\u7c7b\u7684\u529f\u80fd\u3002 \u4f5c\u7528 \uff1a \u63d0\u9ad8\u4ee3\u7801\u7684\u590d\u7528\u6027\uff0c\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u3002 \u5b9e\u73b0\u7c7b\u4e4b\u95f4\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u4fbf\u4e8e\u6269\u5c55\u548c\u7ef4\u62a4\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Animal { public : void eat () { cout << \"I can eat!\" << endl ; } }; class Dog : public Animal { // Dog \u7ee7\u627f\u81ea Animal public : void bark () { cout << \"I can bark!\" << endl ; } }; int main () { Dog d ; d . eat (); // \u8c03\u7528\u7236\u7c7b\u65b9\u6cd5 d . bark (); // \u8c03\u7528\u5b50\u7c7b\u65b9\u6cd5 return 0 ; } \u591a\u6001\uff08Polymorphism\uff09 \uff1a \u5b9a\u4e49 \uff1a \u591a\u6001\u662f\u6307\u540c\u4e00\u4e2a\u63a5\u53e3\u53ef\u4ee5\u8868\u73b0\u51fa\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u5206\u4e3a \u7f16\u8bd1\u65f6\u591a\u6001 \uff08\u51fd\u6570\u91cd\u8f7d\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff09\u548c \u8fd0\u884c\u65f6\u591a\u6001 \uff08\u865a\u51fd\u6570\uff09\u3002 \u4f5c\u7528 \uff1a \u63d0\u9ad8\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002 \u901a\u8fc7\u7edf\u4e00\u63a5\u53e3\u5b9e\u73b0\u4e0d\u540c\u7684\u529f\u80fd\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Animal { public : virtual void speak () { // \u865a\u51fd\u6570 cout << \"Animal speaks\" << endl ; } }; class Dog : public Animal { public : void speak () override { // \u91cd\u5199\u7236\u7c7b\u65b9\u6cd5 cout << \"Dog barks\" << endl ; } }; int main () { Animal * a = new Dog (); // \u7236\u7c7b\u6307\u9488\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61 a -> speak (); // \u8c03\u7528\u5b50\u7c7b\u7684\u91cd\u5199\u65b9\u6cd5 delete a ; return 0 ; }","title":"\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u5f81"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#_2","text":"\u7279\u6027 \u5b9a\u4e49 \u4f5c\u7528 \u793a\u4f8b \u5c01\u88c5 \u5c06\u6570\u636e\u548c\u65b9\u6cd5\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ea\u66b4\u9732\u5fc5\u8981\u63a5\u53e3 \u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u4fbf\u4e8e\u4f7f\u7528\u548c\u7ef4\u62a4 \u79c1\u6709\u5c5e\u6027 + \u516c\u6709\u65b9\u6cd5 \u7ee7\u627f \u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u590d\u7528\u4ee3\u7801 \u63d0\u9ad8\u4ee3\u7801\u590d\u7528\u6027\uff0c\u4fbf\u4e8e\u6269\u5c55\u548c\u7ef4\u62a4 \u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\uff0c\u6269\u5c55\u6216\u91cd\u5199\u529f\u80fd \u591a\u6001 \u540c\u4e00\u63a5\u53e3\u8868\u73b0\u4e0d\u540c\u884c\u4e3a\uff0c\u5206\u4e3a\u7f16\u8bd1\u65f6\u591a\u6001\u548c\u8fd0\u884c\u65f6\u591a\u6001 \u63d0\u9ad8\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027 \u51fd\u6570\u91cd\u8f7d\u3001\u865a\u51fd\u6570 \u8fd9\u4e09\u5927\u7279\u6027\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u6838\u5fc3\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u7f16\u5199\u66f4\u5b89\u5168\u3001\u53ef\u7ef4\u62a4\u3001\u53ef\u6269\u5c55\u7684\u4ee3\u7801\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#c","text":"C++ \u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\u901a\u8fc7 \u8bbf\u95ee\u63a7\u5236\u7b26 \u6765\u5b9a\u4e49\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e09\u79cd\uff1a","title":"C++ \u4e2d\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#1-public","text":"\u5b9a\u4e49 \uff1a \u516c\u6709\u6210\u5458\u53ef\u4ee5\u88ab\u7c7b\u7684\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee\u3002 \u7279\u70b9 \uff1a \u6ca1\u6709\u8bbf\u95ee\u9650\u5236\uff0c\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u8bbf\u95ee\u3002 \u901a\u5e38\u7528\u4e8e\u5b9a\u4e49\u7c7b\u7684\u63a5\u53e3\uff08\u5982\u516c\u6709\u65b9\u6cd5\uff09\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Person { public : string name ; // \u516c\u6709\u6210\u5458 void display () { cout << \"Name: \" << name << endl ; } }; int main () { Person p ; p . name = \"Alice\" ; // \u76f4\u63a5\u8bbf\u95ee\u516c\u6709\u6210\u5458 p . display (); // \u8c03\u7528\u516c\u6709\u65b9\u6cd5 return 0 ; }","title":"1. public\uff08\u516c\u6709\uff09"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#2-private","text":"\u5b9a\u4e49 \uff1a \u79c1\u6709\u6210\u5458\u53ea\u80fd\u88ab\u7c7b\u7684\u5185\u90e8\u8bbf\u95ee\uff0c\u4e0d\u80fd\u88ab\u7c7b\u7684\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee\u3002 \u7279\u70b9 \uff1a \u9ed8\u8ba4\u8bbf\u95ee\u6743\u9650\uff08\u5982\u679c\u672a\u6307\u5b9a\u8bbf\u95ee\u63a7\u5236\u7b26\uff0c\u6210\u5458\u9ed8\u8ba4\u4e3a private \uff09\u3002 \u901a\u5e38\u7528\u4e8e\u4fdd\u62a4\u7c7b\u7684\u5185\u90e8\u5b9e\u73b0\u7ec6\u8282\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Person { private : string name ; // \u79c1\u6709\u6210\u5458 public : void setName ( string n ) { name = n ; // \u901a\u8fc7\u516c\u6709\u65b9\u6cd5\u8bbf\u95ee\u79c1\u6709\u6210\u5458 } void display () { cout << \"Name: \" << name << endl ; } }; int main () { Person p ; // p.name = \"Alice\"; // \u9519\u8bef\uff1a\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u79c1\u6709\u6210\u5458 p . setName ( \"Alice\" ); // \u901a\u8fc7\u516c\u6709\u65b9\u6cd5\u8bbe\u7f6e\u79c1\u6709\u6210\u5458 p . display (); return 0 ; }","title":"2. private\uff08\u79c1\u6709\uff09"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#3-protected","text":"\u5b9a\u4e49 \uff1a \u53d7\u4fdd\u62a4\u6210\u5458\u53ef\u4ee5\u88ab\u7c7b\u7684\u5185\u90e8\u548c\u5b50\u7c7b\u8bbf\u95ee\uff0c\u4f46\u4e0d\u80fd\u88ab\u7c7b\u7684\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee\u3002 \u7279\u70b9 \uff1a \u4e3b\u8981\u7528\u4e8e\u7ee7\u627f\uff0c\u5141\u8bb8\u5b50\u7c7b\u8bbf\u95ee\u7236\u7c7b\u7684\u53d7\u4fdd\u62a4\u6210\u5458\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Animal { protected : string species ; // \u53d7\u4fdd\u62a4\u6210\u5458 public : void setSpecies ( string s ) { species = s ; } }; class Dog : public Animal { public : void display () { cout << \"Species: \" << species << endl ; // \u5b50\u7c7b\u53ef\u4ee5\u8bbf\u95ee\u53d7\u4fdd\u62a4\u6210\u5458 } }; int main () { Dog d ; d . setSpecies ( \"Canine\" ); d . display (); return 0 ; }","title":"3. protected\uff08\u53d7\u4fdd\u62a4\uff09"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#4","text":"\u8bbf\u95ee\u63a7\u5236\u7b26 \u7c7b\u5185\u90e8 \u5b50\u7c7b \u7c7b\u5916\u90e8 public \u53ef\u4ee5\u8bbf\u95ee \u53ef\u4ee5\u8bbf\u95ee \u53ef\u4ee5\u8bbf\u95ee protected \u53ef\u4ee5\u8bbf\u95ee \u53ef\u4ee5\u8bbf\u95ee \u4e0d\u53ef\u8bbf\u95ee private \u53ef\u4ee5\u8bbf\u95ee \u4e0d\u53ef\u8bbf\u95ee \u4e0d\u53ef\u8bbf\u95ee","title":"4. \u8bbf\u95ee\u6743\u9650\u603b\u7ed3"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#5","text":"\u9ed8\u8ba4\u8bbf\u95ee\u6743\u9650 \uff1a \u7c7b\u7684\u6210\u5458\u9ed8\u8ba4\u662f private \u3002 \u7ed3\u6784\u4f53\uff08 struct \uff09\u7684\u6210\u5458\u9ed8\u8ba4\u662f public \u3002 \u7ee7\u627f\u4e2d\u7684\u8bbf\u95ee\u6743\u9650 \uff1a \u5728\u7ee7\u627f\u65f6\uff0c\u57fa\u7c7b\u7684\u8bbf\u95ee\u6743\u9650\u53ef\u80fd\u4f1a\u53d7\u5230\u7ee7\u627f\u65b9\u5f0f\uff08 public \u3001 protected \u3001 private \uff09\u7684\u5f71\u54cd\u3002 \u5c01\u88c5\u6027 \uff1a \u4f7f\u7528 private \u548c protected \u53ef\u4ee5\u9690\u85cf\u7c7b\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u589e\u5f3a\u5c01\u88c5\u6027\u3002","title":"5. \u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#6","text":"#include <iostream> using namespace std ; class Base { private : int privateVar ; // \u79c1\u6709\u6210\u5458 protected : int protectedVar ; // \u53d7\u4fdd\u62a4\u6210\u5458 public : int publicVar ; // \u516c\u6709\u6210\u5458 Base () : privateVar ( 1 ), protectedVar ( 2 ), publicVar ( 3 ) {} }; class Derived : public Base { public : void display () { // cout << privateVar; // \u9519\u8bef\uff1a\u65e0\u6cd5\u8bbf\u95ee\u79c1\u6709\u6210\u5458 cout << \"Protected: \" << protectedVar << endl ; // \u53ef\u4ee5\u8bbf\u95ee\u53d7\u4fdd\u62a4\u6210\u5458 cout << \"Public: \" << publicVar << endl ; // \u53ef\u4ee5\u8bbf\u95ee\u516c\u6709\u6210\u5458 } }; int main () { Derived d ; d . display (); // cout << d.protectedVar; // \u9519\u8bef\uff1a\u65e0\u6cd5\u8bbf\u95ee\u53d7\u4fdd\u62a4\u6210\u5458 cout << \"Public: \" << d . publicVar << endl ; // \u53ef\u4ee5\u8bbf\u95ee\u516c\u6709\u6210\u5458 return 0 ; } \u8f93\u51fa \uff1a Protected: 2 Public: 3 Public: 3","title":"6. \u793a\u4f8b\uff1a\u7efc\u5408\u4f7f\u7528\u8bbf\u95ee\u6743\u9650"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#_3","text":"public \uff1a\u5bf9\u6240\u6709\u5730\u65b9\u53ef\u89c1\uff0c\u901a\u5e38\u7528\u4e8e\u7c7b\u7684\u63a5\u53e3\u3002 private \uff1a\u4ec5\u5bf9\u7c7b\u7684\u5185\u90e8\u53ef\u89c1\uff0c\u4fdd\u62a4\u7c7b\u7684\u5b9e\u73b0\u7ec6\u8282\u3002 protected \uff1a\u5bf9\u5b50\u7c7b\u53ef\u89c1\uff0c\u901a\u5e38\u7528\u4e8e\u7ee7\u627f\u573a\u666f\u3002 \u5408\u7406\u4f7f\u7528\u8bbf\u95ee\u63a7\u5236\u7b26\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u5b89\u5168\u6027\u3001\u53ef\u7ef4\u62a4\u6027\u548c\u5c01\u88c5\u6027\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#c_1","text":"C++ \u4e2d\u591a\u6001\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a \u7f16\u8bd1\u65f6\u591a\u6001 \u548c \u8fd0\u884c\u65f6\u591a\u6001 \u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a","title":"C++ \u4e2d\u591a\u6001\u7684\u5b9e\u73b0\u65b9\u5f0f"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#1","text":"\u7f16\u8bd1\u65f6\u591a\u6001\u662f\u5728\u7f16\u8bd1\u9636\u6bb5\u786e\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff0c\u4e3b\u8981\u901a\u8fc7 \u51fd\u6570\u91cd\u8f7d \u548c \u8fd0\u7b97\u7b26\u91cd\u8f7d \u5b9e\u73b0\u3002","title":"1. \u7f16\u8bd1\u65f6\u591a\u6001\uff08\u9759\u6001\u591a\u6001\uff09"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#11","text":"\u5b9a\u4e49 \uff1a \u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\u5b9a\u4e49\u591a\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u4f46\u53c2\u6570\u5217\u8868\u4e0d\u540c\uff08\u53c2\u6570\u7684\u7c7b\u578b\u3001\u6570\u91cf\u6216\u987a\u5e8f\u4e0d\u540c\uff09\u3002 \u7279\u70b9 \uff1a \u7f16\u8bd1\u5668\u6839\u636e\u51fd\u6570\u8c03\u7528\u65f6\u7684\u53c2\u6570\u7c7b\u578b\u548c\u6570\u91cf\u9009\u62e9\u5408\u9002\u7684\u51fd\u6570\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Calculator { public : int add ( int a , int b ) { return a + b ; } double add ( double a , double b ) { return a + b ; } }; int main () { Calculator calc ; cout << calc . add ( 3 , 5 ) << endl ; // \u8c03\u7528 int \u7248\u672c cout << calc . add ( 2.5 , 3.5 ) << endl ; // \u8c03\u7528 double \u7248\u672c return 0 ; }","title":"1.1 \u51fd\u6570\u91cd\u8f7d"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#12","text":"\u5b9a\u4e49 \uff1a \u91cd\u5b9a\u4e49 C++ \u4e2d\u7684\u8fd0\u7b97\u7b26\uff0c\u4f7f\u5176\u9002\u7528\u4e8e\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002 \u7279\u70b9 \uff1a \u901a\u8fc7\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u4e3a\u7c7b\u5bf9\u8c61\u5b9a\u4e49\u7279\u5b9a\u7684\u8fd0\u7b97\u884c\u4e3a\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Complex { public : double real , imag ; Complex ( double r , double i ) : real ( r ), imag ( i ) {} // \u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26 Complex operator + ( const Complex & c ) { return Complex ( real + c . real , imag + c . imag ); } void display () { cout << real << \" + \" << imag << \"i\" << endl ; } }; int main () { Complex c1 ( 1.2 , 3.4 ), c2 ( 2.3 , 4.5 ); Complex c3 = c1 + c2 ; // \u4f7f\u7528\u91cd\u8f7d\u7684\u52a0\u6cd5\u8fd0\u7b97\u7b26 c3 . display (); return 0 ; }","title":"1.2 \u8fd0\u7b97\u7b26\u91cd\u8f7d"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#2","text":"\u8fd0\u884c\u65f6\u591a\u6001\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\uff0c\u4e3b\u8981\u901a\u8fc7 \u865a\u51fd\u6570 \u5b9e\u73b0\u3002","title":"2. \u8fd0\u884c\u65f6\u591a\u6001\uff08\u52a8\u6001\u591a\u6001\uff09"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#21","text":"\u5b9a\u4e49 \uff1a \u5728\u57fa\u7c7b\u4e2d\u4f7f\u7528 virtual \u5173\u952e\u5b57\u58f0\u660e\u7684\u51fd\u6570\uff0c\u5141\u8bb8\u5b50\u7c7b\u91cd\u5199\u3002 \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u3002 \u7279\u70b9 \uff1a \u4f9d\u8d56\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u5b9e\u73b0\u3002 \u5fc5\u987b\u901a\u8fc7\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\uff0c\u76f4\u63a5\u8c03\u7528\u5bf9\u8c61\u7684\u865a\u51fd\u6570\u4e0d\u4f1a\u8868\u73b0\u51fa\u591a\u6001\u3002 \u793a\u4f8b \uff1a #include <iostream> using namespace std ; class Animal { public : virtual void speak () { // \u865a\u51fd\u6570 cout << \"Animal speaks\" << endl ; } }; class Dog : public Animal { public : void speak () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Dog barks\" << endl ; } }; class Cat : public Animal { public : void speak () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Cat meows\" << endl ; } }; int main () { Animal * a1 = new Dog (); Animal * a2 = new Cat (); a1 -> speak (); // \u8c03\u7528 Dog \u7684 speak() a2 -> speak (); // \u8c03\u7528 Cat \u7684 speak() delete a1 ; delete a2 ; return 0 ; } \u8f93\u51fa \uff1a Dog barks Cat meows","title":"2.1 \u865a\u51fd\u6570"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#3","text":"\u7279\u6027 \u7f16\u8bd1\u65f6\u591a\u6001 \u8fd0\u884c\u65f6\u591a\u6001 \u5b9e\u73b0\u65b9\u5f0f \u51fd\u6570\u91cd\u8f7d\u3001\u8fd0\u7b97\u7b26\u91cd\u8f7d \u865a\u51fd\u6570 \u7ed1\u5b9a\u65f6\u95f4 \u7f16\u8bd1\u65f6\u7ed1\u5b9a \u8fd0\u884c\u65f6\u7ed1\u5b9a \u6027\u80fd \u65e0\u8fd0\u884c\u65f6\u5f00\u9500 \u6709\u4e00\u5b9a\u7684\u8fd0\u884c\u65f6\u5f00\u9500\uff08\u865a\u51fd\u6570\u8868\u67e5\u627e\uff09 \u7075\u6d3b\u6027 \u7075\u6d3b\u6027\u8f83\u4f4e \u7075\u6d3b\u6027\u8f83\u9ad8 \u9002\u7528\u573a\u666f \u53c2\u6570\u7c7b\u578b\u5df2\u77e5\uff0c\u884c\u4e3a\u56fa\u5b9a\u7684\u573a\u666f \u9700\u8981\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u884c\u4e3a\u7684\u573a\u666f","title":"3. \u7f16\u8bd1\u65f6\u591a\u6001\u4e0e\u8fd0\u884c\u65f6\u591a\u6001\u7684\u5bf9\u6bd4"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#4_1","text":"C++ \u4e2d\u591a\u6001\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e3b\u8981\u6709\u4e24\u79cd\uff1a 1. \u7f16\u8bd1\u65f6\u591a\u6001 \uff1a - \u901a\u8fc7\u51fd\u6570\u91cd\u8f7d\u548c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9e\u73b0\u3002 - \u5728\u7f16\u8bd1\u9636\u6bb5\u786e\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 - \u6027\u80fd\u8f83\u9ad8\uff0c\u4f46\u7075\u6d3b\u6027\u8f83\u4f4e\u3002 \u8fd0\u884c\u65f6\u591a\u6001 \uff1a \u901a\u8fc7\u865a\u51fd\u6570\u5b9e\u73b0\u3002 \u5728\u8fd0\u884c\u9636\u6bb5\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 \u6027\u80fd\u7a0d\u4f4e\uff0c\u4f46\u7075\u6d3b\u6027\u8f83\u9ad8\u3002 \u4e24\u79cd\u591a\u6001\u5404\u6709\u9002\u7528\u573a\u666f\uff0c\u7f16\u8bd1\u65f6\u591a\u6001\u9002\u5408\u9759\u6001\u884c\u4e3a\uff0c\u8fd0\u884c\u65f6\u591a\u6001\u9002\u5408\u52a8\u6001\u884c\u4e3a\u3002","title":"4. \u603b\u7ed3"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#_4","text":"\u52a8\u6001\u7ed1\u5b9a\uff08Dynamic Binding\uff09\u662f C++ \u4e2d\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001\u7684\u6838\u5fc3\u673a\u5236\u3002\u5b83\u5141\u8bb8\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002\u52a8\u6001\u7ed1\u5b9a\u4e3b\u8981\u901a\u8fc7 \u865a\u51fd\u6570\u8868\uff08vtable\uff09 \u548c \u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09 \u5b9e\u73b0\u3002","title":"\u52a8\u6001\u7ed1\u5b9a\u7684\u5b9e\u73b0\u539f\u7406"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#_5","text":"","title":"\u52a8\u6001\u7ed1\u5b9a\u7684\u5b9e\u73b0\u6b65\u9aa4"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#1-vtable","text":"\u5b9a\u4e49 \uff1a \u865a\u51fd\u6570\u8868\u662f\u4e00\u4e2a\u7531\u7f16\u8bd1\u5668\u751f\u6210\u7684\u8868\u683c\uff0c\u5b58\u50a8\u7c7b\u4e2d\u6240\u6709\u865a\u51fd\u6570\u7684\u5730\u5740\u3002 \u6bcf\u4e2a\u7c7b\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff0c\u8868\u4e2d\u8bb0\u5f55\u4e86\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u5b9e\u73b0\u3002 \u7279\u70b9 \uff1a \u5982\u679c\u4e00\u4e2a\u7c7b\u6ca1\u6709\u865a\u51fd\u6570\uff0c\u5219\u4e0d\u4f1a\u751f\u6210\u865a\u51fd\u6570\u8868\u3002 \u5982\u679c\u4e00\u4e2a\u7c7b\u6709\u865a\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u4e3a\u8be5\u7c7b\u751f\u6210\u4e00\u4e2a\u865a\u51fd\u6570\u8868\u3002","title":"1. \u865a\u51fd\u6570\u8868\uff08vtable\uff09"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#2-vptr","text":"\u5b9a\u4e49 \uff1a \u865a\u51fd\u6570\u6307\u9488\u662f\u4e00\u4e2a\u9690\u85cf\u7684\u6307\u9488\uff0c\u5b58\u50a8\u5728\u6bcf\u4e2a\u5bf9\u8c61\u4e2d\uff0c\u6307\u5411\u8be5\u5bf9\u8c61\u6240\u5c5e\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 \u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u6307\u9488\uff0c\u7528\u4e8e\u52a8\u6001\u7ed1\u5b9a\u865a\u51fd\u6570\u3002 \u7279\u70b9 \uff1a \u5f53\u5bf9\u8c61\u88ab\u521b\u5efa\u65f6\uff0c\u865a\u51fd\u6570\u6307\u9488\u4f1a\u88ab\u521d\u59cb\u5316\uff0c\u6307\u5411\u8be5\u5bf9\u8c61\u6240\u5c5e\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 \u5982\u679c\u5bf9\u8c61\u7684\u7c7b\u578b\u53d1\u751f\u53d8\u5316\uff08\u5982\u901a\u8fc7\u7ee7\u627f\uff09\uff0c\u865a\u51fd\u6570\u6307\u9488\u4f1a\u6307\u5411\u65b0\u7684\u865a\u51fd\u6570\u8868\u3002","title":"2. \u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#3_1","text":"\u5f53\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff1a \u7a0b\u5e8f\u901a\u8fc7\u5bf9\u8c61\u7684\u865a\u51fd\u6570\u6307\u9488\uff08 vptr \uff09\u627e\u5230\u5bf9\u5e94\u7684\u865a\u51fd\u6570\u8868\uff08 vtable \uff09\u3002 \u5728\u865a\u51fd\u6570\u8868\u4e2d\u67e5\u627e\u865a\u51fd\u6570\u7684\u5730\u5740\u3002 \u8c03\u7528\u865a\u51fd\u6570\u8868\u4e2d\u5b58\u50a8\u7684\u51fd\u6570\u5730\u5740\uff0c\u6267\u884c\u5b9e\u9645\u7684\u51fd\u6570\u5b9e\u73b0\u3002","title":"3. \u52a8\u6001\u7ed1\u5b9a\u7684\u8fc7\u7a0b"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#_6","text":"","title":"\u52a8\u6001\u7ed1\u5b9a\u7684\u793a\u4f8b"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#_7","text":"#include <iostream> using namespace std ; class Base { public : virtual void speak () { // \u865a\u51fd\u6570 cout << \"Base speaks\" << endl ; } virtual ~ Base () {} // \u865a\u6790\u6784\u51fd\u6570\uff0c\u786e\u4fdd\u6b63\u786e\u91ca\u653e\u8d44\u6e90 }; class Derived : public Base { public : void speak () override { // \u91cd\u5199\u865a\u51fd\u6570 cout << \"Derived speaks\" << endl ; } }; int main () { Base * obj = new Derived (); // \u57fa\u7c7b\u6307\u9488\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61 obj -> speak (); // \u52a8\u6001\u7ed1\u5b9a\uff0c\u8c03\u7528 Derived \u7684 speak() delete obj ; return 0 ; }","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#_8","text":"Derived speaks","title":"\u8f93\u51fa"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#_9","text":"","title":"\u52a8\u6001\u7ed1\u5b9a\u7684\u5b9e\u73b0\u7ec6\u8282"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#1_1","text":"\u5bf9\u4e8e Base \u7c7b\uff0c\u865a\u51fd\u6570\u8868\u53ef\u80fd\u5982\u4e0b\uff1a vtable for Base: +------------------+ | &Base::speak | -> \u5730\u5740\u6307\u5411 Base::speak \u7684\u5b9e\u73b0 +------------------+ \u5bf9\u4e8e Derived \u7c7b\uff0c\u865a\u51fd\u6570\u8868\u53ef\u80fd\u5982\u4e0b\uff1a vtable for Derived: +------------------+ | &Derived::speak | -> \u5730\u5740\u6307\u5411 Derived::speak \u7684\u5b9e\u73b0 +------------------+","title":"1. \u865a\u51fd\u6570\u8868\u7684\u7ed3\u6784"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#2_1","text":"\u5f53 Base* obj = new Derived(); \u6267\u884c\u65f6\uff1a obj \u7684\u865a\u51fd\u6570\u6307\u9488\uff08 vptr \uff09\u4f1a\u6307\u5411 Derived \u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 \u8c03\u7528 obj->speak() \u65f6\uff0c\u7a0b\u5e8f\u901a\u8fc7 vptr \u627e\u5230 Derived \u7684\u865a\u51fd\u6570\u8868\uff0c\u5e76\u8c03\u7528 Derived::speak() \u3002","title":"2. \u865a\u51fd\u6570\u6307\u9488\u7684\u5de5\u4f5c"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#_10","text":"","title":"\u52a8\u6001\u7ed1\u5b9a\u7684\u4f18\u7f3a\u70b9"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#_11","text":"\u7075\u6d3b\u6027 \uff1a \u52a8\u6001\u7ed1\u5b9a\u5141\u8bb8\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u51fd\u6570\uff0c\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001\u3002 \u4ee3\u7801\u590d\u7528 \uff1a \u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u64cd\u4f5c\u5b50\u7c7b\u5bf9\u8c61\uff0c\u51cf\u5c11\u4ee3\u7801\u91cd\u590d\u3002 \u6269\u5c55\u6027 \uff1a \u65b0\u589e\u5b50\u7c7b\u65f6\u65e0\u9700\u4fee\u6539\u57fa\u7c7b\u4ee3\u7801\uff0c\u7b26\u5408\u5f00\u95ed\u539f\u5219\u3002","title":"\u4f18\u70b9"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#_12","text":"\u6027\u80fd\u5f00\u9500 \uff1a \u52a8\u6001\u7ed1\u5b9a\u9700\u8981\u901a\u8fc7\u865a\u51fd\u6570\u6307\u9488\u67e5\u627e\u865a\u51fd\u6570\u8868\uff0c\u589e\u52a0\u4e86\u8fd0\u884c\u65f6\u5f00\u9500\u3002 \u590d\u6742\u6027 \uff1a \u52a8\u6001\u7ed1\u5b9a\u4f9d\u8d56\u865a\u51fd\u6570\u8868\u548c\u865a\u51fd\u6570\u6307\u9488\uff0c\u589e\u52a0\u4e86\u7f16\u8bd1\u5668\u7684\u5b9e\u73b0\u590d\u6742\u6027\u3002 \u8c03\u8bd5\u96be\u5ea6 \uff1a \u52a8\u6001\u7ed1\u5b9a\u7684\u884c\u4e3a\u5728\u8fd0\u884c\u65f6\u51b3\u5b9a\uff0c\u53ef\u80fd\u589e\u52a0\u8c03\u8bd5\u7684\u96be\u5ea6\u3002","title":"\u7f3a\u70b9"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#_13","text":"\u865a\u51fd\u6570\u5fc5\u987b\u901a\u8fc7\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528 \uff1a \u5982\u679c\u76f4\u63a5\u901a\u8fc7\u5bf9\u8c61\u8c03\u7528\u865a\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u8fdb\u884c\u9759\u6001\u7ed1\u5b9a\u3002 Derived d ; d . speak (); // \u9759\u6001\u7ed1\u5b9a\uff0c\u76f4\u63a5\u8c03\u7528 Derived::speak() \u865a\u51fd\u6570\u8868\u7684\u5f00\u9500 \uff1a \u6bcf\u4e2a\u7c7b\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u6709\u4e00\u4e2a\u865a\u51fd\u6570\u6307\u9488\uff0c\u53ef\u80fd\u589e\u52a0\u5185\u5b58\u5f00\u9500\u3002 \u865a\u6790\u6784\u51fd\u6570 \uff1a \u5982\u679c\u57fa\u7c7b\u6709\u865a\u51fd\u6570\uff0c\u5efa\u8bae\u5c06\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u4ee5\u786e\u4fdd\u6b63\u786e\u91ca\u653e\u5b50\u7c7b\u8d44\u6e90\u3002 virtual ~ Base () {}","title":"\u52a8\u6001\u7ed1\u5b9a\u7684\u6ce8\u610f\u4e8b\u9879"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8815/#_14","text":"\u52a8\u6001\u7ed1\u5b9a\u7684\u6838\u5fc3 \uff1a \u901a\u8fc7\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u548c\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\u5b9e\u73b0\u3002 \u5728\u8fd0\u884c\u65f6\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u8c03\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u3002 \u5b9e\u73b0\u8fc7\u7a0b \uff1a \u5bf9\u8c61\u7684\u865a\u51fd\u6570\u6307\u9488\u6307\u5411\u6240\u5c5e\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 \u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u901a\u8fc7\u865a\u51fd\u6570\u6307\u9488\u627e\u5230\u865a\u51fd\u6570\u8868\u3002 \u5728\u865a\u51fd\u6570\u8868\u4e2d\u67e5\u627e\u51fd\u6570\u5730\u5740\u5e76\u8c03\u7528\u3002 \u9002\u7528\u573a\u666f \uff1a \u52a8\u6001\u7ed1\u5b9a\u9002\u7528\u4e8e\u9700\u8981\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u6267\u884c\u4e0d\u540c\u884c\u4e3a\u7684\u573a\u666f\uff0c\u662f\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001\u7684\u5173\u952e\u673a\u5236\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/","text":"\u7eaf\u865a\u51fd\u6570\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f\u5982\u4f55\u5b9e\u73b0\uff1f \u7eaf\u865a\u51fd\u6570\u7684\u4f5c\u7528\u662f \u5b9e\u73b0\u63a5\u53e3\uff08\u62bd\u8c61\u7c7b\uff09 \uff0c\u7528\u4e8e\u89c4\u5b9a\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u67d0\u4e9b\u51fd\u6570\uff0c\u4ece\u800c\u5b9e\u73b0\u591a\u6001\u3002 \u4f5c\u7528 \u8ba9\u57fa\u7c7b\u6210\u4e3a\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u5b9e\u4f8b\u5316\uff0c\u53ea\u80fd\u4f5c\u4e3a\u63a5\u53e3\u4f7f\u7528\u3002 \u5f3a\u5236\u6240\u6709\u6d3e\u751f\u7c7b\u5b9e\u73b0\u8be5\u51fd\u6570\uff0c\u5b9e\u73b0\u591a\u6001\u3002 \u5982\u4f55\u5b9e\u73b0 \u5728\u7c7b\u4e2d\u58f0\u660e\u7eaf\u865a\u51fd\u6570\uff0c\u8bed\u6cd5\u662f\u5728\u51fd\u6570\u58f0\u660e\u540e\u52a0 = 0 \uff0c\u4f8b\u5982\uff1a class Base { public : virtual void func () = 0 ; // \u7eaf\u865a\u51fd\u6570 }; \u53ea\u8981\u7c7b\u4e2d\u6709\u7eaf\u865a\u51fd\u6570\uff0c\u8fd9\u4e2a\u7c7b\u5c31\u662f\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u76f4\u63a5\u521b\u5efa\u5bf9\u8c61\u3002\u6d3e\u751f\u7c7b\u5fc5\u987b\u91cd\u5199\u6240\u6709\u7eaf\u865a\u51fd\u6570\uff0c\u624d\u80fd\u5b9e\u4f8b\u5316\u5bf9\u8c61\u3002 \u7eaf\u865a\u51fd\u6570\u6700\u5e38\u7528\u7684\u65b9\u6cd5\u662f\u7528\u6765\u5b9e\u73b0 \u63a5\u53e3\u7c7b \uff0c\u8ba9\u6240\u6709\u5b50\u7c7b\u90fd\u5fc5\u987b\u5b9e\u73b0\u67d0\u4e9b\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u5b9a\u4e49\u4e00\u4e2a\u52a8\u7269\u57fa\u7c7b\uff0c\u6240\u6709\u52a8\u7269\u90fd\u5fc5\u987b\u5b9e\u73b0 makeSound() \u65b9\u6cd5\uff1a class Animal { public : virtual void makeSound () = 0 ; // \u7eaf\u865a\u51fd\u6570 }; class Dog : public Animal { public : void makeSound () override { cout << \"Woof!\" << endl ; } }; class Cat : public Animal { public : void makeSound () override { cout << \"Meow!\" << endl ; } }; \u8fd9\u6837\uff0c Animal \u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316\uff0c\u6240\u6709\u6d3e\u751f\u7c7b\u90fd\u5fc5\u987b\u5b9e\u73b0 makeSound() \uff0c\u5b9e\u73b0\u4e86\u591a\u6001\u3002 \u5728C++\u4e2d\uff0c \u6d3e\u751f\u7c7b \u662f\u901a\u8fc7\u7ee7\u627f\u57fa\u7c7b\u6765\u5b9a\u4e49\u7684\u3002\u8bed\u6cd5\u5982\u4e0b\uff1a class \u6d3e\u751f\u7c7b\u540d : public \u57fa\u7c7b\u540d { // \u6d3e\u751f\u7c7b\u81ea\u5df1\u7684\u6210\u5458\u548c\u65b9\u6cd5 }; \u5728\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff0c Dog \u548c Cat \u90fd\u662f\u4ece Animal \u57fa\u7c7b \u516c\u6709\u7ee7\u627f \uff08 public Animal \uff09\u800c\u6765\u7684\uff1a class Dog : public Animal { public : void makeSound () override { cout << \"Woof!\" << endl ; } }; class Cat : public Animal { public : void makeSound () override { cout << \"Meow!\" << endl ; } }; \u8bf4\u660e\uff1a - : public Animal \u8868\u793a\u516c\u6709\u7ee7\u627f\uff0c\u57fa\u7c7b\u7684 public \u548c protected \u6210\u5458\u5728\u6d3e\u751f\u7c7b\u4e2d\u4fdd\u6301\u539f\u6709\u8bbf\u95ee\u6743\u9650\u3002 - \u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0\u57fa\u7c7b\u4e2d\u7684\u6240\u6709\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u6d3e\u751f\u7c7b\u4e5f\u4f1a\u6210\u4e3a\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u5b9e\u4f8b\u5316\u3002 \u603b\u7ed3\u8bed\u6cd5\uff1a class \u6d3e\u751f\u7c7b\u540d : public \u57fa\u7c7b\u540d { // \u6d3e\u751f\u7c7b\u6210\u5458 }; \u66f4\u901a\u4fd7\u7406\u89e3\u7eaf\u865a\u51fd\u6570\u4f5c\u7528 \u7eaf\u865a\u51fd\u6570\u5c31\u662f \u89c4\u5b9a\u201c\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u67d0\u4e2a\u529f\u80fd\u201d \uff0c\u5b83\u8ba9\u57fa\u7c7b\u53d8\u6210\u201c\u6a21\u677f\u201d\u6216\u201c\u63a5\u53e3\u201d\uff0c\u53ea\u5b9a\u4e49\u89c4\u8303\uff0c\u4e0d\u5199\u5177\u4f53\u5b9e\u73b0\u3002\u8fd9\u6837\uff0c\u6240\u6709\u7ee7\u627f\u5b83\u7684\u5b50\u7c7b\u90fd\u5fc5\u987b\u81ea\u5df1\u5199\u51fa\u5177\u4f53\u5b9e\u73b0\u3002 \u4e3e\u4e2a\u751f\u6d3b\u4e2d\u7684\u4f8b\u5b50 \u5047\u5982\u4f60\u6709\u4e00\u4e2a\u201c\u52a8\u7269\u201d\u57fa\u7c7b\uff0c\u91cc\u9762\u6709\u4e00\u4e2a\u201c\u53eb\u58f0\u201d\u529f\u80fd\uff0c\u4f46\u6bcf\u79cd\u52a8\u7269\u53eb\u58f0\u90fd\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u4f60\u53ea\u89c4\u5b9a\u201c\u5fc5\u987b\u6709\u53eb\u58f0\u201d\uff0c\u4f46\u4e0d\u5199\u600e\u4e48\u53eb\uff1a class Animal { public : virtual void makeSound () = 0 ; // \u7eaf\u865a\u51fd\u6570\uff0c\u53ea\u89c4\u5b9a\u63a5\u53e3\uff0c\u4e0d\u5199\u5185\u5bb9 }; \u8fd9\u5c31\u50cf\u4f60\u89c4\u5b9a\uff1a\u6240\u6709\u52a8\u7269\u90fd\u8981\u4f1a\u53eb\uff0c\u4f46\u600e\u4e48\u53eb\u4f60\u4e0d\u7ba1\u3002 \u7136\u540e\uff0c\u72d7\u548c\u732b\u7ee7\u627f\u52a8\u7269\uff0c\u90fd\u5fc5\u987b\u81ea\u5df1\u5199\u51fa\u600e\u4e48\u53eb\uff1a class Dog : public Animal { public : void makeSound () override { cout << \"Woof!\" << endl ; } }; class Cat : public Animal { public : void makeSound () override { cout << \"Meow!\" << endl ; } }; \u8fd9\u6837\u505a\u7684\u597d\u5904 \u7edf\u4e00\u89c4\u8303 \uff1a\u6240\u6709\u52a8\u7269\u90fd\u5fc5\u987b\u6709makeSound()\uff0c\u4e0d\u4f1a\u5fd8\u8bb0\u5b9e\u73b0\u3002 \u591a\u6001 \uff1a\u4f60\u53ef\u4ee5\u7528Animal* \u6307\u9488\u6307\u5411\u4efb\u4f55\u52a8\u7269\u5bf9\u8c61\uff0c\u8c03\u7528makeSound()\u65f6\u4f1a\u81ea\u52a8\u8c03\u7528\u5bf9\u5e94\u7684\u5b9e\u73b0\u3002 \u4ee3\u7801\u793a\u4f8b Animal * a1 = new Dog (); Animal * a2 = new Cat (); a1 -> makeSound (); // \u8f93\u51fa Woof! a2 -> makeSound (); // \u8f93\u51fa Meow! \u4f60\u4e0d\u7528\u5173\u5fc3a1\u3001a2\u5230\u5e95\u662f\u4ec0\u4e48\u52a8\u7269\uff0c\u53ea\u8981\u5b83\u4eec\u662fAnimal\u7684\u5b50\u7c7b\uff0c\u5c31\u4e00\u5b9a\u6709makeSound()\u529f\u80fd\u3002 \u603b\u7ed3\uff1a \u7eaf\u865a\u51fd\u6570\u5c31\u662f\u7528\u6765\u201c\u89c4\u5b9a\u63a5\u53e3\u201d\uff0c\u8ba9\u6240\u6709\u5b50\u7c7b\u90fd\u5fc5\u987b\u5b9e\u73b0\u67d0\u4e9b\u529f\u80fd\uff0c\u5b9e\u73b0\u7edf\u4e00\u89c4\u8303\u548c\u591a\u6001\u3002 \u865a\u51fd\u6570\u548c\u7eaf\u865a\u51fd\u6570\u533a\u522b\uff0c\u865a\u51fd\u6570\u53c8\u662f\u505a\u4ec0\u4e48\u7528\u7684 \u865a\u51fd\u6570 \u5b9a\u4e49 \uff1a\u5728\u57fa\u7c7b\u4e2d\u7528 virtual \u5173\u952e\u5b57\u58f0\u660e\u7684\u6210\u5458\u51fd\u6570\u3002 \u4f5c\u7528 \uff1a\u5b9e\u73b0\u591a\u6001\u3002\u5141\u8bb8\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u4e2d\u91cd\u5199\u7684\u51fd\u6570\u3002 \u5b9e\u73b0 \uff1a\u57fa\u7c7b\u53ef\u4ee5\u7ed9\u51fa\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u6d3e\u751f\u7c7b\u53ef\u4ee5\u9009\u62e9\u91cd\u5199\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u91cd\u5199\u3002 \u8bed\u6cd5 \uff1a class Base { public : virtual void func () { cout << \"Base\" << endl ; } }; \u7eaf\u865a\u51fd\u6570 \u5b9a\u4e49 \uff1a\u5728\u57fa\u7c7b\u4e2d\u7528 virtual \u58f0\u660e\uff0c\u5e76\u5728\u672b\u5c3e\u52a0 = 0 \uff0c\u6ca1\u6709\u51fd\u6570\u4f53\u3002 \u4f5c\u7528 \uff1a\u89c4\u5b9a\u63a5\u53e3\uff0c\u5f3a\u5236\u6240\u6709\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0\u8be5\u51fd\u6570\uff0c\u57fa\u7c7b\u53d8\u6210\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u5b9e\u4f8b\u5316\u3002 \u5b9e\u73b0 \uff1a\u57fa\u7c7b\u4e0d\u80fd\u7ed9\u51fa\u5b9e\u73b0\uff0c\u6d3e\u751f\u7c7b\u5fc5\u987b\u91cd\u5199\u3002 \u8bed\u6cd5 \uff1a class Base { public : virtual void func () = 0 ; // \u7eaf\u865a\u51fd\u6570 }; \u533a\u522b\u603b\u7ed3 \u865a\u51fd\u6570 \u7eaf\u865a\u51fd\u6570 \u662f\u5426\u6709\u5b9e\u73b0 \u53ef\u4ee5\u6709\u5b9e\u73b0 \u4e0d\u80fd\u6709\u5b9e\u73b0\uff08=0\uff09 \u662f\u5426\u5fc5\u987b\u91cd\u5199 \u53ef\u4ee5\u4e0d\u91cd\u5199 \u6d3e\u751f\u7c7b\u5fc5\u987b\u91cd\u5199 \u57fa\u7c7b\u80fd\u5426\u5b9e\u4f8b\u5316 \u53ef\u4ee5 \u4e0d\u80fd\uff08\u62bd\u8c61\u7c7b\uff09 \u4f5c\u7528 \u652f\u6301\u591a\u6001 \u89c4\u5b9a\u63a5\u53e3+\u652f\u6301\u591a\u6001 \u865a\u51fd\u6570\u7684\u7528\u9014\u4e3e\u4f8b class Animal { public : virtual void makeSound () { cout << \"Some sound\" << endl ; } }; class Dog : public Animal { public : void makeSound () override { cout << \"Woof!\" << endl ; } }; Animal * a = new Dog (); a -> makeSound (); // \u8f93\u51fa Woof! \u5982\u679c makeSound \u4e0d\u662f\u865a\u51fd\u6570\uff0c\u5219 a->makeSound() \u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u5b9e\u73b0\u3002 \u603b\u7ed3\uff1a - \u865a\u51fd\u6570\uff1a\u7528\u4e8e\u591a\u6001\uff0c\u57fa\u7c7b\u53ef\u4ee5\u6709\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u6d3e\u751f\u7c7b\u53ef\u9009\u91cd\u5199\u3002 - \u7eaf\u865a\u51fd\u6570\uff1a\u7528\u4e8e\u63a5\u53e3\u89c4\u8303\uff0c\u57fa\u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316\uff0c\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0\u3002 \u4e3a\u4ec0\u4e48\u53eb\u201c\u865a\u51fd\u6570\u201d\uff1f \u201c\u865a\u201d\u5b57\u7684\u672c\u610f\u662f\u201c\u4e0d\u662f\u56fa\u5b9a\u7684\u201d\uff0c\u4e5f\u5c31\u662f \u4e0d\u786e\u5b9a\u6700\u7ec8\u4f1a\u8c03\u7528\u54ea\u4e2a\u5b9e\u73b0 \u3002 \u865a\u51fd\u6570\u5728\u57fa\u7c7b\u91cc\u58f0\u660e\u65f6\uff0c\u53ea\u662f\u544a\u8bc9\u7f16\u8bd1\u5668\uff1a\u201c\u8fd9\u4e2a\u51fd\u6570\u4ee5\u540e\u53ef\u80fd\u4f1a\u88ab\u5b50\u7c7b\u91cd\u5199\uff08\u8986\u76d6\uff09\u3002\u201d \u5f53\u4f60\u7528\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c \u5b9e\u9645\u8fd0\u884c\u65f6\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u771f\u5b9e\u7c7b\u578b\uff0c\u52a8\u6001\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u7248\u672c \uff08\u8fd9\u5c31\u662f\u591a\u6001\uff09\u3002 \u6240\u4ee5\u53eb\u201c\u865a\u51fd\u6570\u201d\uff0c\u610f\u601d\u662f\u201c\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\u662f\u2018\u865a\u2019\u7684\u3001\u4e0d\u786e\u5b9a\u7684\uff0c\u8981\u7b49\u5230\u8fd0\u884c\u65f6\u624d\u80fd\u786e\u5b9a\u201d\u3002 \u4e3a\u4ec0\u4e48\u53eb\u201c\u7eaf\u865a\u51fd\u6570\u201d\uff1f \u201c\u7eaf\u201d\u8868\u793a\u201c\u7eaf\u7cb9\u7684\u3001\u5b8c\u5168\u7684\u201d\uff0c\u610f\u601d\u662f \u8fd9\u4e2a\u51fd\u6570\u5728\u57fa\u7c7b\u91cc\u5b8c\u5168\u6ca1\u6709\u5b9e\u73b0\uff0c\u53ea\u89c4\u5b9a\u4e86\u63a5\u53e3 \u3002 \u7eaf\u865a\u51fd\u6570\u5c31\u662f\u201c\u7eaf\u7cb9\u7684\u865a\u51fd\u6570\u201d\uff0c\u5b83\u8fde\u9ed8\u8ba4\u5b9e\u73b0\u90fd\u6ca1\u6709\uff0c\u53ea\u80fd\u7531\u5b50\u7c7b\u6765\u5b9e\u73b0\u3002 \u8fd9\u6837\uff0c\u57fa\u7c7b\u5c31\u6210\u4e86\u201c\u7eaf\u7cb9\u7684\u63a5\u53e3\u201d\uff0c\u4e0d\u80fd\u5b9e\u4f8b\u5316\uff0c\u53ea\u80fd\u88ab\u7ee7\u627f\u3002 \u603b\u7ed3 \u865a\u51fd\u6570 \uff1a\u6709\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u88ab\u5b50\u7c7b\u91cd\u5199\uff0c\u8c03\u7528\u65f6\u201c\u865a\u201d\u6307\u5411\u8c01\u8981\u7b49\u8fd0\u884c\u65f6\u51b3\u5b9a\u3002 \u7eaf\u865a\u51fd\u6570 \uff1a\u6ca1\u6709\u5b9e\u73b0\uff0c\u53ea\u89c4\u5b9a\u63a5\u53e3\uff0c\u5fc5\u987b\u7531\u5b50\u7c7b\u5b9e\u73b0\uff0c\u57fa\u7c7b\u6210\u4e86\u201c\u7eaf\u7cb9\u7684\u865a\u7c7b\u201d\uff08\u62bd\u8c61\u7c7b\uff09\u3002 \u4f60\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a - \u201c\u865a\u201d=\u201c\u4e0d\u786e\u5b9a\u3001\u53ef\u53d8\u3001\u8fd0\u884c\u65f6\u51b3\u5b9a\u201d - \u201c\u7eaf\u865a\u201d=\u201c\u5b8c\u5168\u6ca1\u6709\u5b9e\u73b0\uff0c\u53ea\u80fd\u7531\u5b50\u7c7b\u5b9e\u73b0\u201d \u8fd9\u6837\u547d\u540d\u662f\u4e3a\u4e86\u7a81\u51fa\u5b83\u4eec\u7684\u201c\u52a8\u6001\u6027\u201d\u548c\u201c\u63a5\u53e3\u6027\u201d\u3002 \u865a\u51fd\u6570\u8868\u662f\u9488\u5bf9\u7c7b\u7684\u8fd8\u662f\u9488\u5bf9\u5bf9\u8c61\u7684\uff1f\u540c\u4e00\u4e2a\u7c7b\u7684\u4e24\u4e2a\u5bf9\u8c61\u7684\u865a\u51fd\u6570\u8868\u662f\u600e\u4e48\u7ef4\u62a4\u7684\uff1f \u865a\u51fd\u6570\u8868\uff08vtable\uff09\u662f \u9488\u5bf9\u7c7b\u7684 \uff0c\u4e0d\u662f\u9488\u5bf9\u6bcf\u4e2a\u5bf9\u8c61\u5355\u72ec\u7ef4\u62a4\u7684\u3002 \u8be6\u7ec6\u89e3\u91ca \u6bcf\u4e2a\u542b\u6709\u865a\u51fd\u6570\u7684\u7c7b\uff0c\u7f16\u8bd1\u5668\u4f1a\u4e3a\u5b83\u751f\u6210\u4e00\u5f20\u865a\u51fd\u6570\u8868\uff08vtable\uff09\uff0c\u8868\u91cc\u5b58\u653e\u7740\u865a\u51fd\u6570\u7684\u5730\u5740\u3002 \u540c\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u5bf9\u8c61 \u5171\u7528\u540c\u4e00\u5f20\u865a\u51fd\u6570\u8868 \uff0c\u4e0d\u4f1a\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u5355\u72ec\u751f\u6210\u3002 \u6bcf\u4e2a\u5bf9\u8c61\u5185\u90e8\u4f1a\u6709\u4e00\u4e2a\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u6307\u9488\uff08\u901a\u5e38\u53ebvptr\uff09\uff0c\u8fd9\u4e2a\u6307\u9488\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u8bbe\u7f6e\uff0c\u6307\u5411\u6240\u5c5e\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 \u4e3e\u4f8b\u8bf4\u660e class Base { public : virtual void func () { cout << \"Base\" << endl ; } }; class Derived : public Base { public : void func () override { cout << \"Derived\" << endl ; } }; Base b1 , b2 ; Base \u7c7b\u6709\u4e00\u5f20\u865a\u51fd\u6570\u8868\uff0c b1 \u548c b2 \u5bf9\u8c61\u5185\u90e8\u90fd\u6709\u4e00\u4e2avptr\uff0c\u6307\u5411 Base \u7684\u865a\u51fd\u6570\u8868\u3002 \u5982\u679c\u6709 Derived d1, d2; \uff0c\u5b83\u4eec\u7684vptr\u4f1a\u6307\u5411 Derived \u7684\u865a\u51fd\u6570\u8868\u3002 \u603b\u7ed3 \u865a\u51fd\u6570\u8868\u662f \u7c7b\u7ea7\u522b \u7684\uff0c\u4e00\u4e2a\u7c7b\u4e00\u5f20\u8868\u3002 \u540c\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u5171\u7528\u540c\u4e00\u5f20\u865a\u51fd\u6570\u8868\uff0c\u53ea\u662f\u6bcf\u4e2a\u5bf9\u8c61\u5185\u90e8\u6709\u4e00\u4e2a\u6307\u9488\u6307\u5411\u8fd9\u5f20\u8868\u3002","title":"5\u670816\u65e5\u57fa\u7840\u77e5\u8bc6"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_1","text":"\u7eaf\u865a\u51fd\u6570\u7684\u4f5c\u7528\u662f \u5b9e\u73b0\u63a5\u53e3\uff08\u62bd\u8c61\u7c7b\uff09 \uff0c\u7528\u4e8e\u89c4\u5b9a\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u67d0\u4e9b\u51fd\u6570\uff0c\u4ece\u800c\u5b9e\u73b0\u591a\u6001\u3002","title":"\u7eaf\u865a\u51fd\u6570\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f\u5982\u4f55\u5b9e\u73b0\uff1f"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_2","text":"\u8ba9\u57fa\u7c7b\u6210\u4e3a\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u5b9e\u4f8b\u5316\uff0c\u53ea\u80fd\u4f5c\u4e3a\u63a5\u53e3\u4f7f\u7528\u3002 \u5f3a\u5236\u6240\u6709\u6d3e\u751f\u7c7b\u5b9e\u73b0\u8be5\u51fd\u6570\uff0c\u5b9e\u73b0\u591a\u6001\u3002","title":"\u4f5c\u7528"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_3","text":"\u5728\u7c7b\u4e2d\u58f0\u660e\u7eaf\u865a\u51fd\u6570\uff0c\u8bed\u6cd5\u662f\u5728\u51fd\u6570\u58f0\u660e\u540e\u52a0 = 0 \uff0c\u4f8b\u5982\uff1a class Base { public : virtual void func () = 0 ; // \u7eaf\u865a\u51fd\u6570 }; \u53ea\u8981\u7c7b\u4e2d\u6709\u7eaf\u865a\u51fd\u6570\uff0c\u8fd9\u4e2a\u7c7b\u5c31\u662f\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u76f4\u63a5\u521b\u5efa\u5bf9\u8c61\u3002\u6d3e\u751f\u7c7b\u5fc5\u987b\u91cd\u5199\u6240\u6709\u7eaf\u865a\u51fd\u6570\uff0c\u624d\u80fd\u5b9e\u4f8b\u5316\u5bf9\u8c61\u3002 \u7eaf\u865a\u51fd\u6570\u6700\u5e38\u7528\u7684\u65b9\u6cd5\u662f\u7528\u6765\u5b9e\u73b0 \u63a5\u53e3\u7c7b \uff0c\u8ba9\u6240\u6709\u5b50\u7c7b\u90fd\u5fc5\u987b\u5b9e\u73b0\u67d0\u4e9b\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u5b9a\u4e49\u4e00\u4e2a\u52a8\u7269\u57fa\u7c7b\uff0c\u6240\u6709\u52a8\u7269\u90fd\u5fc5\u987b\u5b9e\u73b0 makeSound() \u65b9\u6cd5\uff1a class Animal { public : virtual void makeSound () = 0 ; // \u7eaf\u865a\u51fd\u6570 }; class Dog : public Animal { public : void makeSound () override { cout << \"Woof!\" << endl ; } }; class Cat : public Animal { public : void makeSound () override { cout << \"Meow!\" << endl ; } }; \u8fd9\u6837\uff0c Animal \u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316\uff0c\u6240\u6709\u6d3e\u751f\u7c7b\u90fd\u5fc5\u987b\u5b9e\u73b0 makeSound() \uff0c\u5b9e\u73b0\u4e86\u591a\u6001\u3002 \u5728C++\u4e2d\uff0c \u6d3e\u751f\u7c7b \u662f\u901a\u8fc7\u7ee7\u627f\u57fa\u7c7b\u6765\u5b9a\u4e49\u7684\u3002\u8bed\u6cd5\u5982\u4e0b\uff1a class \u6d3e\u751f\u7c7b\u540d : public \u57fa\u7c7b\u540d { // \u6d3e\u751f\u7c7b\u81ea\u5df1\u7684\u6210\u5458\u548c\u65b9\u6cd5 }; \u5728\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff0c Dog \u548c Cat \u90fd\u662f\u4ece Animal \u57fa\u7c7b \u516c\u6709\u7ee7\u627f \uff08 public Animal \uff09\u800c\u6765\u7684\uff1a class Dog : public Animal { public : void makeSound () override { cout << \"Woof!\" << endl ; } }; class Cat : public Animal { public : void makeSound () override { cout << \"Meow!\" << endl ; } }; \u8bf4\u660e\uff1a - : public Animal \u8868\u793a\u516c\u6709\u7ee7\u627f\uff0c\u57fa\u7c7b\u7684 public \u548c protected \u6210\u5458\u5728\u6d3e\u751f\u7c7b\u4e2d\u4fdd\u6301\u539f\u6709\u8bbf\u95ee\u6743\u9650\u3002 - \u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0\u57fa\u7c7b\u4e2d\u7684\u6240\u6709\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u6d3e\u751f\u7c7b\u4e5f\u4f1a\u6210\u4e3a\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u5b9e\u4f8b\u5316\u3002 \u603b\u7ed3\u8bed\u6cd5\uff1a class \u6d3e\u751f\u7c7b\u540d : public \u57fa\u7c7b\u540d { // \u6d3e\u751f\u7c7b\u6210\u5458 };","title":"\u5982\u4f55\u5b9e\u73b0"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_4","text":"\u7eaf\u865a\u51fd\u6570\u5c31\u662f \u89c4\u5b9a\u201c\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u67d0\u4e2a\u529f\u80fd\u201d \uff0c\u5b83\u8ba9\u57fa\u7c7b\u53d8\u6210\u201c\u6a21\u677f\u201d\u6216\u201c\u63a5\u53e3\u201d\uff0c\u53ea\u5b9a\u4e49\u89c4\u8303\uff0c\u4e0d\u5199\u5177\u4f53\u5b9e\u73b0\u3002\u8fd9\u6837\uff0c\u6240\u6709\u7ee7\u627f\u5b83\u7684\u5b50\u7c7b\u90fd\u5fc5\u987b\u81ea\u5df1\u5199\u51fa\u5177\u4f53\u5b9e\u73b0\u3002","title":"\u66f4\u901a\u4fd7\u7406\u89e3\u7eaf\u865a\u51fd\u6570\u4f5c\u7528"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_5","text":"\u5047\u5982\u4f60\u6709\u4e00\u4e2a\u201c\u52a8\u7269\u201d\u57fa\u7c7b\uff0c\u91cc\u9762\u6709\u4e00\u4e2a\u201c\u53eb\u58f0\u201d\u529f\u80fd\uff0c\u4f46\u6bcf\u79cd\u52a8\u7269\u53eb\u58f0\u90fd\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u4f60\u53ea\u89c4\u5b9a\u201c\u5fc5\u987b\u6709\u53eb\u58f0\u201d\uff0c\u4f46\u4e0d\u5199\u600e\u4e48\u53eb\uff1a class Animal { public : virtual void makeSound () = 0 ; // \u7eaf\u865a\u51fd\u6570\uff0c\u53ea\u89c4\u5b9a\u63a5\u53e3\uff0c\u4e0d\u5199\u5185\u5bb9 }; \u8fd9\u5c31\u50cf\u4f60\u89c4\u5b9a\uff1a\u6240\u6709\u52a8\u7269\u90fd\u8981\u4f1a\u53eb\uff0c\u4f46\u600e\u4e48\u53eb\u4f60\u4e0d\u7ba1\u3002 \u7136\u540e\uff0c\u72d7\u548c\u732b\u7ee7\u627f\u52a8\u7269\uff0c\u90fd\u5fc5\u987b\u81ea\u5df1\u5199\u51fa\u600e\u4e48\u53eb\uff1a class Dog : public Animal { public : void makeSound () override { cout << \"Woof!\" << endl ; } }; class Cat : public Animal { public : void makeSound () override { cout << \"Meow!\" << endl ; } };","title":"\u4e3e\u4e2a\u751f\u6d3b\u4e2d\u7684\u4f8b\u5b50"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_6","text":"\u7edf\u4e00\u89c4\u8303 \uff1a\u6240\u6709\u52a8\u7269\u90fd\u5fc5\u987b\u6709makeSound()\uff0c\u4e0d\u4f1a\u5fd8\u8bb0\u5b9e\u73b0\u3002 \u591a\u6001 \uff1a\u4f60\u53ef\u4ee5\u7528Animal* \u6307\u9488\u6307\u5411\u4efb\u4f55\u52a8\u7269\u5bf9\u8c61\uff0c\u8c03\u7528makeSound()\u65f6\u4f1a\u81ea\u52a8\u8c03\u7528\u5bf9\u5e94\u7684\u5b9e\u73b0\u3002","title":"\u8fd9\u6837\u505a\u7684\u597d\u5904"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_7","text":"Animal * a1 = new Dog (); Animal * a2 = new Cat (); a1 -> makeSound (); // \u8f93\u51fa Woof! a2 -> makeSound (); // \u8f93\u51fa Meow! \u4f60\u4e0d\u7528\u5173\u5fc3a1\u3001a2\u5230\u5e95\u662f\u4ec0\u4e48\u52a8\u7269\uff0c\u53ea\u8981\u5b83\u4eec\u662fAnimal\u7684\u5b50\u7c7b\uff0c\u5c31\u4e00\u5b9a\u6709makeSound()\u529f\u80fd\u3002 \u603b\u7ed3\uff1a \u7eaf\u865a\u51fd\u6570\u5c31\u662f\u7528\u6765\u201c\u89c4\u5b9a\u63a5\u53e3\u201d\uff0c\u8ba9\u6240\u6709\u5b50\u7c7b\u90fd\u5fc5\u987b\u5b9e\u73b0\u67d0\u4e9b\u529f\u80fd\uff0c\u5b9e\u73b0\u7edf\u4e00\u89c4\u8303\u548c\u591a\u6001\u3002","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_8","text":"","title":"\u865a\u51fd\u6570\u548c\u7eaf\u865a\u51fd\u6570\u533a\u522b\uff0c\u865a\u51fd\u6570\u53c8\u662f\u505a\u4ec0\u4e48\u7528\u7684"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_9","text":"\u5b9a\u4e49 \uff1a\u5728\u57fa\u7c7b\u4e2d\u7528 virtual \u5173\u952e\u5b57\u58f0\u660e\u7684\u6210\u5458\u51fd\u6570\u3002 \u4f5c\u7528 \uff1a\u5b9e\u73b0\u591a\u6001\u3002\u5141\u8bb8\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u4e2d\u91cd\u5199\u7684\u51fd\u6570\u3002 \u5b9e\u73b0 \uff1a\u57fa\u7c7b\u53ef\u4ee5\u7ed9\u51fa\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u6d3e\u751f\u7c7b\u53ef\u4ee5\u9009\u62e9\u91cd\u5199\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u91cd\u5199\u3002 \u8bed\u6cd5 \uff1a class Base { public : virtual void func () { cout << \"Base\" << endl ; } };","title":"\u865a\u51fd\u6570"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_10","text":"\u5b9a\u4e49 \uff1a\u5728\u57fa\u7c7b\u4e2d\u7528 virtual \u58f0\u660e\uff0c\u5e76\u5728\u672b\u5c3e\u52a0 = 0 \uff0c\u6ca1\u6709\u51fd\u6570\u4f53\u3002 \u4f5c\u7528 \uff1a\u89c4\u5b9a\u63a5\u53e3\uff0c\u5f3a\u5236\u6240\u6709\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0\u8be5\u51fd\u6570\uff0c\u57fa\u7c7b\u53d8\u6210\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u5b9e\u4f8b\u5316\u3002 \u5b9e\u73b0 \uff1a\u57fa\u7c7b\u4e0d\u80fd\u7ed9\u51fa\u5b9e\u73b0\uff0c\u6d3e\u751f\u7c7b\u5fc5\u987b\u91cd\u5199\u3002 \u8bed\u6cd5 \uff1a class Base { public : virtual void func () = 0 ; // \u7eaf\u865a\u51fd\u6570 };","title":"\u7eaf\u865a\u51fd\u6570"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_11","text":"\u865a\u51fd\u6570 \u7eaf\u865a\u51fd\u6570 \u662f\u5426\u6709\u5b9e\u73b0 \u53ef\u4ee5\u6709\u5b9e\u73b0 \u4e0d\u80fd\u6709\u5b9e\u73b0\uff08=0\uff09 \u662f\u5426\u5fc5\u987b\u91cd\u5199 \u53ef\u4ee5\u4e0d\u91cd\u5199 \u6d3e\u751f\u7c7b\u5fc5\u987b\u91cd\u5199 \u57fa\u7c7b\u80fd\u5426\u5b9e\u4f8b\u5316 \u53ef\u4ee5 \u4e0d\u80fd\uff08\u62bd\u8c61\u7c7b\uff09 \u4f5c\u7528 \u652f\u6301\u591a\u6001 \u89c4\u5b9a\u63a5\u53e3+\u652f\u6301\u591a\u6001","title":"\u533a\u522b\u603b\u7ed3"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_12","text":"class Animal { public : virtual void makeSound () { cout << \"Some sound\" << endl ; } }; class Dog : public Animal { public : void makeSound () override { cout << \"Woof!\" << endl ; } }; Animal * a = new Dog (); a -> makeSound (); // \u8f93\u51fa Woof! \u5982\u679c makeSound \u4e0d\u662f\u865a\u51fd\u6570\uff0c\u5219 a->makeSound() \u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u5b9e\u73b0\u3002 \u603b\u7ed3\uff1a - \u865a\u51fd\u6570\uff1a\u7528\u4e8e\u591a\u6001\uff0c\u57fa\u7c7b\u53ef\u4ee5\u6709\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u6d3e\u751f\u7c7b\u53ef\u9009\u91cd\u5199\u3002 - \u7eaf\u865a\u51fd\u6570\uff1a\u7528\u4e8e\u63a5\u53e3\u89c4\u8303\uff0c\u57fa\u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316\uff0c\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0\u3002","title":"\u865a\u51fd\u6570\u7684\u7528\u9014\u4e3e\u4f8b"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_13","text":"\u201c\u865a\u201d\u5b57\u7684\u672c\u610f\u662f\u201c\u4e0d\u662f\u56fa\u5b9a\u7684\u201d\uff0c\u4e5f\u5c31\u662f \u4e0d\u786e\u5b9a\u6700\u7ec8\u4f1a\u8c03\u7528\u54ea\u4e2a\u5b9e\u73b0 \u3002 \u865a\u51fd\u6570\u5728\u57fa\u7c7b\u91cc\u58f0\u660e\u65f6\uff0c\u53ea\u662f\u544a\u8bc9\u7f16\u8bd1\u5668\uff1a\u201c\u8fd9\u4e2a\u51fd\u6570\u4ee5\u540e\u53ef\u80fd\u4f1a\u88ab\u5b50\u7c7b\u91cd\u5199\uff08\u8986\u76d6\uff09\u3002\u201d \u5f53\u4f60\u7528\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c \u5b9e\u9645\u8fd0\u884c\u65f6\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u771f\u5b9e\u7c7b\u578b\uff0c\u52a8\u6001\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u7248\u672c \uff08\u8fd9\u5c31\u662f\u591a\u6001\uff09\u3002 \u6240\u4ee5\u53eb\u201c\u865a\u51fd\u6570\u201d\uff0c\u610f\u601d\u662f\u201c\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\u662f\u2018\u865a\u2019\u7684\u3001\u4e0d\u786e\u5b9a\u7684\uff0c\u8981\u7b49\u5230\u8fd0\u884c\u65f6\u624d\u80fd\u786e\u5b9a\u201d\u3002","title":"\u4e3a\u4ec0\u4e48\u53eb\u201c\u865a\u51fd\u6570\u201d\uff1f"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_14","text":"\u201c\u7eaf\u201d\u8868\u793a\u201c\u7eaf\u7cb9\u7684\u3001\u5b8c\u5168\u7684\u201d\uff0c\u610f\u601d\u662f \u8fd9\u4e2a\u51fd\u6570\u5728\u57fa\u7c7b\u91cc\u5b8c\u5168\u6ca1\u6709\u5b9e\u73b0\uff0c\u53ea\u89c4\u5b9a\u4e86\u63a5\u53e3 \u3002 \u7eaf\u865a\u51fd\u6570\u5c31\u662f\u201c\u7eaf\u7cb9\u7684\u865a\u51fd\u6570\u201d\uff0c\u5b83\u8fde\u9ed8\u8ba4\u5b9e\u73b0\u90fd\u6ca1\u6709\uff0c\u53ea\u80fd\u7531\u5b50\u7c7b\u6765\u5b9e\u73b0\u3002 \u8fd9\u6837\uff0c\u57fa\u7c7b\u5c31\u6210\u4e86\u201c\u7eaf\u7cb9\u7684\u63a5\u53e3\u201d\uff0c\u4e0d\u80fd\u5b9e\u4f8b\u5316\uff0c\u53ea\u80fd\u88ab\u7ee7\u627f\u3002","title":"\u4e3a\u4ec0\u4e48\u53eb\u201c\u7eaf\u865a\u51fd\u6570\u201d\uff1f"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_15","text":"\u865a\u51fd\u6570 \uff1a\u6709\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u88ab\u5b50\u7c7b\u91cd\u5199\uff0c\u8c03\u7528\u65f6\u201c\u865a\u201d\u6307\u5411\u8c01\u8981\u7b49\u8fd0\u884c\u65f6\u51b3\u5b9a\u3002 \u7eaf\u865a\u51fd\u6570 \uff1a\u6ca1\u6709\u5b9e\u73b0\uff0c\u53ea\u89c4\u5b9a\u63a5\u53e3\uff0c\u5fc5\u987b\u7531\u5b50\u7c7b\u5b9e\u73b0\uff0c\u57fa\u7c7b\u6210\u4e86\u201c\u7eaf\u7cb9\u7684\u865a\u7c7b\u201d\uff08\u62bd\u8c61\u7c7b\uff09\u3002 \u4f60\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a - \u201c\u865a\u201d=\u201c\u4e0d\u786e\u5b9a\u3001\u53ef\u53d8\u3001\u8fd0\u884c\u65f6\u51b3\u5b9a\u201d - \u201c\u7eaf\u865a\u201d=\u201c\u5b8c\u5168\u6ca1\u6709\u5b9e\u73b0\uff0c\u53ea\u80fd\u7531\u5b50\u7c7b\u5b9e\u73b0\u201d \u8fd9\u6837\u547d\u540d\u662f\u4e3a\u4e86\u7a81\u51fa\u5b83\u4eec\u7684\u201c\u52a8\u6001\u6027\u201d\u548c\u201c\u63a5\u53e3\u6027\u201d\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_16","text":"\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u662f \u9488\u5bf9\u7c7b\u7684 \uff0c\u4e0d\u662f\u9488\u5bf9\u6bcf\u4e2a\u5bf9\u8c61\u5355\u72ec\u7ef4\u62a4\u7684\u3002","title":"\u865a\u51fd\u6570\u8868\u662f\u9488\u5bf9\u7c7b\u7684\u8fd8\u662f\u9488\u5bf9\u5bf9\u8c61\u7684\uff1f\u540c\u4e00\u4e2a\u7c7b\u7684\u4e24\u4e2a\u5bf9\u8c61\u7684\u865a\u51fd\u6570\u8868\u662f\u600e\u4e48\u7ef4\u62a4\u7684\uff1f"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_17","text":"\u6bcf\u4e2a\u542b\u6709\u865a\u51fd\u6570\u7684\u7c7b\uff0c\u7f16\u8bd1\u5668\u4f1a\u4e3a\u5b83\u751f\u6210\u4e00\u5f20\u865a\u51fd\u6570\u8868\uff08vtable\uff09\uff0c\u8868\u91cc\u5b58\u653e\u7740\u865a\u51fd\u6570\u7684\u5730\u5740\u3002 \u540c\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u5bf9\u8c61 \u5171\u7528\u540c\u4e00\u5f20\u865a\u51fd\u6570\u8868 \uff0c\u4e0d\u4f1a\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u5355\u72ec\u751f\u6210\u3002 \u6bcf\u4e2a\u5bf9\u8c61\u5185\u90e8\u4f1a\u6709\u4e00\u4e2a\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u6307\u9488\uff08\u901a\u5e38\u53ebvptr\uff09\uff0c\u8fd9\u4e2a\u6307\u9488\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u8bbe\u7f6e\uff0c\u6307\u5411\u6240\u5c5e\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002","title":"\u8be6\u7ec6\u89e3\u91ca"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_18","text":"class Base { public : virtual void func () { cout << \"Base\" << endl ; } }; class Derived : public Base { public : void func () override { cout << \"Derived\" << endl ; } }; Base b1 , b2 ; Base \u7c7b\u6709\u4e00\u5f20\u865a\u51fd\u6570\u8868\uff0c b1 \u548c b2 \u5bf9\u8c61\u5185\u90e8\u90fd\u6709\u4e00\u4e2avptr\uff0c\u6307\u5411 Base \u7684\u865a\u51fd\u6570\u8868\u3002 \u5982\u679c\u6709 Derived d1, d2; \uff0c\u5b83\u4eec\u7684vptr\u4f1a\u6307\u5411 Derived \u7684\u865a\u51fd\u6570\u8868\u3002","title":"\u4e3e\u4f8b\u8bf4\u660e"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8816/#_19","text":"\u865a\u51fd\u6570\u8868\u662f \u7c7b\u7ea7\u522b \u7684\uff0c\u4e00\u4e2a\u7c7b\u4e00\u5f20\u8868\u3002 \u540c\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u5171\u7528\u540c\u4e00\u5f20\u865a\u51fd\u6570\u8868\uff0c\u53ea\u662f\u6bcf\u4e2a\u5bf9\u8c61\u5185\u90e8\u6709\u4e00\u4e2a\u6307\u9488\u6307\u5411\u8fd9\u5f20\u8868\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/","text":"\u4e3a\u4ec0\u4e48\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\uff1f \u5728C++\u4e2d\uff0c\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u4e3b\u8981\u539f\u56e0\u5982\u4e0b\uff1a 1. \u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f \u5728C++\u4e2d\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u6784\u9020\u8fc7\u7a0b\u662f\u4ece\u57fa\u7c7b\u5f00\u59cb\u7684\uff0c\u5373\uff1a \u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002 \u518d\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002 \u5982\u679c\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u65f6\uff0c\u6d3e\u751f\u7c7b\u7684\u90e8\u5206\u5c1a\u672a\u521d\u59cb\u5316\uff0c\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u4e5f\u672a\u5efa\u7acb\u6216\u672a\u6b63\u786e\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 \u8fd9\u4f1a\u5bfc\u81f4\u8c03\u7528\u865a\u51fd\u6570\u65f6\u884c\u4e3a\u672a\u5b9a\u4e49\u3002 2. \u865a\u51fd\u6570\u7684\u8bbe\u8ba1\u76ee\u7684 \u865a\u51fd\u6570\u7684\u76ee\u7684\u662f\u5b9e\u73b0 \u8fd0\u884c\u65f6\u591a\u6001 \uff0c\u5373\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u3002 \u6784\u9020\u51fd\u6570\u7684\u4e3b\u8981\u76ee\u7684\u662f\u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u800c\u5728\u6784\u9020\u51fd\u6570\u6267\u884c\u65f6\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u5c1a\u672a\u5b8c\u5168\u6784\u9020\u5b8c\u6210\uff0c\u65e0\u6cd5\u5b9e\u73b0\u591a\u6001\u884c\u4e3a\u3002 3. \u6280\u672f\u9650\u5236 \u865a\u51fd\u6570\u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u548c\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\u3002 \u5728\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u6267\u884c\u65f6\uff0c\u865a\u51fd\u6570\u8868\u5c1a\u672a\u5efa\u7acb\u6216\u672a\u6b63\u786e\u521d\u59cb\u5316\uff0c\u56e0\u6b64\u65e0\u6cd5\u652f\u6301\u865a\u51fd\u6570\u8c03\u7528\u3002 4. \u8bbe\u8ba1\u4e0a\u7684\u4e0d\u5408\u7406\u6027 \u5982\u679c\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u800c\u6b64\u65f6\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u5c1a\u672a\u521d\u59cb\u5316\uff0c\u5bb9\u6613\u5f15\u53d1\u9519\u8bef\u3002 \u793a\u4f8b\u4ee3\u7801\u8bf4\u660e \u9519\u8bef\u7684\u5047\u8bbe \u5982\u679c\u5141\u8bb8\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5982\u4e0b\u95ee\u9898\uff1a #include <iostream> using namespace std ; class Base { public : virtual Base () { // \u5047\u8bbe\u6784\u9020\u51fd\u6570\u662f\u865a\u51fd\u6570 cout << \"Base constructor\" << endl ; } }; class Derived : public Base { public : Derived () { cout << \"Derived constructor\" << endl ; } }; int main () { Derived d ; return 0 ; } \u95ee\u9898 \uff1a - \u5728\u8c03\u7528 Base \u7684\u6784\u9020\u51fd\u6570\u65f6\uff0c Derived \u7684\u90e8\u5206\u5c1a\u672a\u521d\u59cb\u5316\uff0c\u8c03\u7528\u865a\u51fd\u6570\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 \u6b63\u786e\u7684\u8bbe\u8ba1\u65b9\u5f0f \u5982\u679c\u9700\u8981\u5728\u6784\u9020\u8fc7\u7a0b\u4e2d\u5b9e\u73b0\u7c7b\u4f3c\u591a\u6001\u7684\u884c\u4e3a\uff0c\u53ef\u4ee5\u4f7f\u7528\u666e\u901a\u7684\u6210\u5458\u51fd\u6570\u6216\u5de5\u5382\u6a21\u5f0f\u3002 \u4f7f\u7528\u666e\u901a\u6210\u5458\u51fd\u6570 #include <iostream> using namespace std ; class Base { public : Base () { init (); // \u8c03\u7528\u666e\u901a\u6210\u5458\u51fd\u6570 } virtual void init () { cout << \"Base init\" << endl ; } }; class Derived : public Base { public : void init () override { cout << \"Derived init\" << endl ; } }; int main () { Derived d ; // \u8f93\u51fa \"Base init\" return 0 ; } \u6ce8\u610f \uff1a - \u5728\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u59cb\u7ec8\u4f1a\u8c03\u7528\u5f53\u524d\u7c7b\u7684\u7248\u672c\uff0c\u800c\u4e0d\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u7248\u672c\u3002 \u603b\u7ed3 \u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570\uff0c\u56e0\u4e3a\u5728\u6784\u9020\u51fd\u6570\u6267\u884c\u65f6\uff0c\u865a\u51fd\u6570\u8868\u5c1a\u672a\u6b63\u786e\u521d\u59cb\u5316\uff0c\u65e0\u6cd5\u5b9e\u73b0\u591a\u6001\u3002 \u5982\u679c\u9700\u8981\u7c7b\u4f3c\u7684\u884c\u4e3a\uff0c\u53ef\u4ee5\u901a\u8fc7\u666e\u901a\u6210\u5458\u51fd\u6570\u6216\u5176\u4ed6\u8bbe\u8ba1\u6a21\u5f0f\u5b9e\u73b0\u3002 \u4e3a\u4ec0\u4e48\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u9700\u8981\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\uff1f \u5728C++\u4e2d\uff0c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u901a\u5e38\u9700\u8981\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\uff0c\u4ee5\u786e\u4fdd\u5728\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u80fd\u591f\u6b63\u786e\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u907f\u514d\u8d44\u6e90\u6cc4\u6f0f\u3002 \u539f\u56e0\u5206\u6790 1. \u591a\u6001\u884c\u4e3a \u5f53\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u662f\u865a\u51fd\u6570\u65f6\uff0c\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002 \u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\u53ea\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u800c\u4e0d\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u5bfc\u81f4\u6d3e\u751f\u7c7b\u7684\u8d44\u6e90\u65e0\u6cd5\u6b63\u786e\u91ca\u653e\u3002 \u793a\u4f8b\u4ee3\u7801 \u975e\u865a\u6790\u6784\u51fd\u6570\u7684\u9519\u8bef\u884c\u4e3a \uff1a #include <iostream> using namespace std ; class Base { public : ~ Base () { // \u975e\u865a\u6790\u6784\u51fd\u6570 cout << \"Base destructor\" << endl ; } }; class Derived : public Base { public : ~ Derived () { cout << \"Derived destructor\" << endl ; } }; int main () { Base * ptr = new Derived (); delete ptr ; // \u53ea\u8c03\u7528 Base \u7684\u6790\u6784\u51fd\u6570\uff0c\u672a\u8c03\u7528 Derived \u7684\u6790\u6784\u51fd\u6570 return 0 ; } \u8f93\u51fa \uff1a Base destructor \u95ee\u9898 \uff1a - Derived \u7684\u6790\u6784\u51fd\u6570\u672a\u88ab\u8c03\u7528\uff0c\u5bfc\u81f4\u6d3e\u751f\u7c7b\u7684\u8d44\u6e90\u672a\u91ca\u653e\uff0c\u53ef\u80fd\u5f15\u53d1\u8d44\u6e90\u6cc4\u6f0f\u3002 2. \u865a\u6790\u6784\u51fd\u6570\u7684\u6b63\u786e\u884c\u4e3a \u5c06\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\uff0c\u53ef\u4ee5\u786e\u4fdd\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u6b63\u786e\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002 \u6b63\u786e\u7684\u5b9e\u73b0 \uff1a #include <iostream> using namespace std ; class Base { public : virtual ~ Base () { // \u865a\u6790\u6784\u51fd\u6570 cout << \"Base destructor\" << endl ; } }; class Derived : public Base { public : ~ Derived () { cout << \"Derived destructor\" << endl ; } }; int main () { Base * ptr = new Derived (); delete ptr ; // \u8c03\u7528 Derived \u548c Base \u7684\u6790\u6784\u51fd\u6570 return 0 ; } \u8f93\u51fa \uff1a Derived destructor Base destructor \u7ed3\u679c \uff1a - \u6d3e\u751f\u7c7b\u548c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u90fd\u88ab\u6b63\u786e\u8c03\u7528\uff0c\u8d44\u6e90\u5f97\u5230\u6b63\u786e\u91ca\u653e\u3002 3. \u591a\u6001\u7c7b\u7684\u8bbe\u8ba1\u539f\u5219 \u5982\u679c\u4e00\u4e2a\u7c7b\u88ab\u8bbe\u8ba1\u4e3a\u57fa\u7c7b\uff08\u5373\u53ef\u80fd\u4f1a\u88ab\u7ee7\u627f\uff09\uff0c\u5176\u6790\u6784\u51fd\u6570\u5e94\u8be5\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\u3002 \u5982\u679c\u4e00\u4e2a\u7c7b\u4e0d\u4f1a\u88ab\u7ee7\u627f\uff0c\u5219\u4e0d\u9700\u8981\u5c06\u6790\u6784\u51fd\u6570\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\u3002 4. \u6027\u80fd\u5f00\u9500 \u865a\u6790\u6784\u51fd\u6570\u4f1a\u589e\u52a0\u4e00\u4e9b\u8fd0\u884c\u65f6\u5f00\u9500\uff08\u5982\u865a\u51fd\u6570\u8868\u7684\u7ef4\u62a4\uff09\uff0c\u4f46\u8fd9\u79cd\u5f00\u9500\u901a\u5e38\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u5c24\u5176\u662f\u5728\u9700\u8981\u6b63\u786e\u91ca\u653e\u8d44\u6e90\u7684\u573a\u666f\u4e0b\u3002 \u603b\u7ed3 \u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u9700\u8981\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570 \uff0c\u4ee5\u786e\u4fdd\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u80fd\u591f\u6b63\u786e\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002 \u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u53ef\u80fd\u5bfc\u81f4\u6d3e\u751f\u7c7b\u7684\u8d44\u6e90\u672a\u88ab\u91ca\u653e\uff0c\u4ece\u800c\u5f15\u53d1\u8d44\u6e90\u6cc4\u6f0f\u3002 \u8fd9\u662fC++\u4e2d\u591a\u6001\u7c7b\u8bbe\u8ba1\u7684\u91cd\u8981\u539f\u5219\u4e4b\u4e00\u3002","title":"5\u670818\u65e5\u57fa\u7840\u77e5\u8bc6"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#_1","text":"\u5728C++\u4e2d\uff0c\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u4e3b\u8981\u539f\u56e0\u5982\u4e0b\uff1a","title":"\u4e3a\u4ec0\u4e48\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\uff1f"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#1","text":"\u5728C++\u4e2d\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u6784\u9020\u8fc7\u7a0b\u662f\u4ece\u57fa\u7c7b\u5f00\u59cb\u7684\uff0c\u5373\uff1a \u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002 \u518d\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002 \u5982\u679c\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u65f6\uff0c\u6d3e\u751f\u7c7b\u7684\u90e8\u5206\u5c1a\u672a\u521d\u59cb\u5316\uff0c\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u4e5f\u672a\u5efa\u7acb\u6216\u672a\u6b63\u786e\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u865a\u51fd\u6570\u8868\u3002 \u8fd9\u4f1a\u5bfc\u81f4\u8c03\u7528\u865a\u51fd\u6570\u65f6\u884c\u4e3a\u672a\u5b9a\u4e49\u3002","title":"1. \u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#2","text":"\u865a\u51fd\u6570\u7684\u76ee\u7684\u662f\u5b9e\u73b0 \u8fd0\u884c\u65f6\u591a\u6001 \uff0c\u5373\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u3002 \u6784\u9020\u51fd\u6570\u7684\u4e3b\u8981\u76ee\u7684\u662f\u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u800c\u5728\u6784\u9020\u51fd\u6570\u6267\u884c\u65f6\uff0c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u5c1a\u672a\u5b8c\u5168\u6784\u9020\u5b8c\u6210\uff0c\u65e0\u6cd5\u5b9e\u73b0\u591a\u6001\u884c\u4e3a\u3002","title":"2. \u865a\u51fd\u6570\u7684\u8bbe\u8ba1\u76ee\u7684"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#3","text":"\u865a\u51fd\u6570\u4f9d\u8d56\u4e8e\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u548c\u865a\u51fd\u6570\u6307\u9488\uff08vptr\uff09\u3002 \u5728\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u6267\u884c\u65f6\uff0c\u865a\u51fd\u6570\u8868\u5c1a\u672a\u5efa\u7acb\u6216\u672a\u6b63\u786e\u521d\u59cb\u5316\uff0c\u56e0\u6b64\u65e0\u6cd5\u652f\u6301\u865a\u51fd\u6570\u8c03\u7528\u3002","title":"3. \u6280\u672f\u9650\u5236"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#4","text":"\u5982\u679c\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u800c\u6b64\u65f6\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u5c1a\u672a\u521d\u59cb\u5316\uff0c\u5bb9\u6613\u5f15\u53d1\u9519\u8bef\u3002","title":"4. \u8bbe\u8ba1\u4e0a\u7684\u4e0d\u5408\u7406\u6027"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#_2","text":"","title":"\u793a\u4f8b\u4ee3\u7801\u8bf4\u660e"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#_3","text":"\u5982\u679c\u5141\u8bb8\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5982\u4e0b\u95ee\u9898\uff1a #include <iostream> using namespace std ; class Base { public : virtual Base () { // \u5047\u8bbe\u6784\u9020\u51fd\u6570\u662f\u865a\u51fd\u6570 cout << \"Base constructor\" << endl ; } }; class Derived : public Base { public : Derived () { cout << \"Derived constructor\" << endl ; } }; int main () { Derived d ; return 0 ; } \u95ee\u9898 \uff1a - \u5728\u8c03\u7528 Base \u7684\u6784\u9020\u51fd\u6570\u65f6\uff0c Derived \u7684\u90e8\u5206\u5c1a\u672a\u521d\u59cb\u5316\uff0c\u8c03\u7528\u865a\u51fd\u6570\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002","title":"\u9519\u8bef\u7684\u5047\u8bbe"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#_4","text":"\u5982\u679c\u9700\u8981\u5728\u6784\u9020\u8fc7\u7a0b\u4e2d\u5b9e\u73b0\u7c7b\u4f3c\u591a\u6001\u7684\u884c\u4e3a\uff0c\u53ef\u4ee5\u4f7f\u7528\u666e\u901a\u7684\u6210\u5458\u51fd\u6570\u6216\u5de5\u5382\u6a21\u5f0f\u3002","title":"\u6b63\u786e\u7684\u8bbe\u8ba1\u65b9\u5f0f"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#_5","text":"#include <iostream> using namespace std ; class Base { public : Base () { init (); // \u8c03\u7528\u666e\u901a\u6210\u5458\u51fd\u6570 } virtual void init () { cout << \"Base init\" << endl ; } }; class Derived : public Base { public : void init () override { cout << \"Derived init\" << endl ; } }; int main () { Derived d ; // \u8f93\u51fa \"Base init\" return 0 ; } \u6ce8\u610f \uff1a - \u5728\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u59cb\u7ec8\u4f1a\u8c03\u7528\u5f53\u524d\u7c7b\u7684\u7248\u672c\uff0c\u800c\u4e0d\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u7248\u672c\u3002","title":"\u4f7f\u7528\u666e\u901a\u6210\u5458\u51fd\u6570"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#_6","text":"\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570\uff0c\u56e0\u4e3a\u5728\u6784\u9020\u51fd\u6570\u6267\u884c\u65f6\uff0c\u865a\u51fd\u6570\u8868\u5c1a\u672a\u6b63\u786e\u521d\u59cb\u5316\uff0c\u65e0\u6cd5\u5b9e\u73b0\u591a\u6001\u3002 \u5982\u679c\u9700\u8981\u7c7b\u4f3c\u7684\u884c\u4e3a\uff0c\u53ef\u4ee5\u901a\u8fc7\u666e\u901a\u6210\u5458\u51fd\u6570\u6216\u5176\u4ed6\u8bbe\u8ba1\u6a21\u5f0f\u5b9e\u73b0\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#_7","text":"\u5728C++\u4e2d\uff0c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u901a\u5e38\u9700\u8981\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\uff0c\u4ee5\u786e\u4fdd\u5728\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u80fd\u591f\u6b63\u786e\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u907f\u514d\u8d44\u6e90\u6cc4\u6f0f\u3002","title":"\u4e3a\u4ec0\u4e48\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u9700\u8981\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\uff1f"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#_8","text":"","title":"\u539f\u56e0\u5206\u6790"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#1_1","text":"\u5f53\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u662f\u865a\u51fd\u6570\u65f6\uff0c\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002 \u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\u53ea\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u800c\u4e0d\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u5bfc\u81f4\u6d3e\u751f\u7c7b\u7684\u8d44\u6e90\u65e0\u6cd5\u6b63\u786e\u91ca\u653e\u3002","title":"1. \u591a\u6001\u884c\u4e3a"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#_9","text":"\u975e\u865a\u6790\u6784\u51fd\u6570\u7684\u9519\u8bef\u884c\u4e3a \uff1a #include <iostream> using namespace std ; class Base { public : ~ Base () { // \u975e\u865a\u6790\u6784\u51fd\u6570 cout << \"Base destructor\" << endl ; } }; class Derived : public Base { public : ~ Derived () { cout << \"Derived destructor\" << endl ; } }; int main () { Base * ptr = new Derived (); delete ptr ; // \u53ea\u8c03\u7528 Base \u7684\u6790\u6784\u51fd\u6570\uff0c\u672a\u8c03\u7528 Derived \u7684\u6790\u6784\u51fd\u6570 return 0 ; } \u8f93\u51fa \uff1a Base destructor \u95ee\u9898 \uff1a - Derived \u7684\u6790\u6784\u51fd\u6570\u672a\u88ab\u8c03\u7528\uff0c\u5bfc\u81f4\u6d3e\u751f\u7c7b\u7684\u8d44\u6e90\u672a\u91ca\u653e\uff0c\u53ef\u80fd\u5f15\u53d1\u8d44\u6e90\u6cc4\u6f0f\u3002","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#2_1","text":"\u5c06\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\uff0c\u53ef\u4ee5\u786e\u4fdd\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u6b63\u786e\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002 \u6b63\u786e\u7684\u5b9e\u73b0 \uff1a #include <iostream> using namespace std ; class Base { public : virtual ~ Base () { // \u865a\u6790\u6784\u51fd\u6570 cout << \"Base destructor\" << endl ; } }; class Derived : public Base { public : ~ Derived () { cout << \"Derived destructor\" << endl ; } }; int main () { Base * ptr = new Derived (); delete ptr ; // \u8c03\u7528 Derived \u548c Base \u7684\u6790\u6784\u51fd\u6570 return 0 ; } \u8f93\u51fa \uff1a Derived destructor Base destructor \u7ed3\u679c \uff1a - \u6d3e\u751f\u7c7b\u548c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u90fd\u88ab\u6b63\u786e\u8c03\u7528\uff0c\u8d44\u6e90\u5f97\u5230\u6b63\u786e\u91ca\u653e\u3002","title":"2. \u865a\u6790\u6784\u51fd\u6570\u7684\u6b63\u786e\u884c\u4e3a"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#3_1","text":"\u5982\u679c\u4e00\u4e2a\u7c7b\u88ab\u8bbe\u8ba1\u4e3a\u57fa\u7c7b\uff08\u5373\u53ef\u80fd\u4f1a\u88ab\u7ee7\u627f\uff09\uff0c\u5176\u6790\u6784\u51fd\u6570\u5e94\u8be5\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\u3002 \u5982\u679c\u4e00\u4e2a\u7c7b\u4e0d\u4f1a\u88ab\u7ee7\u627f\uff0c\u5219\u4e0d\u9700\u8981\u5c06\u6790\u6784\u51fd\u6570\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\u3002","title":"3. \u591a\u6001\u7c7b\u7684\u8bbe\u8ba1\u539f\u5219"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#4_1","text":"\u865a\u6790\u6784\u51fd\u6570\u4f1a\u589e\u52a0\u4e00\u4e9b\u8fd0\u884c\u65f6\u5f00\u9500\uff08\u5982\u865a\u51fd\u6570\u8868\u7684\u7ef4\u62a4\uff09\uff0c\u4f46\u8fd9\u79cd\u5f00\u9500\u901a\u5e38\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u5c24\u5176\u662f\u5728\u9700\u8981\u6b63\u786e\u91ca\u653e\u8d44\u6e90\u7684\u573a\u666f\u4e0b\u3002","title":"4. \u6027\u80fd\u5f00\u9500"},{"location":"C%2B%2B/object_oriented/5%E6%9C%8818/#_10","text":"\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u9700\u8981\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570 \uff0c\u4ee5\u786e\u4fdd\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u5220\u9664\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u80fd\u591f\u6b63\u786e\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002 \u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u53ef\u80fd\u5bfc\u81f4\u6d3e\u751f\u7c7b\u7684\u8d44\u6e90\u672a\u88ab\u91ca\u653e\uff0c\u4ece\u800c\u5f15\u53d1\u8d44\u6e90\u6cc4\u6f0f\u3002 \u8fd9\u662fC++\u4e2d\u591a\u6001\u7c7b\u8bbe\u8ba1\u7684\u91cd\u8981\u539f\u5219\u4e4b\u4e00\u3002","title":"\u603b\u7ed3"},{"location":"Compiler/ch6/","text":"\u8003\u8bd5\u9898\u76ee 1.\u7ffb\u8bd1\u4e0b\u9762\u8bed\u53e5\u4e3a\u4e09\u5730\u5740\u4ee3\u7801\u5e8f\u5217 while a < b do if c < 5 then while x > y do z : = x + 1 ; else x : = y E \u2192 T1 relop T2 E . code := gen ( ' if ' T1 . place relop . op T2 . place ' goto ' E . true ) || gen ( ' goto ' E . false ) T \u2192 id T . place := id . entry T \u2192 num T . place := num . val S \u2192 if E then S1 E . true := newlabel ; else S2 E . false := newlabel ; S1 . next := S2 . next := S . next ; S . code := E . code || gen ( E . true ':' ) || S1 . code || gen ( ' goto ' S . next ) || gen ( E . false ':' ) || S2 . code \u6700\u540e\u7684\u7ed3\u679c: 2.\u5c062+3*(5-1)\u5199\u6210\u9006\u6ce2\u5170\u5f0f \u5c06\u8868\u8fbe\u5f0f 2 + 3 * (5 - 1) \u5199\u6210\u9006\u6ce2\u5170\u8868\u793a\uff08\u540e\u7f00\u8868\u8fbe\u5f0f\uff09\uff1a \u4e2d\u7f00\u8868\u8fbe\u5f0f \uff1a 2 + 3 * (5 - 1) \u9006\u6ce2\u5170\u8868\u793a \uff1a 2 3 5 1 - * + \u8f6c\u6362\u8fc7\u7a0b \uff1a \u62ec\u53f7\u4f18\u5148 \uff1a \u5148\u5904\u7406 (5 - 1) \uff0c\u7ed3\u679c\u4e3a 5 1 - \u3002 \u4e58\u6cd5\u4f18\u5148 \uff1a \u5c06 3 * (5 - 1) \u8f6c\u6362\u4e3a 3 5 1 - * \u3002 \u52a0\u6cd5\u6700\u540e \uff1a \u5c06 2 + (3 * (5 - 1)) \u8f6c\u6362\u4e3a 2 3 5 1 - * + \u3002 \u6c42\u503c\u8fc7\u7a0b\uff08\u4f7f\u7528\u6808\uff09 \uff1a \u626b\u63cf\u5230 2 \uff0c\u538b\u5165\u6808\u3002 \u626b\u63cf\u5230 3 \uff0c\u538b\u5165\u6808\u3002 \u626b\u63cf\u5230 5 \uff0c\u538b\u5165\u6808\u3002 \u626b\u63cf\u5230 1 \uff0c\u538b\u5165\u6808\u3002 \u626b\u63cf\u5230 - \uff0c\u5f39\u51fa 5 \u548c 1 \uff0c\u8ba1\u7b97 5 - 1 = 4 \uff0c\u5c06\u7ed3\u679c 4 \u538b\u5165\u6808\u3002 \u626b\u63cf\u5230 * \uff0c\u5f39\u51fa 3 \u548c 4 \uff0c\u8ba1\u7b97 3 * 4 = 12 \uff0c\u5c06\u7ed3\u679c 12 \u538b\u5165\u6808\u3002 \u626b\u63cf\u5230 + \uff0c\u5f39\u51fa 2 \u548c 12 \uff0c\u8ba1\u7b97 2 + 12 = 14 \uff0c\u5c06\u7ed3\u679c 14 \u538b\u5165\u6808\u3002 \u6700\u7ec8\u7ed3\u679c\u4e3a 14 \u3002 \u9006\u6ce2\u5170\u8868\u793a\uff08Reverse Polish Notation, RPN\uff09\u662f\u4e00\u79cd \u540e\u7f00\u8868\u8fbe\u5f0f \uff0c\u7528\u4e8e\u8868\u793a\u7b97\u672f\u8868\u8fbe\u5f0f\u3002\u5b83\u7684\u7279\u70b9\u662f \u64cd\u4f5c\u7b26\u5728\u64cd\u4f5c\u6570\u7684\u540e\u9762 \uff0c\u4e0d\u9700\u8981\u62ec\u53f7\u6765\u8868\u793a\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\u548c\u7ed3\u5408\u6027\uff0c\u56e0\u6b64\u975e\u5e38\u9002\u5408\u8ba1\u7b97\u673a\u7684\u8868\u8fbe\u5f0f\u6c42\u503c\u3002 3.\u7b80\u5355\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u7ffb\u8bd1 \u8fd9\u4e2a\u662f \u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\uff08Syntax-Directed Translation, SDT\uff09 \u7684\u4e00\u90e8\u5206\uff0c\u7528\u4e8e\u63cf\u8ff0\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u7ffb\u8bd1\u89c4\u5219\u3002\u5b83\u7ed3\u5408\u4e86\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u548c\u8bed\u4e49\u52a8\u4f5c\uff0c\u7528\u4e8e\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 \u5927\u6982\u5c31\u662f\u56fe\u50cf\u91cc\u8fd9\u6837\uff0c\u7ed9\u4f60\u53f3\u4e0a\u89d2\u4e00\u5927\u6bb5\uff0c\u7136\u540e\u6839\u636e\u90a3\u4e2a\u8fdb\u884c\u7ffb\u8bd1 \u9010\u90e8\u5206\u89e3\u91ca 1. \u6587\u6cd5\u89c4\u5219 E \u2192 T1 relop T2 - \u8fd9\u662f\u4e00\u4e2a\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u89c4\u5219\uff0c\u8868\u793a\u5e03\u5c14\u8868\u8fbe\u5f0f E \u7531\u4e24\u4e2a\u64cd\u4f5c\u6570 T1 \u548c T2 \u4ee5\u53ca\u4e00\u4e2a\u5173\u7cfb\u8fd0\u7b97\u7b26 relop \u7ec4\u6210\u3002 - \u793a\u4f8b\uff1a - E \u8868\u793a\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982 a < b \u3002 - T1 \u548c T2 \u662f\u64cd\u4f5c\u6570\uff0c\u4f8b\u5982 a \u548c b \u3002 - relop \u662f\u5173\u7cfb\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982 < \u3001 > \u3001 == \u7b49\u3002 2. \u8bed\u4e49\u52a8\u4f5c E.code := gen('if' T1.place relop.op T2.place 'goto' E.true) || gen('goto' E.false) - E.code \uff1a - \u8868\u793a\u751f\u6210\u7684\u4e2d\u95f4\u4ee3\u7801\uff0c\u7528\u4e8e\u5b9e\u73b0\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u903b\u8f91\u3002 - gen \uff1a - \u662f\u4e00\u4e2a\u4f2a\u51fd\u6570\uff0c\u7528\u4e8e\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 - T1.place \u548c T2.place \uff1a - \u5206\u522b\u8868\u793a T1 \u548c T2 \u7684\u4f4d\u7f6e\uff08\u5982\u53d8\u91cf\u540d\u6216\u5e38\u91cf\u503c\uff09\u3002 - relop.op \uff1a - \u8868\u793a\u5173\u7cfb\u8fd0\u7b97\u7b26\u7684\u5177\u4f53\u64cd\u4f5c\u7b26\uff08\u5982 < \u3001 > \uff09\u3002 - E.true \u548c E.false \uff1a - \u5206\u522b\u8868\u793a\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a\u771f\u6216\u4e3a\u5047\u65f6\u8df3\u8f6c\u7684\u76ee\u6807\u6807\u7b7e\u3002 \u751f\u6210\u7684\u4e2d\u95f4\u4ee3\u7801 \u7b2c\u4e00\u6761\u4e2d\u95f4\u4ee3\u7801\uff1a if T1.place relop.op T2.place goto E.true \u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a\u771f\uff0c\u5219\u8df3\u8f6c\u5230 E.true \u3002 \u7b2c\u4e8c\u6761\u4e2d\u95f4\u4ee3\u7801\uff1a goto E.false \u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a\u5047\uff0c\u5219\u8df3\u8f6c\u5230 E.false \u3002 3. \u64cd\u4f5c\u6570\u7684\u5b9a\u4e49 T \u2192 id T.place := id.entry - T \u2192 id \uff1a - \u8868\u793a\u64cd\u4f5c\u6570 T \u662f\u4e00\u4e2a\u6807\u8bc6\u7b26\uff08\u53d8\u91cf\uff09\u3002 - T.place := id.entry \uff1a - \u8868\u793a T.place \u7684\u503c\u662f\u6807\u8bc6\u7b26\u7684\u7b26\u53f7\u8868\u5165\u53e3\uff08 id.entry \uff09\uff0c\u7528\u4e8e\u83b7\u53d6\u53d8\u91cf\u7684\u5177\u4f53\u4fe1\u606f\uff08\u5982\u53d8\u91cf\u540d\u6216\u5730\u5740\uff09\u3002 T \u2192 num T.place := num.val - T \u2192 num \uff1a - \u8868\u793a\u64cd\u4f5c\u6570 T \u662f\u4e00\u4e2a\u5e38\u91cf\u3002 - T.place := num.val \uff1a - \u8868\u793a T.place \u7684\u503c\u662f\u5e38\u91cf\u7684\u5177\u4f53\u503c\uff08 num.val \uff09\u3002 \u793a\u4f8b \u8f93\u5165\u5e03\u5c14\u8868\u8fbe\u5f0f a < b \u7ffb\u8bd1\u8fc7\u7a0b \u6587\u6cd5\u5339\u914d \uff1a \u6839\u636e\u89c4\u5219 E \u2192 T1 relop T2 \uff0c\u5c06 a < b \u5206\u89e3\u4e3a\uff1a T1 = a relop = < T2 = b \u5c5e\u6027\u8ba1\u7b97 \uff1a T1.place = \"a\" \uff08\u53d8\u91cf a \u7684\u7b26\u53f7\u8868\u5165\u53e3\uff09\u3002 T2.place = \"b\" \uff08\u53d8\u91cf b \u7684\u7b26\u53f7\u8868\u5165\u53e3\uff09\u3002 relop.op = \"<\" \u3002 \u751f\u6210\u4e2d\u95f4\u4ee3\u7801 \uff1a \u6839\u636e\u8bed\u4e49\u52a8\u4f5c\uff1a E.code := gen('if a < b goto E.true') || gen('goto E.false') \u751f\u6210\u7684\u4e2d\u95f4\u4ee3\u7801\u4e3a\uff1a if a < b goto L1 goto L2 \u603b\u7ed3 \u6587\u6cd5\u89c4\u5219 \uff1a\u5b9a\u4e49\u4e86\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u7ed3\u6784\u3002 \u8bed\u4e49\u52a8\u4f5c \uff1a\u5728\u8bed\u6cd5\u5206\u6790\u7684\u540c\u65f6\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 \u751f\u6210\u7684\u4e2d\u95f4\u4ee3\u7801 \uff1a \u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4 if ... goto \u7528\u4e8e\u5904\u7406\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u903b\u8f91\u3002 \u65e0\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4 goto \u7528\u4e8e\u5904\u7406\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a\u5047\u65f6\u7684\u8df3\u8f6c\u3002 \u8fd9\u79cd\u89c4\u5219\u5e7f\u6cdb\u7528\u4e8e\u7f16\u8bd1\u5668\u7684\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u9636\u6bb5\uff0c\u7279\u522b\u662f\u5728\u5904\u7406\u6761\u4ef6\u8bed\u53e5\u548c\u5faa\u73af\u65f6\u3002--- \u603b\u7ed3 \u6587\u6cd5\u89c4\u5219 \uff1a\u5b9a\u4e49\u4e86\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u7ed3\u6784\u3002 \u8bed\u4e49\u52a8\u4f5c \uff1a\u5728\u8bed\u6cd5\u5206\u6790\u7684\u540c\u65f6\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 \u751f\u6210\u7684\u4e2d\u95f4\u4ee3\u7801 \uff1a \u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4 if ... goto \u7528\u4e8e\u5904\u7406\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u903b\u8f91\u3002 \u65e0\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4 goto \u7528\u4e8e\u5904\u7406\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a\u5047\u65f6\u7684\u8df3\u8f6c\u3002 \u8fd9\u79cd\u89c4\u5219\u5e7f\u6cdb\u7528\u4e8e\u7f16\u8bd1\u5668\u7684\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u9636\u6bb5\uff0c\u7279\u522b\u662f\u5728\u5904\u7406\u6761\u4ef6\u8bed\u53e5\u548c\u5faa\u73af\u65f6\u3002 \u9006\u6ce2\u5170\u8868\u793a\u7684\u4f5c\u7528 \u7b80\u5316\u8868\u8fbe\u5f0f\u6c42\u503c \uff1a \u9006\u6ce2\u5170\u8868\u793a\u4e0d\u9700\u8981\u62ec\u53f7\u6765\u8868\u793a\u8fd0\u7b97\u4f18\u5148\u7ea7\uff0c\u8fd0\u7b97\u987a\u5e8f\u7531\u8868\u8fbe\u5f0f\u672c\u8eab\u7684\u987a\u5e8f\u51b3\u5b9a\u3002 \u4f8b\u5982\uff0c\u666e\u901a\u4e2d\u7f00\u8868\u8fbe\u5f0f 3 + 4 * 2 \u5728\u9006\u6ce2\u5170\u8868\u793a\u4e2d\u4e3a 3 4 2 * + \uff0c\u76f4\u63a5\u6309\u7167\u987a\u5e8f\u8ba1\u7b97\u5373\u53ef\u3002 \u65b9\u4fbf\u8ba1\u7b97\u673a\u5904\u7406 \uff1a \u9006\u6ce2\u5170\u8868\u793a\u53ef\u4ee5\u76f4\u63a5\u7528\u6808\uff08Stack\uff09\u6765\u6c42\u503c\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u7b80\u5355\u9ad8\u6548\u3002 \u4f8b\u5982\uff0c\u7f16\u8bd1\u5668\u5728\u751f\u6210\u4ee3\u7801\u65f6\uff0c\u901a\u5e38\u4f1a\u5c06\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u9006\u6ce2\u5170\u8868\u793a\uff0c\u4ee5\u4fbf\u751f\u6210\u66f4\u9ad8\u6548\u7684\u673a\u5668\u4ee3\u7801\u3002 \u7528\u4e8e\u8868\u8fbe\u5f0f\u8f6c\u6362 \uff1a \u7f16\u8bd1\u5668\u5728\u8bed\u6cd5\u5206\u6790\u9636\u6bb5\uff0c\u4f1a\u5c06\u4e2d\u7f00\u8868\u8fbe\u5f0f\uff08\u4eba\u7c7b\u4e60\u60ef\u7684\u8868\u8fbe\u5f0f\uff09\u8f6c\u6362\u4e3a\u9006\u6ce2\u5170\u8868\u793a\uff0c\u4fbf\u4e8e\u540e\u7eed\u7684\u6c42\u503c\u6216\u4ee3\u7801\u751f\u6210\u3002 \u9006\u6ce2\u5170\u8868\u793a\u7684\u7279\u70b9 \u64cd\u4f5c\u7b26\u5728\u64cd\u4f5c\u6570\u4e4b\u540e \uff1a \u4e2d\u7f00\u8868\u8fbe\u5f0f\uff1a A + B \u9006\u6ce2\u5170\u8868\u793a\uff1a A B + \u4e0d\u9700\u8981\u62ec\u53f7 \uff1a \u4e2d\u7f00\u8868\u8fbe\u5f0f\uff1a (A + B) * C \u9006\u6ce2\u5170\u8868\u793a\uff1a A B + C * \u8ba1\u7b97\u987a\u5e8f\u7531\u8868\u8fbe\u5f0f\u672c\u8eab\u51b3\u5b9a \uff1a \u4e2d\u7f00\u8868\u8fbe\u5f0f\uff1a A + B * C \u9006\u6ce2\u5170\u8868\u793a\uff1a A B C * + \u9006\u6ce2\u5170\u8868\u793a\u7684\u6c42\u503c\u65b9\u6cd5 \u4f7f\u7528\u6808\uff08Stack\uff09\u6765\u6c42\u503c\uff1a 1. \u4ece\u5de6\u5230\u53f3\u626b\u63cf\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u3002 2. \u9047\u5230\u64cd\u4f5c\u6570\u65f6\uff0c\u538b\u5165\u6808\u4e2d\u3002 3. \u9047\u5230\u64cd\u4f5c\u7b26\u65f6\uff0c\u4ece\u6808\u4e2d\u5f39\u51fa\u4e24\u4e2a\u64cd\u4f5c\u6570\uff0c\u8fdb\u884c\u8fd0\u7b97\uff0c\u5e76\u5c06\u7ed3\u679c\u538b\u56de\u6808\u4e2d\u3002 4. \u6700\u540e\u6808\u9876\u7684\u503c\u5373\u4e3a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u3002 \u793a\u4f8b \u4e2d\u7f00\u8868\u8fbe\u5f0f \uff1a (3 + 4) * 5 - 6 \u9006\u6ce2\u5170\u8868\u793a \uff1a 3 4 + 5 * 6 - \u6c42\u503c\u8fc7\u7a0b \uff1a \u626b\u63cf\u5230 3 \u548c 4 \uff0c\u538b\u5165\u6808\u4e2d\u3002 \u9047\u5230 + \uff0c\u5f39\u51fa 3 \u548c 4 \uff0c\u8ba1\u7b97 3 + 4 = 7 \uff0c\u5c06 7 \u538b\u5165\u6808\u4e2d\u3002 \u626b\u63cf\u5230 5 \uff0c\u538b\u5165\u6808\u4e2d\u3002 \u9047\u5230 * \uff0c\u5f39\u51fa 7 \u548c 5 \uff0c\u8ba1\u7b97 7 * 5 = 35 \uff0c\u5c06 35 \u538b\u5165\u6808\u4e2d\u3002 \u626b\u63cf\u5230 6 \uff0c\u538b\u5165\u6808\u4e2d\u3002 \u9047\u5230 - \uff0c\u5f39\u51fa 35 \u548c 6 \uff0c\u8ba1\u7b97 35 - 6 = 29 \uff0c\u5c06 29 \u538b\u5165\u6808\u4e2d\u3002 \u6700\u7ec8\u7ed3\u679c\u4e3a 29 \u3002 \u5e94\u7528\u573a\u666f \u7f16\u8bd1\u5668 \uff1a \u7f16\u8bd1\u5668\u5728\u8bed\u6cd5\u5206\u6790\u9636\u6bb5\u4f1a\u5c06\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u9006\u6ce2\u5170\u8868\u793a\uff0c\u4fbf\u4e8e\u751f\u6210\u76ee\u6807\u4ee3\u7801\u3002 \u8ba1\u7b97\u5668 \uff1a \u8bb8\u591a\u8ba1\u7b97\u5668\u5185\u90e8\u4f7f\u7528\u9006\u6ce2\u5170\u8868\u793a\u6765\u5b9e\u73b0\u8868\u8fbe\u5f0f\u6c42\u503c\u3002 \u8868\u8fbe\u5f0f\u6c42\u503c\u5f15\u64ce \uff1a \u7528\u4e8e\u89e3\u6790\u548c\u8ba1\u7b97\u590d\u6742\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u3002 \u603b\u7ed3 \u9006\u6ce2\u5170\u8868\u793a\u662f\u4e00\u79cd\u7b80\u5316\u8868\u8fbe\u5f0f\u6c42\u503c\u7684\u8868\u793a\u6cd5\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7f16\u8bd1\u5668\u3001\u8ba1\u7b97\u5668\u7b49\u9886\u57df\u3002\u5b83\u901a\u8fc7\u5c06\u64cd\u4f5c\u7b26\u653e\u5728\u64cd\u4f5c\u6570\u4e4b\u540e\uff0c\u907f\u514d\u4e86\u62ec\u53f7\u7684\u4f7f\u7528\uff0c\u7b80\u5316\u4e86\u8868\u8fbe\u5f0f\u7684\u89e3\u6790\u548c\u8ba1\u7b97\u8fc7\u7a0b\u3002 \u4e09\u5730\u5740\u4ee3\u7801\uff08Three-Address Code, TAC\uff09 \u4e09\u5730\u5740\u4ee3\u7801\u662f\u4e00\u79cd\u4e2d\u95f4\u4ee3\u7801\u8868\u793a\u5f62\u5f0f\uff0c\u5e7f\u6cdb\u7528\u4e8e\u7f16\u8bd1\u5668\u7684\u4e2d\u95f4\u8868\u793a\u9636\u6bb5\u3002\u5b83\u7684\u7279\u70b9\u662f\u6bcf\u6761\u6307\u4ee4\u6700\u591a\u5305\u542b\u4e09\u4e2a\u64cd\u4f5c\u6570\uff08\u5730\u5740\uff09\uff0c\u901a\u5e38\u8868\u793a\u4e3a\uff1a x = y op z \u5176\u4e2d\uff1a - x \u662f\u76ee\u6807\u53d8\u91cf\u3002 - y \u548c z \u662f\u6e90\u64cd\u4f5c\u6570\u3002 - op \u662f\u64cd\u4f5c\u7b26\uff0c\u53ef\u4ee5\u662f\u7b97\u672f\u8fd0\u7b97\uff08\u5982 + \u3001 - \uff09\u3001\u903b\u8f91\u8fd0\u7b97\uff08\u5982 && \u3001 || \uff09\u3001\u5173\u7cfb\u8fd0\u7b97\uff08\u5982 < \u3001 > \uff09\u7b49\u3002 \u4e09\u5730\u5740\u4ee3\u7801\u7684\u7279\u70b9 \u7b80\u5316\u590d\u6742\u8868\u8fbe\u5f0f \uff1a \u5c06\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u5206\u89e3\u4e3a\u591a\u4e2a\u7b80\u5355\u7684\u4e09\u5730\u5740\u6307\u4ee4\u3002 \u4f8b\u5982\uff0c\u4e2d\u7f00\u8868\u8fbe\u5f0f a + b * c \u4f1a\u88ab\u5206\u89e3\u4e3a\uff1a t1 = b * c t2 = a + t1 \u6613\u4e8e\u7ffb\u8bd1\u4e3a\u673a\u5668\u4ee3\u7801 \uff1a \u4e09\u5730\u5740\u4ee3\u7801\u662f\u4e00\u79cd\u63a5\u8fd1\u673a\u5668\u8bed\u8a00\u7684\u4e2d\u95f4\u8868\u793a\uff0c\u4fbf\u4e8e\u751f\u6210\u76ee\u6807\u4ee3\u7801\u3002 \u4f7f\u7528\u4e34\u65f6\u53d8\u91cf \uff1a \u4e3a\u4e2d\u95f4\u7ed3\u679c\u5206\u914d\u4e34\u65f6\u53d8\u91cf\uff08\u5982 t1 \u3001 t2 \uff09\uff0c\u4ee5\u4fbf\u4e8e\u8868\u8fbe\u5f0f\u7684\u5206\u89e3\u548c\u8ba1\u7b97\u3002 \u4e09\u5730\u5740\u4ee3\u7801\u7684\u5f62\u5f0f \u4e09\u5730\u5740\u4ee3\u7801\u901a\u5e38\u6709\u4ee5\u4e0b\u51e0\u79cd\u5f62\u5f0f\uff1a \u8d4b\u503c\u8bed\u53e5 \uff1a x = y \u793a\u4f8b\uff1a a = b \u7b97\u672f\u8fd0\u7b97 \uff1a x = y op z \u793a\u4f8b\uff1a t1 = b * c \u903b\u8f91\u8fd0\u7b97 \uff1a x = y && z \u793a\u4f8b\uff1a t2 = a && b \u6761\u4ef6\u8df3\u8f6c \uff1a if x goto L \u793a\u4f8b\uff1a if t1 > 0 goto L1 \u65e0\u6761\u4ef6\u8df3\u8f6c \uff1a goto L \u793a\u4f8b\uff1a goto L2 \u51fd\u6570\u8c03\u7528 \uff1a param x call f, n \u793a\u4f8b\uff1a param a param b call add, 2 \u6570\u7ec4\u8bbf\u95ee \uff1a x = y[i] \u793a\u4f8b\uff1a t1 = arr[i] \u6307\u9488\u64cd\u4f5c \uff1a x = *y *x = y \u793a\u4f8b \u8f93\u5165\u8868\u8fbe\u5f0f \uff1a a = b + c * d - e \u5bf9\u5e94\u7684\u4e09\u5730\u5740\u4ee3\u7801 \uff1a t1 = c * d t2 = b + t1 t3 = t2 - e a = t3 \u5e94\u7528\u573a\u666f \u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \uff1a \u7f16\u8bd1\u5668\u5728\u8bed\u6cd5\u5206\u6790\u540e\u4f1a\u751f\u6210\u4e09\u5730\u5740\u4ee3\u7801\uff0c\u4f5c\u4e3a\u76ee\u6807\u4ee3\u7801\u751f\u6210\u7684\u57fa\u7840\u3002 \u4f18\u5316 \uff1a \u4e09\u5730\u5740\u4ee3\u7801\u4fbf\u4e8e\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\uff08\u5982\u5e38\u91cf\u6298\u53e0\u3001\u516c\u5171\u5b50\u8868\u8fbe\u5f0f\u6d88\u9664\u7b49\uff09\u3002 \u76ee\u6807\u4ee3\u7801\u751f\u6210 \uff1a \u4e09\u5730\u5740\u4ee3\u7801\u53ef\u4ee5\u76f4\u63a5\u7ffb\u8bd1\u4e3a\u6c47\u7f16\u4ee3\u7801\u6216\u673a\u5668\u4ee3\u7801\u3002 \u603b\u7ed3 \u4e09\u5730\u5740\u4ee3\u7801\u662f\u4e00\u79cd\u7b80\u6d01\u7684\u4e2d\u95f4\u8868\u793a\u5f62\u5f0f\uff0c\u7528\u4e8e\u5c06\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u5206\u89e3\u4e3a\u7b80\u5355\u7684\u6307\u4ee4\u3002\u5b83\u5728\u7f16\u8bd1\u5668\u4e2d\u8d77\u5230\u627f\u4e0a\u542f\u4e0b\u7684\u4f5c\u7528\uff0c\u65e2\u4fbf\u4e8e\u4ee3\u7801\u4f18\u5316\uff0c\u53c8\u4fbf\u4e8e\u751f\u6210\u76ee\u6807\u4ee3\u7801\u3002--- \u5e94\u7528\u573a\u666f \u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \uff1a \u7f16\u8bd1\u5668\u5728\u8bed\u6cd5\u5206\u6790\u540e\u4f1a\u751f\u6210\u4e09\u5730\u5740\u4ee3\u7801\uff0c\u4f5c\u4e3a\u76ee\u6807\u4ee3\u7801\u751f\u6210\u7684\u57fa\u7840\u3002 \u4f18\u5316 \uff1a \u4e09\u5730\u5740\u4ee3\u7801\u4fbf\u4e8e\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\uff08\u5982\u5e38\u91cf\u6298\u53e0\u3001\u516c\u5171\u5b50\u8868\u8fbe\u5f0f\u6d88\u9664\u7b49\uff09\u3002 \u76ee\u6807\u4ee3\u7801\u751f\u6210 \uff1a \u4e09\u5730\u5740\u4ee3\u7801\u53ef\u4ee5\u76f4\u63a5\u7ffb\u8bd1\u4e3a\u6c47\u7f16\u4ee3\u7801\u6216\u673a\u5668\u4ee3\u7801\u3002 \u603b\u7ed3 \u4e09\u5730\u5740\u4ee3\u7801\u662f\u4e00\u79cd\u7b80\u6d01\u7684\u4e2d\u95f4\u8868\u793a\u5f62\u5f0f\uff0c\u7528\u4e8e\u5c06\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u5206\u89e3\u4e3a\u7b80\u5355\u7684\u6307\u4ee4\u3002\u5b83\u5728\u7f16\u8bd1\u5668\u4e2d\u8d77\u5230\u627f\u4e0a\u542f\u4e0b\u7684\u4f5c\u7528\uff0c\u65e2\u4fbf\u4e8e\u4ee3\u7801\u4f18\u5316\uff0c\u53c8\u4fbf\u4e8e\u751f\u6210\u76ee\u6807\u4ee3\u7801\u3002 \u4e2d\u95f4\u4ee3\u7801\u7684\u62bd\u8c61\u5f62\u5f0f\u662f\u7f16\u8bd1\u5668\u5728\u6e90\u4ee3\u7801\u548c\u76ee\u6807\u4ee3\u7801\u4e4b\u95f4\u751f\u6210\u7684\u4e00\u79cd\u4e2d\u95f4\u8868\u793a\uff0c\u7528\u4e8e\u6865\u63a5\u9ad8\u5c42\u8bed\u8a00\u548c\u5e95\u5c42\u673a\u5668\u8bed\u8a00\u3002\u5b83\u65e2\u4fdd\u7559\u4e86\u6e90\u4ee3\u7801\u7684\u8bed\u4e49\u4fe1\u606f\uff0c\u53c8\u4fbf\u4e8e\u76ee\u6807\u4ee3\u7801\u7684\u751f\u6210\u548c\u4f18\u5316\u3002\u4ee5\u4e0b\u662f\u4e2d\u95f4\u4ee3\u7801\u7684\u5e38\u89c1\u62bd\u8c61\u5f62\u5f0f\uff1a \u4e2d\u95f4\u4ee3\u7801\u7684\u62bd\u8c61\u5f62\u5f0f 1. \u4e09\u5730\u5740\u4ee3\u7801\uff08Three-Address Code, TAC\uff09 \u7279\u70b9 \uff1a \u6bcf\u6761\u6307\u4ee4\u6700\u591a\u5305\u542b\u4e09\u4e2a\u64cd\u4f5c\u6570\uff08\u5730\u5740\uff09\u3002 \u4f7f\u7528\u4e34\u65f6\u53d8\u91cf\u5b58\u50a8\u4e2d\u95f4\u7ed3\u679c\u3002 \u8868\u793a\u5f62\u5f0f\u63a5\u8fd1\u673a\u5668\u8bed\u8a00\uff0c\u4fbf\u4e8e\u751f\u6210\u76ee\u6807\u4ee3\u7801\u3002 \u793a\u4f8b \uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f a = b + c * d \uff0c\u4e09\u5730\u5740\u4ee3\u7801\u4e3a\uff1a t1 = c * d t2 = b + t1 a = t2 2. \u56db\u5143\u5f0f\uff08Quadruple\uff09 \u7279\u70b9 \uff1a \u6bcf\u6761\u6307\u4ee4\u7531\u56db\u4e2a\u5b57\u6bb5\u7ec4\u6210\uff1a (op, arg1, arg2, result) \u3002 op \u662f\u64cd\u4f5c\u7b26\uff0c arg1 \u548c arg2 \u662f\u64cd\u4f5c\u6570\uff0c result \u662f\u7ed3\u679c\u3002 \u9002\u5408\u8868\u793a\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u548c\u63a7\u5236\u6d41\u3002 \u793a\u4f8b \uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f a = b + c * d \uff0c\u56db\u5143\u5f0f\u4e3a\uff1a ( *, c, d, t1 ) ( +, b, t1, t2 ) ( =, t2, -, a ) 3. \u4e09\u5143\u5f0f\uff08Triple\uff09 \u7279\u70b9 \uff1a \u6bcf\u6761\u6307\u4ee4\u7531\u4e09\u4e2a\u5b57\u6bb5\u7ec4\u6210\uff1a (op, arg1, arg2) \u3002 \u7ed3\u679c\u9690\u5f0f\u8868\u793a\u4e3a\u6307\u4ee4\u7684\u7f16\u53f7\uff0c\u51cf\u5c11\u4e86\u663e\u5f0f\u7ed3\u679c\u5b57\u6bb5\u3002 \u66f4\u7d27\u51d1\uff0c\u4f46\u4e0d\u4fbf\u4e8e\u4f18\u5316\u3002 \u793a\u4f8b \uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f a = b + c * d \uff0c\u4e09\u5143\u5f0f\u4e3a\uff1a ( *, c, d ) // \u7f16\u53f7 0 ( +, b, (0) ) // \u7f16\u53f7 1 ( =, (1), a ) // \u7f16\u53f7 2 4. \u62bd\u8c61\u8bed\u6cd5\u6811\uff08Abstract Syntax Tree, AST\uff09 \u7279\u70b9 \uff1a \u4f7f\u7528\u6811\u5f62\u7ed3\u6784\u8868\u793a\u8868\u8fbe\u5f0f\u6216\u7a0b\u5e8f\u7684\u8bed\u6cd5\u7ed3\u6784\u3002 \u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u64cd\u4f5c\u7b26\u6216\u64cd\u4f5c\u6570\u3002 \u9002\u5408\u8bed\u6cd5\u5206\u6790\u548c\u4ee3\u7801\u4f18\u5316\u3002 \u793a\u4f8b \uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f a = b + c * d \uff0c\u62bd\u8c61\u8bed\u6cd5\u6811\u4e3a\uff1a = / \\ a + / \\ b * / \\ c d 5. \u540e\u7f00\u8868\u8fbe\u5f0f\uff08\u9006\u6ce2\u5170\u8868\u793a\uff0cRPN\uff09 \u7279\u70b9 \uff1a \u64cd\u4f5c\u7b26\u5728\u64cd\u4f5c\u6570\u4e4b\u540e\uff0c\u4e0d\u9700\u8981\u62ec\u53f7\u8868\u793a\u4f18\u5148\u7ea7\u3002 \u9002\u5408\u7528\u6808\u8fdb\u884c\u6c42\u503c\u3002 \u793a\u4f8b \uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f a = b + c * d \uff0c\u540e\u7f00\u8868\u8fbe\u5f0f\u4e3a\uff1a b c d * + a = 6. \u9759\u6001\u5355\u8d4b\u503c\u5f62\u5f0f\uff08Static Single Assignment, SSA\uff09 \u7279\u70b9 \uff1a \u6bcf\u4e2a\u53d8\u91cf\u5728\u7a0b\u5e8f\u4e2d\u53ea\u8d4b\u503c\u4e00\u6b21\u3002 \u901a\u8fc7\u5f15\u5165\u7248\u672c\u53f7\uff08\u5982 x1 , x2 \uff09\u533a\u5206\u53d8\u91cf\u7684\u4e0d\u540c\u8d4b\u503c\u3002 \u4fbf\u4e8e\u6570\u636e\u6d41\u5206\u6790\u548c\u4f18\u5316\u3002 \u793a\u4f8b \uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f\uff1a x = a + b x = x * c \u8f6c\u6362\u4e3a SSA \u5f62\u5f0f\uff1a x1 = a + b x2 = x1 * c \u5bf9\u6bd4 \u5f62\u5f0f \u7279\u70b9 \u9002\u7528\u573a\u666f \u4e09\u5730\u5740\u4ee3\u7801 \u7b80\u6d01\u76f4\u89c2\uff0c\u4fbf\u4e8e\u7ffb\u8bd1\u4e3a\u76ee\u6807\u4ee3\u7801\u3002 \u8868\u8fbe\u5f0f\u6c42\u503c\u3001\u76ee\u6807\u4ee3\u7801\u751f\u6210\u3002 \u56db\u5143\u5f0f \u663e\u5f0f\u8bb0\u5f55\u7ed3\u679c\uff0c\u4fbf\u4e8e\u4f18\u5316\u548c\u63a7\u5236\u6d41\u8868\u793a\u3002 \u590d\u6742\u8868\u8fbe\u5f0f\u548c\u63a7\u5236\u6d41\u7684\u8868\u793a\u3002 \u4e09\u5143\u5f0f \u7ed3\u679c\u9690\u5f0f\u8868\u793a\uff0c\u7d27\u51d1\u4f46\u4e0d\u4fbf\u4e8e\u4f18\u5316\u3002 \u7b80\u5355\u8868\u8fbe\u5f0f\u7684\u8868\u793a\u3002 \u62bd\u8c61\u8bed\u6cd5\u6811 \u7ed3\u6784\u5316\u8868\u793a\u8bed\u6cd5\uff0c\u4fbf\u4e8e\u8bed\u6cd5\u5206\u6790\u548c\u4f18\u5316\u3002 \u8bed\u6cd5\u5206\u6790\u3001\u4ee3\u7801\u4f18\u5316\u3002 \u540e\u7f00\u8868\u8fbe\u5f0f \u65e0\u9700\u62ec\u53f7\uff0c\u9002\u5408\u6808\u5f0f\u6c42\u503c\u3002 \u8868\u8fbe\u5f0f\u6c42\u503c\u3002 SSA \u6bcf\u4e2a\u53d8\u91cf\u53ea\u8d4b\u503c\u4e00\u6b21\uff0c\u4fbf\u4e8e\u6570\u636e\u6d41\u5206\u6790\u548c\u4f18\u5316\u3002 \u9ad8\u7ea7\u4f18\u5316\uff08\u5982\u5bc4\u5b58\u5668\u5206\u914d\uff09\u3002 \u603b\u7ed3 \u4e2d\u95f4\u4ee3\u7801\u7684\u62bd\u8c61\u5f62\u5f0f\u591a\u79cd\u591a\u6837\uff0c\u5177\u4f53\u9009\u62e9\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\u7684\u8bbe\u8ba1\u76ee\u6807\u548c\u4f18\u5316\u9700\u6c42\u3002\u5e38\u89c1\u7684\u5f62\u5f0f\u5982\u4e09\u5730\u5740\u4ee3\u7801\u3001\u56db\u5143\u5f0f\u548c\u62bd\u8c61\u8bed\u6cd5\u6811\uff0c\u65e2\u4fbf\u4e8e\u8868\u8fbe\u7a0b\u5e8f\u903b\u8f91\uff0c\u53c8\u4fbf\u4e8e\u751f\u6210\u76ee\u6807\u4ee3\u7801\u548c\u8fdb\u884c\u4f18\u5316\u3002 \u5982\u4f55\u5c06c\u8bed\u8a00\u7ffb\u8bd1\u6210\u4e2d\u95f4\u4ee3\u7801 \u5982\u4f55\u5c06 C \u8bed\u8a00\u7ffb\u8bd1\u6210\u4e2d\u95f4\u4ee3\u7801 \u5c06 C \u8bed\u8a00\u7ffb\u8bd1\u6210\u4e2d\u95f4\u4ee3\u7801\u7684\u8fc7\u7a0b\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a 1. \u8bcd\u6cd5\u5206\u6790 \u5c06 C \u8bed\u8a00\u6e90\u4ee3\u7801\u5206\u89e3\u4e3a \u6807\u8bb0\uff08Token\uff09 \uff0c\u5982\u5173\u952e\u5b57\u3001\u6807\u8bc6\u7b26\u3001\u64cd\u4f5c\u7b26\u7b49\u3002 \u793a\u4f8b\uff1a a = b + c * d ; \u8bcd\u6cd5\u5206\u6790\u7ed3\u679c\uff1a \u6807\u8bc6\u7b26\uff1aa \u8d4b\u503c\u64cd\u4f5c\u7b26\uff1a= \u6807\u8bc6\u7b26\uff1ab \u52a0\u6cd5\u64cd\u4f5c\u7b26\uff1a+ \u6807\u8bc6\u7b26\uff1ac \u4e58\u6cd5\u64cd\u4f5c\u7b26\uff1a* \u6807\u8bc6\u7b26\uff1ad \u5206\u53f7\uff1a; 2. \u8bed\u6cd5\u5206\u6790 \u6839\u636e\u8bed\u6cd5\u89c4\u5219\uff0c\u5c06\u6807\u8bb0\u5e8f\u5217\u89e3\u6790\u4e3a \u8bed\u6cd5\u6811 \u6216 \u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09 \u3002 \u793a\u4f8b\uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f a = b + c * d \uff0c\u8bed\u6cd5\u6811\u4e3a\uff1a = / \\ a + / \\ b * / \\ c d 3. \u8bed\u4e49\u5206\u6790 \u68c0\u67e5\u8bed\u6cd5\u6811\u7684\u8bed\u4e49\u662f\u5426\u6b63\u786e\uff0c\u4f8b\u5982\u53d8\u91cf\u662f\u5426\u5df2\u58f0\u660e\u3001\u7c7b\u578b\u662f\u5426\u5339\u914d\u7b49\u3002 \u793a\u4f8b\uff1a \u68c0\u67e5\u53d8\u91cf a \u3001 b \u3001 c \u548c d \u662f\u5426\u5df2\u58f0\u660e\u3002 \u68c0\u67e5 b \u3001 c \u548c d \u7684\u7c7b\u578b\u662f\u5426\u652f\u6301\u52a0\u6cd5\u548c\u4e58\u6cd5\u64cd\u4f5c\u3002 4. \u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \u5c06\u8bed\u6cd5\u6811\u8f6c\u6362\u4e3a\u4e2d\u95f4\u4ee3\u7801\uff08\u5982\u4e09\u5730\u5740\u4ee3\u7801\u3001\u56db\u5143\u5f0f\u7b49\uff09\u3002 \u793a\u4f8b\uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f a = b + c * d \uff0c\u751f\u6210\u7684\u4e09\u5730\u5740\u4ee3\u7801\u4e3a\uff1a t1 = c * d t2 = b + t1 a = t2 \u5b8c\u6574\u793a\u4f8b C \u8bed\u8a00\u4ee3\u7801 int a , b , c , d ; a = b + c * d ; \u7ffb\u8bd1\u8fc7\u7a0b \u8bcd\u6cd5\u5206\u6790 \u6807\u8bb0\u5e8f\u5217\uff1a int, a, ,, b, ,, c, ,, d, ;, a, =, b, +, c, *, d, ; \u8bed\u6cd5\u5206\u6790 \u751f\u6210\u8bed\u6cd5\u6811\uff1a = / \\ a + / \\ b * / \\ c d \u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \u4e09\u5730\u5740\u4ee3\u7801\uff1a t1 = c * d t2 = b + t1 a = t2 \u56db\u5143\u5f0f\uff1a ( *, c, d, t1 ) ( +, b, t1, t2 ) ( =, t2, -, a ) \u4e09\u5143\u5f0f\uff1a ( *, c, d ) // \u7f16\u53f7 0 ( +, b, (0) ) // \u7f16\u53f7 1 ( =, (1), a ) // \u7f16\u53f7 2 \u4e2d\u95f4\u4ee3\u7801\u7684\u4f5c\u7528 \u6865\u63a5\u9ad8\u5c42\u8bed\u8a00\u548c\u5e95\u5c42\u673a\u5668\u8bed\u8a00 \uff1a \u4e2d\u95f4\u4ee3\u7801\u662f\u7f16\u8bd1\u5668\u751f\u6210\u76ee\u6807\u4ee3\u7801\u7684\u4e2d\u95f4\u6b65\u9aa4\uff0c\u4fbf\u4e8e\u8de8\u5e73\u53f0\u5b9e\u73b0\u3002 \u4fbf\u4e8e\u4f18\u5316 \uff1a \u4e2d\u95f4\u4ee3\u7801\u53ef\u4ee5\u8fdb\u884c\u5e38\u91cf\u6298\u53e0\u3001\u516c\u5171\u5b50\u8868\u8fbe\u5f0f\u6d88\u9664\u7b49\u4f18\u5316\u3002 \u7b80\u5316\u76ee\u6807\u4ee3\u7801\u751f\u6210 \uff1a \u4e2d\u95f4\u4ee3\u7801\u63a5\u8fd1\u673a\u5668\u8bed\u8a00\uff0c\u4fbf\u4e8e\u7ffb\u8bd1\u4e3a\u6c47\u7f16\u4ee3\u7801\u6216\u673a\u5668\u4ee3\u7801\u3002 \u603b\u7ed3 \u5c06 C \u8bed\u8a00\u7ffb\u8bd1\u6210\u4e2d\u95f4\u4ee3\u7801\u7684\u8fc7\u7a0b\u5305\u62ec\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u548c\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u3002\u901a\u8fc7\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\uff08\u5982\u4e09\u5730\u5740\u4ee3\u7801\u3001\u56db\u5143\u5f0f\u7b49\uff09\uff0c\u53ef\u4ee5\u7b80\u5316\u76ee\u6807\u4ee3\u7801\u7684\u751f\u6210\u8fc7\u7a0b\uff0c\u5e76\u4fbf\u4e8e\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\u3002--- \u4e2d\u95f4\u4ee3\u7801\u7684\u4f5c\u7528 \u6865\u63a5\u9ad8\u5c42\u8bed\u8a00\u548c\u5e95\u5c42\u673a\u5668\u8bed\u8a00 \uff1a \u4e2d\u95f4\u4ee3\u7801\u662f\u7f16\u8bd1\u5668\u751f\u6210\u76ee\u6807\u4ee3\u7801\u7684\u4e2d\u95f4\u6b65\u9aa4\uff0c\u4fbf\u4e8e\u8de8\u5e73\u53f0\u5b9e\u73b0\u3002 \u4fbf\u4e8e\u4f18\u5316 \uff1a \u4e2d\u95f4\u4ee3\u7801\u53ef\u4ee5\u8fdb\u884c\u5e38\u91cf\u6298\u53e0\u3001\u516c\u5171\u5b50\u8868\u8fbe\u5f0f\u6d88\u9664\u7b49\u4f18\u5316\u3002 \u7b80\u5316\u76ee\u6807\u4ee3\u7801\u751f\u6210 \uff1a \u4e2d\u95f4\u4ee3\u7801\u63a5\u8fd1\u673a\u5668\u8bed\u8a00\uff0c\u4fbf\u4e8e\u7ffb\u8bd1\u4e3a\u6c47\u7f16\u4ee3\u7801\u6216\u673a\u5668\u4ee3\u7801\u3002 \u603b\u7ed3 \u5c06 C \u8bed\u8a00\u7ffb\u8bd1\u6210\u4e2d\u95f4\u4ee3\u7801\u7684\u8fc7\u7a0b\u5305\u62ec\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u548c\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u3002\u901a\u8fc7\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\uff08\u5982\u4e09\u5730\u5740\u4ee3\u7801\u3001\u56db\u5143\u5f0f\u7b49\uff09\uff0c\u53ef\u4ee5\u7b80\u5316\u76ee\u6807\u4ee3\u7801\u7684\u751f\u6210\u8fc7\u7a0b\uff0c\u5e76\u4fbf\u4e8e\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\u3002 \u4ec0\u4e48\u662f\u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1 \u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\uff08Syntax-Directed Translation, SDT\uff09 \u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\u662f\u4e00\u79cd\u57fa\u4e8e\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u7684\u7ffb\u8bd1\u65b9\u6cd5\uff0c\u5b83\u5c06\u8bed\u6cd5\u5206\u6790\u4e0e\u8bed\u4e49\u5904\u7406\u76f8\u7ed3\u5408\uff0c\u901a\u8fc7\u5728\u6587\u6cd5\u89c4\u5219\u4e2d\u9644\u52a0 \u8bed\u4e49\u52a8\u4f5c \u6765\u5b8c\u6210\u6e90\u8bed\u8a00\u5230\u76ee\u6807\u8bed\u8a00\u7684\u7ffb\u8bd1\u3002 \u6838\u5fc3\u601d\u60f3 \u8bed\u6cd5\u89c4\u5219 \uff1a \u4f7f\u7528\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\uff08CFG\uff09\u5b9a\u4e49\u8bed\u8a00\u7684\u8bed\u6cd5\u7ed3\u6784\u3002 \u4f8b\u5982\uff0c\u8868\u8fbe\u5f0f\u7684\u6587\u6cd5\u89c4\u5219\uff1a E \u2192 E + T E \u2192 T T \u2192 T * F T \u2192 F F \u2192 (E) F \u2192 id \u8bed\u4e49\u52a8\u4f5c \uff1a \u5728\u6587\u6cd5\u89c4\u5219\u4e2d\u9644\u52a0\u8bed\u4e49\u52a8\u4f5c\uff0c\u7528\u4e8e\u8ba1\u7b97\u5c5e\u6027\u503c\u6216\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 \u4f8b\u5982\uff1a E \u2192 E1 + T { E.val = E1.val + T.val } \u5c5e\u6027\u503c \uff1a \u6bcf\u4e2a\u8bed\u6cd5\u7b26\u53f7\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u5c5e\u6027\uff0c\u7528\u4e8e\u5b58\u50a8\u8bed\u4e49\u4fe1\u606f\u3002 \u5c5e\u6027\u5206\u4e3a\u4e24\u7c7b\uff1a \u7efc\u5408\u5c5e\u6027\uff08Synthesized Attribute\uff09 \uff1a\u4ece\u5b50\u8282\u70b9\u4f20\u9012\u5230\u7236\u8282\u70b9\u3002 \u7ee7\u627f\u5c5e\u6027\uff08Inherited Attribute\uff09 \uff1a\u4ece\u7236\u8282\u70b9\u6216\u5144\u5f1f\u8282\u70b9\u4f20\u9012\u5230\u5f53\u524d\u8282\u70b9\u3002 \u8bed\u6cd5\u5236\u5bfc\u5b9a\u4e49\uff08Syntax-Directed Definition, SDD\uff09 \u8bed\u6cd5\u5236\u5bfc\u5b9a\u4e49\u662f\u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\u7684\u5f62\u5f0f\u5316\u8868\u793a\uff0c\u7531 \u6587\u6cd5\u89c4\u5219 \u548c \u8bed\u4e49\u89c4\u5219 \u7ec4\u6210\uff1a - \u6587\u6cd5\u89c4\u5219 \uff1a\u5b9a\u4e49\u8bed\u6cd5\u7ed3\u6784\u3002 - \u8bed\u4e49\u89c4\u5219 \uff1a\u5b9a\u4e49\u5982\u4f55\u8ba1\u7b97\u5c5e\u6027\u503c\u6216\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 \u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\u7684\u5b9e\u73b0\u65b9\u5f0f \u57fa\u4e8e\u8bed\u6cd5\u6811 \uff1a \u5148\u6784\u9020\u8bed\u6cd5\u6811\uff0c\u518d\u901a\u8fc7\u904d\u5386\u8bed\u6cd5\u6811\u8ba1\u7b97\u5c5e\u6027\u503c\u6216\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 \u793a\u4f8b\uff1a E \u2192 E1 + T { E.val = E1.val + T.val } \u57fa\u4e8e\u81ea\u9876\u5411\u4e0b\u6216\u81ea\u5e95\u5411\u4e0a\u7684\u8bed\u6cd5\u5206\u6790 \uff1a \u5728\u8bed\u6cd5\u5206\u6790\u7684\u540c\u65f6\u6267\u884c\u8bed\u4e49\u52a8\u4f5c\u3002 \u793a\u4f8b\uff1a E \u2192 E1 + T { print(\"+\") } \u793a\u4f8b\uff1a\u8868\u8fbe\u5f0f\u6c42\u503c \u6587\u6cd5\u89c4\u5219 E \u2192 E + T E \u2192 T T \u2192 T * F T \u2192 F F \u2192 (E) F \u2192 id \u8bed\u4e49\u89c4\u5219 E \u2192 E1 + T { E.val = E1.val + T.val } E \u2192 T { E.val = T.val } T \u2192 T1 * F { T.val = T1.val * F.val } T \u2192 F { T.val = F.val } F \u2192 (E) { F.val = E.val } F \u2192 id { F.val = id.lexval } \u8f93\u5165 id1 = 2, id2 = 3, id3 = 4 \u8868\u8fbe\u5f0f\uff1aid1 + id2 * id3 \u7ffb\u8bd1\u8fc7\u7a0b \u6784\u9020\u8bed\u6cd5\u6811\uff1a E / | \\ E + T | | id1 T | T * F | | id2 id3 \u8ba1\u7b97\u5c5e\u6027\u503c\uff1a id1.val = 2 id2.val = 3 id3.val = 4 T.val = id2.val * id3.val = 3 * 4 = 12 E.val = id1.val + T.val = 2 + 12 = 14 \u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\u7684\u5e94\u7528 \u8868\u8fbe\u5f0f\u6c42\u503c \uff1a \u8ba1\u7b97\u8868\u8fbe\u5f0f\u7684\u503c\u3002 \u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \uff1a \u751f\u6210\u4e09\u5730\u5740\u4ee3\u7801\u6216\u5176\u4ed6\u4e2d\u95f4\u8868\u793a\u3002 \u7c7b\u578b\u68c0\u67e5 \uff1a \u68c0\u67e5\u53d8\u91cf\u548c\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u662f\u5426\u5339\u914d\u3002 \u76ee\u6807\u4ee3\u7801\u751f\u6210 \uff1a \u76f4\u63a5\u751f\u6210\u6c47\u7f16\u4ee3\u7801\u6216\u673a\u5668\u4ee3\u7801\u3002 \u603b\u7ed3 \u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\u901a\u8fc7\u5728\u6587\u6cd5\u89c4\u5219\u4e2d\u9644\u52a0\u8bed\u4e49\u52a8\u4f5c\uff0c\u5c06\u8bed\u6cd5\u5206\u6790\u4e0e\u8bed\u4e49\u5904\u7406\u7ed3\u5408\u8d77\u6765\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7f16\u8bd1\u5668\u7684\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u3001\u7c7b\u578b\u68c0\u67e5\u548c\u76ee\u6807\u4ee3\u7801\u751f\u6210\u7b49\u9636\u6bb5\u30022. \u8ba1\u7b97\u5c5e\u6027\u503c\uff1a - id1.val = 2 - id2.val = 3 - id3.val = 4 - T.val = id2.val * id3.val = 3 * 4 = 12 - E.val = id1.val + T.val = 2 + 12 = 14 \u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\u7684\u5e94\u7528 \u8868\u8fbe\u5f0f\u6c42\u503c \uff1a \u8ba1\u7b97\u8868\u8fbe\u5f0f\u7684\u503c\u3002 \u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \uff1a \u751f\u6210\u4e09\u5730\u5740\u4ee3\u7801\u6216\u5176\u4ed6\u4e2d\u95f4\u8868\u793a\u3002 \u7c7b\u578b\u68c0\u67e5 \uff1a \u68c0\u67e5\u53d8\u91cf\u548c\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u662f\u5426\u5339\u914d\u3002 \u76ee\u6807\u4ee3\u7801\u751f\u6210 \uff1a \u76f4\u63a5\u751f\u6210\u6c47\u7f16\u4ee3\u7801\u6216\u673a\u5668\u4ee3\u7801\u3002 \u603b\u7ed3 \u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\u901a\u8fc7\u5728\u6587\u6cd5\u89c4\u5219\u4e2d\u9644\u52a0\u8bed\u4e49\u52a8\u4f5c\uff0c\u5c06\u8bed\u6cd5\u5206\u6790\u4e0e\u8bed\u4e49\u5904\u7406\u7ed3\u5408\u8d77\u6765\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7f16\u8bd1\u5668\u7684\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u3001\u7c7b\u578b\u68c0\u67e5\u548c\u76ee\u6807\u4ee3\u7801\u751f\u6210\u7b49\u9636\u6bb5\u3002","title":"ch6\u4e2d\u95f4\u4ee3\u7801\u751f\u6210"},{"location":"Compiler/ch6/#_1","text":"","title":"\u8003\u8bd5\u9898\u76ee"},{"location":"Compiler/ch6/#1","text":"while a < b do if c < 5 then while x > y do z : = x + 1 ; else x : = y E \u2192 T1 relop T2 E . code := gen ( ' if ' T1 . place relop . op T2 . place ' goto ' E . true ) || gen ( ' goto ' E . false ) T \u2192 id T . place := id . entry T \u2192 num T . place := num . val S \u2192 if E then S1 E . true := newlabel ; else S2 E . false := newlabel ; S1 . next := S2 . next := S . next ; S . code := E . code || gen ( E . true ':' ) || S1 . code || gen ( ' goto ' S . next ) || gen ( E . false ':' ) || S2 . code \u6700\u540e\u7684\u7ed3\u679c:","title":"1.\u7ffb\u8bd1\u4e0b\u9762\u8bed\u53e5\u4e3a\u4e09\u5730\u5740\u4ee3\u7801\u5e8f\u5217"},{"location":"Compiler/ch6/#2235-1","text":"\u5c06\u8868\u8fbe\u5f0f 2 + 3 * (5 - 1) \u5199\u6210\u9006\u6ce2\u5170\u8868\u793a\uff08\u540e\u7f00\u8868\u8fbe\u5f0f\uff09\uff1a","title":"2.\u5c062+3*(5-1)\u5199\u6210\u9006\u6ce2\u5170\u5f0f"},{"location":"Compiler/ch6/#_2","text":"2 + 3 * (5 - 1)","title":"\u4e2d\u7f00\u8868\u8fbe\u5f0f\uff1a"},{"location":"Compiler/ch6/#_3","text":"2 3 5 1 - * +","title":"\u9006\u6ce2\u5170\u8868\u793a\uff1a"},{"location":"Compiler/ch6/#_4","text":"\u62ec\u53f7\u4f18\u5148 \uff1a \u5148\u5904\u7406 (5 - 1) \uff0c\u7ed3\u679c\u4e3a 5 1 - \u3002 \u4e58\u6cd5\u4f18\u5148 \uff1a \u5c06 3 * (5 - 1) \u8f6c\u6362\u4e3a 3 5 1 - * \u3002 \u52a0\u6cd5\u6700\u540e \uff1a \u5c06 2 + (3 * (5 - 1)) \u8f6c\u6362\u4e3a 2 3 5 1 - * + \u3002","title":"\u8f6c\u6362\u8fc7\u7a0b\uff1a"},{"location":"Compiler/ch6/#_5","text":"\u626b\u63cf\u5230 2 \uff0c\u538b\u5165\u6808\u3002 \u626b\u63cf\u5230 3 \uff0c\u538b\u5165\u6808\u3002 \u626b\u63cf\u5230 5 \uff0c\u538b\u5165\u6808\u3002 \u626b\u63cf\u5230 1 \uff0c\u538b\u5165\u6808\u3002 \u626b\u63cf\u5230 - \uff0c\u5f39\u51fa 5 \u548c 1 \uff0c\u8ba1\u7b97 5 - 1 = 4 \uff0c\u5c06\u7ed3\u679c 4 \u538b\u5165\u6808\u3002 \u626b\u63cf\u5230 * \uff0c\u5f39\u51fa 3 \u548c 4 \uff0c\u8ba1\u7b97 3 * 4 = 12 \uff0c\u5c06\u7ed3\u679c 12 \u538b\u5165\u6808\u3002 \u626b\u63cf\u5230 + \uff0c\u5f39\u51fa 2 \u548c 12 \uff0c\u8ba1\u7b97 2 + 12 = 14 \uff0c\u5c06\u7ed3\u679c 14 \u538b\u5165\u6808\u3002 \u6700\u7ec8\u7ed3\u679c\u4e3a 14 \u3002 \u9006\u6ce2\u5170\u8868\u793a\uff08Reverse Polish Notation, RPN\uff09\u662f\u4e00\u79cd \u540e\u7f00\u8868\u8fbe\u5f0f \uff0c\u7528\u4e8e\u8868\u793a\u7b97\u672f\u8868\u8fbe\u5f0f\u3002\u5b83\u7684\u7279\u70b9\u662f \u64cd\u4f5c\u7b26\u5728\u64cd\u4f5c\u6570\u7684\u540e\u9762 \uff0c\u4e0d\u9700\u8981\u62ec\u53f7\u6765\u8868\u793a\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\u548c\u7ed3\u5408\u6027\uff0c\u56e0\u6b64\u975e\u5e38\u9002\u5408\u8ba1\u7b97\u673a\u7684\u8868\u8fbe\u5f0f\u6c42\u503c\u3002","title":"\u6c42\u503c\u8fc7\u7a0b\uff08\u4f7f\u7528\u6808\uff09\uff1a"},{"location":"Compiler/ch6/#3","text":"\u8fd9\u4e2a\u662f \u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\uff08Syntax-Directed Translation, SDT\uff09 \u7684\u4e00\u90e8\u5206\uff0c\u7528\u4e8e\u63cf\u8ff0\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u7ffb\u8bd1\u89c4\u5219\u3002\u5b83\u7ed3\u5408\u4e86\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u548c\u8bed\u4e49\u52a8\u4f5c\uff0c\u7528\u4e8e\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 \u5927\u6982\u5c31\u662f\u56fe\u50cf\u91cc\u8fd9\u6837\uff0c\u7ed9\u4f60\u53f3\u4e0a\u89d2\u4e00\u5927\u6bb5\uff0c\u7136\u540e\u6839\u636e\u90a3\u4e2a\u8fdb\u884c\u7ffb\u8bd1","title":"3.\u7b80\u5355\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u7ffb\u8bd1"},{"location":"Compiler/ch6/#_6","text":"","title":"\u9010\u90e8\u5206\u89e3\u91ca"},{"location":"Compiler/ch6/#1_1","text":"E \u2192 T1 relop T2 - \u8fd9\u662f\u4e00\u4e2a\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u89c4\u5219\uff0c\u8868\u793a\u5e03\u5c14\u8868\u8fbe\u5f0f E \u7531\u4e24\u4e2a\u64cd\u4f5c\u6570 T1 \u548c T2 \u4ee5\u53ca\u4e00\u4e2a\u5173\u7cfb\u8fd0\u7b97\u7b26 relop \u7ec4\u6210\u3002 - \u793a\u4f8b\uff1a - E \u8868\u793a\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982 a < b \u3002 - T1 \u548c T2 \u662f\u64cd\u4f5c\u6570\uff0c\u4f8b\u5982 a \u548c b \u3002 - relop \u662f\u5173\u7cfb\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982 < \u3001 > \u3001 == \u7b49\u3002","title":"1. \u6587\u6cd5\u89c4\u5219"},{"location":"Compiler/ch6/#2","text":"E.code := gen('if' T1.place relop.op T2.place 'goto' E.true) || gen('goto' E.false) - E.code \uff1a - \u8868\u793a\u751f\u6210\u7684\u4e2d\u95f4\u4ee3\u7801\uff0c\u7528\u4e8e\u5b9e\u73b0\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u903b\u8f91\u3002 - gen \uff1a - \u662f\u4e00\u4e2a\u4f2a\u51fd\u6570\uff0c\u7528\u4e8e\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 - T1.place \u548c T2.place \uff1a - \u5206\u522b\u8868\u793a T1 \u548c T2 \u7684\u4f4d\u7f6e\uff08\u5982\u53d8\u91cf\u540d\u6216\u5e38\u91cf\u503c\uff09\u3002 - relop.op \uff1a - \u8868\u793a\u5173\u7cfb\u8fd0\u7b97\u7b26\u7684\u5177\u4f53\u64cd\u4f5c\u7b26\uff08\u5982 < \u3001 > \uff09\u3002 - E.true \u548c E.false \uff1a - \u5206\u522b\u8868\u793a\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a\u771f\u6216\u4e3a\u5047\u65f6\u8df3\u8f6c\u7684\u76ee\u6807\u6807\u7b7e\u3002","title":"2. \u8bed\u4e49\u52a8\u4f5c"},{"location":"Compiler/ch6/#_7","text":"\u7b2c\u4e00\u6761\u4e2d\u95f4\u4ee3\u7801\uff1a if T1.place relop.op T2.place goto E.true \u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a\u771f\uff0c\u5219\u8df3\u8f6c\u5230 E.true \u3002 \u7b2c\u4e8c\u6761\u4e2d\u95f4\u4ee3\u7801\uff1a goto E.false \u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a\u5047\uff0c\u5219\u8df3\u8f6c\u5230 E.false \u3002","title":"\u751f\u6210\u7684\u4e2d\u95f4\u4ee3\u7801"},{"location":"Compiler/ch6/#3_1","text":"T \u2192 id T.place := id.entry - T \u2192 id \uff1a - \u8868\u793a\u64cd\u4f5c\u6570 T \u662f\u4e00\u4e2a\u6807\u8bc6\u7b26\uff08\u53d8\u91cf\uff09\u3002 - T.place := id.entry \uff1a - \u8868\u793a T.place \u7684\u503c\u662f\u6807\u8bc6\u7b26\u7684\u7b26\u53f7\u8868\u5165\u53e3\uff08 id.entry \uff09\uff0c\u7528\u4e8e\u83b7\u53d6\u53d8\u91cf\u7684\u5177\u4f53\u4fe1\u606f\uff08\u5982\u53d8\u91cf\u540d\u6216\u5730\u5740\uff09\u3002 T \u2192 num T.place := num.val - T \u2192 num \uff1a - \u8868\u793a\u64cd\u4f5c\u6570 T \u662f\u4e00\u4e2a\u5e38\u91cf\u3002 - T.place := num.val \uff1a - \u8868\u793a T.place \u7684\u503c\u662f\u5e38\u91cf\u7684\u5177\u4f53\u503c\uff08 num.val \uff09\u3002","title":"3. \u64cd\u4f5c\u6570\u7684\u5b9a\u4e49"},{"location":"Compiler/ch6/#_8","text":"","title":"\u793a\u4f8b"},{"location":"Compiler/ch6/#_9","text":"a < b","title":"\u8f93\u5165\u5e03\u5c14\u8868\u8fbe\u5f0f"},{"location":"Compiler/ch6/#_10","text":"\u6587\u6cd5\u5339\u914d \uff1a \u6839\u636e\u89c4\u5219 E \u2192 T1 relop T2 \uff0c\u5c06 a < b \u5206\u89e3\u4e3a\uff1a T1 = a relop = < T2 = b \u5c5e\u6027\u8ba1\u7b97 \uff1a T1.place = \"a\" \uff08\u53d8\u91cf a \u7684\u7b26\u53f7\u8868\u5165\u53e3\uff09\u3002 T2.place = \"b\" \uff08\u53d8\u91cf b \u7684\u7b26\u53f7\u8868\u5165\u53e3\uff09\u3002 relop.op = \"<\" \u3002 \u751f\u6210\u4e2d\u95f4\u4ee3\u7801 \uff1a \u6839\u636e\u8bed\u4e49\u52a8\u4f5c\uff1a E.code := gen('if a < b goto E.true') || gen('goto E.false') \u751f\u6210\u7684\u4e2d\u95f4\u4ee3\u7801\u4e3a\uff1a if a < b goto L1 goto L2","title":"\u7ffb\u8bd1\u8fc7\u7a0b"},{"location":"Compiler/ch6/#_11","text":"\u6587\u6cd5\u89c4\u5219 \uff1a\u5b9a\u4e49\u4e86\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u7ed3\u6784\u3002 \u8bed\u4e49\u52a8\u4f5c \uff1a\u5728\u8bed\u6cd5\u5206\u6790\u7684\u540c\u65f6\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 \u751f\u6210\u7684\u4e2d\u95f4\u4ee3\u7801 \uff1a \u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4 if ... goto \u7528\u4e8e\u5904\u7406\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u903b\u8f91\u3002 \u65e0\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4 goto \u7528\u4e8e\u5904\u7406\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a\u5047\u65f6\u7684\u8df3\u8f6c\u3002 \u8fd9\u79cd\u89c4\u5219\u5e7f\u6cdb\u7528\u4e8e\u7f16\u8bd1\u5668\u7684\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u9636\u6bb5\uff0c\u7279\u522b\u662f\u5728\u5904\u7406\u6761\u4ef6\u8bed\u53e5\u548c\u5faa\u73af\u65f6\u3002---","title":"\u603b\u7ed3"},{"location":"Compiler/ch6/#_12","text":"\u6587\u6cd5\u89c4\u5219 \uff1a\u5b9a\u4e49\u4e86\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u7ed3\u6784\u3002 \u8bed\u4e49\u52a8\u4f5c \uff1a\u5728\u8bed\u6cd5\u5206\u6790\u7684\u540c\u65f6\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 \u751f\u6210\u7684\u4e2d\u95f4\u4ee3\u7801 \uff1a \u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4 if ... goto \u7528\u4e8e\u5904\u7406\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u903b\u8f91\u3002 \u65e0\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4 goto \u7528\u4e8e\u5904\u7406\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a\u5047\u65f6\u7684\u8df3\u8f6c\u3002 \u8fd9\u79cd\u89c4\u5219\u5e7f\u6cdb\u7528\u4e8e\u7f16\u8bd1\u5668\u7684\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u9636\u6bb5\uff0c\u7279\u522b\u662f\u5728\u5904\u7406\u6761\u4ef6\u8bed\u53e5\u548c\u5faa\u73af\u65f6\u3002","title":"\u603b\u7ed3"},{"location":"Compiler/ch6/#_13","text":"\u7b80\u5316\u8868\u8fbe\u5f0f\u6c42\u503c \uff1a \u9006\u6ce2\u5170\u8868\u793a\u4e0d\u9700\u8981\u62ec\u53f7\u6765\u8868\u793a\u8fd0\u7b97\u4f18\u5148\u7ea7\uff0c\u8fd0\u7b97\u987a\u5e8f\u7531\u8868\u8fbe\u5f0f\u672c\u8eab\u7684\u987a\u5e8f\u51b3\u5b9a\u3002 \u4f8b\u5982\uff0c\u666e\u901a\u4e2d\u7f00\u8868\u8fbe\u5f0f 3 + 4 * 2 \u5728\u9006\u6ce2\u5170\u8868\u793a\u4e2d\u4e3a 3 4 2 * + \uff0c\u76f4\u63a5\u6309\u7167\u987a\u5e8f\u8ba1\u7b97\u5373\u53ef\u3002 \u65b9\u4fbf\u8ba1\u7b97\u673a\u5904\u7406 \uff1a \u9006\u6ce2\u5170\u8868\u793a\u53ef\u4ee5\u76f4\u63a5\u7528\u6808\uff08Stack\uff09\u6765\u6c42\u503c\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u7b80\u5355\u9ad8\u6548\u3002 \u4f8b\u5982\uff0c\u7f16\u8bd1\u5668\u5728\u751f\u6210\u4ee3\u7801\u65f6\uff0c\u901a\u5e38\u4f1a\u5c06\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u9006\u6ce2\u5170\u8868\u793a\uff0c\u4ee5\u4fbf\u751f\u6210\u66f4\u9ad8\u6548\u7684\u673a\u5668\u4ee3\u7801\u3002 \u7528\u4e8e\u8868\u8fbe\u5f0f\u8f6c\u6362 \uff1a \u7f16\u8bd1\u5668\u5728\u8bed\u6cd5\u5206\u6790\u9636\u6bb5\uff0c\u4f1a\u5c06\u4e2d\u7f00\u8868\u8fbe\u5f0f\uff08\u4eba\u7c7b\u4e60\u60ef\u7684\u8868\u8fbe\u5f0f\uff09\u8f6c\u6362\u4e3a\u9006\u6ce2\u5170\u8868\u793a\uff0c\u4fbf\u4e8e\u540e\u7eed\u7684\u6c42\u503c\u6216\u4ee3\u7801\u751f\u6210\u3002","title":"\u9006\u6ce2\u5170\u8868\u793a\u7684\u4f5c\u7528"},{"location":"Compiler/ch6/#_14","text":"\u64cd\u4f5c\u7b26\u5728\u64cd\u4f5c\u6570\u4e4b\u540e \uff1a \u4e2d\u7f00\u8868\u8fbe\u5f0f\uff1a A + B \u9006\u6ce2\u5170\u8868\u793a\uff1a A B + \u4e0d\u9700\u8981\u62ec\u53f7 \uff1a \u4e2d\u7f00\u8868\u8fbe\u5f0f\uff1a (A + B) * C \u9006\u6ce2\u5170\u8868\u793a\uff1a A B + C * \u8ba1\u7b97\u987a\u5e8f\u7531\u8868\u8fbe\u5f0f\u672c\u8eab\u51b3\u5b9a \uff1a \u4e2d\u7f00\u8868\u8fbe\u5f0f\uff1a A + B * C \u9006\u6ce2\u5170\u8868\u793a\uff1a A B C * +","title":"\u9006\u6ce2\u5170\u8868\u793a\u7684\u7279\u70b9"},{"location":"Compiler/ch6/#_15","text":"\u4f7f\u7528\u6808\uff08Stack\uff09\u6765\u6c42\u503c\uff1a 1. \u4ece\u5de6\u5230\u53f3\u626b\u63cf\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u3002 2. \u9047\u5230\u64cd\u4f5c\u6570\u65f6\uff0c\u538b\u5165\u6808\u4e2d\u3002 3. \u9047\u5230\u64cd\u4f5c\u7b26\u65f6\uff0c\u4ece\u6808\u4e2d\u5f39\u51fa\u4e24\u4e2a\u64cd\u4f5c\u6570\uff0c\u8fdb\u884c\u8fd0\u7b97\uff0c\u5e76\u5c06\u7ed3\u679c\u538b\u56de\u6808\u4e2d\u3002 4. \u6700\u540e\u6808\u9876\u7684\u503c\u5373\u4e3a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u3002","title":"\u9006\u6ce2\u5170\u8868\u793a\u7684\u6c42\u503c\u65b9\u6cd5"},{"location":"Compiler/ch6/#_16","text":"","title":"\u793a\u4f8b"},{"location":"Compiler/ch6/#_17","text":"(3 + 4) * 5 - 6","title":"\u4e2d\u7f00\u8868\u8fbe\u5f0f\uff1a"},{"location":"Compiler/ch6/#_18","text":"3 4 + 5 * 6 -","title":"\u9006\u6ce2\u5170\u8868\u793a\uff1a"},{"location":"Compiler/ch6/#_19","text":"\u626b\u63cf\u5230 3 \u548c 4 \uff0c\u538b\u5165\u6808\u4e2d\u3002 \u9047\u5230 + \uff0c\u5f39\u51fa 3 \u548c 4 \uff0c\u8ba1\u7b97 3 + 4 = 7 \uff0c\u5c06 7 \u538b\u5165\u6808\u4e2d\u3002 \u626b\u63cf\u5230 5 \uff0c\u538b\u5165\u6808\u4e2d\u3002 \u9047\u5230 * \uff0c\u5f39\u51fa 7 \u548c 5 \uff0c\u8ba1\u7b97 7 * 5 = 35 \uff0c\u5c06 35 \u538b\u5165\u6808\u4e2d\u3002 \u626b\u63cf\u5230 6 \uff0c\u538b\u5165\u6808\u4e2d\u3002 \u9047\u5230 - \uff0c\u5f39\u51fa 35 \u548c 6 \uff0c\u8ba1\u7b97 35 - 6 = 29 \uff0c\u5c06 29 \u538b\u5165\u6808\u4e2d\u3002 \u6700\u7ec8\u7ed3\u679c\u4e3a 29 \u3002","title":"\u6c42\u503c\u8fc7\u7a0b\uff1a"},{"location":"Compiler/ch6/#_20","text":"\u7f16\u8bd1\u5668 \uff1a \u7f16\u8bd1\u5668\u5728\u8bed\u6cd5\u5206\u6790\u9636\u6bb5\u4f1a\u5c06\u4e2d\u7f00\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u9006\u6ce2\u5170\u8868\u793a\uff0c\u4fbf\u4e8e\u751f\u6210\u76ee\u6807\u4ee3\u7801\u3002 \u8ba1\u7b97\u5668 \uff1a \u8bb8\u591a\u8ba1\u7b97\u5668\u5185\u90e8\u4f7f\u7528\u9006\u6ce2\u5170\u8868\u793a\u6765\u5b9e\u73b0\u8868\u8fbe\u5f0f\u6c42\u503c\u3002 \u8868\u8fbe\u5f0f\u6c42\u503c\u5f15\u64ce \uff1a \u7528\u4e8e\u89e3\u6790\u548c\u8ba1\u7b97\u590d\u6742\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"Compiler/ch6/#_21","text":"\u9006\u6ce2\u5170\u8868\u793a\u662f\u4e00\u79cd\u7b80\u5316\u8868\u8fbe\u5f0f\u6c42\u503c\u7684\u8868\u793a\u6cd5\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7f16\u8bd1\u5668\u3001\u8ba1\u7b97\u5668\u7b49\u9886\u57df\u3002\u5b83\u901a\u8fc7\u5c06\u64cd\u4f5c\u7b26\u653e\u5728\u64cd\u4f5c\u6570\u4e4b\u540e\uff0c\u907f\u514d\u4e86\u62ec\u53f7\u7684\u4f7f\u7528\uff0c\u7b80\u5316\u4e86\u8868\u8fbe\u5f0f\u7684\u89e3\u6790\u548c\u8ba1\u7b97\u8fc7\u7a0b\u3002","title":"\u603b\u7ed3"},{"location":"Compiler/ch6/#three-address-code-tac","text":"\u4e09\u5730\u5740\u4ee3\u7801\u662f\u4e00\u79cd\u4e2d\u95f4\u4ee3\u7801\u8868\u793a\u5f62\u5f0f\uff0c\u5e7f\u6cdb\u7528\u4e8e\u7f16\u8bd1\u5668\u7684\u4e2d\u95f4\u8868\u793a\u9636\u6bb5\u3002\u5b83\u7684\u7279\u70b9\u662f\u6bcf\u6761\u6307\u4ee4\u6700\u591a\u5305\u542b\u4e09\u4e2a\u64cd\u4f5c\u6570\uff08\u5730\u5740\uff09\uff0c\u901a\u5e38\u8868\u793a\u4e3a\uff1a x = y op z \u5176\u4e2d\uff1a - x \u662f\u76ee\u6807\u53d8\u91cf\u3002 - y \u548c z \u662f\u6e90\u64cd\u4f5c\u6570\u3002 - op \u662f\u64cd\u4f5c\u7b26\uff0c\u53ef\u4ee5\u662f\u7b97\u672f\u8fd0\u7b97\uff08\u5982 + \u3001 - \uff09\u3001\u903b\u8f91\u8fd0\u7b97\uff08\u5982 && \u3001 || \uff09\u3001\u5173\u7cfb\u8fd0\u7b97\uff08\u5982 < \u3001 > \uff09\u7b49\u3002","title":"\u4e09\u5730\u5740\u4ee3\u7801\uff08Three-Address Code, TAC\uff09"},{"location":"Compiler/ch6/#_22","text":"\u7b80\u5316\u590d\u6742\u8868\u8fbe\u5f0f \uff1a \u5c06\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u5206\u89e3\u4e3a\u591a\u4e2a\u7b80\u5355\u7684\u4e09\u5730\u5740\u6307\u4ee4\u3002 \u4f8b\u5982\uff0c\u4e2d\u7f00\u8868\u8fbe\u5f0f a + b * c \u4f1a\u88ab\u5206\u89e3\u4e3a\uff1a t1 = b * c t2 = a + t1 \u6613\u4e8e\u7ffb\u8bd1\u4e3a\u673a\u5668\u4ee3\u7801 \uff1a \u4e09\u5730\u5740\u4ee3\u7801\u662f\u4e00\u79cd\u63a5\u8fd1\u673a\u5668\u8bed\u8a00\u7684\u4e2d\u95f4\u8868\u793a\uff0c\u4fbf\u4e8e\u751f\u6210\u76ee\u6807\u4ee3\u7801\u3002 \u4f7f\u7528\u4e34\u65f6\u53d8\u91cf \uff1a \u4e3a\u4e2d\u95f4\u7ed3\u679c\u5206\u914d\u4e34\u65f6\u53d8\u91cf\uff08\u5982 t1 \u3001 t2 \uff09\uff0c\u4ee5\u4fbf\u4e8e\u8868\u8fbe\u5f0f\u7684\u5206\u89e3\u548c\u8ba1\u7b97\u3002","title":"\u4e09\u5730\u5740\u4ee3\u7801\u7684\u7279\u70b9"},{"location":"Compiler/ch6/#_23","text":"\u4e09\u5730\u5740\u4ee3\u7801\u901a\u5e38\u6709\u4ee5\u4e0b\u51e0\u79cd\u5f62\u5f0f\uff1a \u8d4b\u503c\u8bed\u53e5 \uff1a x = y \u793a\u4f8b\uff1a a = b \u7b97\u672f\u8fd0\u7b97 \uff1a x = y op z \u793a\u4f8b\uff1a t1 = b * c \u903b\u8f91\u8fd0\u7b97 \uff1a x = y && z \u793a\u4f8b\uff1a t2 = a && b \u6761\u4ef6\u8df3\u8f6c \uff1a if x goto L \u793a\u4f8b\uff1a if t1 > 0 goto L1 \u65e0\u6761\u4ef6\u8df3\u8f6c \uff1a goto L \u793a\u4f8b\uff1a goto L2 \u51fd\u6570\u8c03\u7528 \uff1a param x call f, n \u793a\u4f8b\uff1a param a param b call add, 2 \u6570\u7ec4\u8bbf\u95ee \uff1a x = y[i] \u793a\u4f8b\uff1a t1 = arr[i] \u6307\u9488\u64cd\u4f5c \uff1a x = *y *x = y","title":"\u4e09\u5730\u5740\u4ee3\u7801\u7684\u5f62\u5f0f"},{"location":"Compiler/ch6/#_24","text":"","title":"\u793a\u4f8b"},{"location":"Compiler/ch6/#_25","text":"a = b + c * d - e","title":"\u8f93\u5165\u8868\u8fbe\u5f0f\uff1a"},{"location":"Compiler/ch6/#_26","text":"t1 = c * d t2 = b + t1 t3 = t2 - e a = t3","title":"\u5bf9\u5e94\u7684\u4e09\u5730\u5740\u4ee3\u7801\uff1a"},{"location":"Compiler/ch6/#_27","text":"\u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \uff1a \u7f16\u8bd1\u5668\u5728\u8bed\u6cd5\u5206\u6790\u540e\u4f1a\u751f\u6210\u4e09\u5730\u5740\u4ee3\u7801\uff0c\u4f5c\u4e3a\u76ee\u6807\u4ee3\u7801\u751f\u6210\u7684\u57fa\u7840\u3002 \u4f18\u5316 \uff1a \u4e09\u5730\u5740\u4ee3\u7801\u4fbf\u4e8e\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\uff08\u5982\u5e38\u91cf\u6298\u53e0\u3001\u516c\u5171\u5b50\u8868\u8fbe\u5f0f\u6d88\u9664\u7b49\uff09\u3002 \u76ee\u6807\u4ee3\u7801\u751f\u6210 \uff1a \u4e09\u5730\u5740\u4ee3\u7801\u53ef\u4ee5\u76f4\u63a5\u7ffb\u8bd1\u4e3a\u6c47\u7f16\u4ee3\u7801\u6216\u673a\u5668\u4ee3\u7801\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"Compiler/ch6/#_28","text":"\u4e09\u5730\u5740\u4ee3\u7801\u662f\u4e00\u79cd\u7b80\u6d01\u7684\u4e2d\u95f4\u8868\u793a\u5f62\u5f0f\uff0c\u7528\u4e8e\u5c06\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u5206\u89e3\u4e3a\u7b80\u5355\u7684\u6307\u4ee4\u3002\u5b83\u5728\u7f16\u8bd1\u5668\u4e2d\u8d77\u5230\u627f\u4e0a\u542f\u4e0b\u7684\u4f5c\u7528\uff0c\u65e2\u4fbf\u4e8e\u4ee3\u7801\u4f18\u5316\uff0c\u53c8\u4fbf\u4e8e\u751f\u6210\u76ee\u6807\u4ee3\u7801\u3002---","title":"\u603b\u7ed3"},{"location":"Compiler/ch6/#_29","text":"\u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \uff1a \u7f16\u8bd1\u5668\u5728\u8bed\u6cd5\u5206\u6790\u540e\u4f1a\u751f\u6210\u4e09\u5730\u5740\u4ee3\u7801\uff0c\u4f5c\u4e3a\u76ee\u6807\u4ee3\u7801\u751f\u6210\u7684\u57fa\u7840\u3002 \u4f18\u5316 \uff1a \u4e09\u5730\u5740\u4ee3\u7801\u4fbf\u4e8e\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\uff08\u5982\u5e38\u91cf\u6298\u53e0\u3001\u516c\u5171\u5b50\u8868\u8fbe\u5f0f\u6d88\u9664\u7b49\uff09\u3002 \u76ee\u6807\u4ee3\u7801\u751f\u6210 \uff1a \u4e09\u5730\u5740\u4ee3\u7801\u53ef\u4ee5\u76f4\u63a5\u7ffb\u8bd1\u4e3a\u6c47\u7f16\u4ee3\u7801\u6216\u673a\u5668\u4ee3\u7801\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"Compiler/ch6/#_30","text":"\u4e09\u5730\u5740\u4ee3\u7801\u662f\u4e00\u79cd\u7b80\u6d01\u7684\u4e2d\u95f4\u8868\u793a\u5f62\u5f0f\uff0c\u7528\u4e8e\u5c06\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u5206\u89e3\u4e3a\u7b80\u5355\u7684\u6307\u4ee4\u3002\u5b83\u5728\u7f16\u8bd1\u5668\u4e2d\u8d77\u5230\u627f\u4e0a\u542f\u4e0b\u7684\u4f5c\u7528\uff0c\u65e2\u4fbf\u4e8e\u4ee3\u7801\u4f18\u5316\uff0c\u53c8\u4fbf\u4e8e\u751f\u6210\u76ee\u6807\u4ee3\u7801\u3002 \u4e2d\u95f4\u4ee3\u7801\u7684\u62bd\u8c61\u5f62\u5f0f\u662f\u7f16\u8bd1\u5668\u5728\u6e90\u4ee3\u7801\u548c\u76ee\u6807\u4ee3\u7801\u4e4b\u95f4\u751f\u6210\u7684\u4e00\u79cd\u4e2d\u95f4\u8868\u793a\uff0c\u7528\u4e8e\u6865\u63a5\u9ad8\u5c42\u8bed\u8a00\u548c\u5e95\u5c42\u673a\u5668\u8bed\u8a00\u3002\u5b83\u65e2\u4fdd\u7559\u4e86\u6e90\u4ee3\u7801\u7684\u8bed\u4e49\u4fe1\u606f\uff0c\u53c8\u4fbf\u4e8e\u76ee\u6807\u4ee3\u7801\u7684\u751f\u6210\u548c\u4f18\u5316\u3002\u4ee5\u4e0b\u662f\u4e2d\u95f4\u4ee3\u7801\u7684\u5e38\u89c1\u62bd\u8c61\u5f62\u5f0f\uff1a","title":"\u603b\u7ed3"},{"location":"Compiler/ch6/#_31","text":"","title":"\u4e2d\u95f4\u4ee3\u7801\u7684\u62bd\u8c61\u5f62\u5f0f"},{"location":"Compiler/ch6/#1-three-address-code-tac","text":"\u7279\u70b9 \uff1a \u6bcf\u6761\u6307\u4ee4\u6700\u591a\u5305\u542b\u4e09\u4e2a\u64cd\u4f5c\u6570\uff08\u5730\u5740\uff09\u3002 \u4f7f\u7528\u4e34\u65f6\u53d8\u91cf\u5b58\u50a8\u4e2d\u95f4\u7ed3\u679c\u3002 \u8868\u793a\u5f62\u5f0f\u63a5\u8fd1\u673a\u5668\u8bed\u8a00\uff0c\u4fbf\u4e8e\u751f\u6210\u76ee\u6807\u4ee3\u7801\u3002 \u793a\u4f8b \uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f a = b + c * d \uff0c\u4e09\u5730\u5740\u4ee3\u7801\u4e3a\uff1a t1 = c * d t2 = b + t1 a = t2","title":"1. \u4e09\u5730\u5740\u4ee3\u7801\uff08Three-Address Code, TAC\uff09"},{"location":"Compiler/ch6/#2-quadruple","text":"\u7279\u70b9 \uff1a \u6bcf\u6761\u6307\u4ee4\u7531\u56db\u4e2a\u5b57\u6bb5\u7ec4\u6210\uff1a (op, arg1, arg2, result) \u3002 op \u662f\u64cd\u4f5c\u7b26\uff0c arg1 \u548c arg2 \u662f\u64cd\u4f5c\u6570\uff0c result \u662f\u7ed3\u679c\u3002 \u9002\u5408\u8868\u793a\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u548c\u63a7\u5236\u6d41\u3002 \u793a\u4f8b \uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f a = b + c * d \uff0c\u56db\u5143\u5f0f\u4e3a\uff1a ( *, c, d, t1 ) ( +, b, t1, t2 ) ( =, t2, -, a )","title":"2. \u56db\u5143\u5f0f\uff08Quadruple\uff09"},{"location":"Compiler/ch6/#3-triple","text":"\u7279\u70b9 \uff1a \u6bcf\u6761\u6307\u4ee4\u7531\u4e09\u4e2a\u5b57\u6bb5\u7ec4\u6210\uff1a (op, arg1, arg2) \u3002 \u7ed3\u679c\u9690\u5f0f\u8868\u793a\u4e3a\u6307\u4ee4\u7684\u7f16\u53f7\uff0c\u51cf\u5c11\u4e86\u663e\u5f0f\u7ed3\u679c\u5b57\u6bb5\u3002 \u66f4\u7d27\u51d1\uff0c\u4f46\u4e0d\u4fbf\u4e8e\u4f18\u5316\u3002 \u793a\u4f8b \uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f a = b + c * d \uff0c\u4e09\u5143\u5f0f\u4e3a\uff1a ( *, c, d ) // \u7f16\u53f7 0 ( +, b, (0) ) // \u7f16\u53f7 1 ( =, (1), a ) // \u7f16\u53f7 2","title":"3. \u4e09\u5143\u5f0f\uff08Triple\uff09"},{"location":"Compiler/ch6/#4-abstract-syntax-tree-ast","text":"\u7279\u70b9 \uff1a \u4f7f\u7528\u6811\u5f62\u7ed3\u6784\u8868\u793a\u8868\u8fbe\u5f0f\u6216\u7a0b\u5e8f\u7684\u8bed\u6cd5\u7ed3\u6784\u3002 \u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u64cd\u4f5c\u7b26\u6216\u64cd\u4f5c\u6570\u3002 \u9002\u5408\u8bed\u6cd5\u5206\u6790\u548c\u4ee3\u7801\u4f18\u5316\u3002 \u793a\u4f8b \uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f a = b + c * d \uff0c\u62bd\u8c61\u8bed\u6cd5\u6811\u4e3a\uff1a = / \\ a + / \\ b * / \\ c d","title":"4. \u62bd\u8c61\u8bed\u6cd5\u6811\uff08Abstract Syntax Tree, AST\uff09"},{"location":"Compiler/ch6/#5-rpn","text":"\u7279\u70b9 \uff1a \u64cd\u4f5c\u7b26\u5728\u64cd\u4f5c\u6570\u4e4b\u540e\uff0c\u4e0d\u9700\u8981\u62ec\u53f7\u8868\u793a\u4f18\u5148\u7ea7\u3002 \u9002\u5408\u7528\u6808\u8fdb\u884c\u6c42\u503c\u3002 \u793a\u4f8b \uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f a = b + c * d \uff0c\u540e\u7f00\u8868\u8fbe\u5f0f\u4e3a\uff1a b c d * + a =","title":"5. \u540e\u7f00\u8868\u8fbe\u5f0f\uff08\u9006\u6ce2\u5170\u8868\u793a\uff0cRPN\uff09"},{"location":"Compiler/ch6/#6-static-single-assignment-ssa","text":"\u7279\u70b9 \uff1a \u6bcf\u4e2a\u53d8\u91cf\u5728\u7a0b\u5e8f\u4e2d\u53ea\u8d4b\u503c\u4e00\u6b21\u3002 \u901a\u8fc7\u5f15\u5165\u7248\u672c\u53f7\uff08\u5982 x1 , x2 \uff09\u533a\u5206\u53d8\u91cf\u7684\u4e0d\u540c\u8d4b\u503c\u3002 \u4fbf\u4e8e\u6570\u636e\u6d41\u5206\u6790\u548c\u4f18\u5316\u3002 \u793a\u4f8b \uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f\uff1a x = a + b x = x * c \u8f6c\u6362\u4e3a SSA \u5f62\u5f0f\uff1a x1 = a + b x2 = x1 * c","title":"6. \u9759\u6001\u5355\u8d4b\u503c\u5f62\u5f0f\uff08Static Single Assignment, SSA\uff09"},{"location":"Compiler/ch6/#_32","text":"\u5f62\u5f0f \u7279\u70b9 \u9002\u7528\u573a\u666f \u4e09\u5730\u5740\u4ee3\u7801 \u7b80\u6d01\u76f4\u89c2\uff0c\u4fbf\u4e8e\u7ffb\u8bd1\u4e3a\u76ee\u6807\u4ee3\u7801\u3002 \u8868\u8fbe\u5f0f\u6c42\u503c\u3001\u76ee\u6807\u4ee3\u7801\u751f\u6210\u3002 \u56db\u5143\u5f0f \u663e\u5f0f\u8bb0\u5f55\u7ed3\u679c\uff0c\u4fbf\u4e8e\u4f18\u5316\u548c\u63a7\u5236\u6d41\u8868\u793a\u3002 \u590d\u6742\u8868\u8fbe\u5f0f\u548c\u63a7\u5236\u6d41\u7684\u8868\u793a\u3002 \u4e09\u5143\u5f0f \u7ed3\u679c\u9690\u5f0f\u8868\u793a\uff0c\u7d27\u51d1\u4f46\u4e0d\u4fbf\u4e8e\u4f18\u5316\u3002 \u7b80\u5355\u8868\u8fbe\u5f0f\u7684\u8868\u793a\u3002 \u62bd\u8c61\u8bed\u6cd5\u6811 \u7ed3\u6784\u5316\u8868\u793a\u8bed\u6cd5\uff0c\u4fbf\u4e8e\u8bed\u6cd5\u5206\u6790\u548c\u4f18\u5316\u3002 \u8bed\u6cd5\u5206\u6790\u3001\u4ee3\u7801\u4f18\u5316\u3002 \u540e\u7f00\u8868\u8fbe\u5f0f \u65e0\u9700\u62ec\u53f7\uff0c\u9002\u5408\u6808\u5f0f\u6c42\u503c\u3002 \u8868\u8fbe\u5f0f\u6c42\u503c\u3002 SSA \u6bcf\u4e2a\u53d8\u91cf\u53ea\u8d4b\u503c\u4e00\u6b21\uff0c\u4fbf\u4e8e\u6570\u636e\u6d41\u5206\u6790\u548c\u4f18\u5316\u3002 \u9ad8\u7ea7\u4f18\u5316\uff08\u5982\u5bc4\u5b58\u5668\u5206\u914d\uff09\u3002","title":"\u5bf9\u6bd4"},{"location":"Compiler/ch6/#_33","text":"\u4e2d\u95f4\u4ee3\u7801\u7684\u62bd\u8c61\u5f62\u5f0f\u591a\u79cd\u591a\u6837\uff0c\u5177\u4f53\u9009\u62e9\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\u7684\u8bbe\u8ba1\u76ee\u6807\u548c\u4f18\u5316\u9700\u6c42\u3002\u5e38\u89c1\u7684\u5f62\u5f0f\u5982\u4e09\u5730\u5740\u4ee3\u7801\u3001\u56db\u5143\u5f0f\u548c\u62bd\u8c61\u8bed\u6cd5\u6811\uff0c\u65e2\u4fbf\u4e8e\u8868\u8fbe\u7a0b\u5e8f\u903b\u8f91\uff0c\u53c8\u4fbf\u4e8e\u751f\u6210\u76ee\u6807\u4ee3\u7801\u548c\u8fdb\u884c\u4f18\u5316\u3002","title":"\u603b\u7ed3"},{"location":"Compiler/ch6/#c","text":"","title":"\u5982\u4f55\u5c06c\u8bed\u8a00\u7ffb\u8bd1\u6210\u4e2d\u95f4\u4ee3\u7801"},{"location":"Compiler/ch6/#c_1","text":"\u5c06 C \u8bed\u8a00\u7ffb\u8bd1\u6210\u4e2d\u95f4\u4ee3\u7801\u7684\u8fc7\u7a0b\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a","title":"\u5982\u4f55\u5c06 C \u8bed\u8a00\u7ffb\u8bd1\u6210\u4e2d\u95f4\u4ee3\u7801"},{"location":"Compiler/ch6/#1_2","text":"\u5c06 C \u8bed\u8a00\u6e90\u4ee3\u7801\u5206\u89e3\u4e3a \u6807\u8bb0\uff08Token\uff09 \uff0c\u5982\u5173\u952e\u5b57\u3001\u6807\u8bc6\u7b26\u3001\u64cd\u4f5c\u7b26\u7b49\u3002 \u793a\u4f8b\uff1a a = b + c * d ; \u8bcd\u6cd5\u5206\u6790\u7ed3\u679c\uff1a \u6807\u8bc6\u7b26\uff1aa \u8d4b\u503c\u64cd\u4f5c\u7b26\uff1a= \u6807\u8bc6\u7b26\uff1ab \u52a0\u6cd5\u64cd\u4f5c\u7b26\uff1a+ \u6807\u8bc6\u7b26\uff1ac \u4e58\u6cd5\u64cd\u4f5c\u7b26\uff1a* \u6807\u8bc6\u7b26\uff1ad \u5206\u53f7\uff1a;","title":"1. \u8bcd\u6cd5\u5206\u6790"},{"location":"Compiler/ch6/#2_1","text":"\u6839\u636e\u8bed\u6cd5\u89c4\u5219\uff0c\u5c06\u6807\u8bb0\u5e8f\u5217\u89e3\u6790\u4e3a \u8bed\u6cd5\u6811 \u6216 \u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09 \u3002 \u793a\u4f8b\uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f a = b + c * d \uff0c\u8bed\u6cd5\u6811\u4e3a\uff1a = / \\ a + / \\ b * / \\ c d","title":"2. \u8bed\u6cd5\u5206\u6790"},{"location":"Compiler/ch6/#3_2","text":"\u68c0\u67e5\u8bed\u6cd5\u6811\u7684\u8bed\u4e49\u662f\u5426\u6b63\u786e\uff0c\u4f8b\u5982\u53d8\u91cf\u662f\u5426\u5df2\u58f0\u660e\u3001\u7c7b\u578b\u662f\u5426\u5339\u914d\u7b49\u3002 \u793a\u4f8b\uff1a \u68c0\u67e5\u53d8\u91cf a \u3001 b \u3001 c \u548c d \u662f\u5426\u5df2\u58f0\u660e\u3002 \u68c0\u67e5 b \u3001 c \u548c d \u7684\u7c7b\u578b\u662f\u5426\u652f\u6301\u52a0\u6cd5\u548c\u4e58\u6cd5\u64cd\u4f5c\u3002","title":"3. \u8bed\u4e49\u5206\u6790"},{"location":"Compiler/ch6/#4","text":"\u5c06\u8bed\u6cd5\u6811\u8f6c\u6362\u4e3a\u4e2d\u95f4\u4ee3\u7801\uff08\u5982\u4e09\u5730\u5740\u4ee3\u7801\u3001\u56db\u5143\u5f0f\u7b49\uff09\u3002 \u793a\u4f8b\uff1a \u5bf9\u4e8e\u8868\u8fbe\u5f0f a = b + c * d \uff0c\u751f\u6210\u7684\u4e09\u5730\u5740\u4ee3\u7801\u4e3a\uff1a t1 = c * d t2 = b + t1 a = t2","title":"4. \u4e2d\u95f4\u4ee3\u7801\u751f\u6210"},{"location":"Compiler/ch6/#_34","text":"","title":"\u5b8c\u6574\u793a\u4f8b"},{"location":"Compiler/ch6/#c_2","text":"int a , b , c , d ; a = b + c * d ;","title":"C \u8bed\u8a00\u4ee3\u7801"},{"location":"Compiler/ch6/#_35","text":"\u8bcd\u6cd5\u5206\u6790 \u6807\u8bb0\u5e8f\u5217\uff1a int, a, ,, b, ,, c, ,, d, ;, a, =, b, +, c, *, d, ; \u8bed\u6cd5\u5206\u6790 \u751f\u6210\u8bed\u6cd5\u6811\uff1a = / \\ a + / \\ b * / \\ c d \u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \u4e09\u5730\u5740\u4ee3\u7801\uff1a t1 = c * d t2 = b + t1 a = t2 \u56db\u5143\u5f0f\uff1a ( *, c, d, t1 ) ( +, b, t1, t2 ) ( =, t2, -, a ) \u4e09\u5143\u5f0f\uff1a ( *, c, d ) // \u7f16\u53f7 0 ( +, b, (0) ) // \u7f16\u53f7 1 ( =, (1), a ) // \u7f16\u53f7 2","title":"\u7ffb\u8bd1\u8fc7\u7a0b"},{"location":"Compiler/ch6/#_36","text":"\u6865\u63a5\u9ad8\u5c42\u8bed\u8a00\u548c\u5e95\u5c42\u673a\u5668\u8bed\u8a00 \uff1a \u4e2d\u95f4\u4ee3\u7801\u662f\u7f16\u8bd1\u5668\u751f\u6210\u76ee\u6807\u4ee3\u7801\u7684\u4e2d\u95f4\u6b65\u9aa4\uff0c\u4fbf\u4e8e\u8de8\u5e73\u53f0\u5b9e\u73b0\u3002 \u4fbf\u4e8e\u4f18\u5316 \uff1a \u4e2d\u95f4\u4ee3\u7801\u53ef\u4ee5\u8fdb\u884c\u5e38\u91cf\u6298\u53e0\u3001\u516c\u5171\u5b50\u8868\u8fbe\u5f0f\u6d88\u9664\u7b49\u4f18\u5316\u3002 \u7b80\u5316\u76ee\u6807\u4ee3\u7801\u751f\u6210 \uff1a \u4e2d\u95f4\u4ee3\u7801\u63a5\u8fd1\u673a\u5668\u8bed\u8a00\uff0c\u4fbf\u4e8e\u7ffb\u8bd1\u4e3a\u6c47\u7f16\u4ee3\u7801\u6216\u673a\u5668\u4ee3\u7801\u3002","title":"\u4e2d\u95f4\u4ee3\u7801\u7684\u4f5c\u7528"},{"location":"Compiler/ch6/#_37","text":"\u5c06 C \u8bed\u8a00\u7ffb\u8bd1\u6210\u4e2d\u95f4\u4ee3\u7801\u7684\u8fc7\u7a0b\u5305\u62ec\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u548c\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u3002\u901a\u8fc7\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\uff08\u5982\u4e09\u5730\u5740\u4ee3\u7801\u3001\u56db\u5143\u5f0f\u7b49\uff09\uff0c\u53ef\u4ee5\u7b80\u5316\u76ee\u6807\u4ee3\u7801\u7684\u751f\u6210\u8fc7\u7a0b\uff0c\u5e76\u4fbf\u4e8e\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\u3002---","title":"\u603b\u7ed3"},{"location":"Compiler/ch6/#_38","text":"\u6865\u63a5\u9ad8\u5c42\u8bed\u8a00\u548c\u5e95\u5c42\u673a\u5668\u8bed\u8a00 \uff1a \u4e2d\u95f4\u4ee3\u7801\u662f\u7f16\u8bd1\u5668\u751f\u6210\u76ee\u6807\u4ee3\u7801\u7684\u4e2d\u95f4\u6b65\u9aa4\uff0c\u4fbf\u4e8e\u8de8\u5e73\u53f0\u5b9e\u73b0\u3002 \u4fbf\u4e8e\u4f18\u5316 \uff1a \u4e2d\u95f4\u4ee3\u7801\u53ef\u4ee5\u8fdb\u884c\u5e38\u91cf\u6298\u53e0\u3001\u516c\u5171\u5b50\u8868\u8fbe\u5f0f\u6d88\u9664\u7b49\u4f18\u5316\u3002 \u7b80\u5316\u76ee\u6807\u4ee3\u7801\u751f\u6210 \uff1a \u4e2d\u95f4\u4ee3\u7801\u63a5\u8fd1\u673a\u5668\u8bed\u8a00\uff0c\u4fbf\u4e8e\u7ffb\u8bd1\u4e3a\u6c47\u7f16\u4ee3\u7801\u6216\u673a\u5668\u4ee3\u7801\u3002","title":"\u4e2d\u95f4\u4ee3\u7801\u7684\u4f5c\u7528"},{"location":"Compiler/ch6/#_39","text":"\u5c06 C \u8bed\u8a00\u7ffb\u8bd1\u6210\u4e2d\u95f4\u4ee3\u7801\u7684\u8fc7\u7a0b\u5305\u62ec\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u548c\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u3002\u901a\u8fc7\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\uff08\u5982\u4e09\u5730\u5740\u4ee3\u7801\u3001\u56db\u5143\u5f0f\u7b49\uff09\uff0c\u53ef\u4ee5\u7b80\u5316\u76ee\u6807\u4ee3\u7801\u7684\u751f\u6210\u8fc7\u7a0b\uff0c\u5e76\u4fbf\u4e8e\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\u3002","title":"\u603b\u7ed3"},{"location":"Compiler/ch6/#_40","text":"","title":"\u4ec0\u4e48\u662f\u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1"},{"location":"Compiler/ch6/#syntax-directed-translation-sdt","text":"\u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\u662f\u4e00\u79cd\u57fa\u4e8e\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u7684\u7ffb\u8bd1\u65b9\u6cd5\uff0c\u5b83\u5c06\u8bed\u6cd5\u5206\u6790\u4e0e\u8bed\u4e49\u5904\u7406\u76f8\u7ed3\u5408\uff0c\u901a\u8fc7\u5728\u6587\u6cd5\u89c4\u5219\u4e2d\u9644\u52a0 \u8bed\u4e49\u52a8\u4f5c \u6765\u5b8c\u6210\u6e90\u8bed\u8a00\u5230\u76ee\u6807\u8bed\u8a00\u7684\u7ffb\u8bd1\u3002","title":"\u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\uff08Syntax-Directed Translation, SDT\uff09"},{"location":"Compiler/ch6/#_41","text":"\u8bed\u6cd5\u89c4\u5219 \uff1a \u4f7f\u7528\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\uff08CFG\uff09\u5b9a\u4e49\u8bed\u8a00\u7684\u8bed\u6cd5\u7ed3\u6784\u3002 \u4f8b\u5982\uff0c\u8868\u8fbe\u5f0f\u7684\u6587\u6cd5\u89c4\u5219\uff1a E \u2192 E + T E \u2192 T T \u2192 T * F T \u2192 F F \u2192 (E) F \u2192 id \u8bed\u4e49\u52a8\u4f5c \uff1a \u5728\u6587\u6cd5\u89c4\u5219\u4e2d\u9644\u52a0\u8bed\u4e49\u52a8\u4f5c\uff0c\u7528\u4e8e\u8ba1\u7b97\u5c5e\u6027\u503c\u6216\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 \u4f8b\u5982\uff1a E \u2192 E1 + T { E.val = E1.val + T.val } \u5c5e\u6027\u503c \uff1a \u6bcf\u4e2a\u8bed\u6cd5\u7b26\u53f7\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u5c5e\u6027\uff0c\u7528\u4e8e\u5b58\u50a8\u8bed\u4e49\u4fe1\u606f\u3002 \u5c5e\u6027\u5206\u4e3a\u4e24\u7c7b\uff1a \u7efc\u5408\u5c5e\u6027\uff08Synthesized Attribute\uff09 \uff1a\u4ece\u5b50\u8282\u70b9\u4f20\u9012\u5230\u7236\u8282\u70b9\u3002 \u7ee7\u627f\u5c5e\u6027\uff08Inherited Attribute\uff09 \uff1a\u4ece\u7236\u8282\u70b9\u6216\u5144\u5f1f\u8282\u70b9\u4f20\u9012\u5230\u5f53\u524d\u8282\u70b9\u3002","title":"\u6838\u5fc3\u601d\u60f3"},{"location":"Compiler/ch6/#syntax-directed-definition-sdd","text":"\u8bed\u6cd5\u5236\u5bfc\u5b9a\u4e49\u662f\u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\u7684\u5f62\u5f0f\u5316\u8868\u793a\uff0c\u7531 \u6587\u6cd5\u89c4\u5219 \u548c \u8bed\u4e49\u89c4\u5219 \u7ec4\u6210\uff1a - \u6587\u6cd5\u89c4\u5219 \uff1a\u5b9a\u4e49\u8bed\u6cd5\u7ed3\u6784\u3002 - \u8bed\u4e49\u89c4\u5219 \uff1a\u5b9a\u4e49\u5982\u4f55\u8ba1\u7b97\u5c5e\u6027\u503c\u6216\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002","title":"\u8bed\u6cd5\u5236\u5bfc\u5b9a\u4e49\uff08Syntax-Directed Definition, SDD\uff09"},{"location":"Compiler/ch6/#_42","text":"\u57fa\u4e8e\u8bed\u6cd5\u6811 \uff1a \u5148\u6784\u9020\u8bed\u6cd5\u6811\uff0c\u518d\u901a\u8fc7\u904d\u5386\u8bed\u6cd5\u6811\u8ba1\u7b97\u5c5e\u6027\u503c\u6216\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 \u793a\u4f8b\uff1a E \u2192 E1 + T { E.val = E1.val + T.val } \u57fa\u4e8e\u81ea\u9876\u5411\u4e0b\u6216\u81ea\u5e95\u5411\u4e0a\u7684\u8bed\u6cd5\u5206\u6790 \uff1a \u5728\u8bed\u6cd5\u5206\u6790\u7684\u540c\u65f6\u6267\u884c\u8bed\u4e49\u52a8\u4f5c\u3002 \u793a\u4f8b\uff1a E \u2192 E1 + T { print(\"+\") }","title":"\u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\u7684\u5b9e\u73b0\u65b9\u5f0f"},{"location":"Compiler/ch6/#_43","text":"","title":"\u793a\u4f8b\uff1a\u8868\u8fbe\u5f0f\u6c42\u503c"},{"location":"Compiler/ch6/#_44","text":"E \u2192 E + T E \u2192 T T \u2192 T * F T \u2192 F F \u2192 (E) F \u2192 id","title":"\u6587\u6cd5\u89c4\u5219"},{"location":"Compiler/ch6/#_45","text":"E \u2192 E1 + T { E.val = E1.val + T.val } E \u2192 T { E.val = T.val } T \u2192 T1 * F { T.val = T1.val * F.val } T \u2192 F { T.val = F.val } F \u2192 (E) { F.val = E.val } F \u2192 id { F.val = id.lexval }","title":"\u8bed\u4e49\u89c4\u5219"},{"location":"Compiler/ch6/#_46","text":"id1 = 2, id2 = 3, id3 = 4 \u8868\u8fbe\u5f0f\uff1aid1 + id2 * id3","title":"\u8f93\u5165"},{"location":"Compiler/ch6/#_47","text":"\u6784\u9020\u8bed\u6cd5\u6811\uff1a E / | \\ E + T | | id1 T | T * F | | id2 id3 \u8ba1\u7b97\u5c5e\u6027\u503c\uff1a id1.val = 2 id2.val = 3 id3.val = 4 T.val = id2.val * id3.val = 3 * 4 = 12 E.val = id1.val + T.val = 2 + 12 = 14","title":"\u7ffb\u8bd1\u8fc7\u7a0b"},{"location":"Compiler/ch6/#_48","text":"\u8868\u8fbe\u5f0f\u6c42\u503c \uff1a \u8ba1\u7b97\u8868\u8fbe\u5f0f\u7684\u503c\u3002 \u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \uff1a \u751f\u6210\u4e09\u5730\u5740\u4ee3\u7801\u6216\u5176\u4ed6\u4e2d\u95f4\u8868\u793a\u3002 \u7c7b\u578b\u68c0\u67e5 \uff1a \u68c0\u67e5\u53d8\u91cf\u548c\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u662f\u5426\u5339\u914d\u3002 \u76ee\u6807\u4ee3\u7801\u751f\u6210 \uff1a \u76f4\u63a5\u751f\u6210\u6c47\u7f16\u4ee3\u7801\u6216\u673a\u5668\u4ee3\u7801\u3002","title":"\u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\u7684\u5e94\u7528"},{"location":"Compiler/ch6/#_49","text":"\u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\u901a\u8fc7\u5728\u6587\u6cd5\u89c4\u5219\u4e2d\u9644\u52a0\u8bed\u4e49\u52a8\u4f5c\uff0c\u5c06\u8bed\u6cd5\u5206\u6790\u4e0e\u8bed\u4e49\u5904\u7406\u7ed3\u5408\u8d77\u6765\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7f16\u8bd1\u5668\u7684\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u3001\u7c7b\u578b\u68c0\u67e5\u548c\u76ee\u6807\u4ee3\u7801\u751f\u6210\u7b49\u9636\u6bb5\u30022. \u8ba1\u7b97\u5c5e\u6027\u503c\uff1a - id1.val = 2 - id2.val = 3 - id3.val = 4 - T.val = id2.val * id3.val = 3 * 4 = 12 - E.val = id1.val + T.val = 2 + 12 = 14","title":"\u603b\u7ed3"},{"location":"Compiler/ch6/#_50","text":"\u8868\u8fbe\u5f0f\u6c42\u503c \uff1a \u8ba1\u7b97\u8868\u8fbe\u5f0f\u7684\u503c\u3002 \u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \uff1a \u751f\u6210\u4e09\u5730\u5740\u4ee3\u7801\u6216\u5176\u4ed6\u4e2d\u95f4\u8868\u793a\u3002 \u7c7b\u578b\u68c0\u67e5 \uff1a \u68c0\u67e5\u53d8\u91cf\u548c\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u662f\u5426\u5339\u914d\u3002 \u76ee\u6807\u4ee3\u7801\u751f\u6210 \uff1a \u76f4\u63a5\u751f\u6210\u6c47\u7f16\u4ee3\u7801\u6216\u673a\u5668\u4ee3\u7801\u3002","title":"\u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\u7684\u5e94\u7528"},{"location":"Compiler/ch6/#_51","text":"\u8bed\u6cd5\u5236\u5bfc\u7ffb\u8bd1\u901a\u8fc7\u5728\u6587\u6cd5\u89c4\u5219\u4e2d\u9644\u52a0\u8bed\u4e49\u52a8\u4f5c\uff0c\u5c06\u8bed\u6cd5\u5206\u6790\u4e0e\u8bed\u4e49\u5904\u7406\u7ed3\u5408\u8d77\u6765\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7f16\u8bd1\u5668\u7684\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u3001\u7c7b\u578b\u68c0\u67e5\u548c\u76ee\u6807\u4ee3\u7801\u751f\u6210\u7b49\u9636\u6bb5\u3002","title":"\u603b\u7ed3"},{"location":"Compiler/concept/","text":"\uff081\uff09\u7f16\u8bd1\u7a0b\u5e8f \u5b9a\u4e49 \uff1a\u7f16\u8bd1\u7a0b\u5e8f\uff08Compiler\uff09\u662f\u4e00\u79cd\u5c06\u9ad8\u7ea7\u8bed\u8a00\uff08\u5982 C\u3001C++\u3001Java \u7b49\uff09\u7f16\u5199\u7684\u6e90\u7a0b\u5e8f\u7ffb\u8bd1\u4e3a\u76ee\u6807\u7a0b\u5e8f\uff08\u5982\u673a\u5668\u7801\u6216\u4e2d\u95f4\u4ee3\u7801\uff09\u7684\u8f6f\u4ef6\u3002 \u4f5c\u7528 \uff1a\u5c06\u4eba\u7c7b\u53ef\u8bfb\u7684\u4ee3\u7801\u8f6c\u6362\u4e3a\u8ba1\u7b97\u673a\u53ef\u6267\u884c\u7684\u4ee3\u7801\u3002 \u4e3b\u8981\u9636\u6bb5 \uff1a \u524d\u7aef\uff1a\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u3002 \u4e2d\u95f4\u9636\u6bb5\uff1a\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u548c\u4f18\u5316\u3002 \u540e\u7aef\uff1a\u76ee\u6807\u4ee3\u7801\u751f\u6210\u548c\u4f18\u5316\u3002 \uff082\uff09\u6e90\u7a0b\u5e8f \u5b9a\u4e49 \uff1a\u6e90\u7a0b\u5e8f\uff08Source Program\uff09\u662f\u7528\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\uff0c\u901a\u5e38\u662f\u4eba\u7c7b\u53ef\u8bfb\u7684\u4ee3\u7801\u3002 \u7279\u70b9 \uff1a \u9700\u8981\u901a\u8fc7\u7f16\u8bd1\u7a0b\u5e8f\u7ffb\u8bd1\u4e3a\u76ee\u6807\u7a0b\u5e8f\u624d\u80fd\u88ab\u8ba1\u7b97\u673a\u6267\u884c\u3002 \u4f8b\u5982\uff1a\u7528 C++ \u7f16\u5199\u7684 .cpp \u6587\u4ef6\u3002 \uff083\uff09\u76ee\u6807\u7a0b\u5e8f \u5b9a\u4e49 \uff1a\u76ee\u6807\u7a0b\u5e8f\uff08Target Program\uff09\u662f\u7f16\u8bd1\u7a0b\u5e8f\u5c06\u6e90\u7a0b\u5e8f\u7ffb\u8bd1\u540e\u7684\u7ed3\u679c\uff0c\u901a\u5e38\u662f\u673a\u5668\u7801\u6216\u4e2d\u95f4\u4ee3\u7801\u3002 \u7279\u70b9 \uff1a \u76ee\u6807\u7a0b\u5e8f\u53ef\u4ee5\u76f4\u63a5\u88ab\u8ba1\u7b97\u673a\u6267\u884c\uff08\u5982\u673a\u5668\u7801\uff09\uff0c\u6216\u8005\u9700\u8981\u8fdb\u4e00\u6b65\u94fe\u63a5\uff08\u5982\u4e2d\u95f4\u4ee3\u7801\uff09\u3002 \u4f8b\u5982\uff1a\u7f16\u8bd1\u540e\u7684 .o \u6216 .exe \u6587\u4ef6\u3002 \uff084\uff09\u7f16\u8bd1\u7a0b\u5e8f\u7684\u524d\u7aef \u5b9a\u4e49 \uff1a\u7f16\u8bd1\u7a0b\u5e8f\u7684\u524d\u7aef\u8d1f\u8d23\u5c06\u6e90\u7a0b\u5e8f\u8f6c\u6362\u4e3a\u4e2d\u95f4\u8868\u793a\uff08Intermediate Representation, IR\uff09\uff0c\u5e76\u68c0\u67e5\u7a0b\u5e8f\u7684\u8bed\u6cd5\u548c\u8bed\u4e49\u662f\u5426\u6b63\u786e\u3002 \u4e3b\u8981\u529f\u80fd \uff1a \u8bcd\u6cd5\u5206\u6790 \uff1a\u5c06\u6e90\u4ee3\u7801\u5206\u89e3\u4e3a\u57fa\u672c\u7684\u8bcd\u6cd5\u5355\u5143\uff08Token\uff09\u3002 \u8bed\u6cd5\u5206\u6790 \uff1a\u68c0\u67e5\u6e90\u4ee3\u7801\u662f\u5426\u7b26\u5408\u8bed\u8a00\u7684\u8bed\u6cd5\u89c4\u5219\uff0c\u751f\u6210\u8bed\u6cd5\u6811\u3002 \u8bed\u4e49\u5206\u6790 \uff1a\u68c0\u67e5\u7a0b\u5e8f\u7684\u8bed\u4e49\u662f\u5426\u6b63\u786e\uff08\u5982\u53d8\u91cf\u662f\u5426\u5b9a\u4e49\u3001\u7c7b\u578b\u662f\u5426\u5339\u914d\uff09\u3002 \u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \uff1a\u5c06\u8bed\u6cd5\u6811\u8f6c\u6362\u4e3a\u4e2d\u95f4\u4ee3\u7801\u3002 \u7279\u70b9 \uff1a\u4e0e\u5177\u4f53\u7684\u76ee\u6807\u673a\u5668\u65e0\u5173\u3002 \uff085\uff09\u540e\u7aef \u5b9a\u4e49 \uff1a\u7f16\u8bd1\u7a0b\u5e8f\u7684\u540e\u7aef\u8d1f\u8d23\u5c06\u4e2d\u95f4\u4ee3\u7801\u4f18\u5316\u5e76\u751f\u6210\u76ee\u6807\u4ee3\u7801\uff08\u5982\u673a\u5668\u7801\uff09\u3002 \u4e3b\u8981\u529f\u80fd \uff1a \u4ee3\u7801\u4f18\u5316 \uff1a\u5bf9\u4e2d\u95f4\u4ee3\u7801\u8fdb\u884c\u4f18\u5316\uff08\u5982\u6d88\u9664\u5197\u4f59\u4ee3\u7801\u3001\u5faa\u73af\u4f18\u5316\uff09\u3002 \u76ee\u6807\u4ee3\u7801\u751f\u6210 \uff1a\u5c06\u4f18\u5316\u540e\u7684\u4e2d\u95f4\u4ee3\u7801\u7ffb\u8bd1\u4e3a\u76ee\u6807\u673a\u5668\u7684\u673a\u5668\u7801\u3002 \u5bc4\u5b58\u5668\u5206\u914d \uff1a\u4e3a\u76ee\u6807\u4ee3\u7801\u4e2d\u7684\u53d8\u91cf\u5206\u914d\u5bc4\u5b58\u5668\u3002 \u7279\u70b9 \uff1a\u4e0e\u6e90\u8bed\u8a00\u65e0\u5173\uff0c\u4e13\u6ce8\u4e8e\u76ee\u6807\u673a\u5668\u7684\u7279\u6027\u3002 \uff086\uff09\u904d \u5b9a\u4e49 \uff1a\u904d\uff08Pass\uff09\u662f\u6307\u7f16\u8bd1\u7a0b\u5e8f\u5bf9\u6e90\u7a0b\u5e8f\u6216\u4e2d\u95f4\u4ee3\u7801\u8fdb\u884c\u7684\u4e00\u6b21\u5b8c\u6574\u5904\u7406\u3002 \u5206\u7c7b \uff1a \u5355\u904d\u7f16\u8bd1\u5668 \uff1a\u53ea\u9700\u4e00\u6b21\u904d\u5386\u5373\u53ef\u5b8c\u6210\u7f16\u8bd1\uff08\u5982\u65e9\u671f\u7684 Pascal \u7f16\u8bd1\u5668\uff09\u3002 \u591a\u904d\u7f16\u8bd1\u5668 \uff1a\u9700\u8981\u591a\u6b21\u904d\u5386\u6e90\u4ee3\u7801\u6216\u4e2d\u95f4\u4ee3\u7801\uff0c\u6bcf\u6b21\u904d\u5386\u5b8c\u6210\u4e00\u4e2a\u7279\u5b9a\u7684\u4efb\u52a1\uff08\u5982\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u4f18\u5316\u7b49\uff09\u3002 \u7279\u70b9 \uff1a \u591a\u904d\u7f16\u8bd1\u5668\u901a\u5e38\u66f4\u7075\u6d3b\uff0c\u9002\u5408\u590d\u6742\u7684\u4f18\u5316\u3002 \u5355\u904d\u7f16\u8bd1\u5668\u6548\u7387\u8f83\u9ad8\uff0c\u4f46\u529f\u80fd\u6709\u9650\u3002 \u603b\u7ed3 \u7f16\u8bd1\u7a0b\u5e8f \uff1a\u5c06\u6e90\u7a0b\u5e8f\u7ffb\u8bd1\u4e3a\u76ee\u6807\u7a0b\u5e8f\u7684\u8f6f\u4ef6\u3002 \u6e90\u7a0b\u5e8f \uff1a\u7528\u9ad8\u7ea7\u8bed\u8a00\u7f16\u5199\u7684\u4ee3\u7801\u3002 \u76ee\u6807\u7a0b\u5e8f \uff1a\u7f16\u8bd1\u540e\u7684\u673a\u5668\u7801\u6216\u4e2d\u95f4\u4ee3\u7801\u3002 \u524d\u7aef \uff1a\u8d1f\u8d23\u5206\u6790\u6e90\u4ee3\u7801\u5e76\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 \u540e\u7aef \uff1a\u8d1f\u8d23\u4f18\u5316\u4e2d\u95f4\u4ee3\u7801\u5e76\u751f\u6210\u76ee\u6807\u4ee3\u7801\u3002 \u904d \uff1a\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u5bf9\u4ee3\u7801\u7684\u4e00\u6b21\u5b8c\u6574\u5904\u7406\u3002 1. \u7ffb\u8bd1\u7a0b\u5e8f \u5b9a\u4e49 \uff1a\u7ffb\u8bd1\u7a0b\u5e8f\u662f\u4e00\u79cd\u5c06\u9ad8\u7ea7\u8bed\u8a00\u7f16\u5199\u7684\u6e90\u7a0b\u5e8f\u8f6c\u6362\u4e3a\u76ee\u6807\u7a0b\u5e8f\u7684\u5de5\u5177\uff0c\u5305\u62ec\u7f16\u8bd1\u7a0b\u5e8f\u548c\u89e3\u91ca\u7a0b\u5e8f\u3002 \u4f5c\u7528 \uff1a\u5c06\u4eba\u7c7b\u53ef\u8bfb\u7684\u4ee3\u7801\uff08\u6e90\u7a0b\u5e8f\uff09\u7ffb\u8bd1\u4e3a\u8ba1\u7b97\u673a\u53ef\u4ee5\u7406\u89e3\u7684\u5f62\u5f0f\uff08\u5982\u673a\u5668\u7801\u6216\u4e2d\u95f4\u4ee3\u7801\uff09\u3002 \u5206\u7c7b \uff1a \u7f16\u8bd1\u7a0b\u5e8f\uff08Compiler\uff09 \u89e3\u91ca\u7a0b\u5e8f\uff08Interpreter\uff09 2. \u7f16\u8bd1\u7a0b\u5e8f \u5b9a\u4e49 \uff1a\u7f16\u8bd1\u7a0b\u5e8f\u662f\u4e00\u79cd\u7ffb\u8bd1\u7a0b\u5e8f\uff0c\u5b83\u5c06\u6e90\u7a0b\u5e8f\u4e00\u6b21\u6027\u7ffb\u8bd1\u4e3a\u76ee\u6807\u7a0b\u5e8f\uff08\u5982\u673a\u5668\u7801\uff09\uff0c\u7136\u540e\u7531\u8ba1\u7b97\u673a\u76f4\u63a5\u6267\u884c\u76ee\u6807\u7a0b\u5e8f\u3002 \u7279\u70b9 \uff1a \u7ffb\u8bd1\u548c\u6267\u884c\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u9636\u6bb5\u3002 \u7ffb\u8bd1\u540e\u7684\u76ee\u6807\u7a0b\u5e8f\u53ef\u4ee5\u591a\u6b21\u8fd0\u884c\uff0c\u65e0\u9700\u91cd\u590d\u7ffb\u8bd1\u3002 \u7ffb\u8bd1\u901f\u5ea6\u8f83\u6162\uff0c\u4f46\u8fd0\u884c\u901f\u5ea6\u5feb\u3002 \u793a\u4f8b \uff1aC\u3001C++\u3001Java\uff08\u7f16\u8bd1\u4e3a\u5b57\u8282\u7801\uff09\u7b49\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u3002 3. \u89e3\u91ca\u7a0b\u5e8f \u5b9a\u4e49 \uff1a\u89e3\u91ca\u7a0b\u5e8f\u662f\u4e00\u79cd\u7ffb\u8bd1\u7a0b\u5e8f\uff0c\u5b83\u9010\u884c\u7ffb\u8bd1\u6e90\u7a0b\u5e8f\u5e76\u7acb\u5373\u6267\u884c\uff0c\u65e0\u9700\u751f\u6210\u72ec\u7acb\u7684\u76ee\u6807\u7a0b\u5e8f\u3002 \u7279\u70b9 \uff1a \u7ffb\u8bd1\u548c\u6267\u884c\u4ea4\u66ff\u8fdb\u884c\u3002 \u6bcf\u6b21\u8fd0\u884c\u90fd\u9700\u8981\u91cd\u65b0\u7ffb\u8bd1\uff0c\u6548\u7387\u8f83\u4f4e\u3002 \u66f4\u9002\u5408\u4ea4\u4e92\u5f0f\u5f00\u53d1\u548c\u8c03\u8bd5\u3002 \u793a\u4f8b \uff1aPython\u3001JavaScript\u3001PHP \u7b49\u8bed\u8a00\u7684\u89e3\u91ca\u5668\u3002 4. \u4e09\u8005\u4e4b\u95f4\u7684\u5173\u7cfb \u7ffb\u8bd1\u7a0b\u5e8f \u662f\u4e00\u4e2a\u603b\u79f0\uff0c\u5305\u542b\u7f16\u8bd1\u7a0b\u5e8f\u548c\u89e3\u91ca\u7a0b\u5e8f\u3002 \u7f16\u8bd1\u7a0b\u5e8f \u548c \u89e3\u91ca\u7a0b\u5e8f \u662f\u4e24\u79cd\u4e0d\u540c\u7684\u7ffb\u8bd1\u65b9\u5f0f\uff1a \u7f16\u8bd1\u7a0b\u5e8f\u5c06\u6e90\u4ee3\u7801\u4e00\u6b21\u6027\u7ffb\u8bd1\u4e3a\u76ee\u6807\u4ee3\u7801\uff0c\u8fd0\u884c\u65f6\u65e0\u9700\u7ffb\u8bd1\u3002 \u89e3\u91ca\u7a0b\u5e8f\u9010\u884c\u7ffb\u8bd1\u5e76\u7acb\u5373\u6267\u884c\uff0c\u8fd0\u884c\u65f6\u9700\u8981\u7ffb\u8bd1\u3002 \u6df7\u5408\u6a21\u5f0f \uff1a \u4e00\u4e9b\u8bed\u8a00\uff08\u5982 Java \u548c Python\uff09\u7ed3\u5408\u4e86\u7f16\u8bd1\u548c\u89e3\u91ca\u7684\u7279\u70b9\uff1a Java\uff1a\u5148\u901a\u8fc7\u7f16\u8bd1\u5668\u5c06\u6e90\u4ee3\u7801\u7f16\u8bd1\u4e3a\u5b57\u8282\u7801\uff08\u4e2d\u95f4\u4ee3\u7801\uff09\uff0c\u518d\u901a\u8fc7\u89e3\u91ca\u5668\uff08JVM\uff09\u6267\u884c\u5b57\u8282\u7801\u3002 Python\uff1a\u5148\u5c06\u6e90\u4ee3\u7801\u7f16\u8bd1\u4e3a\u5b57\u8282\u7801\uff08 .pyc \u6587\u4ef6\uff09\uff0c\u518d\u7531\u89e3\u91ca\u5668\u6267\u884c\u3002 \u603b\u7ed3 \u7ffb\u8bd1\u7a0b\u5e8f \u662f\u4e00\u4e2a\u603b\u79f0\uff0c\u5305\u542b\u7f16\u8bd1\u7a0b\u5e8f\u548c\u89e3\u91ca\u7a0b\u5e8f\u3002 \u7f16\u8bd1\u7a0b\u5e8f \uff1a\u4e00\u6b21\u6027\u7ffb\u8bd1\uff0c\u751f\u6210\u76ee\u6807\u7a0b\u5e8f\uff0c\u8fd0\u884c\u6548\u7387\u9ad8\u3002 \u89e3\u91ca\u7a0b\u5e8f \uff1a\u9010\u884c\u7ffb\u8bd1\u5e76\u6267\u884c\uff0c\u9002\u5408\u4ea4\u4e92\u5f0f\u5f00\u53d1\u3002 \u6df7\u5408\u6a21\u5f0f \uff1a\u7ed3\u5408\u7f16\u8bd1\u548c\u89e3\u91ca\u7684\u4f18\u70b9\uff0c\u5148\u7f16\u8bd1\u4e3a\u4e2d\u95f4\u4ee3\u7801\uff0c\u518d\u89e3\u91ca\u6267\u884c\u3002","title":"\u7f16\u8bd1\u5668\u7684\u4e00\u4e9b\u6982\u5ff5"},{"location":"Compiler/concept/#1","text":"\u5b9a\u4e49 \uff1a\u7f16\u8bd1\u7a0b\u5e8f\uff08Compiler\uff09\u662f\u4e00\u79cd\u5c06\u9ad8\u7ea7\u8bed\u8a00\uff08\u5982 C\u3001C++\u3001Java \u7b49\uff09\u7f16\u5199\u7684\u6e90\u7a0b\u5e8f\u7ffb\u8bd1\u4e3a\u76ee\u6807\u7a0b\u5e8f\uff08\u5982\u673a\u5668\u7801\u6216\u4e2d\u95f4\u4ee3\u7801\uff09\u7684\u8f6f\u4ef6\u3002 \u4f5c\u7528 \uff1a\u5c06\u4eba\u7c7b\u53ef\u8bfb\u7684\u4ee3\u7801\u8f6c\u6362\u4e3a\u8ba1\u7b97\u673a\u53ef\u6267\u884c\u7684\u4ee3\u7801\u3002 \u4e3b\u8981\u9636\u6bb5 \uff1a \u524d\u7aef\uff1a\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u3002 \u4e2d\u95f4\u9636\u6bb5\uff1a\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\u548c\u4f18\u5316\u3002 \u540e\u7aef\uff1a\u76ee\u6807\u4ee3\u7801\u751f\u6210\u548c\u4f18\u5316\u3002","title":"\uff081\uff09\u7f16\u8bd1\u7a0b\u5e8f"},{"location":"Compiler/concept/#2","text":"\u5b9a\u4e49 \uff1a\u6e90\u7a0b\u5e8f\uff08Source Program\uff09\u662f\u7528\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\uff0c\u901a\u5e38\u662f\u4eba\u7c7b\u53ef\u8bfb\u7684\u4ee3\u7801\u3002 \u7279\u70b9 \uff1a \u9700\u8981\u901a\u8fc7\u7f16\u8bd1\u7a0b\u5e8f\u7ffb\u8bd1\u4e3a\u76ee\u6807\u7a0b\u5e8f\u624d\u80fd\u88ab\u8ba1\u7b97\u673a\u6267\u884c\u3002 \u4f8b\u5982\uff1a\u7528 C++ \u7f16\u5199\u7684 .cpp \u6587\u4ef6\u3002","title":"\uff082\uff09\u6e90\u7a0b\u5e8f"},{"location":"Compiler/concept/#3","text":"\u5b9a\u4e49 \uff1a\u76ee\u6807\u7a0b\u5e8f\uff08Target Program\uff09\u662f\u7f16\u8bd1\u7a0b\u5e8f\u5c06\u6e90\u7a0b\u5e8f\u7ffb\u8bd1\u540e\u7684\u7ed3\u679c\uff0c\u901a\u5e38\u662f\u673a\u5668\u7801\u6216\u4e2d\u95f4\u4ee3\u7801\u3002 \u7279\u70b9 \uff1a \u76ee\u6807\u7a0b\u5e8f\u53ef\u4ee5\u76f4\u63a5\u88ab\u8ba1\u7b97\u673a\u6267\u884c\uff08\u5982\u673a\u5668\u7801\uff09\uff0c\u6216\u8005\u9700\u8981\u8fdb\u4e00\u6b65\u94fe\u63a5\uff08\u5982\u4e2d\u95f4\u4ee3\u7801\uff09\u3002 \u4f8b\u5982\uff1a\u7f16\u8bd1\u540e\u7684 .o \u6216 .exe \u6587\u4ef6\u3002","title":"\uff083\uff09\u76ee\u6807\u7a0b\u5e8f"},{"location":"Compiler/concept/#4","text":"\u5b9a\u4e49 \uff1a\u7f16\u8bd1\u7a0b\u5e8f\u7684\u524d\u7aef\u8d1f\u8d23\u5c06\u6e90\u7a0b\u5e8f\u8f6c\u6362\u4e3a\u4e2d\u95f4\u8868\u793a\uff08Intermediate Representation, IR\uff09\uff0c\u5e76\u68c0\u67e5\u7a0b\u5e8f\u7684\u8bed\u6cd5\u548c\u8bed\u4e49\u662f\u5426\u6b63\u786e\u3002 \u4e3b\u8981\u529f\u80fd \uff1a \u8bcd\u6cd5\u5206\u6790 \uff1a\u5c06\u6e90\u4ee3\u7801\u5206\u89e3\u4e3a\u57fa\u672c\u7684\u8bcd\u6cd5\u5355\u5143\uff08Token\uff09\u3002 \u8bed\u6cd5\u5206\u6790 \uff1a\u68c0\u67e5\u6e90\u4ee3\u7801\u662f\u5426\u7b26\u5408\u8bed\u8a00\u7684\u8bed\u6cd5\u89c4\u5219\uff0c\u751f\u6210\u8bed\u6cd5\u6811\u3002 \u8bed\u4e49\u5206\u6790 \uff1a\u68c0\u67e5\u7a0b\u5e8f\u7684\u8bed\u4e49\u662f\u5426\u6b63\u786e\uff08\u5982\u53d8\u91cf\u662f\u5426\u5b9a\u4e49\u3001\u7c7b\u578b\u662f\u5426\u5339\u914d\uff09\u3002 \u4e2d\u95f4\u4ee3\u7801\u751f\u6210 \uff1a\u5c06\u8bed\u6cd5\u6811\u8f6c\u6362\u4e3a\u4e2d\u95f4\u4ee3\u7801\u3002 \u7279\u70b9 \uff1a\u4e0e\u5177\u4f53\u7684\u76ee\u6807\u673a\u5668\u65e0\u5173\u3002","title":"\uff084\uff09\u7f16\u8bd1\u7a0b\u5e8f\u7684\u524d\u7aef"},{"location":"Compiler/concept/#5","text":"\u5b9a\u4e49 \uff1a\u7f16\u8bd1\u7a0b\u5e8f\u7684\u540e\u7aef\u8d1f\u8d23\u5c06\u4e2d\u95f4\u4ee3\u7801\u4f18\u5316\u5e76\u751f\u6210\u76ee\u6807\u4ee3\u7801\uff08\u5982\u673a\u5668\u7801\uff09\u3002 \u4e3b\u8981\u529f\u80fd \uff1a \u4ee3\u7801\u4f18\u5316 \uff1a\u5bf9\u4e2d\u95f4\u4ee3\u7801\u8fdb\u884c\u4f18\u5316\uff08\u5982\u6d88\u9664\u5197\u4f59\u4ee3\u7801\u3001\u5faa\u73af\u4f18\u5316\uff09\u3002 \u76ee\u6807\u4ee3\u7801\u751f\u6210 \uff1a\u5c06\u4f18\u5316\u540e\u7684\u4e2d\u95f4\u4ee3\u7801\u7ffb\u8bd1\u4e3a\u76ee\u6807\u673a\u5668\u7684\u673a\u5668\u7801\u3002 \u5bc4\u5b58\u5668\u5206\u914d \uff1a\u4e3a\u76ee\u6807\u4ee3\u7801\u4e2d\u7684\u53d8\u91cf\u5206\u914d\u5bc4\u5b58\u5668\u3002 \u7279\u70b9 \uff1a\u4e0e\u6e90\u8bed\u8a00\u65e0\u5173\uff0c\u4e13\u6ce8\u4e8e\u76ee\u6807\u673a\u5668\u7684\u7279\u6027\u3002","title":"\uff085\uff09\u540e\u7aef"},{"location":"Compiler/concept/#6","text":"\u5b9a\u4e49 \uff1a\u904d\uff08Pass\uff09\u662f\u6307\u7f16\u8bd1\u7a0b\u5e8f\u5bf9\u6e90\u7a0b\u5e8f\u6216\u4e2d\u95f4\u4ee3\u7801\u8fdb\u884c\u7684\u4e00\u6b21\u5b8c\u6574\u5904\u7406\u3002 \u5206\u7c7b \uff1a \u5355\u904d\u7f16\u8bd1\u5668 \uff1a\u53ea\u9700\u4e00\u6b21\u904d\u5386\u5373\u53ef\u5b8c\u6210\u7f16\u8bd1\uff08\u5982\u65e9\u671f\u7684 Pascal \u7f16\u8bd1\u5668\uff09\u3002 \u591a\u904d\u7f16\u8bd1\u5668 \uff1a\u9700\u8981\u591a\u6b21\u904d\u5386\u6e90\u4ee3\u7801\u6216\u4e2d\u95f4\u4ee3\u7801\uff0c\u6bcf\u6b21\u904d\u5386\u5b8c\u6210\u4e00\u4e2a\u7279\u5b9a\u7684\u4efb\u52a1\uff08\u5982\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u4f18\u5316\u7b49\uff09\u3002 \u7279\u70b9 \uff1a \u591a\u904d\u7f16\u8bd1\u5668\u901a\u5e38\u66f4\u7075\u6d3b\uff0c\u9002\u5408\u590d\u6742\u7684\u4f18\u5316\u3002 \u5355\u904d\u7f16\u8bd1\u5668\u6548\u7387\u8f83\u9ad8\uff0c\u4f46\u529f\u80fd\u6709\u9650\u3002","title":"\uff086\uff09\u904d"},{"location":"Compiler/concept/#_1","text":"\u7f16\u8bd1\u7a0b\u5e8f \uff1a\u5c06\u6e90\u7a0b\u5e8f\u7ffb\u8bd1\u4e3a\u76ee\u6807\u7a0b\u5e8f\u7684\u8f6f\u4ef6\u3002 \u6e90\u7a0b\u5e8f \uff1a\u7528\u9ad8\u7ea7\u8bed\u8a00\u7f16\u5199\u7684\u4ee3\u7801\u3002 \u76ee\u6807\u7a0b\u5e8f \uff1a\u7f16\u8bd1\u540e\u7684\u673a\u5668\u7801\u6216\u4e2d\u95f4\u4ee3\u7801\u3002 \u524d\u7aef \uff1a\u8d1f\u8d23\u5206\u6790\u6e90\u4ee3\u7801\u5e76\u751f\u6210\u4e2d\u95f4\u4ee3\u7801\u3002 \u540e\u7aef \uff1a\u8d1f\u8d23\u4f18\u5316\u4e2d\u95f4\u4ee3\u7801\u5e76\u751f\u6210\u76ee\u6807\u4ee3\u7801\u3002 \u904d \uff1a\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u5bf9\u4ee3\u7801\u7684\u4e00\u6b21\u5b8c\u6574\u5904\u7406\u3002","title":"\u603b\u7ed3"},{"location":"Compiler/concept/#1_1","text":"\u5b9a\u4e49 \uff1a\u7ffb\u8bd1\u7a0b\u5e8f\u662f\u4e00\u79cd\u5c06\u9ad8\u7ea7\u8bed\u8a00\u7f16\u5199\u7684\u6e90\u7a0b\u5e8f\u8f6c\u6362\u4e3a\u76ee\u6807\u7a0b\u5e8f\u7684\u5de5\u5177\uff0c\u5305\u62ec\u7f16\u8bd1\u7a0b\u5e8f\u548c\u89e3\u91ca\u7a0b\u5e8f\u3002 \u4f5c\u7528 \uff1a\u5c06\u4eba\u7c7b\u53ef\u8bfb\u7684\u4ee3\u7801\uff08\u6e90\u7a0b\u5e8f\uff09\u7ffb\u8bd1\u4e3a\u8ba1\u7b97\u673a\u53ef\u4ee5\u7406\u89e3\u7684\u5f62\u5f0f\uff08\u5982\u673a\u5668\u7801\u6216\u4e2d\u95f4\u4ee3\u7801\uff09\u3002 \u5206\u7c7b \uff1a \u7f16\u8bd1\u7a0b\u5e8f\uff08Compiler\uff09 \u89e3\u91ca\u7a0b\u5e8f\uff08Interpreter\uff09","title":"1. \u7ffb\u8bd1\u7a0b\u5e8f"},{"location":"Compiler/concept/#2_1","text":"\u5b9a\u4e49 \uff1a\u7f16\u8bd1\u7a0b\u5e8f\u662f\u4e00\u79cd\u7ffb\u8bd1\u7a0b\u5e8f\uff0c\u5b83\u5c06\u6e90\u7a0b\u5e8f\u4e00\u6b21\u6027\u7ffb\u8bd1\u4e3a\u76ee\u6807\u7a0b\u5e8f\uff08\u5982\u673a\u5668\u7801\uff09\uff0c\u7136\u540e\u7531\u8ba1\u7b97\u673a\u76f4\u63a5\u6267\u884c\u76ee\u6807\u7a0b\u5e8f\u3002 \u7279\u70b9 \uff1a \u7ffb\u8bd1\u548c\u6267\u884c\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u9636\u6bb5\u3002 \u7ffb\u8bd1\u540e\u7684\u76ee\u6807\u7a0b\u5e8f\u53ef\u4ee5\u591a\u6b21\u8fd0\u884c\uff0c\u65e0\u9700\u91cd\u590d\u7ffb\u8bd1\u3002 \u7ffb\u8bd1\u901f\u5ea6\u8f83\u6162\uff0c\u4f46\u8fd0\u884c\u901f\u5ea6\u5feb\u3002 \u793a\u4f8b \uff1aC\u3001C++\u3001Java\uff08\u7f16\u8bd1\u4e3a\u5b57\u8282\u7801\uff09\u7b49\u8bed\u8a00\u7684\u7f16\u8bd1\u5668\u3002","title":"2. \u7f16\u8bd1\u7a0b\u5e8f"},{"location":"Compiler/concept/#3_1","text":"\u5b9a\u4e49 \uff1a\u89e3\u91ca\u7a0b\u5e8f\u662f\u4e00\u79cd\u7ffb\u8bd1\u7a0b\u5e8f\uff0c\u5b83\u9010\u884c\u7ffb\u8bd1\u6e90\u7a0b\u5e8f\u5e76\u7acb\u5373\u6267\u884c\uff0c\u65e0\u9700\u751f\u6210\u72ec\u7acb\u7684\u76ee\u6807\u7a0b\u5e8f\u3002 \u7279\u70b9 \uff1a \u7ffb\u8bd1\u548c\u6267\u884c\u4ea4\u66ff\u8fdb\u884c\u3002 \u6bcf\u6b21\u8fd0\u884c\u90fd\u9700\u8981\u91cd\u65b0\u7ffb\u8bd1\uff0c\u6548\u7387\u8f83\u4f4e\u3002 \u66f4\u9002\u5408\u4ea4\u4e92\u5f0f\u5f00\u53d1\u548c\u8c03\u8bd5\u3002 \u793a\u4f8b \uff1aPython\u3001JavaScript\u3001PHP \u7b49\u8bed\u8a00\u7684\u89e3\u91ca\u5668\u3002","title":"3. \u89e3\u91ca\u7a0b\u5e8f"},{"location":"Compiler/concept/#4_1","text":"\u7ffb\u8bd1\u7a0b\u5e8f \u662f\u4e00\u4e2a\u603b\u79f0\uff0c\u5305\u542b\u7f16\u8bd1\u7a0b\u5e8f\u548c\u89e3\u91ca\u7a0b\u5e8f\u3002 \u7f16\u8bd1\u7a0b\u5e8f \u548c \u89e3\u91ca\u7a0b\u5e8f \u662f\u4e24\u79cd\u4e0d\u540c\u7684\u7ffb\u8bd1\u65b9\u5f0f\uff1a \u7f16\u8bd1\u7a0b\u5e8f\u5c06\u6e90\u4ee3\u7801\u4e00\u6b21\u6027\u7ffb\u8bd1\u4e3a\u76ee\u6807\u4ee3\u7801\uff0c\u8fd0\u884c\u65f6\u65e0\u9700\u7ffb\u8bd1\u3002 \u89e3\u91ca\u7a0b\u5e8f\u9010\u884c\u7ffb\u8bd1\u5e76\u7acb\u5373\u6267\u884c\uff0c\u8fd0\u884c\u65f6\u9700\u8981\u7ffb\u8bd1\u3002 \u6df7\u5408\u6a21\u5f0f \uff1a \u4e00\u4e9b\u8bed\u8a00\uff08\u5982 Java \u548c Python\uff09\u7ed3\u5408\u4e86\u7f16\u8bd1\u548c\u89e3\u91ca\u7684\u7279\u70b9\uff1a Java\uff1a\u5148\u901a\u8fc7\u7f16\u8bd1\u5668\u5c06\u6e90\u4ee3\u7801\u7f16\u8bd1\u4e3a\u5b57\u8282\u7801\uff08\u4e2d\u95f4\u4ee3\u7801\uff09\uff0c\u518d\u901a\u8fc7\u89e3\u91ca\u5668\uff08JVM\uff09\u6267\u884c\u5b57\u8282\u7801\u3002 Python\uff1a\u5148\u5c06\u6e90\u4ee3\u7801\u7f16\u8bd1\u4e3a\u5b57\u8282\u7801\uff08 .pyc \u6587\u4ef6\uff09\uff0c\u518d\u7531\u89e3\u91ca\u5668\u6267\u884c\u3002","title":"4. \u4e09\u8005\u4e4b\u95f4\u7684\u5173\u7cfb"},{"location":"Compiler/concept/#_2","text":"\u7ffb\u8bd1\u7a0b\u5e8f \u662f\u4e00\u4e2a\u603b\u79f0\uff0c\u5305\u542b\u7f16\u8bd1\u7a0b\u5e8f\u548c\u89e3\u91ca\u7a0b\u5e8f\u3002 \u7f16\u8bd1\u7a0b\u5e8f \uff1a\u4e00\u6b21\u6027\u7ffb\u8bd1\uff0c\u751f\u6210\u76ee\u6807\u7a0b\u5e8f\uff0c\u8fd0\u884c\u6548\u7387\u9ad8\u3002 \u89e3\u91ca\u7a0b\u5e8f \uff1a\u9010\u884c\u7ffb\u8bd1\u5e76\u6267\u884c\uff0c\u9002\u5408\u4ea4\u4e92\u5f0f\u5f00\u53d1\u3002 \u6df7\u5408\u6a21\u5f0f \uff1a\u7ed3\u5408\u7f16\u8bd1\u548c\u89e3\u91ca\u7684\u4f18\u70b9\uff0c\u5148\u7f16\u8bd1\u4e3a\u4e2d\u95f4\u4ee3\u7801\uff0c\u518d\u89e3\u91ca\u6267\u884c\u3002","title":"\u603b\u7ed3"},{"location":"Cryptography/ch4/","text":"\u516c\u94a5\u5bc6\u7801\u4f53\u5236\uff08Public-Key Cryptography\uff09 \u516c\u94a5\u5bc6\u7801\u4f53\u5236\u662f\u4e00\u79cd \u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5 \uff0c\u5b83\u4f7f\u7528\u4e00\u5bf9\u5bc6\u94a5\uff1a \u516c\u94a5\uff08Public Key\uff09 \u548c \u79c1\u94a5\uff08Private Key\uff09 \u3002\u516c\u94a5\u548c\u79c1\u94a5\u662f\u6570\u5b66\u4e0a\u76f8\u5173\u8054\u7684\uff0c\u4f46\u901a\u8fc7\u516c\u94a5\u65e0\u6cd5\u63a8\u5bfc\u51fa\u79c1\u94a5\u3002 \u6838\u5fc3\u601d\u60f3 \u5bc6\u94a5\u5bf9 \uff1a \u516c\u94a5\u7528\u4e8e\u52a0\u5bc6\uff0c\u79c1\u94a5\u7528\u4e8e\u89e3\u5bc6\u3002 \u516c\u94a5\u53ef\u4ee5\u516c\u5f00\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u516c\u94a5\u52a0\u5bc6\u6d88\u606f\u3002 \u79c1\u94a5\u5fc5\u987b\u4fdd\u5bc6\uff0c\u4ec5\u6301\u6709\u8005\u53ef\u4ee5\u4f7f\u7528\u79c1\u94a5\u89e3\u5bc6\u6d88\u606f\u3002 \u975e\u5bf9\u79f0\u6027 \uff1a \u52a0\u5bc6\u548c\u89e3\u5bc6\u4f7f\u7528\u4e0d\u540c\u7684\u5bc6\u94a5\u3002 \u53ea\u6709\u79c1\u94a5\u80fd\u89e3\u5bc6\u7531\u516c\u94a5\u52a0\u5bc6\u7684\u6d88\u606f\u3002 \u5de5\u4f5c\u539f\u7406 \u52a0\u5bc6 \uff1a \u53d1\u9001\u65b9\u4f7f\u7528\u63a5\u6536\u65b9\u7684\u516c\u94a5\u5bf9\u6d88\u606f\u8fdb\u884c\u52a0\u5bc6\u3002 \u52a0\u5bc6\u540e\u7684\u6d88\u606f\u53ea\u80fd\u7531\u63a5\u6536\u65b9\u7684\u79c1\u94a5\u89e3\u5bc6\u3002 \u89e3\u5bc6 \uff1a \u63a5\u6536\u65b9\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u52a0\u5bc6\u6d88\u606f\u8fdb\u884c\u89e3\u5bc6\uff0c\u6062\u590d\u539f\u59cb\u6d88\u606f\u3002 \u6570\u5b57\u7b7e\u540d \uff1a \u53d1\u9001\u65b9\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u6d88\u606f\u8fdb\u884c\u7b7e\u540d\u3002 \u63a5\u6536\u65b9\u4f7f\u7528\u53d1\u9001\u65b9\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\u7684\u771f\u5b9e\u6027\u3002 \u7279\u70b9 \u5b89\u5168\u6027 \uff1a \u5b89\u5168\u6027\u57fa\u4e8e\u6570\u5b66\u96be\u9898\uff08\u5982\u5927\u6574\u6570\u5206\u89e3\u3001\u79bb\u6563\u5bf9\u6570\u95ee\u9898\u7b49\uff09\u3002 \u5373\u4f7f\u653b\u51fb\u8005\u77e5\u9053\u516c\u94a5\uff0c\u4e5f\u65e0\u6cd5\u8f7b\u6613\u63a8\u5bfc\u51fa\u79c1\u94a5\u3002 \u5bc6\u94a5\u5206\u53d1\u65b9\u4fbf \uff1a \u516c\u94a5\u53ef\u4ee5\u516c\u5f00\u4f20\u64ad\uff0c\u65e0\u9700\u5b89\u5168\u6e20\u9053\u5206\u53d1\u3002 \u8ba1\u7b97\u590d\u6742\u5ea6\u9ad8 \uff1a \u516c\u94a5\u5bc6\u7801\u4f53\u5236\u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u901f\u5ea6\u901a\u5e38\u6bd4\u5bf9\u79f0\u52a0\u5bc6\u6162\u3002 \u5e38\u89c1\u7b97\u6cd5 RSA \uff1a \u57fa\u4e8e\u5927\u6574\u6570\u5206\u89e3\u95ee\u9898\u3002 \u5e38\u7528\u4e8e\u52a0\u5bc6\u548c\u6570\u5b57\u7b7e\u540d\u3002 ECC\uff08\u692d\u5706\u66f2\u7ebf\u52a0\u5bc6\uff09 \uff1a \u57fa\u4e8e\u692d\u5706\u66f2\u7ebf\u79bb\u6563\u5bf9\u6570\u95ee\u9898\u3002 \u63d0\u4f9b\u66f4\u9ad8\u7684\u5b89\u5168\u6027\u548c\u6548\u7387\u3002 Diffie-Hellman \u5bc6\u94a5\u4ea4\u6362 \uff1a \u7528\u4e8e\u5b89\u5168\u5730\u4ea4\u6362\u5bf9\u79f0\u52a0\u5bc6\u5bc6\u94a5\u3002 \u5e94\u7528\u573a\u666f \u6570\u636e\u52a0\u5bc6 \uff1a \u4f7f\u7528\u516c\u94a5\u52a0\u5bc6\u654f\u611f\u6570\u636e\uff0c\u786e\u4fdd\u53ea\u6709\u79c1\u94a5\u6301\u6709\u8005\u53ef\u4ee5\u89e3\u5bc6\u3002 \u6570\u5b57\u7b7e\u540d \uff1a \u9a8c\u8bc1\u6d88\u606f\u7684\u5b8c\u6574\u6027\u548c\u53d1\u9001\u65b9\u7684\u8eab\u4efd\u3002 \u5bc6\u94a5\u4ea4\u6362 \uff1a \u5b89\u5168\u5730\u4ea4\u6362\u5bf9\u79f0\u52a0\u5bc6\u5bc6\u94a5\u3002 SSL/TLS \u534f\u8bae \uff1a \u7528\u4e8e\u4fdd\u62a4\u7f51\u7edc\u901a\u4fe1\u7684\u5b89\u5168\u3002 \u603b\u7ed3 \u516c\u94a5\u5bc6\u7801\u4f53\u5236\u901a\u8fc7\u516c\u94a5\u548c\u79c1\u94a5\u7684\u975e\u5bf9\u79f0\u6027\uff0c\u5b9e\u73b0\u4e86\u5b89\u5168\u7684\u6570\u636e\u52a0\u5bc6\u3001\u8eab\u4efd\u9a8c\u8bc1\u548c\u5bc6\u94a5\u4ea4\u6362\u3002\u5b83\u662f\u73b0\u4ee3\u5bc6\u7801\u5b66\u7684\u6838\u5fc3\u6280\u672f\u4e4b\u4e00\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u4e92\u8054\u7f51\u5b89\u5168\u3001\u7535\u5b50\u5546\u52a1\u548c\u6570\u5b57\u7b7e\u540d\u7b49\u9886\u57df\u3002 \u516c\u94a5\u52a0\u5bc6/\u79c1\u94a5\u89e3\u5bc6\u548c\u79c1\u94a5\u7b7e\u540d/\u516c\u94a5\u9a8c\u8bc1 1. \u516c\u94a5\u52a0\u5bc6\u4e0e\u79c1\u94a5\u89e3\u5bc6 \u8fd9\u662f\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u7684\u7ecf\u5178\u5e94\u7528\uff0c\u7528\u4e8e \u4fdd\u62a4\u6570\u636e\u7684\u673a\u5bc6\u6027 \u3002 \u6838\u5fc3\u601d\u60f3 \u52a0\u5bc6 \uff1a \u4f7f\u7528\u63a5\u6536\u65b9\u7684\u516c\u94a5\u5bf9\u6d88\u606f\u8fdb\u884c\u52a0\u5bc6\u3002 \u52a0\u5bc6\u540e\u7684\u6d88\u606f\u53ea\u80fd\u7531\u63a5\u6536\u65b9\u7684\u79c1\u94a5\u89e3\u5bc6\u3002 \u89e3\u5bc6 \uff1a \u63a5\u6536\u65b9\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u52a0\u5bc6\u6d88\u606f\u8fdb\u884c\u89e3\u5bc6\uff0c\u6062\u590d\u539f\u59cb\u6d88\u606f\u3002 \u5e94\u7528\u573a\u666f \u6570\u636e\u52a0\u5bc6 \uff1a \u53d1\u9001\u65b9\u52a0\u5bc6\u654f\u611f\u6570\u636e\uff0c\u786e\u4fdd\u53ea\u6709\u63a5\u6536\u65b9\u80fd\u591f\u89e3\u5bc6\u3002 \u4fdd\u62a4\u673a\u5bc6\u6027 \uff1a \u5373\u4f7f\u6d88\u606f\u88ab\u62e6\u622a\uff0c\u653b\u51fb\u8005\u65e0\u6cd5\u89e3\u5bc6\uff0c\u56e0\u4e3a\u6ca1\u6709\u79c1\u94a5\u3002 \u793a\u4f8b \u53d1\u9001\u65b9 \uff1a \u4f7f\u7528\u63a5\u6536\u65b9\u7684\u516c\u94a5\u52a0\u5bc6\u6d88\u606f\uff1a encrypted_message = encrypt(message, public_key) \u63a5\u6536\u65b9 \uff1a \u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u89e3\u5bc6\u6d88\u606f\uff1a decrypted_message = decrypt(encrypted_message, private_key) 2. \u79c1\u94a5\u7b7e\u540d\u4e0e\u516c\u94a5\u9a8c\u8bc1 \u8fd9\u662f\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u7684\u53e6\u4e00\u79cd\u5e94\u7528\uff0c\u7528\u4e8e \u9a8c\u8bc1\u6570\u636e\u7684\u6765\u6e90\u548c\u5b8c\u6574\u6027 \u3002 \u6838\u5fc3\u601d\u60f3 \u7b7e\u540d \uff1a \u53d1\u9001\u65b9\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u6d88\u606f\u8fdb\u884c\u7b7e\u540d\u3002 \u7b7e\u540d\u662f\u5bf9\u6d88\u606f\u7684\u52a0\u5bc6\u6458\u8981\uff0c\u8bc1\u660e\u6d88\u606f\u7684\u6765\u6e90\u3002 \u9a8c\u8bc1 \uff1a \u63a5\u6536\u65b9\u4f7f\u7528\u53d1\u9001\u65b9\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u786e\u4fdd\u6d88\u606f\u786e\u5b9e\u6765\u81ea\u53d1\u9001\u65b9\uff0c\u4e14\u672a\u88ab\u7be1\u6539\u3002 \u5e94\u7528\u573a\u666f \u6570\u5b57\u7b7e\u540d \uff1a \u9a8c\u8bc1\u6d88\u606f\u7684\u5b8c\u6574\u6027\u548c\u53d1\u9001\u65b9\u7684\u8eab\u4efd\u3002 \u8eab\u4efd\u9a8c\u8bc1 \uff1a \u786e\u4fdd\u901a\u4fe1\u53cc\u65b9\u7684\u8eab\u4efd\u771f\u5b9e\u53ef\u4fe1\u3002 \u793a\u4f8b \u53d1\u9001\u65b9 \uff1a \u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u6d88\u606f\u7b7e\u540d\uff1a signature = encrypt(hash(message), private_key) \u5c06\u6d88\u606f\u548c\u7b7e\u540d\u4e00\u8d77\u53d1\u9001\u7ed9\u63a5\u6536\u65b9\u3002 \u63a5\u6536\u65b9 \uff1a \u4f7f\u7528\u53d1\u9001\u65b9\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff1a decrypted_hash = decrypt(signature, public_key) if decrypted_hash == hash(message): \u9a8c\u8bc1\u901a\u8fc7 else: \u9a8c\u8bc1\u5931\u8d25 3. \u533a\u522b\u603b\u7ed3 \u529f\u80fd \u516c\u94a5\u52a0\u5bc6/\u79c1\u94a5\u89e3\u5bc6 \u79c1\u94a5\u7b7e\u540d/\u516c\u94a5\u9a8c\u8bc1 \u76ee\u7684 \u4fdd\u62a4\u6570\u636e\u7684\u673a\u5bc6\u6027 \u9a8c\u8bc1\u6570\u636e\u7684\u6765\u6e90\u548c\u5b8c\u6574\u6027 \u52a0\u5bc6\u65b9 \u4f7f\u7528\u63a5\u6536\u65b9\u7684\u516c\u94a5\u52a0\u5bc6 \u4f7f\u7528\u53d1\u9001\u65b9\u7684\u79c1\u94a5\u7b7e\u540d \u89e3\u5bc6\u65b9 \u4f7f\u7528\u63a5\u6536\u65b9\u7684\u79c1\u94a5\u89e3\u5bc6 \u4f7f\u7528\u53d1\u9001\u65b9\u7684\u516c\u94a5\u9a8c\u8bc1 \u5e94\u7528\u573a\u666f \u6570\u636e\u52a0\u5bc6\u3001\u4fdd\u62a4\u673a\u5bc6\u4fe1\u606f \u6570\u5b57\u7b7e\u540d\u3001\u8eab\u4efd\u9a8c\u8bc1 4. \u4e3a\u4ec0\u4e48\u79c1\u94a5\u53ef\u4ee5\u7528\u4e8e\u7b7e\u540d\uff1f \u79c1\u94a5\u662f\u4fdd\u5bc6\u7684 \uff1a \u53ea\u6709\u62e5\u6709\u79c1\u94a5\u7684\u4eba\u624d\u80fd\u751f\u6210\u7b7e\u540d\uff0c\u56e0\u6b64\u7b7e\u540d\u53ef\u4ee5\u8bc1\u660e\u6d88\u606f\u7684\u6765\u6e90\u3002 \u516c\u94a5\u662f\u516c\u5f00\u7684 \uff1a \u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u786e\u4fdd\u6d88\u606f\u672a\u88ab\u7be1\u6539\u3002 5. \u603b\u7ed3 \u516c\u94a5\u52a0\u5bc6/\u79c1\u94a5\u89e3\u5bc6 \uff1a\u7528\u4e8e\u4fdd\u62a4\u6570\u636e\u7684\u673a\u5bc6\u6027\u3002 \u79c1\u94a5\u7b7e\u540d/\u516c\u94a5\u9a8c\u8bc1 \uff1a\u7528\u4e8e\u9a8c\u8bc1\u6570\u636e\u7684\u6765\u6e90\u548c\u5b8c\u6574\u6027\u3002 \u516c\u94a5\u5bc6\u7801\u4f53\u5236\u7684\u6838\u5fc3\u601d\u60f3\u662f\u975e\u5bf9\u79f0\u6027\uff0c\u5177\u4f53\u5e94\u7528\u573a\u666f\u51b3\u5b9a\u4e86\u4f7f\u7528\u516c\u94a5\u6216\u79c1\u94a5\u7684\u65b9\u5f0f\u3002--- 3. \u533a\u522b\u603b\u7ed3 \u529f\u80fd \u516c\u94a5\u52a0\u5bc6/\u79c1\u94a5\u89e3\u5bc6 \u79c1\u94a5\u7b7e\u540d/\u516c\u94a5\u9a8c\u8bc1 \u76ee\u7684 \u4fdd\u62a4\u6570\u636e\u7684\u673a\u5bc6\u6027 \u9a8c\u8bc1\u6570\u636e\u7684\u6765\u6e90\u548c\u5b8c\u6574\u6027 \u52a0\u5bc6\u65b9 \u4f7f\u7528\u63a5\u6536\u65b9\u7684\u516c\u94a5\u52a0\u5bc6 \u4f7f\u7528\u53d1\u9001\u65b9\u7684\u79c1\u94a5\u7b7e\u540d \u89e3\u5bc6\u65b9 \u4f7f\u7528\u63a5\u6536\u65b9\u7684\u79c1\u94a5\u89e3\u5bc6 \u4f7f\u7528\u53d1\u9001\u65b9\u7684\u516c\u94a5\u9a8c\u8bc1 \u5e94\u7528\u573a\u666f \u6570\u636e\u52a0\u5bc6\u3001\u4fdd\u62a4\u673a\u5bc6\u4fe1\u606f \u6570\u5b57\u7b7e\u540d\u3001\u8eab\u4efd\u9a8c\u8bc1 4. \u4e3a\u4ec0\u4e48\u79c1\u94a5\u53ef\u4ee5\u7528\u4e8e\u7b7e\u540d\uff1f \u79c1\u94a5\u662f\u4fdd\u5bc6\u7684 \uff1a \u53ea\u6709\u62e5\u6709\u79c1\u94a5\u7684\u4eba\u624d\u80fd\u751f\u6210\u7b7e\u540d\uff0c\u56e0\u6b64\u7b7e\u540d\u53ef\u4ee5\u8bc1\u660e\u6d88\u606f\u7684\u6765\u6e90\u3002 \u516c\u94a5\u662f\u516c\u5f00\u7684 \uff1a \u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u786e\u4fdd\u6d88\u606f\u672a\u88ab\u7be1\u6539\u3002 5. \u603b\u7ed3 \u516c\u94a5\u52a0\u5bc6/\u79c1\u94a5\u89e3\u5bc6 \uff1a\u7528\u4e8e\u4fdd\u62a4\u6570\u636e\u7684\u673a\u5bc6\u6027\u3002 \u79c1\u94a5\u7b7e\u540d/\u516c\u94a5\u9a8c\u8bc1 \uff1a\u7528\u4e8e\u9a8c\u8bc1\u6570\u636e\u7684\u6765\u6e90\u548c\u5b8c\u6574\u6027\u3002 \u516c\u94a5\u5bc6\u7801\u4f53\u5236\u7684\u6838\u5fc3\u601d\u60f3\u662f\u975e\u5bf9\u79f0\u6027\uff0c\u5177\u4f53\u5e94\u7528\u573a\u666f\u51b3\u5b9a\u4e86\u4f7f\u7528\u516c\u94a5\u6216\u79c1\u94a5\u7684\u65b9\u5f0f\u3002","title":"\u516c\u94a5\u5bc6\u7801\u5b66"},{"location":"Cryptography/ch4/#public-key-cryptography","text":"\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u662f\u4e00\u79cd \u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5 \uff0c\u5b83\u4f7f\u7528\u4e00\u5bf9\u5bc6\u94a5\uff1a \u516c\u94a5\uff08Public Key\uff09 \u548c \u79c1\u94a5\uff08Private Key\uff09 \u3002\u516c\u94a5\u548c\u79c1\u94a5\u662f\u6570\u5b66\u4e0a\u76f8\u5173\u8054\u7684\uff0c\u4f46\u901a\u8fc7\u516c\u94a5\u65e0\u6cd5\u63a8\u5bfc\u51fa\u79c1\u94a5\u3002","title":"\u516c\u94a5\u5bc6\u7801\u4f53\u5236\uff08Public-Key Cryptography\uff09"},{"location":"Cryptography/ch4/#_1","text":"\u5bc6\u94a5\u5bf9 \uff1a \u516c\u94a5\u7528\u4e8e\u52a0\u5bc6\uff0c\u79c1\u94a5\u7528\u4e8e\u89e3\u5bc6\u3002 \u516c\u94a5\u53ef\u4ee5\u516c\u5f00\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u516c\u94a5\u52a0\u5bc6\u6d88\u606f\u3002 \u79c1\u94a5\u5fc5\u987b\u4fdd\u5bc6\uff0c\u4ec5\u6301\u6709\u8005\u53ef\u4ee5\u4f7f\u7528\u79c1\u94a5\u89e3\u5bc6\u6d88\u606f\u3002 \u975e\u5bf9\u79f0\u6027 \uff1a \u52a0\u5bc6\u548c\u89e3\u5bc6\u4f7f\u7528\u4e0d\u540c\u7684\u5bc6\u94a5\u3002 \u53ea\u6709\u79c1\u94a5\u80fd\u89e3\u5bc6\u7531\u516c\u94a5\u52a0\u5bc6\u7684\u6d88\u606f\u3002","title":"\u6838\u5fc3\u601d\u60f3"},{"location":"Cryptography/ch4/#_2","text":"\u52a0\u5bc6 \uff1a \u53d1\u9001\u65b9\u4f7f\u7528\u63a5\u6536\u65b9\u7684\u516c\u94a5\u5bf9\u6d88\u606f\u8fdb\u884c\u52a0\u5bc6\u3002 \u52a0\u5bc6\u540e\u7684\u6d88\u606f\u53ea\u80fd\u7531\u63a5\u6536\u65b9\u7684\u79c1\u94a5\u89e3\u5bc6\u3002 \u89e3\u5bc6 \uff1a \u63a5\u6536\u65b9\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u52a0\u5bc6\u6d88\u606f\u8fdb\u884c\u89e3\u5bc6\uff0c\u6062\u590d\u539f\u59cb\u6d88\u606f\u3002 \u6570\u5b57\u7b7e\u540d \uff1a \u53d1\u9001\u65b9\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u6d88\u606f\u8fdb\u884c\u7b7e\u540d\u3002 \u63a5\u6536\u65b9\u4f7f\u7528\u53d1\u9001\u65b9\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\u7684\u771f\u5b9e\u6027\u3002","title":"\u5de5\u4f5c\u539f\u7406"},{"location":"Cryptography/ch4/#_3","text":"\u5b89\u5168\u6027 \uff1a \u5b89\u5168\u6027\u57fa\u4e8e\u6570\u5b66\u96be\u9898\uff08\u5982\u5927\u6574\u6570\u5206\u89e3\u3001\u79bb\u6563\u5bf9\u6570\u95ee\u9898\u7b49\uff09\u3002 \u5373\u4f7f\u653b\u51fb\u8005\u77e5\u9053\u516c\u94a5\uff0c\u4e5f\u65e0\u6cd5\u8f7b\u6613\u63a8\u5bfc\u51fa\u79c1\u94a5\u3002 \u5bc6\u94a5\u5206\u53d1\u65b9\u4fbf \uff1a \u516c\u94a5\u53ef\u4ee5\u516c\u5f00\u4f20\u64ad\uff0c\u65e0\u9700\u5b89\u5168\u6e20\u9053\u5206\u53d1\u3002 \u8ba1\u7b97\u590d\u6742\u5ea6\u9ad8 \uff1a \u516c\u94a5\u5bc6\u7801\u4f53\u5236\u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u901f\u5ea6\u901a\u5e38\u6bd4\u5bf9\u79f0\u52a0\u5bc6\u6162\u3002","title":"\u7279\u70b9"},{"location":"Cryptography/ch4/#_4","text":"RSA \uff1a \u57fa\u4e8e\u5927\u6574\u6570\u5206\u89e3\u95ee\u9898\u3002 \u5e38\u7528\u4e8e\u52a0\u5bc6\u548c\u6570\u5b57\u7b7e\u540d\u3002 ECC\uff08\u692d\u5706\u66f2\u7ebf\u52a0\u5bc6\uff09 \uff1a \u57fa\u4e8e\u692d\u5706\u66f2\u7ebf\u79bb\u6563\u5bf9\u6570\u95ee\u9898\u3002 \u63d0\u4f9b\u66f4\u9ad8\u7684\u5b89\u5168\u6027\u548c\u6548\u7387\u3002 Diffie-Hellman \u5bc6\u94a5\u4ea4\u6362 \uff1a \u7528\u4e8e\u5b89\u5168\u5730\u4ea4\u6362\u5bf9\u79f0\u52a0\u5bc6\u5bc6\u94a5\u3002","title":"\u5e38\u89c1\u7b97\u6cd5"},{"location":"Cryptography/ch4/#_5","text":"\u6570\u636e\u52a0\u5bc6 \uff1a \u4f7f\u7528\u516c\u94a5\u52a0\u5bc6\u654f\u611f\u6570\u636e\uff0c\u786e\u4fdd\u53ea\u6709\u79c1\u94a5\u6301\u6709\u8005\u53ef\u4ee5\u89e3\u5bc6\u3002 \u6570\u5b57\u7b7e\u540d \uff1a \u9a8c\u8bc1\u6d88\u606f\u7684\u5b8c\u6574\u6027\u548c\u53d1\u9001\u65b9\u7684\u8eab\u4efd\u3002 \u5bc6\u94a5\u4ea4\u6362 \uff1a \u5b89\u5168\u5730\u4ea4\u6362\u5bf9\u79f0\u52a0\u5bc6\u5bc6\u94a5\u3002 SSL/TLS \u534f\u8bae \uff1a \u7528\u4e8e\u4fdd\u62a4\u7f51\u7edc\u901a\u4fe1\u7684\u5b89\u5168\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"Cryptography/ch4/#_6","text":"\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u901a\u8fc7\u516c\u94a5\u548c\u79c1\u94a5\u7684\u975e\u5bf9\u79f0\u6027\uff0c\u5b9e\u73b0\u4e86\u5b89\u5168\u7684\u6570\u636e\u52a0\u5bc6\u3001\u8eab\u4efd\u9a8c\u8bc1\u548c\u5bc6\u94a5\u4ea4\u6362\u3002\u5b83\u662f\u73b0\u4ee3\u5bc6\u7801\u5b66\u7684\u6838\u5fc3\u6280\u672f\u4e4b\u4e00\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u4e92\u8054\u7f51\u5b89\u5168\u3001\u7535\u5b50\u5546\u52a1\u548c\u6570\u5b57\u7b7e\u540d\u7b49\u9886\u57df\u3002","title":"\u603b\u7ed3"},{"location":"Cryptography/ch4/#_7","text":"","title":"\u516c\u94a5\u52a0\u5bc6/\u79c1\u94a5\u89e3\u5bc6\u548c\u79c1\u94a5\u7b7e\u540d/\u516c\u94a5\u9a8c\u8bc1"},{"location":"Cryptography/ch4/#1","text":"\u8fd9\u662f\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u7684\u7ecf\u5178\u5e94\u7528\uff0c\u7528\u4e8e \u4fdd\u62a4\u6570\u636e\u7684\u673a\u5bc6\u6027 \u3002","title":"1. \u516c\u94a5\u52a0\u5bc6\u4e0e\u79c1\u94a5\u89e3\u5bc6"},{"location":"Cryptography/ch4/#_8","text":"\u52a0\u5bc6 \uff1a \u4f7f\u7528\u63a5\u6536\u65b9\u7684\u516c\u94a5\u5bf9\u6d88\u606f\u8fdb\u884c\u52a0\u5bc6\u3002 \u52a0\u5bc6\u540e\u7684\u6d88\u606f\u53ea\u80fd\u7531\u63a5\u6536\u65b9\u7684\u79c1\u94a5\u89e3\u5bc6\u3002 \u89e3\u5bc6 \uff1a \u63a5\u6536\u65b9\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u52a0\u5bc6\u6d88\u606f\u8fdb\u884c\u89e3\u5bc6\uff0c\u6062\u590d\u539f\u59cb\u6d88\u606f\u3002","title":"\u6838\u5fc3\u601d\u60f3"},{"location":"Cryptography/ch4/#_9","text":"\u6570\u636e\u52a0\u5bc6 \uff1a \u53d1\u9001\u65b9\u52a0\u5bc6\u654f\u611f\u6570\u636e\uff0c\u786e\u4fdd\u53ea\u6709\u63a5\u6536\u65b9\u80fd\u591f\u89e3\u5bc6\u3002 \u4fdd\u62a4\u673a\u5bc6\u6027 \uff1a \u5373\u4f7f\u6d88\u606f\u88ab\u62e6\u622a\uff0c\u653b\u51fb\u8005\u65e0\u6cd5\u89e3\u5bc6\uff0c\u56e0\u4e3a\u6ca1\u6709\u79c1\u94a5\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"Cryptography/ch4/#_10","text":"\u53d1\u9001\u65b9 \uff1a \u4f7f\u7528\u63a5\u6536\u65b9\u7684\u516c\u94a5\u52a0\u5bc6\u6d88\u606f\uff1a encrypted_message = encrypt(message, public_key) \u63a5\u6536\u65b9 \uff1a \u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u89e3\u5bc6\u6d88\u606f\uff1a decrypted_message = decrypt(encrypted_message, private_key)","title":"\u793a\u4f8b"},{"location":"Cryptography/ch4/#2","text":"\u8fd9\u662f\u516c\u94a5\u5bc6\u7801\u4f53\u5236\u7684\u53e6\u4e00\u79cd\u5e94\u7528\uff0c\u7528\u4e8e \u9a8c\u8bc1\u6570\u636e\u7684\u6765\u6e90\u548c\u5b8c\u6574\u6027 \u3002","title":"2. \u79c1\u94a5\u7b7e\u540d\u4e0e\u516c\u94a5\u9a8c\u8bc1"},{"location":"Cryptography/ch4/#_11","text":"\u7b7e\u540d \uff1a \u53d1\u9001\u65b9\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u6d88\u606f\u8fdb\u884c\u7b7e\u540d\u3002 \u7b7e\u540d\u662f\u5bf9\u6d88\u606f\u7684\u52a0\u5bc6\u6458\u8981\uff0c\u8bc1\u660e\u6d88\u606f\u7684\u6765\u6e90\u3002 \u9a8c\u8bc1 \uff1a \u63a5\u6536\u65b9\u4f7f\u7528\u53d1\u9001\u65b9\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u786e\u4fdd\u6d88\u606f\u786e\u5b9e\u6765\u81ea\u53d1\u9001\u65b9\uff0c\u4e14\u672a\u88ab\u7be1\u6539\u3002","title":"\u6838\u5fc3\u601d\u60f3"},{"location":"Cryptography/ch4/#_12","text":"\u6570\u5b57\u7b7e\u540d \uff1a \u9a8c\u8bc1\u6d88\u606f\u7684\u5b8c\u6574\u6027\u548c\u53d1\u9001\u65b9\u7684\u8eab\u4efd\u3002 \u8eab\u4efd\u9a8c\u8bc1 \uff1a \u786e\u4fdd\u901a\u4fe1\u53cc\u65b9\u7684\u8eab\u4efd\u771f\u5b9e\u53ef\u4fe1\u3002","title":"\u5e94\u7528\u573a\u666f"},{"location":"Cryptography/ch4/#_13","text":"\u53d1\u9001\u65b9 \uff1a \u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u6d88\u606f\u7b7e\u540d\uff1a signature = encrypt(hash(message), private_key) \u5c06\u6d88\u606f\u548c\u7b7e\u540d\u4e00\u8d77\u53d1\u9001\u7ed9\u63a5\u6536\u65b9\u3002 \u63a5\u6536\u65b9 \uff1a \u4f7f\u7528\u53d1\u9001\u65b9\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff1a decrypted_hash = decrypt(signature, public_key) if decrypted_hash == hash(message): \u9a8c\u8bc1\u901a\u8fc7 else: \u9a8c\u8bc1\u5931\u8d25","title":"\u793a\u4f8b"},{"location":"Cryptography/ch4/#3","text":"\u529f\u80fd \u516c\u94a5\u52a0\u5bc6/\u79c1\u94a5\u89e3\u5bc6 \u79c1\u94a5\u7b7e\u540d/\u516c\u94a5\u9a8c\u8bc1 \u76ee\u7684 \u4fdd\u62a4\u6570\u636e\u7684\u673a\u5bc6\u6027 \u9a8c\u8bc1\u6570\u636e\u7684\u6765\u6e90\u548c\u5b8c\u6574\u6027 \u52a0\u5bc6\u65b9 \u4f7f\u7528\u63a5\u6536\u65b9\u7684\u516c\u94a5\u52a0\u5bc6 \u4f7f\u7528\u53d1\u9001\u65b9\u7684\u79c1\u94a5\u7b7e\u540d \u89e3\u5bc6\u65b9 \u4f7f\u7528\u63a5\u6536\u65b9\u7684\u79c1\u94a5\u89e3\u5bc6 \u4f7f\u7528\u53d1\u9001\u65b9\u7684\u516c\u94a5\u9a8c\u8bc1 \u5e94\u7528\u573a\u666f \u6570\u636e\u52a0\u5bc6\u3001\u4fdd\u62a4\u673a\u5bc6\u4fe1\u606f \u6570\u5b57\u7b7e\u540d\u3001\u8eab\u4efd\u9a8c\u8bc1","title":"3. \u533a\u522b\u603b\u7ed3"},{"location":"Cryptography/ch4/#4","text":"\u79c1\u94a5\u662f\u4fdd\u5bc6\u7684 \uff1a \u53ea\u6709\u62e5\u6709\u79c1\u94a5\u7684\u4eba\u624d\u80fd\u751f\u6210\u7b7e\u540d\uff0c\u56e0\u6b64\u7b7e\u540d\u53ef\u4ee5\u8bc1\u660e\u6d88\u606f\u7684\u6765\u6e90\u3002 \u516c\u94a5\u662f\u516c\u5f00\u7684 \uff1a \u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u786e\u4fdd\u6d88\u606f\u672a\u88ab\u7be1\u6539\u3002","title":"4. \u4e3a\u4ec0\u4e48\u79c1\u94a5\u53ef\u4ee5\u7528\u4e8e\u7b7e\u540d\uff1f"},{"location":"Cryptography/ch4/#5","text":"\u516c\u94a5\u52a0\u5bc6/\u79c1\u94a5\u89e3\u5bc6 \uff1a\u7528\u4e8e\u4fdd\u62a4\u6570\u636e\u7684\u673a\u5bc6\u6027\u3002 \u79c1\u94a5\u7b7e\u540d/\u516c\u94a5\u9a8c\u8bc1 \uff1a\u7528\u4e8e\u9a8c\u8bc1\u6570\u636e\u7684\u6765\u6e90\u548c\u5b8c\u6574\u6027\u3002 \u516c\u94a5\u5bc6\u7801\u4f53\u5236\u7684\u6838\u5fc3\u601d\u60f3\u662f\u975e\u5bf9\u79f0\u6027\uff0c\u5177\u4f53\u5e94\u7528\u573a\u666f\u51b3\u5b9a\u4e86\u4f7f\u7528\u516c\u94a5\u6216\u79c1\u94a5\u7684\u65b9\u5f0f\u3002---","title":"5. \u603b\u7ed3"},{"location":"Cryptography/ch4/#3_1","text":"\u529f\u80fd \u516c\u94a5\u52a0\u5bc6/\u79c1\u94a5\u89e3\u5bc6 \u79c1\u94a5\u7b7e\u540d/\u516c\u94a5\u9a8c\u8bc1 \u76ee\u7684 \u4fdd\u62a4\u6570\u636e\u7684\u673a\u5bc6\u6027 \u9a8c\u8bc1\u6570\u636e\u7684\u6765\u6e90\u548c\u5b8c\u6574\u6027 \u52a0\u5bc6\u65b9 \u4f7f\u7528\u63a5\u6536\u65b9\u7684\u516c\u94a5\u52a0\u5bc6 \u4f7f\u7528\u53d1\u9001\u65b9\u7684\u79c1\u94a5\u7b7e\u540d \u89e3\u5bc6\u65b9 \u4f7f\u7528\u63a5\u6536\u65b9\u7684\u79c1\u94a5\u89e3\u5bc6 \u4f7f\u7528\u53d1\u9001\u65b9\u7684\u516c\u94a5\u9a8c\u8bc1 \u5e94\u7528\u573a\u666f \u6570\u636e\u52a0\u5bc6\u3001\u4fdd\u62a4\u673a\u5bc6\u4fe1\u606f \u6570\u5b57\u7b7e\u540d\u3001\u8eab\u4efd\u9a8c\u8bc1","title":"3. \u533a\u522b\u603b\u7ed3"},{"location":"Cryptography/ch4/#4_1","text":"\u79c1\u94a5\u662f\u4fdd\u5bc6\u7684 \uff1a \u53ea\u6709\u62e5\u6709\u79c1\u94a5\u7684\u4eba\u624d\u80fd\u751f\u6210\u7b7e\u540d\uff0c\u56e0\u6b64\u7b7e\u540d\u53ef\u4ee5\u8bc1\u660e\u6d88\u606f\u7684\u6765\u6e90\u3002 \u516c\u94a5\u662f\u516c\u5f00\u7684 \uff1a \u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u786e\u4fdd\u6d88\u606f\u672a\u88ab\u7be1\u6539\u3002","title":"4. \u4e3a\u4ec0\u4e48\u79c1\u94a5\u53ef\u4ee5\u7528\u4e8e\u7b7e\u540d\uff1f"},{"location":"Cryptography/ch4/#5_1","text":"\u516c\u94a5\u52a0\u5bc6/\u79c1\u94a5\u89e3\u5bc6 \uff1a\u7528\u4e8e\u4fdd\u62a4\u6570\u636e\u7684\u673a\u5bc6\u6027\u3002 \u79c1\u94a5\u7b7e\u540d/\u516c\u94a5\u9a8c\u8bc1 \uff1a\u7528\u4e8e\u9a8c\u8bc1\u6570\u636e\u7684\u6765\u6e90\u548c\u5b8c\u6574\u6027\u3002 \u516c\u94a5\u5bc6\u7801\u4f53\u5236\u7684\u6838\u5fc3\u601d\u60f3\u662f\u975e\u5bf9\u79f0\u6027\uff0c\u5177\u4f53\u5e94\u7528\u573a\u666f\u51b3\u5b9a\u4e86\u4f7f\u7528\u516c\u94a5\u6216\u79c1\u94a5\u7684\u65b9\u5f0f\u3002","title":"5. \u603b\u7ed3"},{"location":"Cryptography/ch7/","text":"\u6570\u5b57\u7b7e\u540d\u662f\u4e00\u79cd\u7528\u6765 \u9a8c\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u3001\u8ba4\u8bc1\u8eab\u4efd\u3001\u9632\u62b5\u8d56 \u7684\u5bc6\u7801\u5b66\u6280\u672f\u3002\u5176\u539f\u7406\u662f\u5229\u7528 \u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5 \uff08\u5982RSA\u3001ECDSA\u7b49\uff09\uff0c\u7528\u79c1\u94a5\u5bf9\u6d88\u606f\u6458\u8981\u8fdb\u884c\u52a0\u5bc6\uff0c\u516c\u94a5\u7528\u4e8e\u9a8c\u8bc1\u3002 \u539f\u7406\u6b65\u9aa4 \u6d88\u606f\u6458\u8981 \uff1a\u5bf9\u539f\u59cb\u6d88\u606f\u7528\u54c8\u5e0c\u7b97\u6cd5\uff08\u5982SHA256\uff09\u751f\u6210\u6458\u8981\uff08Hash\uff09\u3002 \u79c1\u94a5\u52a0\u5bc6 \uff1a\u7528\u53d1\u9001\u8005\u7684\u79c1\u94a5\u5bf9\u6458\u8981\u52a0\u5bc6\uff0c\u751f\u6210\u6570\u5b57\u7b7e\u540d\u3002 \u53d1\u9001\u6d88\u606f\u548c\u7b7e\u540d \uff1a\u628a\u539f\u59cb\u6d88\u606f\u548c\u6570\u5b57\u7b7e\u540d\u4e00\u8d77\u53d1\u9001\u7ed9\u63a5\u6536\u8005\u3002 \u516c\u94a5\u9a8c\u8bc1 \uff1a\u63a5\u6536\u8005\u6536\u5230\u540e\uff0c\u7528\u53d1\u9001\u8005\u7684\u516c\u94a5\u89e3\u5bc6\u7b7e\u540d\u5f97\u5230\u6458\u8981\uff0c\u518d\u5bf9\u539f\u59cb\u6d88\u606f\u505a\u54c8\u5e0c\uff0c\u6bd4\u8f83\u4e24\u4e2a\u6458\u8981\u662f\u5426\u4e00\u81f4\u3002 \u4e00\u81f4\uff1a\u8bf4\u660e\u6d88\u606f\u672a\u88ab\u7be1\u6539\uff0c\u4e14\u786e\u5b9e\u662f\u79c1\u94a5\u6301\u6709\u8005\u53d1\u7684\u3002 \u4e0d\u4e00\u81f4\uff1a\u8bf4\u660e\u6d88\u606f\u88ab\u7be1\u6539\u6216\u7b7e\u540d\u4f2a\u9020\u3002 \u5b9e\u9645\u4f8b\u5b50 \u5047\u8bbeAlice\u8981\u7ed9Bob\u53d1\u9001\u4e00\u4efd\u5408\u540c\uff0c\u5e76\u4fdd\u8bc1\u5185\u5bb9\u672a\u88ab\u7be1\u6539\u4e14\u786e\u5b9e\u662f\u5979\u672c\u4eba\u53d1\u7684\uff1a Alice\u5bf9\u5408\u540c\u5185\u5bb9\u505a\u54c8\u5e0c\uff0c\u5f97\u5230\u6458\u8981\u3002 Alice\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u52a0\u5bc6\u8fd9\u4e2a\u6458\u8981\uff0c\u5f97\u5230\u6570\u5b57\u7b7e\u540d\u3002 Alice\u628a\u5408\u540c\u5185\u5bb9\u548c\u6570\u5b57\u7b7e\u540d\u4e00\u8d77\u53d1\u7ed9Bob\u3002 Bob\u6536\u5230\u540e\uff0c\u7528Alice\u7684\u516c\u94a5\u89e3\u5bc6\u7b7e\u540d\uff0c\u5f97\u5230\u6458\u8981A\u3002 Bob\u5bf9\u6536\u5230\u7684\u5408\u540c\u5185\u5bb9\u505a\u54c8\u5e0c\uff0c\u5f97\u5230\u6458\u8981B\u3002 \u6bd4\u8f83A\u548cB\uff0c\u5982\u679c\u4e00\u81f4\uff0c\u8bf4\u660e\u5408\u540c\u5185\u5bb9\u6ca1\u88ab\u6539\u52a8\uff0c\u4e14\u786e\u5b9e\u662fAlice\u53d1\u7684\u3002 \u603b\u7ed3\uff1a \u6570\u5b57\u7b7e\u540d\u4fdd\u8bc1\u4e86\u6d88\u606f\u7684\u5b8c\u6574\u6027\u3001\u8eab\u4efd\u8ba4\u8bc1\u548c\u4e0d\u53ef\u5426\u8ba4\u6027\uff0c\u662f\u73b0\u4ee3\u7535\u5b50\u5408\u540c\u3001\u8f6f\u4ef6\u5206\u53d1\u7b49\u573a\u666f\u7684\u57fa\u7840\u5b89\u5168\u6280\u672f\u3002 \u8fd9\u4e2a\u662f\u7528\u79c1\u94a5\u52a0\u5bc6\uff0c\u4e3a\u4ec0\u4e48\u516c\u94a5\u80fd\u89e3\u5bc6\uff0c\u4e00\u822c\u4e0d\u662f\u516c\u94a5\u52a0\u5bc6\u79c1\u94a5\u89e3\u5bc6\u5417 \u975e\u5bf9\u79f0\u52a0\u5bc6 \u786e\u5b9e\u901a\u5e38\u662f\u201c\u516c\u94a5\u52a0\u5bc6\uff0c\u79c1\u94a5\u89e3\u5bc6\u201d\uff0c\u6bd4\u5982\u52a0\u5bc6\u901a\u4fe1\u65f6\u8fd9\u6837\u7528\u3002\u4f46\u5728 \u6570\u5b57\u7b7e\u540d \u573a\u666f\u4e0b\uff0c\u6d41\u7a0b\u6b63\u597d\u53cd\u8fc7\u6765\uff1a \u7b7e\u540d\u65f6 \uff1a\u7528\u79c1\u94a5\u201c\u52a0\u5bc6\u201d\u6d88\u606f\u6458\u8981\uff08\u5176\u5b9e\u662f\u5bf9\u6458\u8981\u505a\u52a0\u5bc6\u8fd0\u7b97\uff0c\u751f\u6210\u7b7e\u540d\uff09\u3002 \u9a8c\u8bc1\u65f6 \uff1a\u7528\u516c\u94a5\u201c\u89e3\u5bc6\u201d\u7b7e\u540d\uff0c\u5f97\u5230\u6458\u8981\uff0c\u518d\u548c\u6d88\u606f\u7684\u54c8\u5e0c\u503c\u6bd4\u5bf9\u3002 \u8fd9\u6837\u8bbe\u8ba1\u7684\u539f\u56e0\u662f\uff1a - \u53ea\u6709\u79c1\u94a5\u6301\u6709\u8005\u624d\u80fd\u751f\u6210\u8fd9\u4e2a\u7b7e\u540d\uff08\u522b\u4eba\u6ca1\u6709\u79c1\u94a5\u505a\u4e0d\u4e86\uff09\u3002 - \u4efb\u4f55\u4eba\u62ff\u5230\u516c\u94a5\u90fd\u80fd\u9a8c\u8bc1\u7b7e\u540d\u7684\u771f\u4f2a\uff08\u516c\u94a5\u662f\u516c\u5f00\u7684\uff09\u3002 \u672c\u8d28\u4e0a\uff1a - \u516c\u94a5\u52a0\u5bc6\u3001\u79c1\u94a5\u89e3\u5bc6 \u2192 \u4fdd\u8bc1\u673a\u5bc6\u6027\uff08\u522b\u4eba\u770b\u4e0d\u61c2\u5185\u5bb9\uff09 - \u79c1\u94a5\u52a0\u5bc6\u3001\u516c\u94a5\u89e3\u5bc6\uff08\u6570\u5b57\u7b7e\u540d\uff09\u2192 \u4fdd\u8bc1\u8eab\u4efd\u548c\u4e0d\u53ef\u5426\u8ba4\u6027\uff08\u522b\u4eba\u80fd\u9a8c\u8bc1\u662f\u4f60\u53d1\u7684\uff09 \u6240\u4ee5\uff0c\u6570\u5b57\u7b7e\u540d\u5c31\u662f\u7528\u79c1\u94a5\u201c\u52a0\u5bc6\u201d\u6458\u8981\uff0c\u516c\u94a5\u201c\u89e3\u5bc6\u201d\u9a8c\u8bc1\uff0c\u8fd9\u6837\u624d\u80fd\u8bc1\u660e\u6d88\u606f\u786e\u5b9e\u662f\u79c1\u94a5\u6301\u6709\u8005\u53d1\u51fa\u7684\u3002 \u4e3e\u4e2a\u4f8b\u5b50\u4ed6\u662f\u600e\u4e48\u52a0\u5bc6\u89e3\u5bc6\uff0c\u4e3a\u4ec0\u4e48\u516c\u94a5\u548c\u79c1\u94a5\u80fd\u4e92\u76f8\u52a0\u5bc6\u89e3\u5bc6 1. \u516c\u94a5\u548c\u79c1\u94a5\u7684\u6570\u5b66\u5173\u7cfb \u4ee5RSA\u4e3a\u4f8b\uff0c\u516c\u94a5\u548c\u79c1\u94a5\u662f\u4e00\u5bf9\uff0c\u6ee1\u8db3\u4e0b\u9762\u7684\u6570\u5b66\u5173\u7cfb\uff1a \u516c\u94a5\uff1a (n, e) \u79c1\u94a5\uff1a (n, d) \u52a0\u5bc6\uff1a C = M^e mod n \u89e3\u5bc6\uff1a M = C^d mod n \u65e0\u8bba\u4f60\u5148\u7528e\uff08\u516c\u94a5\uff09\u8fd8\u662fd\uff08\u79c1\u94a5\uff09\u505a\u4e00\u6b21\u8fd0\u7b97\uff0c\u518d\u7528\u53e6\u4e00\u628a\u94a5\u5319\u505a\u4e00\u6b21\uff0c\u90fd\u80fd\u8fd8\u539f\u539f\u6587\uff1a \u7528\u516c\u94a5\u52a0\u5bc6\uff0c\u79c1\u94a5\u89e3\u5bc6\uff1a M = (M^e mod n)^d mod n \u7528\u79c1\u94a5\u52a0\u5bc6\uff0c\u516c\u94a5\u89e3\u5bc6\uff1a M = (M^d mod n)^e mod n \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 \u516c\u94a5\u548c\u79c1\u94a5\u53ef\u4ee5\u4e92\u76f8\u52a0\u5bc6\u89e3\u5bc6 \uff0c\u672c\u8d28\u662f\u6570\u5b66\u4e0a\u7684\u53ef\u9006\u6027\u3002 2. \u4e3e\u4f8b\u8bf4\u660e \u5047\u8bbeAlice\u7684\u516c\u94a5\u662f(e, n)\uff0c\u79c1\u94a5\u662f(d, n)\u3002 \u52a0\u5bc6\u901a\u4fe1\uff08\u673a\u5bc6\u6027\uff09 Bob\u60f3\u7ed9Alice\u53d1\u6d88\u606fM\u3002 Bob\u7528Alice\u7684\u516c\u94a5\u52a0\u5bc6\uff1a C = M^e mod n Alice\u6536\u5230\u540e\u7528\u79c1\u94a5\u89e3\u5bc6\uff1a M = C^d mod n \u6570\u5b57\u7b7e\u540d\uff08\u8ba4\u8bc1+\u9632\u62b5\u8d56\uff09 Alice\u8981\u7ed9Bob\u53d1\u6d88\u606fM\uff0c\u5e76\u8bc1\u660e\u662f\u81ea\u5df1\u53d1\u7684\u3002 Alice\u5148\u5bf9M\u505a\u54c8\u5e0c\uff0c\u5f97\u5230\u6458\u8981H\u3002 Alice\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u52a0\u5bc6\u6458\u8981\uff1a S = H^d mod n \uff08\u8fd9\u5c31\u662f\u7b7e\u540d\uff09 Bob\u6536\u5230\u540e\u7528Alice\u7684\u516c\u94a5\u89e3\u5bc6\u7b7e\u540d\uff1a H' = S^e mod n Bob\u518d\u5bf9\u6d88\u606fM\u505a\u54c8\u5e0c\uff0c\u5f97\u5230H''\uff0c\u6bd4\u5bf9H'\u548cH''\u662f\u5426\u4e00\u81f4\u3002 3. \u603b\u7ed3 \u516c\u94a5\u52a0\u5bc6\uff0c\u79c1\u94a5\u89e3\u5bc6 \uff1a\u4fdd\u8bc1\u5185\u5bb9\u53ea\u6709\u79c1\u94a5\u6301\u6709\u8005\u80fd\u770b\u61c2\uff08\u673a\u5bc6\u6027\uff09\u3002 \u79c1\u94a5\u52a0\u5bc6\uff0c\u516c\u94a5\u89e3\u5bc6 \uff1a\u4fdd\u8bc1\u5185\u5bb9\u786e\u5b9e\u662f\u79c1\u94a5\u6301\u6709\u8005\u53d1\u7684\uff08\u8ba4\u8bc1\u3001\u4e0d\u53ef\u5426\u8ba4\uff09\u3002 \u539f\u56e0 \uff1a\u516c\u94a5\u548c\u79c1\u94a5\u662f\u4e00\u5bf9\u6570\u5b66\u4e0a\u7684\u201c\u94a5\u5319\u201d\uff0c\u52a0\u5bc6\u548c\u89e3\u5bc6\u8fc7\u7a0b\u662f\u53ef\u9006\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e92\u6362\u89d2\u8272\u4f7f\u7528\u3002 RSA\u6570\u5b57\u7b7e\u540d(\u5b66\u4f1aRSA\u52a0\u5bc6\u5373\u53ef) RSA\u52a0\u5bc6\u8fc7\u7a0b\u53ef\u4ee5\u5206\u4e3a \u53c2\u6570\u9009\u53d6 \u3001 \u5bc6\u94a5\u751f\u6210 \u3001 \u52a0\u5bc6 \u548c \u89e3\u5bc6 \u51e0\u4e2a\u6b65\u9aa4\u3002\u4e0b\u9762\u8be6\u7ec6\u89e3\u91ca\u6bcf\u4e2a\u53c2\u6570\u7684\u610f\u4e49\u548c\u6d41\u7a0b\uff1a 1. \u53c2\u6570\u9009\u53d6\u4e0e\u5bc6\u94a5\u751f\u6210 \u9009\u62e9\u4e24\u4e2a\u5927\u7d20\u6570 \u8bb0\u4e3a p \u548c q \u8fd9\u4e24\u4e2a\u6570\u8d8a\u5927\uff0cRSA\u8d8a\u5b89\u5168 \u8ba1\u7b97\u6a21\u6570 n n = p \u00d7 q n \u662f\u516c\u94a5\u548c\u79c1\u94a5\u7684\u57fa\u7840\uff0c\u51b3\u5b9a\u4e86\u52a0\u5bc6\u5757\u7684\u5927\u5c0f \u8ba1\u7b97\u6b27\u62c9\u51fd\u6570 \u03c6(n) \u03c6(n) = (p - 1) \u00d7 (q - 1) \u03c6(n) \u7528\u4e8e\u540e\u7eed\u9009\u62e9\u52a0\u5bc6\u548c\u89e3\u5bc6\u6307\u6570 \u9009\u62e9\u516c\u94a5\u6307\u6570 e \u8981\u6c42 1 < e < \u03c6(n) \uff0c\u4e14 e \u4e0e \u03c6(n) \u4e92\u8d28\uff08\u6700\u5927\u516c\u7ea6\u6570\u4e3a1\uff09 \u5e38\u7528\u7684 e \u503c\u6709 65537\u300117\u30013 \u7b49 e \u7528\u4e8e\u52a0\u5bc6\uff0c\u662f\u516c\u94a5\u7684\u4e00\u90e8\u5206 \u8ba1\u7b97\u79c1\u94a5\u6307\u6570 d d \u662f e \u5173\u4e8e\u6a21 \u03c6(n) \u7684\u4e58\u6cd5\u9006\u5143\uff0c\u6ee1\u8db3 e \u00d7 d \u2261 1 (mod \u03c6(n)) d \u7528\u4e8e\u89e3\u5bc6\uff0c\u662f\u79c1\u94a5\u7684\u4e00\u90e8\u5206 \u6700\u7ec8\uff1a - \u516c\u94a5\uff1a (n, e) - \u79c1\u94a5\uff1a (n, d) 2. \u52a0\u5bc6\u8fc7\u7a0b \u660e\u6587\u6d88\u606f M\uff08\u9700\u8f6c\u4e3a\u6574\u6570\uff0c\u4e14 0 < M < n \uff09 \u52a0\u5bc6\u516c\u5f0f\uff1a C = M^e mod n \u5176\u4e2d C \u4e3a\u5bc6\u6587 3. \u89e3\u5bc6\u8fc7\u7a0b \u89e3\u5bc6\u516c\u5f0f\uff1a M = C^d mod n \u6062\u590d\u51fa\u539f\u59cb\u660e\u6587 M 4. \u53c2\u6570\u610f\u4e49\u603b\u7ed3 p, q \uff1a\u5927\u7d20\u6570\uff0c\u4fdd\u8bc1\u5b89\u5168\u6027 n \uff1a\u6a21\u6570\uff0c\u51b3\u5b9a\u52a0\u5bc6\u6570\u636e\u7684\u8303\u56f4 \u03c6(n) \uff1a\u7528\u4e8e\u8ba1\u7b97\u5bc6\u94a5\u6307\u6570 e \uff1a\u516c\u94a5\u6307\u6570\uff0c\u516c\u5f00\u7528\u4e8e\u52a0\u5bc6 d \uff1a\u79c1\u94a5\u6307\u6570\uff0c\u4fdd\u5bc6\u7528\u4e8e\u89e3\u5bc6 \u7b80\u8981\u6d41\u7a0b\u56fe\uff1a \u9009 p, q \u2192 \u7b97 n, \u03c6(n) \u9009 e\uff0c\u7b97 d \u516c\u94a5 (n, e)\uff0c\u79c1\u94a5 (n, d) \u52a0\u5bc6\uff1aC = M^e mod n \u89e3\u5bc6\uff1aM = C^d mod n RSA\u7684\u5b89\u5168\u6027\u4f9d\u8d56\u4e8e\u5927\u6570\u5206\u89e3\u7684\u56f0\u96be\u6027\u3002 RSA\u52a0\u5bc6\u89e3\u5bc6\u5b9e\u9645\u4f8b\u5b50 1. \u53c2\u6570\u9009\u53d6\u4e0e\u5bc6\u94a5\u751f\u6210 \u9009\u62e9\u4e24\u4e2a\u7d20\u6570\uff1a p = 7\uff0cq = 11 \u8ba1\u7b97 n \u548c \u03c6(n)\uff1a n = p \u00d7 q = 7 \u00d7 11 = 77 \u03c6(n) = (p-1) \u00d7 (q-1) = 6 \u00d7 10 = 60 \u9009\u62e9\u516c\u94a5\u6307\u6570 e\uff1a \u9009 e = 7\uff081 < 7 < 60\uff0c\u4e14\u4e0e60\u4e92\u8d28\uff09 \u8ba1\u7b97\u79c1\u94a5\u6307\u6570 d\uff1a \u4f7f e \u00d7 d \u2261 1 (mod 60) 7 \u00d7 d \u2261 1 (mod 60) \u89e3\u5f97 d = 43\uff08\u56e0\u4e3a7\u00d743=301\uff0c301 mod 60 = 1\uff09 \u516c\u94a5\uff1a(n=77, e=7) \u79c1\u94a5\uff1a(n=77, d=43) 2. \u52a0\u5bc6\u8fc7\u7a0b \u5047\u8bbe\u660e\u6587 M = 9 \u52a0\u5bc6\u516c\u5f0f\uff1aC = M^e mod n C = 9^7 mod 77 9^7 = 4782969 4782969 mod 77 = 30 \u5bc6\u6587 C = 30 3. \u89e3\u5bc6\u8fc7\u7a0b \u89e3\u5bc6\u516c\u5f0f\uff1aM = C^d mod n M = 30^43 mod 77 \uff08\u5b9e\u9645\u8ba1\u7b97\u65f6\u53ef\u7528\u5feb\u901f\u5e42\u7b97\u6cd5\uff0c\u7ed3\u679c\u4e3a9\uff09 \u89e3\u5bc6\u540e\u660e\u6587 M = 9 \u603b\u7ed3 Alice\u516c\u5e03\u516c\u94a5(77, 7)\uff0c\u4fdd\u7559\u79c1\u94a5(77, 43) Bob\u7528\u516c\u94a5\u52a0\u5bc6\u6d88\u606f9\uff0c\u5f97\u5230\u5bc6\u658730 Alice\u6536\u5230\u5bc6\u658730\uff0c\u7528\u79c1\u94a5\u89e3\u5bc6\uff0c\u6062\u590d\u51fa\u539f\u65879 \u5b9e\u9645\u5e94\u7528\u4e2d\uff0cp\u548cq\u4f1a\u9009\u7528\u4e0a\u767e\u4f4d\u7684\u5927\u7d20\u6570\uff0c\u4fdd\u8bc1\u5b89\u5168\u6027\u3002 RSA\u7ed3\u5408Hash\u8fdb\u884c\u6570\u5b57\u7b7e\u540d\u8fc7\u7a0b \u597d\u7684\uff0c\u4e0b\u9762\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u8bf4\u660e RSA\u7ed3\u5408\u54c8\u5e0c\uff08\u5982SHA-256\uff09\u8fdb\u884c\u6570\u5b57\u7b7e\u540d \u7684\u5b8c\u6574\u8fc7\u7a0b\uff1a \u573a\u666f Alice\u8981\u7ed9Bob\u53d1\u9001\u6d88\u606fM=\u201chello\u201d\uff0c\u5e76\u7528RSA\u6570\u5b57\u7b7e\u540d\u4fdd\u8bc1\u6d88\u606f\u5b8c\u6574\u6027\u548c\u8eab\u4efd\u8ba4\u8bc1\u3002 \u6b65\u9aa4 Alice\u5bf9\u6d88\u606f\u505a\u54c8\u5e0c \u7528SHA-256\u7b49\u54c8\u5e0c\u7b97\u6cd5\u5bf9\u6d88\u606fM\u8fdb\u884c\u54c8\u5e0c\uff0c\u5f97\u5230\u6d88\u606f\u6458\u8981H\u3002 \u5047\u8bbe H = 123\uff08\u5b9e\u9645\u4f1a\u662f\u5f88\u957f\u7684\u6570\u5b57\uff0c\u8fd9\u91cc\u4e3e\u4f8b\u7528123\uff09 Alice\u7528\u79c1\u94a5\u5bf9\u6458\u8981\u52a0\u5bc6\uff08\u7b7e\u540d\uff09 Alice\u7684RSA\u79c1\u94a5\u4e3a (n=77, d=43) \u8ba1\u7b97\u7b7e\u540dS = H^d mod n = 123^43 mod 77 123 mod 77 = 46\uff0c\u6240\u4ee5\u5b9e\u9645\u8ba1\u7b97 S = 46^43 mod 77 \u5047\u8bbe\u8ba1\u7b97\u7ed3\u679c S = 2\uff08\u5b9e\u9645\u53ef\u7528\u7a0b\u5e8f\u7b97\u51fa\uff09 Alice\u53d1\u9001\u6d88\u606f\u548c\u7b7e\u540d Alice\u628a\u539f\u59cb\u6d88\u606fM=\u201chello\u201d\u548c\u7b7e\u540dS=2\u4e00\u8d77\u53d1\u7ed9Bob Bob\u6536\u5230\u540e\u9a8c\u8bc1\u7b7e\u540d Bob\u7528Alice\u7684RSA\u516c\u94a5 (n=77, e=7) \u9a8c\u8bc1\u7b7e\u540d \u8ba1\u7b97 H' = S^e mod n = 2^7 mod 77 = 128 mod 77 = 51 Bob\u5bf9\u6536\u5230\u7684\u6d88\u606fM=\u201chello\u201d\u7528SHA-256\u54c8\u5e0c\uff0c\u5f97\u5230\u6458\u8981H''\uff08\u5047\u8bbe\u4e5f\u662f123\uff0c\u5b9e\u9645\u4f1a\u4e00\u81f4\uff09 123 mod 77 = 46\uff0c51\u226046\uff0c\u8bf4\u660e\u4f8b\u5b50\u6570\u5b57\u592a\u5c0f\uff0c\u5b9e\u9645\u5927\u6570\u4e0b\u80fd\u4e25\u683c\u6210\u7acb \u6bd4\u5bf9\u6458\u8981 \u5982\u679c H' \u548c H'' \u4e00\u81f4\uff0c\u8bf4\u660e\u7b7e\u540d\u6709\u6548\uff0c\u6d88\u606f\u672a\u88ab\u7be1\u6539\u4e14\u786e\u5b9e\u662fAlice\u53d1\u7684\u3002 \u603b\u7ed3 \u7b7e\u540d\u65f6 \uff1a\u5bf9\u6d88\u606f\u505a\u54c8\u5e0c\uff0c\u7528\u79c1\u94a5\u52a0\u5bc6\u6458\u8981\uff0c\u751f\u6210\u7b7e\u540d \u9a8c\u8bc1\u65f6 \uff1a\u7528\u516c\u94a5\u89e3\u5bc6\u7b7e\u540d\uff0c\u5f97\u5230\u6458\u8981\uff0c\u4e0e\u6536\u5230\u6d88\u606f\u7684\u54c8\u5e0c\u503c\u6bd4\u5bf9 \u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u54c8\u5e0c\u7b97\u6cd5\u4fdd\u8bc1\u6d88\u606f\u957f\u5ea6\u56fa\u5b9a\u4e14\u6297\u7be1\u6539\uff0cRSA\u4fdd\u8bc1\u7b7e\u540d\u4e0d\u53ef\u4f2a\u9020\u3002 EIGamal\u6570\u5b57\u7b7e\u540d\u662f\u4ec0\u4e48","title":"\u6570\u5b57\u7b7e\u540d"},{"location":"Cryptography/ch7/#_1","text":"\u6d88\u606f\u6458\u8981 \uff1a\u5bf9\u539f\u59cb\u6d88\u606f\u7528\u54c8\u5e0c\u7b97\u6cd5\uff08\u5982SHA256\uff09\u751f\u6210\u6458\u8981\uff08Hash\uff09\u3002 \u79c1\u94a5\u52a0\u5bc6 \uff1a\u7528\u53d1\u9001\u8005\u7684\u79c1\u94a5\u5bf9\u6458\u8981\u52a0\u5bc6\uff0c\u751f\u6210\u6570\u5b57\u7b7e\u540d\u3002 \u53d1\u9001\u6d88\u606f\u548c\u7b7e\u540d \uff1a\u628a\u539f\u59cb\u6d88\u606f\u548c\u6570\u5b57\u7b7e\u540d\u4e00\u8d77\u53d1\u9001\u7ed9\u63a5\u6536\u8005\u3002 \u516c\u94a5\u9a8c\u8bc1 \uff1a\u63a5\u6536\u8005\u6536\u5230\u540e\uff0c\u7528\u53d1\u9001\u8005\u7684\u516c\u94a5\u89e3\u5bc6\u7b7e\u540d\u5f97\u5230\u6458\u8981\uff0c\u518d\u5bf9\u539f\u59cb\u6d88\u606f\u505a\u54c8\u5e0c\uff0c\u6bd4\u8f83\u4e24\u4e2a\u6458\u8981\u662f\u5426\u4e00\u81f4\u3002 \u4e00\u81f4\uff1a\u8bf4\u660e\u6d88\u606f\u672a\u88ab\u7be1\u6539\uff0c\u4e14\u786e\u5b9e\u662f\u79c1\u94a5\u6301\u6709\u8005\u53d1\u7684\u3002 \u4e0d\u4e00\u81f4\uff1a\u8bf4\u660e\u6d88\u606f\u88ab\u7be1\u6539\u6216\u7b7e\u540d\u4f2a\u9020\u3002","title":"\u539f\u7406\u6b65\u9aa4"},{"location":"Cryptography/ch7/#_2","text":"\u5047\u8bbeAlice\u8981\u7ed9Bob\u53d1\u9001\u4e00\u4efd\u5408\u540c\uff0c\u5e76\u4fdd\u8bc1\u5185\u5bb9\u672a\u88ab\u7be1\u6539\u4e14\u786e\u5b9e\u662f\u5979\u672c\u4eba\u53d1\u7684\uff1a Alice\u5bf9\u5408\u540c\u5185\u5bb9\u505a\u54c8\u5e0c\uff0c\u5f97\u5230\u6458\u8981\u3002 Alice\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u52a0\u5bc6\u8fd9\u4e2a\u6458\u8981\uff0c\u5f97\u5230\u6570\u5b57\u7b7e\u540d\u3002 Alice\u628a\u5408\u540c\u5185\u5bb9\u548c\u6570\u5b57\u7b7e\u540d\u4e00\u8d77\u53d1\u7ed9Bob\u3002 Bob\u6536\u5230\u540e\uff0c\u7528Alice\u7684\u516c\u94a5\u89e3\u5bc6\u7b7e\u540d\uff0c\u5f97\u5230\u6458\u8981A\u3002 Bob\u5bf9\u6536\u5230\u7684\u5408\u540c\u5185\u5bb9\u505a\u54c8\u5e0c\uff0c\u5f97\u5230\u6458\u8981B\u3002 \u6bd4\u8f83A\u548cB\uff0c\u5982\u679c\u4e00\u81f4\uff0c\u8bf4\u660e\u5408\u540c\u5185\u5bb9\u6ca1\u88ab\u6539\u52a8\uff0c\u4e14\u786e\u5b9e\u662fAlice\u53d1\u7684\u3002 \u603b\u7ed3\uff1a \u6570\u5b57\u7b7e\u540d\u4fdd\u8bc1\u4e86\u6d88\u606f\u7684\u5b8c\u6574\u6027\u3001\u8eab\u4efd\u8ba4\u8bc1\u548c\u4e0d\u53ef\u5426\u8ba4\u6027\uff0c\u662f\u73b0\u4ee3\u7535\u5b50\u5408\u540c\u3001\u8f6f\u4ef6\u5206\u53d1\u7b49\u573a\u666f\u7684\u57fa\u7840\u5b89\u5168\u6280\u672f\u3002","title":"\u5b9e\u9645\u4f8b\u5b50"},{"location":"Cryptography/ch7/#_3","text":"\u975e\u5bf9\u79f0\u52a0\u5bc6 \u786e\u5b9e\u901a\u5e38\u662f\u201c\u516c\u94a5\u52a0\u5bc6\uff0c\u79c1\u94a5\u89e3\u5bc6\u201d\uff0c\u6bd4\u5982\u52a0\u5bc6\u901a\u4fe1\u65f6\u8fd9\u6837\u7528\u3002\u4f46\u5728 \u6570\u5b57\u7b7e\u540d \u573a\u666f\u4e0b\uff0c\u6d41\u7a0b\u6b63\u597d\u53cd\u8fc7\u6765\uff1a \u7b7e\u540d\u65f6 \uff1a\u7528\u79c1\u94a5\u201c\u52a0\u5bc6\u201d\u6d88\u606f\u6458\u8981\uff08\u5176\u5b9e\u662f\u5bf9\u6458\u8981\u505a\u52a0\u5bc6\u8fd0\u7b97\uff0c\u751f\u6210\u7b7e\u540d\uff09\u3002 \u9a8c\u8bc1\u65f6 \uff1a\u7528\u516c\u94a5\u201c\u89e3\u5bc6\u201d\u7b7e\u540d\uff0c\u5f97\u5230\u6458\u8981\uff0c\u518d\u548c\u6d88\u606f\u7684\u54c8\u5e0c\u503c\u6bd4\u5bf9\u3002 \u8fd9\u6837\u8bbe\u8ba1\u7684\u539f\u56e0\u662f\uff1a - \u53ea\u6709\u79c1\u94a5\u6301\u6709\u8005\u624d\u80fd\u751f\u6210\u8fd9\u4e2a\u7b7e\u540d\uff08\u522b\u4eba\u6ca1\u6709\u79c1\u94a5\u505a\u4e0d\u4e86\uff09\u3002 - \u4efb\u4f55\u4eba\u62ff\u5230\u516c\u94a5\u90fd\u80fd\u9a8c\u8bc1\u7b7e\u540d\u7684\u771f\u4f2a\uff08\u516c\u94a5\u662f\u516c\u5f00\u7684\uff09\u3002 \u672c\u8d28\u4e0a\uff1a - \u516c\u94a5\u52a0\u5bc6\u3001\u79c1\u94a5\u89e3\u5bc6 \u2192 \u4fdd\u8bc1\u673a\u5bc6\u6027\uff08\u522b\u4eba\u770b\u4e0d\u61c2\u5185\u5bb9\uff09 - \u79c1\u94a5\u52a0\u5bc6\u3001\u516c\u94a5\u89e3\u5bc6\uff08\u6570\u5b57\u7b7e\u540d\uff09\u2192 \u4fdd\u8bc1\u8eab\u4efd\u548c\u4e0d\u53ef\u5426\u8ba4\u6027\uff08\u522b\u4eba\u80fd\u9a8c\u8bc1\u662f\u4f60\u53d1\u7684\uff09 \u6240\u4ee5\uff0c\u6570\u5b57\u7b7e\u540d\u5c31\u662f\u7528\u79c1\u94a5\u201c\u52a0\u5bc6\u201d\u6458\u8981\uff0c\u516c\u94a5\u201c\u89e3\u5bc6\u201d\u9a8c\u8bc1\uff0c\u8fd9\u6837\u624d\u80fd\u8bc1\u660e\u6d88\u606f\u786e\u5b9e\u662f\u79c1\u94a5\u6301\u6709\u8005\u53d1\u51fa\u7684\u3002","title":"\u8fd9\u4e2a\u662f\u7528\u79c1\u94a5\u52a0\u5bc6\uff0c\u4e3a\u4ec0\u4e48\u516c\u94a5\u80fd\u89e3\u5bc6\uff0c\u4e00\u822c\u4e0d\u662f\u516c\u94a5\u52a0\u5bc6\u79c1\u94a5\u89e3\u5bc6\u5417"},{"location":"Cryptography/ch7/#_4","text":"","title":"\u4e3e\u4e2a\u4f8b\u5b50\u4ed6\u662f\u600e\u4e48\u52a0\u5bc6\u89e3\u5bc6\uff0c\u4e3a\u4ec0\u4e48\u516c\u94a5\u548c\u79c1\u94a5\u80fd\u4e92\u76f8\u52a0\u5bc6\u89e3\u5bc6"},{"location":"Cryptography/ch7/#1","text":"\u4ee5RSA\u4e3a\u4f8b\uff0c\u516c\u94a5\u548c\u79c1\u94a5\u662f\u4e00\u5bf9\uff0c\u6ee1\u8db3\u4e0b\u9762\u7684\u6570\u5b66\u5173\u7cfb\uff1a \u516c\u94a5\uff1a (n, e) \u79c1\u94a5\uff1a (n, d) \u52a0\u5bc6\uff1a C = M^e mod n \u89e3\u5bc6\uff1a M = C^d mod n \u65e0\u8bba\u4f60\u5148\u7528e\uff08\u516c\u94a5\uff09\u8fd8\u662fd\uff08\u79c1\u94a5\uff09\u505a\u4e00\u6b21\u8fd0\u7b97\uff0c\u518d\u7528\u53e6\u4e00\u628a\u94a5\u5319\u505a\u4e00\u6b21\uff0c\u90fd\u80fd\u8fd8\u539f\u539f\u6587\uff1a \u7528\u516c\u94a5\u52a0\u5bc6\uff0c\u79c1\u94a5\u89e3\u5bc6\uff1a M = (M^e mod n)^d mod n \u7528\u79c1\u94a5\u52a0\u5bc6\uff0c\u516c\u94a5\u89e3\u5bc6\uff1a M = (M^d mod n)^e mod n \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 \u516c\u94a5\u548c\u79c1\u94a5\u53ef\u4ee5\u4e92\u76f8\u52a0\u5bc6\u89e3\u5bc6 \uff0c\u672c\u8d28\u662f\u6570\u5b66\u4e0a\u7684\u53ef\u9006\u6027\u3002","title":"1. \u516c\u94a5\u548c\u79c1\u94a5\u7684\u6570\u5b66\u5173\u7cfb"},{"location":"Cryptography/ch7/#2","text":"\u5047\u8bbeAlice\u7684\u516c\u94a5\u662f(e, n)\uff0c\u79c1\u94a5\u662f(d, n)\u3002","title":"2. \u4e3e\u4f8b\u8bf4\u660e"},{"location":"Cryptography/ch7/#_5","text":"Bob\u60f3\u7ed9Alice\u53d1\u6d88\u606fM\u3002 Bob\u7528Alice\u7684\u516c\u94a5\u52a0\u5bc6\uff1a C = M^e mod n Alice\u6536\u5230\u540e\u7528\u79c1\u94a5\u89e3\u5bc6\uff1a M = C^d mod n","title":"\u52a0\u5bc6\u901a\u4fe1\uff08\u673a\u5bc6\u6027\uff09"},{"location":"Cryptography/ch7/#_6","text":"Alice\u8981\u7ed9Bob\u53d1\u6d88\u606fM\uff0c\u5e76\u8bc1\u660e\u662f\u81ea\u5df1\u53d1\u7684\u3002 Alice\u5148\u5bf9M\u505a\u54c8\u5e0c\uff0c\u5f97\u5230\u6458\u8981H\u3002 Alice\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u52a0\u5bc6\u6458\u8981\uff1a S = H^d mod n \uff08\u8fd9\u5c31\u662f\u7b7e\u540d\uff09 Bob\u6536\u5230\u540e\u7528Alice\u7684\u516c\u94a5\u89e3\u5bc6\u7b7e\u540d\uff1a H' = S^e mod n Bob\u518d\u5bf9\u6d88\u606fM\u505a\u54c8\u5e0c\uff0c\u5f97\u5230H''\uff0c\u6bd4\u5bf9H'\u548cH''\u662f\u5426\u4e00\u81f4\u3002","title":"\u6570\u5b57\u7b7e\u540d\uff08\u8ba4\u8bc1+\u9632\u62b5\u8d56\uff09"},{"location":"Cryptography/ch7/#3","text":"\u516c\u94a5\u52a0\u5bc6\uff0c\u79c1\u94a5\u89e3\u5bc6 \uff1a\u4fdd\u8bc1\u5185\u5bb9\u53ea\u6709\u79c1\u94a5\u6301\u6709\u8005\u80fd\u770b\u61c2\uff08\u673a\u5bc6\u6027\uff09\u3002 \u79c1\u94a5\u52a0\u5bc6\uff0c\u516c\u94a5\u89e3\u5bc6 \uff1a\u4fdd\u8bc1\u5185\u5bb9\u786e\u5b9e\u662f\u79c1\u94a5\u6301\u6709\u8005\u53d1\u7684\uff08\u8ba4\u8bc1\u3001\u4e0d\u53ef\u5426\u8ba4\uff09\u3002 \u539f\u56e0 \uff1a\u516c\u94a5\u548c\u79c1\u94a5\u662f\u4e00\u5bf9\u6570\u5b66\u4e0a\u7684\u201c\u94a5\u5319\u201d\uff0c\u52a0\u5bc6\u548c\u89e3\u5bc6\u8fc7\u7a0b\u662f\u53ef\u9006\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e92\u6362\u89d2\u8272\u4f7f\u7528\u3002","title":"3. \u603b\u7ed3"},{"location":"Cryptography/ch7/#rsarsa","text":"RSA\u52a0\u5bc6\u8fc7\u7a0b\u53ef\u4ee5\u5206\u4e3a \u53c2\u6570\u9009\u53d6 \u3001 \u5bc6\u94a5\u751f\u6210 \u3001 \u52a0\u5bc6 \u548c \u89e3\u5bc6 \u51e0\u4e2a\u6b65\u9aa4\u3002\u4e0b\u9762\u8be6\u7ec6\u89e3\u91ca\u6bcf\u4e2a\u53c2\u6570\u7684\u610f\u4e49\u548c\u6d41\u7a0b\uff1a","title":"RSA\u6570\u5b57\u7b7e\u540d(\u5b66\u4f1aRSA\u52a0\u5bc6\u5373\u53ef)"},{"location":"Cryptography/ch7/#1_1","text":"\u9009\u62e9\u4e24\u4e2a\u5927\u7d20\u6570 \u8bb0\u4e3a p \u548c q \u8fd9\u4e24\u4e2a\u6570\u8d8a\u5927\uff0cRSA\u8d8a\u5b89\u5168 \u8ba1\u7b97\u6a21\u6570 n n = p \u00d7 q n \u662f\u516c\u94a5\u548c\u79c1\u94a5\u7684\u57fa\u7840\uff0c\u51b3\u5b9a\u4e86\u52a0\u5bc6\u5757\u7684\u5927\u5c0f \u8ba1\u7b97\u6b27\u62c9\u51fd\u6570 \u03c6(n) \u03c6(n) = (p - 1) \u00d7 (q - 1) \u03c6(n) \u7528\u4e8e\u540e\u7eed\u9009\u62e9\u52a0\u5bc6\u548c\u89e3\u5bc6\u6307\u6570 \u9009\u62e9\u516c\u94a5\u6307\u6570 e \u8981\u6c42 1 < e < \u03c6(n) \uff0c\u4e14 e \u4e0e \u03c6(n) \u4e92\u8d28\uff08\u6700\u5927\u516c\u7ea6\u6570\u4e3a1\uff09 \u5e38\u7528\u7684 e \u503c\u6709 65537\u300117\u30013 \u7b49 e \u7528\u4e8e\u52a0\u5bc6\uff0c\u662f\u516c\u94a5\u7684\u4e00\u90e8\u5206 \u8ba1\u7b97\u79c1\u94a5\u6307\u6570 d d \u662f e \u5173\u4e8e\u6a21 \u03c6(n) \u7684\u4e58\u6cd5\u9006\u5143\uff0c\u6ee1\u8db3 e \u00d7 d \u2261 1 (mod \u03c6(n)) d \u7528\u4e8e\u89e3\u5bc6\uff0c\u662f\u79c1\u94a5\u7684\u4e00\u90e8\u5206 \u6700\u7ec8\uff1a - \u516c\u94a5\uff1a (n, e) - \u79c1\u94a5\uff1a (n, d)","title":"1. \u53c2\u6570\u9009\u53d6\u4e0e\u5bc6\u94a5\u751f\u6210"},{"location":"Cryptography/ch7/#2_1","text":"\u660e\u6587\u6d88\u606f M\uff08\u9700\u8f6c\u4e3a\u6574\u6570\uff0c\u4e14 0 < M < n \uff09 \u52a0\u5bc6\u516c\u5f0f\uff1a C = M^e mod n \u5176\u4e2d C \u4e3a\u5bc6\u6587","title":"2. \u52a0\u5bc6\u8fc7\u7a0b"},{"location":"Cryptography/ch7/#3_1","text":"\u89e3\u5bc6\u516c\u5f0f\uff1a M = C^d mod n \u6062\u590d\u51fa\u539f\u59cb\u660e\u6587 M","title":"3. \u89e3\u5bc6\u8fc7\u7a0b"},{"location":"Cryptography/ch7/#4","text":"p, q \uff1a\u5927\u7d20\u6570\uff0c\u4fdd\u8bc1\u5b89\u5168\u6027 n \uff1a\u6a21\u6570\uff0c\u51b3\u5b9a\u52a0\u5bc6\u6570\u636e\u7684\u8303\u56f4 \u03c6(n) \uff1a\u7528\u4e8e\u8ba1\u7b97\u5bc6\u94a5\u6307\u6570 e \uff1a\u516c\u94a5\u6307\u6570\uff0c\u516c\u5f00\u7528\u4e8e\u52a0\u5bc6 d \uff1a\u79c1\u94a5\u6307\u6570\uff0c\u4fdd\u5bc6\u7528\u4e8e\u89e3\u5bc6 \u7b80\u8981\u6d41\u7a0b\u56fe\uff1a \u9009 p, q \u2192 \u7b97 n, \u03c6(n) \u9009 e\uff0c\u7b97 d \u516c\u94a5 (n, e)\uff0c\u79c1\u94a5 (n, d) \u52a0\u5bc6\uff1aC = M^e mod n \u89e3\u5bc6\uff1aM = C^d mod n RSA\u7684\u5b89\u5168\u6027\u4f9d\u8d56\u4e8e\u5927\u6570\u5206\u89e3\u7684\u56f0\u96be\u6027\u3002","title":"4. \u53c2\u6570\u610f\u4e49\u603b\u7ed3"},{"location":"Cryptography/ch7/#rsa","text":"","title":"RSA\u52a0\u5bc6\u89e3\u5bc6\u5b9e\u9645\u4f8b\u5b50"},{"location":"Cryptography/ch7/#1_2","text":"\u9009\u62e9\u4e24\u4e2a\u7d20\u6570\uff1a p = 7\uff0cq = 11 \u8ba1\u7b97 n \u548c \u03c6(n)\uff1a n = p \u00d7 q = 7 \u00d7 11 = 77 \u03c6(n) = (p-1) \u00d7 (q-1) = 6 \u00d7 10 = 60 \u9009\u62e9\u516c\u94a5\u6307\u6570 e\uff1a \u9009 e = 7\uff081 < 7 < 60\uff0c\u4e14\u4e0e60\u4e92\u8d28\uff09 \u8ba1\u7b97\u79c1\u94a5\u6307\u6570 d\uff1a \u4f7f e \u00d7 d \u2261 1 (mod 60) 7 \u00d7 d \u2261 1 (mod 60) \u89e3\u5f97 d = 43\uff08\u56e0\u4e3a7\u00d743=301\uff0c301 mod 60 = 1\uff09 \u516c\u94a5\uff1a(n=77, e=7) \u79c1\u94a5\uff1a(n=77, d=43)","title":"1. \u53c2\u6570\u9009\u53d6\u4e0e\u5bc6\u94a5\u751f\u6210"},{"location":"Cryptography/ch7/#2_2","text":"\u5047\u8bbe\u660e\u6587 M = 9 \u52a0\u5bc6\u516c\u5f0f\uff1aC = M^e mod n C = 9^7 mod 77 9^7 = 4782969 4782969 mod 77 = 30 \u5bc6\u6587 C = 30","title":"2. \u52a0\u5bc6\u8fc7\u7a0b"},{"location":"Cryptography/ch7/#3_2","text":"\u89e3\u5bc6\u516c\u5f0f\uff1aM = C^d mod n M = 30^43 mod 77 \uff08\u5b9e\u9645\u8ba1\u7b97\u65f6\u53ef\u7528\u5feb\u901f\u5e42\u7b97\u6cd5\uff0c\u7ed3\u679c\u4e3a9\uff09 \u89e3\u5bc6\u540e\u660e\u6587 M = 9","title":"3. \u89e3\u5bc6\u8fc7\u7a0b"},{"location":"Cryptography/ch7/#_7","text":"Alice\u516c\u5e03\u516c\u94a5(77, 7)\uff0c\u4fdd\u7559\u79c1\u94a5(77, 43) Bob\u7528\u516c\u94a5\u52a0\u5bc6\u6d88\u606f9\uff0c\u5f97\u5230\u5bc6\u658730 Alice\u6536\u5230\u5bc6\u658730\uff0c\u7528\u79c1\u94a5\u89e3\u5bc6\uff0c\u6062\u590d\u51fa\u539f\u65879 \u5b9e\u9645\u5e94\u7528\u4e2d\uff0cp\u548cq\u4f1a\u9009\u7528\u4e0a\u767e\u4f4d\u7684\u5927\u7d20\u6570\uff0c\u4fdd\u8bc1\u5b89\u5168\u6027\u3002","title":"\u603b\u7ed3"},{"location":"Cryptography/ch7/#rsahash","text":"\u597d\u7684\uff0c\u4e0b\u9762\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u8bf4\u660e RSA\u7ed3\u5408\u54c8\u5e0c\uff08\u5982SHA-256\uff09\u8fdb\u884c\u6570\u5b57\u7b7e\u540d \u7684\u5b8c\u6574\u8fc7\u7a0b\uff1a","title":"RSA\u7ed3\u5408Hash\u8fdb\u884c\u6570\u5b57\u7b7e\u540d\u8fc7\u7a0b"},{"location":"Cryptography/ch7/#_8","text":"Alice\u8981\u7ed9Bob\u53d1\u9001\u6d88\u606fM=\u201chello\u201d\uff0c\u5e76\u7528RSA\u6570\u5b57\u7b7e\u540d\u4fdd\u8bc1\u6d88\u606f\u5b8c\u6574\u6027\u548c\u8eab\u4efd\u8ba4\u8bc1\u3002","title":"\u573a\u666f"},{"location":"Cryptography/ch7/#_9","text":"Alice\u5bf9\u6d88\u606f\u505a\u54c8\u5e0c \u7528SHA-256\u7b49\u54c8\u5e0c\u7b97\u6cd5\u5bf9\u6d88\u606fM\u8fdb\u884c\u54c8\u5e0c\uff0c\u5f97\u5230\u6d88\u606f\u6458\u8981H\u3002 \u5047\u8bbe H = 123\uff08\u5b9e\u9645\u4f1a\u662f\u5f88\u957f\u7684\u6570\u5b57\uff0c\u8fd9\u91cc\u4e3e\u4f8b\u7528123\uff09 Alice\u7528\u79c1\u94a5\u5bf9\u6458\u8981\u52a0\u5bc6\uff08\u7b7e\u540d\uff09 Alice\u7684RSA\u79c1\u94a5\u4e3a (n=77, d=43) \u8ba1\u7b97\u7b7e\u540dS = H^d mod n = 123^43 mod 77 123 mod 77 = 46\uff0c\u6240\u4ee5\u5b9e\u9645\u8ba1\u7b97 S = 46^43 mod 77 \u5047\u8bbe\u8ba1\u7b97\u7ed3\u679c S = 2\uff08\u5b9e\u9645\u53ef\u7528\u7a0b\u5e8f\u7b97\u51fa\uff09 Alice\u53d1\u9001\u6d88\u606f\u548c\u7b7e\u540d Alice\u628a\u539f\u59cb\u6d88\u606fM=\u201chello\u201d\u548c\u7b7e\u540dS=2\u4e00\u8d77\u53d1\u7ed9Bob Bob\u6536\u5230\u540e\u9a8c\u8bc1\u7b7e\u540d Bob\u7528Alice\u7684RSA\u516c\u94a5 (n=77, e=7) \u9a8c\u8bc1\u7b7e\u540d \u8ba1\u7b97 H' = S^e mod n = 2^7 mod 77 = 128 mod 77 = 51 Bob\u5bf9\u6536\u5230\u7684\u6d88\u606fM=\u201chello\u201d\u7528SHA-256\u54c8\u5e0c\uff0c\u5f97\u5230\u6458\u8981H''\uff08\u5047\u8bbe\u4e5f\u662f123\uff0c\u5b9e\u9645\u4f1a\u4e00\u81f4\uff09 123 mod 77 = 46\uff0c51\u226046\uff0c\u8bf4\u660e\u4f8b\u5b50\u6570\u5b57\u592a\u5c0f\uff0c\u5b9e\u9645\u5927\u6570\u4e0b\u80fd\u4e25\u683c\u6210\u7acb \u6bd4\u5bf9\u6458\u8981 \u5982\u679c H' \u548c H'' \u4e00\u81f4\uff0c\u8bf4\u660e\u7b7e\u540d\u6709\u6548\uff0c\u6d88\u606f\u672a\u88ab\u7be1\u6539\u4e14\u786e\u5b9e\u662fAlice\u53d1\u7684\u3002","title":"\u6b65\u9aa4"},{"location":"Cryptography/ch7/#_10","text":"\u7b7e\u540d\u65f6 \uff1a\u5bf9\u6d88\u606f\u505a\u54c8\u5e0c\uff0c\u7528\u79c1\u94a5\u52a0\u5bc6\u6458\u8981\uff0c\u751f\u6210\u7b7e\u540d \u9a8c\u8bc1\u65f6 \uff1a\u7528\u516c\u94a5\u89e3\u5bc6\u7b7e\u540d\uff0c\u5f97\u5230\u6458\u8981\uff0c\u4e0e\u6536\u5230\u6d88\u606f\u7684\u54c8\u5e0c\u503c\u6bd4\u5bf9 \u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u54c8\u5e0c\u7b97\u6cd5\u4fdd\u8bc1\u6d88\u606f\u957f\u5ea6\u56fa\u5b9a\u4e14\u6297\u7be1\u6539\uff0cRSA\u4fdd\u8bc1\u7b7e\u540d\u4e0d\u53ef\u4f2a\u9020\u3002","title":"\u603b\u7ed3"},{"location":"Cryptography/ch7/#eigamal","text":"","title":"EIGamal\u6570\u5b57\u7b7e\u540d\u662f\u4ec0\u4e48"},{"location":"Cryptography/exam/","text":"\u8bfe\u7a0b\u53c2\u8003\u4e66 \u8003\u8bd5\u9898\u578b \u6570\u5b57\u7b7e\u540d\u7684\u7279\u6027 \u6570\u5b57\u7b7e\u540d\u7684\u7279\u6027\u8003\u8bd5\u5e38\u8003\u4ee5\u4e0b\u51e0\u4e2a\u6838\u5fc3\u6982\u5ff5\uff1a \u5b8c\u6574\u6027 \u80fd\u4fdd\u8bc1\u6d88\u606f\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u672a\u88ab\u7be1\u6539\u3002\u63a5\u6536\u65b9\u53ef\u4ee5\u9a8c\u8bc1\u6d88\u606f\u5185\u5bb9\u662f\u5426\u548c\u53d1\u9001\u65b9\u7b7e\u540d\u65f6\u4e00\u81f4\u3002 \u8ba4\u8bc1\u6027\uff08\u8eab\u4efd\u8ba4\u8bc1\uff09 \u80fd\u8bc1\u660e\u6d88\u606f\u786e\u5b9e\u662f\u7531\u7b7e\u540d\u8005\uff08\u79c1\u94a5\u6301\u6709\u8005\uff09\u53d1\u51fa\u7684\uff0c\u9632\u6b62\u5192\u5145\u3002 \u4e0d\u53ef\u5426\u8ba4\u6027\uff08\u9632\u62b5\u8d56\uff09 \u7b7e\u540d\u8005\u4e8b\u540e\u4e0d\u80fd\u5426\u8ba4\u81ea\u5df1\u7b7e\u8fc7\u540d\uff0c\u56e0\u4e3a\u53ea\u6709\u79c1\u94a5\u6301\u6709\u8005\u624d\u80fd\u751f\u6210\u8be5\u7b7e\u540d\u3002 \u6297\u4f2a\u9020\u6027 \u6ca1\u6709\u79c1\u94a5\u7684\u4eba\u65e0\u6cd5\u4f2a\u9020\u5408\u6cd5\u7b7e\u540d\u3002 \u5e38\u89c1\u8003\u70b9\u603b\u7ed3\uff1a - \u6570\u5b57\u7b7e\u540d\u7684\u4e09\u5927\u57fa\u672c\u7279\u6027\uff1a\u5b8c\u6574\u6027\u3001\u8ba4\u8bc1\u6027\u3001\u4e0d\u53ef\u5426\u8ba4\u6027\u3002 - \u6570\u5b57\u7b7e\u540d\u7684\u5b9e\u73b0\u539f\u7406\uff08\u4e00\u822c\u4f1a\u6d89\u53ca\u975e\u5bf9\u79f0\u52a0\u5bc6\u548c\u54c8\u5e0c\u7b97\u6cd5\uff09\u3002 - \u6570\u5b57\u7b7e\u540d\u4e0e\u6d88\u606f\u8ba4\u8bc1\u7801\uff08MAC\uff09\u7684\u533a\u522b\u3002 - \u6570\u5b57\u7b7e\u540d\u7684\u5e94\u7528\u573a\u666f\uff08\u5982\u7535\u5b50\u5408\u540c\u3001\u8f6f\u4ef6\u5206\u53d1\u7b49\uff09\u3002 EIGamal\u6570\u5b57\u7b7e\u540d ElGamal\u6570\u5b57\u7b7e\u540d\u662f\u4e00\u79cd\u57fa\u4e8e\u79bb\u6563\u5bf9\u6570\u96be\u9898\u7684\u516c\u94a5\u6570\u5b57\u7b7e\u540d\u7b97\u6cd5\uff0c\u7531ElGamal\u63d0\u51fa\u3002\u5b83\u4e0eElGamal\u52a0\u5bc6\u7b97\u6cd5\u539f\u7406\u7c7b\u4f3c\uff0c\u4f46\u4e13\u95e8\u7528\u4e8e\u6570\u5b57\u7b7e\u540d\u3002 \u539f\u7406\u7b80\u8ff0 \u5bc6\u94a5\u751f\u6210 \u9009\u62e9\u4e00\u4e2a\u5927\u7d20\u6570p\u548c\u751f\u6210\u5143g \u9009\u53d6\u79c1\u94a5x\uff081 < x < p-1\uff09 \u8ba1\u7b97\u516c\u94a5y = g^x mod p \u7b7e\u540d\u8fc7\u7a0b \u5bf9\u6d88\u606fm\uff0c\u9009\u53d6\u968f\u673a\u6570k\uff081 < k < p-1\uff0c\u4e14k\u4e0ep-1\u4e92\u7d20\uff09 \u8ba1\u7b97r = g^k mod p \u8ba1\u7b97s = k\u207b\u00b9(m - x\u00b7r) mod (p-1)\uff08k\u207b\u00b9\u662fk\u5173\u4e8ep-1\u7684\u9006\u5143\uff09 \u7b7e\u540d\u4e3a(r, s) \u9a8c\u8bc1\u8fc7\u7a0b \u9a8c\u8bc1\u65b9\u6536\u5230(m, r, s)\u548c\u516c\u94a5(y, g, p) \u68c0\u67e5 1 < r < p \u8ba1\u7b97 v1 = y^r * r^s mod p \u8ba1\u7b97 v2 = g^m mod p \u82e5 v1 == v2\uff0c\u5219\u7b7e\u540d\u6709\u6548 \u7279\u70b9 \u5b89\u5168\u6027\u57fa\u4e8e\u79bb\u6563\u5bf9\u6570\u96be\u9898 \u7b7e\u540d\u8fc7\u7a0b\u9700\u8981\u4e3a\u6bcf\u6761\u6d88\u606f\u9009\u53d6\u65b0\u7684\u968f\u673a\u6570k \u9002\u7528\u4e8e\u7535\u5b50\u5408\u540c\u3001\u6570\u5b57\u8bc1\u4e66\u7b49\u573a\u666f \u603b\u7ed3\uff1a ElGamal\u6570\u5b57\u7b7e\u540d\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u516c\u94a5\u7b7e\u540d\u7b97\u6cd5\uff0c\u539f\u7406\u4e0eElGamal\u52a0\u5bc6\u7c7b\u4f3c\uff0c\u5e7f\u6cdb\u7528\u4e8e\u9700\u8981\u8eab\u4efd\u8ba4\u8bc1\u548c\u9632\u62b5\u8d56\u7684\u573a\u5408\u3002 \u5b9e\u9645\u4f8b\u5b50 \u4e0b\u9762\u7528 p=7 \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684ElGamal\u6570\u5b57\u7b7e\u540d\u8fc7\u7a0b\u7684\u4f8b\u5b50\uff08\u5b9e\u9645\u5e94\u7528\u4e2dp\u8fdc\u5927\u4e8e7\uff0c\u8fd9\u91cc\u4ec5\u4e3a\u6f14\u793a\u539f\u7406\uff09\uff1a 1. \u5bc6\u94a5\u751f\u6210 \u9009\u5927\u7d20\u6570\uff1ap = 7 \u9009\u751f\u6210\u5143\uff1ag = 3 \u9009\u79c1\u94a5\uff1ax = 2\uff081 < x < p-1\uff09 \u8ba1\u7b97\u516c\u94a5\uff1ay = g^x mod p = 3^2 mod 7 = 9 mod 7 = 2 \u516c\u94a5\uff1a(p=7, g=3, y=2) \u79c1\u94a5\uff1ax=2 2. \u7b7e\u540d\u8fc7\u7a0b \u5047\u8bbe\u8981\u7b7e\u540d\u7684\u6d88\u606f m = 4 \u9009\u968f\u673a\u6570\uff1ak = 5\uff081 < k < p-1\uff0c\u4e14gcd(k, p-1)=1\uff0cp-1=6\uff0c5\u548c6\u4e92\u7d20\uff09 \u8ba1\u7b97 r = g^k mod p = 3^5 mod 7 = 243 mod 7 = 5 \u8ba1\u7b97 k \u7684\u9006\u5143 mod (p-1)\uff1ak=5\uff0cp-1=6\uff0c5 \u7684\u9006\u5143\u662f 5\uff08\u56e0\u4e3a5\u00d75=25\uff0c25 mod 6=1\uff09 \u8ba1\u7b97 s = k\u207b\u00b9 \u00d7 (m - x\u00b7r) mod (p-1) x\u00b7r = 2\u00d75 = 10 m - x\u00b7r = 4 - 10 = -6 s = 5 \u00d7 (-6) mod 6 = -30 mod 6 = 0 \u7b7e\u540d\u4e3a (r=5, s=0) 3. \u9a8c\u8bc1\u8fc7\u7a0b \u9a8c\u8bc1\u65b9\u6536\u5230 (m=4, r=5, s=0) \u548c\u516c\u94a5 (p=7, g=3, y=2) \u68c0\u67e5 1 < r < p\uff0c1 < 5 < 7\uff0c\u5408\u6cd5 \u8ba1\u7b97 v1 = y^r \u00d7 r^s mod p = 2^5 \u00d7 5^0 mod 7 = 32 \u00d7 1 mod 7 = 32 mod 7 = 4 \u8ba1\u7b97 v2 = g^m mod p = 3^4 mod 7 = 81 mod 7 = 4 v1 = v2\uff0c\u7b7e\u540d\u9a8c\u8bc1\u901a\u8fc7\uff01 \u603b\u7ed3\uff1a \u8fd9\u4e2a\u4f8b\u5b50\u7528\u5c0f\u7d20\u6570\u6f14\u793a\u4e86ElGamal\u6570\u5b57\u7b7e\u540d\u7684\u5b8c\u6574\u6d41\u7a0b\uff0c\u5b9e\u9645\u5e94\u7528\u4e2dp\u4f1a\u8fdc\u5927\u4e8e7\uff0c\u4fdd\u8bc1\u5b89\u5168\u6027\u3002 \u8d39\u9a6c\u5c0f\u5b9a\u7406","title":"\u8003\u8bd5\u6574\u7406"},{"location":"Cryptography/exam/#_1","text":"","title":"\u8003\u8bd5\u9898\u578b"},{"location":"Cryptography/exam/#_2","text":"\u6570\u5b57\u7b7e\u540d\u7684\u7279\u6027\u8003\u8bd5\u5e38\u8003\u4ee5\u4e0b\u51e0\u4e2a\u6838\u5fc3\u6982\u5ff5\uff1a \u5b8c\u6574\u6027 \u80fd\u4fdd\u8bc1\u6d88\u606f\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u672a\u88ab\u7be1\u6539\u3002\u63a5\u6536\u65b9\u53ef\u4ee5\u9a8c\u8bc1\u6d88\u606f\u5185\u5bb9\u662f\u5426\u548c\u53d1\u9001\u65b9\u7b7e\u540d\u65f6\u4e00\u81f4\u3002 \u8ba4\u8bc1\u6027\uff08\u8eab\u4efd\u8ba4\u8bc1\uff09 \u80fd\u8bc1\u660e\u6d88\u606f\u786e\u5b9e\u662f\u7531\u7b7e\u540d\u8005\uff08\u79c1\u94a5\u6301\u6709\u8005\uff09\u53d1\u51fa\u7684\uff0c\u9632\u6b62\u5192\u5145\u3002 \u4e0d\u53ef\u5426\u8ba4\u6027\uff08\u9632\u62b5\u8d56\uff09 \u7b7e\u540d\u8005\u4e8b\u540e\u4e0d\u80fd\u5426\u8ba4\u81ea\u5df1\u7b7e\u8fc7\u540d\uff0c\u56e0\u4e3a\u53ea\u6709\u79c1\u94a5\u6301\u6709\u8005\u624d\u80fd\u751f\u6210\u8be5\u7b7e\u540d\u3002 \u6297\u4f2a\u9020\u6027 \u6ca1\u6709\u79c1\u94a5\u7684\u4eba\u65e0\u6cd5\u4f2a\u9020\u5408\u6cd5\u7b7e\u540d\u3002 \u5e38\u89c1\u8003\u70b9\u603b\u7ed3\uff1a - \u6570\u5b57\u7b7e\u540d\u7684\u4e09\u5927\u57fa\u672c\u7279\u6027\uff1a\u5b8c\u6574\u6027\u3001\u8ba4\u8bc1\u6027\u3001\u4e0d\u53ef\u5426\u8ba4\u6027\u3002 - \u6570\u5b57\u7b7e\u540d\u7684\u5b9e\u73b0\u539f\u7406\uff08\u4e00\u822c\u4f1a\u6d89\u53ca\u975e\u5bf9\u79f0\u52a0\u5bc6\u548c\u54c8\u5e0c\u7b97\u6cd5\uff09\u3002 - \u6570\u5b57\u7b7e\u540d\u4e0e\u6d88\u606f\u8ba4\u8bc1\u7801\uff08MAC\uff09\u7684\u533a\u522b\u3002 - \u6570\u5b57\u7b7e\u540d\u7684\u5e94\u7528\u573a\u666f\uff08\u5982\u7535\u5b50\u5408\u540c\u3001\u8f6f\u4ef6\u5206\u53d1\u7b49\uff09\u3002","title":"\u6570\u5b57\u7b7e\u540d\u7684\u7279\u6027"},{"location":"Cryptography/exam/#eigamal","text":"ElGamal\u6570\u5b57\u7b7e\u540d\u662f\u4e00\u79cd\u57fa\u4e8e\u79bb\u6563\u5bf9\u6570\u96be\u9898\u7684\u516c\u94a5\u6570\u5b57\u7b7e\u540d\u7b97\u6cd5\uff0c\u7531ElGamal\u63d0\u51fa\u3002\u5b83\u4e0eElGamal\u52a0\u5bc6\u7b97\u6cd5\u539f\u7406\u7c7b\u4f3c\uff0c\u4f46\u4e13\u95e8\u7528\u4e8e\u6570\u5b57\u7b7e\u540d\u3002","title":"EIGamal\u6570\u5b57\u7b7e\u540d"},{"location":"Cryptography/exam/#_3","text":"\u5bc6\u94a5\u751f\u6210 \u9009\u62e9\u4e00\u4e2a\u5927\u7d20\u6570p\u548c\u751f\u6210\u5143g \u9009\u53d6\u79c1\u94a5x\uff081 < x < p-1\uff09 \u8ba1\u7b97\u516c\u94a5y = g^x mod p \u7b7e\u540d\u8fc7\u7a0b \u5bf9\u6d88\u606fm\uff0c\u9009\u53d6\u968f\u673a\u6570k\uff081 < k < p-1\uff0c\u4e14k\u4e0ep-1\u4e92\u7d20\uff09 \u8ba1\u7b97r = g^k mod p \u8ba1\u7b97s = k\u207b\u00b9(m - x\u00b7r) mod (p-1)\uff08k\u207b\u00b9\u662fk\u5173\u4e8ep-1\u7684\u9006\u5143\uff09 \u7b7e\u540d\u4e3a(r, s) \u9a8c\u8bc1\u8fc7\u7a0b \u9a8c\u8bc1\u65b9\u6536\u5230(m, r, s)\u548c\u516c\u94a5(y, g, p) \u68c0\u67e5 1 < r < p \u8ba1\u7b97 v1 = y^r * r^s mod p \u8ba1\u7b97 v2 = g^m mod p \u82e5 v1 == v2\uff0c\u5219\u7b7e\u540d\u6709\u6548","title":"\u539f\u7406\u7b80\u8ff0"},{"location":"Cryptography/exam/#_4","text":"\u5b89\u5168\u6027\u57fa\u4e8e\u79bb\u6563\u5bf9\u6570\u96be\u9898 \u7b7e\u540d\u8fc7\u7a0b\u9700\u8981\u4e3a\u6bcf\u6761\u6d88\u606f\u9009\u53d6\u65b0\u7684\u968f\u673a\u6570k \u9002\u7528\u4e8e\u7535\u5b50\u5408\u540c\u3001\u6570\u5b57\u8bc1\u4e66\u7b49\u573a\u666f \u603b\u7ed3\uff1a ElGamal\u6570\u5b57\u7b7e\u540d\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u516c\u94a5\u7b7e\u540d\u7b97\u6cd5\uff0c\u539f\u7406\u4e0eElGamal\u52a0\u5bc6\u7c7b\u4f3c\uff0c\u5e7f\u6cdb\u7528\u4e8e\u9700\u8981\u8eab\u4efd\u8ba4\u8bc1\u548c\u9632\u62b5\u8d56\u7684\u573a\u5408\u3002","title":"\u7279\u70b9"},{"location":"Cryptography/exam/#_5","text":"\u4e0b\u9762\u7528 p=7 \u4e3e\u4e00\u4e2a\u7b80\u5355\u7684ElGamal\u6570\u5b57\u7b7e\u540d\u8fc7\u7a0b\u7684\u4f8b\u5b50\uff08\u5b9e\u9645\u5e94\u7528\u4e2dp\u8fdc\u5927\u4e8e7\uff0c\u8fd9\u91cc\u4ec5\u4e3a\u6f14\u793a\u539f\u7406\uff09\uff1a","title":"\u5b9e\u9645\u4f8b\u5b50"},{"location":"Cryptography/exam/#1","text":"\u9009\u5927\u7d20\u6570\uff1ap = 7 \u9009\u751f\u6210\u5143\uff1ag = 3 \u9009\u79c1\u94a5\uff1ax = 2\uff081 < x < p-1\uff09 \u8ba1\u7b97\u516c\u94a5\uff1ay = g^x mod p = 3^2 mod 7 = 9 mod 7 = 2 \u516c\u94a5\uff1a(p=7, g=3, y=2) \u79c1\u94a5\uff1ax=2","title":"1. \u5bc6\u94a5\u751f\u6210"},{"location":"Cryptography/exam/#2","text":"\u5047\u8bbe\u8981\u7b7e\u540d\u7684\u6d88\u606f m = 4 \u9009\u968f\u673a\u6570\uff1ak = 5\uff081 < k < p-1\uff0c\u4e14gcd(k, p-1)=1\uff0cp-1=6\uff0c5\u548c6\u4e92\u7d20\uff09 \u8ba1\u7b97 r = g^k mod p = 3^5 mod 7 = 243 mod 7 = 5 \u8ba1\u7b97 k \u7684\u9006\u5143 mod (p-1)\uff1ak=5\uff0cp-1=6\uff0c5 \u7684\u9006\u5143\u662f 5\uff08\u56e0\u4e3a5\u00d75=25\uff0c25 mod 6=1\uff09 \u8ba1\u7b97 s = k\u207b\u00b9 \u00d7 (m - x\u00b7r) mod (p-1) x\u00b7r = 2\u00d75 = 10 m - x\u00b7r = 4 - 10 = -6 s = 5 \u00d7 (-6) mod 6 = -30 mod 6 = 0 \u7b7e\u540d\u4e3a (r=5, s=0)","title":"2. \u7b7e\u540d\u8fc7\u7a0b"},{"location":"Cryptography/exam/#3","text":"\u9a8c\u8bc1\u65b9\u6536\u5230 (m=4, r=5, s=0) \u548c\u516c\u94a5 (p=7, g=3, y=2) \u68c0\u67e5 1 < r < p\uff0c1 < 5 < 7\uff0c\u5408\u6cd5 \u8ba1\u7b97 v1 = y^r \u00d7 r^s mod p = 2^5 \u00d7 5^0 mod 7 = 32 \u00d7 1 mod 7 = 32 mod 7 = 4 \u8ba1\u7b97 v2 = g^m mod p = 3^4 mod 7 = 81 mod 7 = 4 v1 = v2\uff0c\u7b7e\u540d\u9a8c\u8bc1\u901a\u8fc7\uff01 \u603b\u7ed3\uff1a \u8fd9\u4e2a\u4f8b\u5b50\u7528\u5c0f\u7d20\u6570\u6f14\u793a\u4e86ElGamal\u6570\u5b57\u7b7e\u540d\u7684\u5b8c\u6574\u6d41\u7a0b\uff0c\u5b9e\u9645\u5e94\u7528\u4e2dp\u4f1a\u8fdc\u5927\u4e8e7\uff0c\u4fdd\u8bc1\u5b89\u5168\u6027\u3002","title":"3. \u9a8c\u8bc1\u8fc7\u7a0b"},{"location":"Cryptography/exam/#_6","text":"","title":"\u8d39\u9a6c\u5c0f\u5b9a\u7406"},{"location":"Cryptography/ssh/","text":"1. \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7684\u8eab\u4efd\u9a8c\u8bc1 \u5ba2\u6237\u7aef\u7684 RSA \u5bc6\u94a5\u5bf9 \uff1a \u5ba2\u6237\u7aef\u751f\u6210\u4e86\u4e00\u5bf9 RSA \u5bc6\u94a5\uff1a\u79c1\u94a5\uff08 id_rsa \uff09\u548c\u516c\u94a5\uff08 id_rsa.pub \uff09\u3002 \u5ba2\u6237\u7aef\u5c06\u516c\u94a5\uff08 id_rsa.pub \uff09\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u7684 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u3002 \u8eab\u4efd\u9a8c\u8bc1\u8fc7\u7a0b \uff1a \u5f53\u5ba2\u6237\u7aef\u5c1d\u8bd5\u8fde\u63a5\u670d\u52a1\u5668\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u751f\u6210\u4e00\u6bb5\u968f\u673a\u6570\u636e\uff08\u6311\u6218\u6570\u636e\uff09\u3002 \u5ba2\u6237\u7aef\u4f7f\u7528\u81ea\u5df1\u7684 RSA \u79c1\u94a5\u5bf9\u968f\u673a\u6570\u636e\u8fdb\u884c\u7b7e\u540d\uff0c\u5e76\u5c06\u7b7e\u540d\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u3002 \u670d\u52a1\u5668\u4f7f\u7528\u5b58\u50a8\u5728 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\u3002 \u5982\u679c\u9a8c\u8bc1\u901a\u8fc7\uff0c\u670d\u52a1\u5668\u786e\u8ba4\u5ba2\u6237\u7aef\u7684\u8eab\u4efd\u3002 2. \u63e1\u624b\u9636\u6bb5\uff1a\u751f\u6210\u5bf9\u79f0\u5bc6\u94a5 \u4e3a\u4ec0\u4e48\u9700\u8981\u5bf9\u79f0\u5bc6\u94a5 \uff1a RSA \u662f\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff0c\u8ba1\u7b97\u590d\u6742\uff0c\u6548\u7387\u8f83\u4f4e\uff0c\u4e0d\u9002\u5408\u52a0\u5bc6\u5927\u91cf\u6570\u636e\u3002 \u56e0\u6b64\uff0cSSH \u5728\u63e1\u624b\u9636\u6bb5\u4f7f\u7528\u975e\u5bf9\u79f0\u52a0\u5bc6\u751f\u6210\u4e00\u4e2a\u5171\u4eab\u7684\u5bf9\u79f0\u5bc6\u94a5\uff0c\u7528\u4e8e\u540e\u7eed\u7684\u9ad8\u6548\u52a0\u5bc6\u901a\u4fe1\u3002 \u5bc6\u94a5\u4ea4\u6362\u8fc7\u7a0b \uff1a \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4f7f\u7528 Diffie-Hellman \u6216\u692d\u5706\u66f2\u7ebf Diffie-Hellman\uff08ECDH\uff09\u7b97\u6cd5\u751f\u6210\u4e00\u4e2a\u5171\u4eab\u7684\u5bf9\u79f0\u5bc6\u94a5\u3002 \u5177\u4f53\u8fc7\u7a0b\uff1a \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u5404\u81ea\u751f\u6210\u4e00\u4e2a\u4e34\u65f6\u5bc6\u94a5\u5bf9\u3002 \u53cc\u65b9\u4ea4\u6362\u516c\u94a5\u3002 \u4f7f\u7528\u5bf9\u65b9\u7684\u516c\u94a5\u548c\u81ea\u5df1\u7684\u79c1\u94a5\u8ba1\u7b97\u51fa\u76f8\u540c\u7684\u5171\u4eab\u5bc6\u94a5\u3002 \u5171\u4eab\u5bc6\u94a5\u7528\u4e8e\u540e\u7eed\u7684\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1\u3002 3. \u6570\u636e\u4f20\u8f93\u9636\u6bb5\uff1a\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1 \u5bf9\u79f0\u52a0\u5bc6 \uff1a \u63e1\u624b\u9636\u6bb5\u751f\u6210\u7684\u5171\u4eab\u5bc6\u94a5\u7528\u4e8e\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1\u3002 \u5e38\u7528\u7684\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u5305\u62ec AES\uff08\u9ad8\u7ea7\u52a0\u5bc6\u6807\u51c6\uff09\u3002 \u6570\u636e\u5b8c\u6574\u6027 \uff1a \u4f7f\u7528\u6d88\u606f\u8ba4\u8bc1\u7801\uff08MAC\uff09\u9a8c\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027\uff0c\u9632\u6b62\u6570\u636e\u88ab\u7be1\u6539\u3002 \u603b\u7ed3\uff1aSSH \u7684\u52a0\u5bc6\u8fc7\u7a0b \u8eab\u4efd\u9a8c\u8bc1 \uff1a \u5ba2\u6237\u7aef\u901a\u8fc7 RSA \u79c1\u94a5\u548c\u670d\u52a1\u5668\u5b58\u50a8\u7684\u516c\u94a5\u5b8c\u6210\u8eab\u4efd\u9a8c\u8bc1\u3002 \u5bc6\u94a5\u4ea4\u6362 \uff1a \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4f7f\u7528 Diffie-Hellman \u6216 ECDH \u7b97\u6cd5\u751f\u6210\u5171\u4eab\u7684\u5bf9\u79f0\u5bc6\u94a5\u3002 \u52a0\u5bc6\u901a\u4fe1 \uff1a \u4f7f\u7528\u5171\u4eab\u7684\u5bf9\u79f0\u5bc6\u94a5\u5bf9\u901a\u4fe1\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\uff0c\u786e\u4fdd\u901a\u4fe1\u7684\u673a\u5bc6\u6027\u548c\u5b8c\u6574\u6027\u3002 \u5173\u952e\u70b9 RSA \u516c\u94a5/\u79c1\u94a5 \uff1a\u7528\u4e8e\u8eab\u4efd\u9a8c\u8bc1\uff0c\u786e\u4fdd\u53ea\u6709\u62e5\u6709\u79c1\u94a5\u7684\u5ba2\u6237\u7aef\u53ef\u4ee5\u767b\u5f55\u3002 \u5bf9\u79f0\u5bc6\u94a5 \uff1a\u7528\u4e8e\u52a0\u5bc6\u901a\u4fe1\uff0c\u63d0\u9ad8\u6548\u7387\u3002 Diffie-Hellman/ECDH \uff1a\u7528\u4e8e\u5b89\u5168\u5730\u751f\u6210\u5bf9\u79f0\u5bc6\u94a5\uff0c\u907f\u514d\u76f4\u63a5\u4f20\u8f93\u5bc6\u94a5\u3002 SSH\u8fde\u63a5\u65f6\u7684\u52a0\u5bc6\u8fc7\u7a0b SSH\uff08Secure Shell\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u5b89\u5168\u8fdc\u7a0b\u767b\u5f55\u7684\u534f\u8bae\uff0c\u5b83\u901a\u8fc7\u52a0\u5bc6\u6280\u672f\u4fdd\u62a4\u901a\u4fe1\u7684\u673a\u5bc6\u6027\u548c\u5b8c\u6574\u6027\u3002SSH\u8fde\u63a5\u7684\u52a0\u5bc6\u8fc7\u7a0b\u4e3b\u8981\u5305\u62ec \u63e1\u624b\u9636\u6bb5 \u548c \u6570\u636e\u4f20\u8f93\u9636\u6bb5 \uff0c\u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u8fc7\u7a0b\uff1a 1. \u516c\u94a5\u653e\u7f6e\u7684\u4f5c\u7528 \u516c\u94a5\u653e\u7f6e \uff1a \u5c06\u4f60\u7684\u516c\u94a5\uff08 id_rsa.pub \uff09\u653e\u7f6e\u5230\u8fdc\u7a0b\u4e3b\u673a\u7684 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u3002 \u8fdc\u7a0b\u4e3b\u673a\u901a\u8fc7\u9a8c\u8bc1\u4f60\u7684\u79c1\u94a5\u5bf9\u5e94\u7684\u516c\u94a5\uff0c\u786e\u4fdd\u53ea\u6709\u4f60\u53ef\u4ee5\u767b\u5f55\u3002 \u4f5c\u7528 \uff1a \u516c\u94a5\u7528\u4e8e\u8eab\u4efd\u9a8c\u8bc1\uff0c\u786e\u4fdd\u53ea\u6709\u62e5\u6709\u5bf9\u5e94\u79c1\u94a5\u7684\u7528\u6237\u53ef\u4ee5\u767b\u5f55\u3002 \u516c\u94a5\u4e0d\u4f1a\u53c2\u4e0e\u52a0\u5bc6\u901a\u4fe1\u7684\u63e1\u624b\u8fc7\u7a0b\uff08\u63e1\u624b\u4f7f\u7528\u4e34\u65f6\u5bc6\u94a5\uff09\u3002 2. SSH\u8fde\u63a5\u7684\u63e1\u624b\u8fc7\u7a0b SSH\u63e1\u624b\u8fc7\u7a0b\u4f7f\u7528 \u975e\u5bf9\u79f0\u52a0\u5bc6 \u548c \u5bf9\u79f0\u52a0\u5bc6 \u7684\u7ed3\u5408\uff0c\u786e\u4fdd\u901a\u4fe1\u7684\u5b89\u5168\u6027\u3002 \u6b65\u9aa4 1\uff1a\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u534f\u5546\u7b97\u6cd5 \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u534f\u5546\u4f7f\u7528\u7684\u52a0\u5bc6\u7b97\u6cd5\u3001\u54c8\u5e0c\u7b97\u6cd5\u548c\u5bc6\u94a5\u4ea4\u6362\u7b97\u6cd5\uff08\u5982 RSA\u3001ECDSA\u3001Diffie-Hellman \u7b49\uff09\u3002 \u786e\u5b9a\u53cc\u65b9\u652f\u6301\u7684\u52a0\u5bc6\u534f\u8bae\u548c\u7b97\u6cd5\u3002 \u6b65\u9aa4 2\uff1a\u5bc6\u94a5\u4ea4\u6362\uff08Diffie-Hellman \u6216 ECDH\uff09 \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4f7f\u7528 Diffie-Hellman \u6216\u692d\u5706\u66f2\u7ebf Diffie-Hellman\uff08ECDH\uff09\u7b97\u6cd5\u751f\u6210\u4e00\u4e2a \u5171\u4eab\u7684\u5bf9\u79f0\u5bc6\u94a5 \u3002 \u8fc7\u7a0b\uff1a \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u5404\u81ea\u751f\u6210\u4e00\u4e2a\u4e34\u65f6\u7684\u5bc6\u94a5\u5bf9\u3002 \u53cc\u65b9\u4ea4\u6362\u516c\u94a5\u3002 \u4f7f\u7528\u5bf9\u65b9\u7684\u516c\u94a5\u548c\u81ea\u5df1\u7684\u79c1\u94a5\u8ba1\u7b97\u51fa\u76f8\u540c\u7684\u5171\u4eab\u5bc6\u94a5\u3002 \u5171\u4eab\u5bc6\u94a5\u7528\u4e8e\u540e\u7eed\u7684\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1\u3002 \u6b65\u9aa4 3\uff1a\u670d\u52a1\u5668\u8eab\u4efd\u9a8c\u8bc1 \u670d\u52a1\u5668\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u81ea\u5df1\u7684\u516c\u94a5\u3002 \u5ba2\u6237\u7aef\u4f7f\u7528\u672c\u5730\u5b58\u50a8\u7684\u670d\u52a1\u5668\u516c\u94a5\uff08\u6216\u901a\u8fc7 CA \u9a8c\u8bc1\uff09\u9a8c\u8bc1\u670d\u52a1\u5668\u7684\u8eab\u4efd\uff0c\u786e\u4fdd\u8fde\u63a5\u7684\u662f\u6b63\u786e\u7684\u670d\u52a1\u5668\u3002 \u6b65\u9aa4 4\uff1a\u5ba2\u6237\u7aef\u8eab\u4efd\u9a8c\u8bc1 \u5ba2\u6237\u7aef\u4f7f\u7528\u79c1\u94a5\u5bf9\u968f\u673a\u6570\u636e\u8fdb\u884c\u7b7e\u540d\uff0c\u5e76\u5c06\u7b7e\u540d\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u3002 \u670d\u52a1\u5668\u4f7f\u7528\u5b58\u50a8\u5728 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u786e\u8ba4\u5ba2\u6237\u7aef\u7684\u8eab\u4efd\u3002 \u8be6\u7ec6\u8bf4\u660e\uff1aSSH \u5ba2\u6237\u7aef\u8eab\u4efd\u9a8c\u8bc1\u8fc7\u7a0b \u5728 SSH \u8fde\u63a5\u4e2d\uff0c\u5ba2\u6237\u7aef\u4f7f\u7528\u79c1\u94a5\u5bf9\u968f\u673a\u6570\u636e\u8fdb\u884c\u7b7e\u540d\uff0c\u670d\u52a1\u5668\u4f7f\u7528\u5b58\u50a8\u5728 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u4ece\u800c\u786e\u8ba4\u5ba2\u6237\u7aef\u7684\u8eab\u4efd\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u8fc7\u7a0b\uff1a 1. \u80cc\u666f \u79c1\u94a5\u548c\u516c\u94a5 \uff1a \u5ba2\u6237\u7aef\u6301\u6709\u4e00\u5bf9\u5bc6\u94a5\uff1a\u79c1\u94a5\uff08 id_rsa \uff09\u548c\u516c\u94a5\uff08 id_rsa.pub \uff09\u3002 \u516c\u94a5\u5df2\u63d0\u524d\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u7684 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u3002 \u76ee\u6807 \uff1a \u786e\u4fdd\u53ea\u6709\u62e5\u6709\u79c1\u94a5\u7684\u5ba2\u6237\u7aef\u624d\u80fd\u767b\u5f55\u670d\u52a1\u5668\u3002 2. \u5177\u4f53\u8fc7\u7a0b \u6b65\u9aa4 1\uff1a\u670d\u52a1\u5668\u751f\u6210\u968f\u673a\u6570\u636e \u670d\u52a1\u5668\u751f\u6210\u4e00\u6bb5\u968f\u673a\u6570\u636e\uff08\u79f0\u4e3a \u6311\u6218\u6570\u636e \uff0cChallenge Data\uff09\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002 \u8fd9\u6bb5\u968f\u673a\u6570\u636e\u7528\u4e8e\u9a8c\u8bc1\u5ba2\u6237\u7aef\u662f\u5426\u62e5\u6709\u5bf9\u5e94\u7684\u79c1\u94a5\u3002 \u6b65\u9aa4 2\uff1a\u5ba2\u6237\u7aef\u4f7f\u7528\u79c1\u94a5\u7b7e\u540d \u5ba2\u6237\u7aef\u63a5\u6536\u5230\u670d\u52a1\u5668\u7684\u968f\u673a\u6570\u636e\u540e\uff0c\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u8fd9\u6bb5\u6570\u636e\u8fdb\u884c\u7b7e\u540d\u3002 \u7b7e\u540d\u8fc7\u7a0b\uff1a \u5ba2\u6237\u7aef\u4f7f\u7528\u79c1\u94a5\u5bf9\u968f\u673a\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\uff0c\u751f\u6210\u7b7e\u540d\u3002 \u7b7e\u540d\u662f\u79c1\u94a5\u52a0\u5bc6\u540e\u7684\u7ed3\u679c\uff0c\u53ea\u6709\u62e5\u6709\u79c1\u94a5\u7684\u5ba2\u6237\u7aef\u624d\u80fd\u751f\u6210\u6b63\u786e\u7684\u7b7e\u540d\u3002 \u6b65\u9aa4 3\uff1a\u5ba2\u6237\u7aef\u53d1\u9001\u7b7e\u540d \u5ba2\u6237\u7aef\u5c06\u7b7e\u540d\u53d1\u9001\u56de\u670d\u52a1\u5668\u3002 \u6b65\u9aa4 4\uff1a\u670d\u52a1\u5668\u9a8c\u8bc1\u7b7e\u540d \u670d\u52a1\u5668\u4f7f\u7528\u5b58\u50a8\u5728 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u7684\u516c\u94a5\u5bf9\u7b7e\u540d\u8fdb\u884c\u9a8c\u8bc1\u3002 \u9a8c\u8bc1\u8fc7\u7a0b\uff1a \u670d\u52a1\u5668\u4f7f\u7528\u516c\u94a5\u5bf9\u7b7e\u540d\u8fdb\u884c\u89e3\u5bc6\u3002 \u89e3\u5bc6\u540e\u5f97\u5230\u7684\u5185\u5bb9\u4e0e\u539f\u59cb\u7684\u968f\u673a\u6570\u636e\u8fdb\u884c\u6bd4\u5bf9\u3002 \u5982\u679c\u89e3\u5bc6\u7ed3\u679c\u4e0e\u968f\u673a\u6570\u636e\u4e00\u81f4\uff0c\u5219\u8bc1\u660e\u5ba2\u6237\u7aef\u6301\u6709\u5bf9\u5e94\u7684\u79c1\u94a5\uff0c\u8eab\u4efd\u9a8c\u8bc1\u901a\u8fc7\u3002 3. \u5b89\u5168\u6027\u5206\u6790 \u79c1\u94a5\u4fdd\u5bc6\u6027 \uff1a \u79c1\u94a5\u59cb\u7ec8\u4fdd\u5b58\u5728\u5ba2\u6237\u7aef\uff0c\u4ece\u4e0d\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\u3002 \u516c\u94a5\u9a8c\u8bc1 \uff1a \u670d\u52a1\u5668\u4f7f\u7528\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u786e\u4fdd\u53ea\u6709\u62e5\u6709\u79c1\u94a5\u7684\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7\u9a8c\u8bc1\u3002 \u968f\u673a\u6570\u636e \uff1a \u6bcf\u6b21\u8fde\u63a5\u751f\u6210\u7684\u968f\u673a\u6570\u636e\u4e0d\u540c\uff0c\u9632\u6b62\u91cd\u653e\u653b\u51fb\u3002 4. \u793a\u4f8b\uff1a\u7b7e\u540d\u9a8c\u8bc1\u8fc7\u7a0b \u5047\u8bbe\uff1a - \u968f\u673a\u6570\u636e\u4e3a challenge_data \u3002 - \u5ba2\u6237\u7aef\u7684\u79c1\u94a5\u4e3a private_key \u3002 - \u670d\u52a1\u5668\u7684\u516c\u94a5\u4e3a public_key \u3002 \u5ba2\u6237\u7aef\u7b7e\u540d \u5ba2\u6237\u7aef\u4f7f\u7528\u79c1\u94a5\u5bf9\u968f\u673a\u6570\u636e\u8fdb\u884c\u7b7e\u540d\uff1a signature = encrypt(challenge_data, private_key) \u670d\u52a1\u5668\u9a8c\u8bc1 \u670d\u52a1\u5668\u4f7f\u7528\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff1a decrypted_data = decrypt(signature, public_key) if decrypted_data == challenge_data: \u9a8c\u8bc1\u901a\u8fc7 else: \u9a8c\u8bc1\u5931\u8d25 5. \u603b\u7ed3 \u5ba2\u6237\u7aef\u7b7e\u540d \uff1a\u5ba2\u6237\u7aef\u4f7f\u7528\u79c1\u94a5\u5bf9\u670d\u52a1\u5668\u751f\u6210\u7684\u968f\u673a\u6570\u636e\u8fdb\u884c\u7b7e\u540d\u3002 \u670d\u52a1\u5668\u9a8c\u8bc1 \uff1a\u670d\u52a1\u5668\u4f7f\u7528\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u786e\u4fdd\u5ba2\u6237\u7aef\u6301\u6709\u5bf9\u5e94\u7684\u79c1\u94a5\u3002 \u5b89\u5168\u6027 \uff1a\u901a\u8fc7\u975e\u5bf9\u79f0\u52a0\u5bc6\u6280\u672f\uff0c\u786e\u4fdd\u8eab\u4efd\u9a8c\u8bc1\u7684\u5b89\u5168\u6027\uff0c\u79c1\u94a5\u59cb\u7ec8\u4e0d\u4f1a\u6cc4\u9732\u3002 3. \u6570\u636e\u4f20\u8f93\u9636\u6bb5 \u63e1\u624b\u5b8c\u6210\u540e\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4f7f\u7528\u534f\u5546\u751f\u6210\u7684\u5171\u4eab\u5bc6\u94a5\u8fdb\u884c\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1\u3002 \u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff08\u5982 AES\uff09\u7528\u4e8e\u52a0\u5bc6\u6570\u636e\uff0c\u786e\u4fdd\u901a\u4fe1\u7684\u673a\u5bc6\u6027\u3002 \u6d88\u606f\u8ba4\u8bc1\u7801\uff08MAC\uff09\u7528\u4e8e\u9a8c\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027\uff0c\u9632\u6b62\u6570\u636e\u88ab\u7be1\u6539\u3002 \u603b\u7ed3\uff1aSSH\u8fde\u63a5\u7684\u52a0\u5bc6\u8fc7\u7a0b \u516c\u94a5\u653e\u7f6e \uff1a \u5c06\u5ba2\u6237\u7aef\u7684\u516c\u94a5\u653e\u7f6e\u5230\u8fdc\u7a0b\u4e3b\u673a\u7684 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\uff0c\u7528\u4e8e\u8eab\u4efd\u9a8c\u8bc1\u3002 \u63e1\u624b\u9636\u6bb5 \uff1a \u534f\u5546\u52a0\u5bc6\u7b97\u6cd5\u3002 \u4f7f\u7528 Diffie-Hellman \u6216 ECDH \u751f\u6210\u5171\u4eab\u5bc6\u94a5\u3002 \u9a8c\u8bc1\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u7684\u8eab\u4efd\u3002 \u6570\u636e\u4f20\u8f93\u9636\u6bb5 \uff1a \u4f7f\u7528\u5171\u4eab\u5bc6\u94a5\u8fdb\u884c\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1\u3002 \u4f7f\u7528 MAC \u9a8c\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u3002 \u793a\u4f8b\uff1aSSH\u8fde\u63a5\u7684\u6d41\u7a0b \u5ba2\u6237\u7aef\u751f\u6210\u5bc6\u94a5\u5bf9 \uff1a ssh-keygen -t rsa \u751f\u6210 id_rsa \uff08\u79c1\u94a5\uff09\u548c id_rsa.pub \uff08\u516c\u94a5\uff09\u3002 \u5c06\u516c\u94a5\u590d\u5236\u5230\u8fdc\u7a0b\u4e3b\u673a \uff1a ssh-copy-id user@remote_host \u5c06\u516c\u94a5\u6dfb\u52a0\u5230\u8fdc\u7a0b\u4e3b\u673a\u7684 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u3002 \u5efa\u7acb\u8fde\u63a5 \uff1a ssh user@remote_host \u63e1\u624b\u5b8c\u6210\u540e\uff0c\u8fdb\u5165\u52a0\u5bc6\u901a\u4fe1\u9636\u6bb5\u3002 \u5b89\u5168\u6027\u4fdd\u8bc1 \u975e\u5bf9\u79f0\u52a0\u5bc6 \uff1a\u786e\u4fdd\u63e1\u624b\u9636\u6bb5\u7684\u5b89\u5168\u6027\u3002 \u5bf9\u79f0\u52a0\u5bc6 \uff1a\u63d0\u9ad8\u6570\u636e\u4f20\u8f93\u7684\u6548\u7387\u3002 \u6d88\u606f\u8ba4\u8bc1\u7801\uff08MAC\uff09 \uff1a\u786e\u4fdd\u6570\u636e\u7684\u5b8c\u6574\u6027\u3002 \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cSSH\u5b9e\u73b0\u4e86\u5b89\u5168\u7684\u8fdc\u7a0b\u767b\u5f55\u548c\u6570\u636e\u4f20\u8f93\u3002 \u5173\u4e8e\u7b2c2\u6b65\u5f62\u6210\u5bf9\u79f0\u5bc6\u94a5\u7684\u5177\u4f53\u8fc7\u7a0b Diffie-Hellman \u5bc6\u94a5\u4ea4\u6362\u7b97\u6cd5\u7684\u8ba1\u7b97\u8fc7\u7a0b Diffie-Hellman \u5bc6\u94a5\u4ea4\u6362\u662f\u4e00\u79cd\u57fa\u4e8e\u6570\u5b66\u96be\u9898\uff08\u79bb\u6563\u5bf9\u6570\u95ee\u9898\uff09\u7684\u7b97\u6cd5\uff0c\u7528\u4e8e\u5728\u4e0d\u5b89\u5168\u7684\u7f51\u7edc\u4e2d\u5b89\u5168\u5730\u751f\u6210\u5171\u4eab\u7684\u5bf9\u79f0\u5bc6\u94a5\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u8ba1\u7b97\u8fc7\u7a0b\u548c\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u3002 1. \u57fa\u672c\u539f\u7406 Diffie-Hellman \u5bc6\u94a5\u4ea4\u6362\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5229\u7528\u6a21\u5e42\u8fd0\u7b97\u7684\u6027\u8d28\uff0c\u53cc\u65b9\u901a\u8fc7\u4ea4\u6362\u90e8\u5206\u4fe1\u606f\uff0c\u8ba1\u7b97\u51fa\u76f8\u540c\u7684\u5171\u4eab\u5bc6\u94a5\uff0c\u800c\u65e0\u9700\u76f4\u63a5\u4f20\u8f93\u5bc6\u94a5\u3002 \u6570\u5b66\u57fa\u7840 \u9009\u62e9\u4e00\u4e2a\u5927\u7d20\u6570 p \u548c\u4e00\u4e2a\u751f\u6210\u5143 g \uff08 g \u662f\u6a21 p \u7684\u4e00\u4e2a\u539f\u6839\uff09\u3002 \u53cc\u65b9\u5404\u81ea\u9009\u62e9\u4e00\u4e2a\u79c1\u94a5\uff0c\u5e76\u901a\u8fc7\u8ba1\u7b97\u751f\u6210\u516c\u94a5\u3002 \u901a\u8fc7\u4ea4\u6362\u516c\u94a5\uff0c\u53cc\u65b9\u53ef\u4ee5\u8ba1\u7b97\u51fa\u76f8\u540c\u7684\u5171\u4eab\u5bc6\u94a5\u3002 2. \u8ba1\u7b97\u6b65\u9aa4 \u6b65\u9aa4 1\uff1a\u9009\u62e9\u516c\u5171\u53c2\u6570 \u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u5171\u540c\u9009\u62e9\u4e00\u4e2a\u5927\u7d20\u6570 p \u548c\u4e00\u4e2a\u751f\u6210\u5143 g \u3002 \u4f8b\u5982\uff1a p = 23 \uff0c g = 5 \u3002 \u6b65\u9aa4 2\uff1a\u751f\u6210\u5bc6\u94a5\u5bf9 \u5ba2\u6237\u7aef \u9009\u62e9\u4e00\u4e2a\u79c1\u94a5 a \uff08\u968f\u673a\u6570\uff09\uff0c\u8ba1\u7b97\u516c\u94a5 A \uff1a A = g^a mod p \u4f8b\u5982\uff1a\u5ba2\u6237\u7aef\u9009\u62e9 a = 6 \uff0c\u5219\uff1a A = 5^6 mod 23 = 15625 mod 23 = 8 \u670d\u52a1\u5668 \u9009\u62e9\u4e00\u4e2a\u79c1\u94a5 b \uff08\u968f\u673a\u6570\uff09\uff0c\u8ba1\u7b97\u516c\u94a5 B \uff1a B = g^b mod p \u4f8b\u5982\uff1a\u670d\u52a1\u5668\u9009\u62e9 b = 15 \uff0c\u5219\uff1a B = 5^15 mod 23 = 30517578125 mod 23 = 19 \u6b65\u9aa4 3\uff1a\u4ea4\u6362\u516c\u94a5 \u5ba2\u6237\u7aef\u5c06\u516c\u94a5 A = 8 \u53d1\u9001\u7ed9\u670d\u52a1\u5668\u3002 \u670d\u52a1\u5668\u5c06\u516c\u94a5 B = 19 \u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002 \u6b65\u9aa4 4\uff1a\u8ba1\u7b97\u5171\u4eab\u5bc6\u94a5 \u5ba2\u6237\u7aef \u4f7f\u7528\u670d\u52a1\u5668\u7684\u516c\u94a5 B \u548c\u81ea\u5df1\u7684\u79c1\u94a5 a \u8ba1\u7b97\u5171\u4eab\u5bc6\u94a5\uff1a S = B^a mod p \u8ba1\u7b97\uff1a S = 19^6 mod 23 = 47045881 mod 23 = 2 \u670d\u52a1\u5668 \u4f7f\u7528\u5ba2\u6237\u7aef\u7684\u516c\u94a5 A \u548c\u81ea\u5df1\u7684\u79c1\u94a5 b \u8ba1\u7b97\u5171\u4eab\u5bc6\u94a5\uff1a S = A^b mod p \u8ba1\u7b97\uff1a S = 8^15 mod 23 = 35184372088832 mod 23 = 2 \u7ed3\u679c \uff1a \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u90fd\u8ba1\u7b97\u51fa\u4e86\u76f8\u540c\u7684\u5171\u4eab\u5bc6\u94a5 S = 2 \u3002 3. \u5b89\u5168\u6027 \u79c1\u94a5\u4fdd\u5bc6 \uff1a \u79c1\u94a5 a \u548c b \u4ece\u4e0d\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\uff0c\u653b\u51fb\u8005\u65e0\u6cd5\u76f4\u63a5\u83b7\u53d6\u3002 \u6570\u5b66\u96be\u9898 \uff1a \u653b\u51fb\u8005\u5373\u4f7f\u622a\u83b7\u4e86 p \u3001 g \u3001 A \u548c B \uff0c\u4e5f\u65e0\u6cd5\u901a\u8fc7\u9006\u5411\u8ba1\u7b97\u8f7b\u6613\u63a8\u5bfc\u51fa\u79c1\u94a5 a \u6216 b \uff08\u79bb\u6563\u5bf9\u6570\u95ee\u9898\u7684\u96be\u5ea6\uff09\u3002 4. \u793a\u4f8b\u603b\u7ed3 \u516c\u5171\u53c2\u6570\uff1a p = 23 \uff0c g = 5 \u5ba2\u6237\u7aef\u79c1\u94a5\uff1a a = 6 \uff0c\u516c\u94a5\uff1a A = 8 \u670d\u52a1\u5668\u79c1\u94a5\uff1a b = 15 \uff0c\u516c\u94a5\uff1a B = 19 \u5171\u4eab\u5bc6\u94a5\uff1a S = 2 5. \u5e94\u7528 \u751f\u6210\u7684\u5171\u4eab\u5bc6\u94a5 S \u7528\u4e8e\u540e\u7eed\u7684\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1\uff08\u5982 AES \u52a0\u5bc6\uff09\u3002 Diffie-Hellman \u662f SSH\u3001TLS \u7b49\u534f\u8bae\u4e2d\u5bc6\u94a5\u4ea4\u6362\u7684\u57fa\u7840\u3002 \u6269\u5c55\uff1a\u692d\u5706\u66f2\u7ebf Diffie-Hellman (ECDH) ECDH \u662f Diffie-Hellman \u7684\u4e00\u79cd\u4f18\u5316\u7248\u672c\uff0c\u4f7f\u7528\u692d\u5706\u66f2\u7ebf\u4ee3\u66ff\u6a21\u5e42\u8fd0\u7b97\u3002 \u63d0\u4f9b\u76f8\u540c\u5b89\u5168\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u5bc6\u94a5\u957f\u5ea6\u66f4\u77ed\uff0c\u8ba1\u7b97\u6548\u7387\u66f4\u9ad8\u3002- \u7ed3\u679c \uff1a \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u90fd\u8ba1\u7b97\u51fa\u4e86\u76f8\u540c\u7684\u5171\u4eab\u5bc6\u94a5 S = 2 \u3002 3. \u5b89\u5168\u6027 \u79c1\u94a5\u4fdd\u5bc6 \uff1a \u79c1\u94a5 a \u548c b \u4ece\u4e0d\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\uff0c\u653b\u51fb\u8005\u65e0\u6cd5\u76f4\u63a5\u83b7\u53d6\u3002 \u6570\u5b66\u96be\u9898 \uff1a \u653b\u51fb\u8005\u5373\u4f7f\u622a\u83b7\u4e86 p \u3001 g \u3001 A \u548c B \uff0c\u4e5f\u65e0\u6cd5\u901a\u8fc7\u9006\u5411\u8ba1\u7b97\u8f7b\u6613\u63a8\u5bfc\u51fa\u79c1\u94a5 a \u6216 b \uff08\u79bb\u6563\u5bf9\u6570\u95ee\u9898\u7684\u96be\u5ea6\uff09\u3002 4. \u793a\u4f8b\u603b\u7ed3 \u516c\u5171\u53c2\u6570\uff1a p = 23 \uff0c g = 5 \u5ba2\u6237\u7aef\u79c1\u94a5\uff1a a = 6 \uff0c\u516c\u94a5\uff1a A = 8 \u670d\u52a1\u5668\u79c1\u94a5\uff1a b = 15 \uff0c\u516c\u94a5\uff1a B = 19 \u5171\u4eab\u5bc6\u94a5\uff1a S = 2 5. \u5e94\u7528 \u751f\u6210\u7684\u5171\u4eab\u5bc6\u94a5 S \u7528\u4e8e\u540e\u7eed\u7684\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1\uff08\u5982 AES \u52a0\u5bc6\uff09\u3002 Diffie-Hellman \u662f SSH\u3001TLS \u7b49\u534f\u8bae\u4e2d\u5bc6\u94a5\u4ea4\u6362\u7684\u57fa\u7840\u3002 \u6269\u5c55\uff1a\u692d\u5706\u66f2\u7ebf Diffie-Hellman (ECDH) ECDH \u662f Diffie-Hellman \u7684\u4e00\u79cd\u4f18\u5316\u7248\u672c\uff0c\u4f7f\u7528\u692d\u5706\u66f2\u7ebf\u4ee3\u66ff\u6a21\u5e42\u8fd0\u7b97\u3002 \u63d0\u4f9b\u76f8\u540c\u5b89\u5168\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u5bc6\u94a5\u957f\u5ea6\u66f4\u77ed\uff0c\u8ba1\u7b97\u6548\u7387\u66f4\u9ad8\u3002","title":"ssh\u8fde\u63a5"},{"location":"Cryptography/ssh/#1","text":"\u5ba2\u6237\u7aef\u7684 RSA \u5bc6\u94a5\u5bf9 \uff1a \u5ba2\u6237\u7aef\u751f\u6210\u4e86\u4e00\u5bf9 RSA \u5bc6\u94a5\uff1a\u79c1\u94a5\uff08 id_rsa \uff09\u548c\u516c\u94a5\uff08 id_rsa.pub \uff09\u3002 \u5ba2\u6237\u7aef\u5c06\u516c\u94a5\uff08 id_rsa.pub \uff09\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u7684 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u3002 \u8eab\u4efd\u9a8c\u8bc1\u8fc7\u7a0b \uff1a \u5f53\u5ba2\u6237\u7aef\u5c1d\u8bd5\u8fde\u63a5\u670d\u52a1\u5668\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u751f\u6210\u4e00\u6bb5\u968f\u673a\u6570\u636e\uff08\u6311\u6218\u6570\u636e\uff09\u3002 \u5ba2\u6237\u7aef\u4f7f\u7528\u81ea\u5df1\u7684 RSA \u79c1\u94a5\u5bf9\u968f\u673a\u6570\u636e\u8fdb\u884c\u7b7e\u540d\uff0c\u5e76\u5c06\u7b7e\u540d\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u3002 \u670d\u52a1\u5668\u4f7f\u7528\u5b58\u50a8\u5728 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\u3002 \u5982\u679c\u9a8c\u8bc1\u901a\u8fc7\uff0c\u670d\u52a1\u5668\u786e\u8ba4\u5ba2\u6237\u7aef\u7684\u8eab\u4efd\u3002","title":"1. \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7684\u8eab\u4efd\u9a8c\u8bc1"},{"location":"Cryptography/ssh/#2","text":"\u4e3a\u4ec0\u4e48\u9700\u8981\u5bf9\u79f0\u5bc6\u94a5 \uff1a RSA \u662f\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff0c\u8ba1\u7b97\u590d\u6742\uff0c\u6548\u7387\u8f83\u4f4e\uff0c\u4e0d\u9002\u5408\u52a0\u5bc6\u5927\u91cf\u6570\u636e\u3002 \u56e0\u6b64\uff0cSSH \u5728\u63e1\u624b\u9636\u6bb5\u4f7f\u7528\u975e\u5bf9\u79f0\u52a0\u5bc6\u751f\u6210\u4e00\u4e2a\u5171\u4eab\u7684\u5bf9\u79f0\u5bc6\u94a5\uff0c\u7528\u4e8e\u540e\u7eed\u7684\u9ad8\u6548\u52a0\u5bc6\u901a\u4fe1\u3002 \u5bc6\u94a5\u4ea4\u6362\u8fc7\u7a0b \uff1a \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4f7f\u7528 Diffie-Hellman \u6216\u692d\u5706\u66f2\u7ebf Diffie-Hellman\uff08ECDH\uff09\u7b97\u6cd5\u751f\u6210\u4e00\u4e2a\u5171\u4eab\u7684\u5bf9\u79f0\u5bc6\u94a5\u3002 \u5177\u4f53\u8fc7\u7a0b\uff1a \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u5404\u81ea\u751f\u6210\u4e00\u4e2a\u4e34\u65f6\u5bc6\u94a5\u5bf9\u3002 \u53cc\u65b9\u4ea4\u6362\u516c\u94a5\u3002 \u4f7f\u7528\u5bf9\u65b9\u7684\u516c\u94a5\u548c\u81ea\u5df1\u7684\u79c1\u94a5\u8ba1\u7b97\u51fa\u76f8\u540c\u7684\u5171\u4eab\u5bc6\u94a5\u3002 \u5171\u4eab\u5bc6\u94a5\u7528\u4e8e\u540e\u7eed\u7684\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1\u3002","title":"2. \u63e1\u624b\u9636\u6bb5\uff1a\u751f\u6210\u5bf9\u79f0\u5bc6\u94a5"},{"location":"Cryptography/ssh/#3","text":"\u5bf9\u79f0\u52a0\u5bc6 \uff1a \u63e1\u624b\u9636\u6bb5\u751f\u6210\u7684\u5171\u4eab\u5bc6\u94a5\u7528\u4e8e\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1\u3002 \u5e38\u7528\u7684\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u5305\u62ec AES\uff08\u9ad8\u7ea7\u52a0\u5bc6\u6807\u51c6\uff09\u3002 \u6570\u636e\u5b8c\u6574\u6027 \uff1a \u4f7f\u7528\u6d88\u606f\u8ba4\u8bc1\u7801\uff08MAC\uff09\u9a8c\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027\uff0c\u9632\u6b62\u6570\u636e\u88ab\u7be1\u6539\u3002","title":"3. \u6570\u636e\u4f20\u8f93\u9636\u6bb5\uff1a\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1"},{"location":"Cryptography/ssh/#ssh","text":"\u8eab\u4efd\u9a8c\u8bc1 \uff1a \u5ba2\u6237\u7aef\u901a\u8fc7 RSA \u79c1\u94a5\u548c\u670d\u52a1\u5668\u5b58\u50a8\u7684\u516c\u94a5\u5b8c\u6210\u8eab\u4efd\u9a8c\u8bc1\u3002 \u5bc6\u94a5\u4ea4\u6362 \uff1a \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4f7f\u7528 Diffie-Hellman \u6216 ECDH \u7b97\u6cd5\u751f\u6210\u5171\u4eab\u7684\u5bf9\u79f0\u5bc6\u94a5\u3002 \u52a0\u5bc6\u901a\u4fe1 \uff1a \u4f7f\u7528\u5171\u4eab\u7684\u5bf9\u79f0\u5bc6\u94a5\u5bf9\u901a\u4fe1\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\uff0c\u786e\u4fdd\u901a\u4fe1\u7684\u673a\u5bc6\u6027\u548c\u5b8c\u6574\u6027\u3002","title":"\u603b\u7ed3\uff1aSSH \u7684\u52a0\u5bc6\u8fc7\u7a0b"},{"location":"Cryptography/ssh/#_1","text":"RSA \u516c\u94a5/\u79c1\u94a5 \uff1a\u7528\u4e8e\u8eab\u4efd\u9a8c\u8bc1\uff0c\u786e\u4fdd\u53ea\u6709\u62e5\u6709\u79c1\u94a5\u7684\u5ba2\u6237\u7aef\u53ef\u4ee5\u767b\u5f55\u3002 \u5bf9\u79f0\u5bc6\u94a5 \uff1a\u7528\u4e8e\u52a0\u5bc6\u901a\u4fe1\uff0c\u63d0\u9ad8\u6548\u7387\u3002 Diffie-Hellman/ECDH \uff1a\u7528\u4e8e\u5b89\u5168\u5730\u751f\u6210\u5bf9\u79f0\u5bc6\u94a5\uff0c\u907f\u514d\u76f4\u63a5\u4f20\u8f93\u5bc6\u94a5\u3002","title":"\u5173\u952e\u70b9"},{"location":"Cryptography/ssh/#ssh_1","text":"SSH\uff08Secure Shell\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u5b89\u5168\u8fdc\u7a0b\u767b\u5f55\u7684\u534f\u8bae\uff0c\u5b83\u901a\u8fc7\u52a0\u5bc6\u6280\u672f\u4fdd\u62a4\u901a\u4fe1\u7684\u673a\u5bc6\u6027\u548c\u5b8c\u6574\u6027\u3002SSH\u8fde\u63a5\u7684\u52a0\u5bc6\u8fc7\u7a0b\u4e3b\u8981\u5305\u62ec \u63e1\u624b\u9636\u6bb5 \u548c \u6570\u636e\u4f20\u8f93\u9636\u6bb5 \uff0c\u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u8fc7\u7a0b\uff1a","title":"SSH\u8fde\u63a5\u65f6\u7684\u52a0\u5bc6\u8fc7\u7a0b"},{"location":"Cryptography/ssh/#1_1","text":"\u516c\u94a5\u653e\u7f6e \uff1a \u5c06\u4f60\u7684\u516c\u94a5\uff08 id_rsa.pub \uff09\u653e\u7f6e\u5230\u8fdc\u7a0b\u4e3b\u673a\u7684 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u3002 \u8fdc\u7a0b\u4e3b\u673a\u901a\u8fc7\u9a8c\u8bc1\u4f60\u7684\u79c1\u94a5\u5bf9\u5e94\u7684\u516c\u94a5\uff0c\u786e\u4fdd\u53ea\u6709\u4f60\u53ef\u4ee5\u767b\u5f55\u3002 \u4f5c\u7528 \uff1a \u516c\u94a5\u7528\u4e8e\u8eab\u4efd\u9a8c\u8bc1\uff0c\u786e\u4fdd\u53ea\u6709\u62e5\u6709\u5bf9\u5e94\u79c1\u94a5\u7684\u7528\u6237\u53ef\u4ee5\u767b\u5f55\u3002 \u516c\u94a5\u4e0d\u4f1a\u53c2\u4e0e\u52a0\u5bc6\u901a\u4fe1\u7684\u63e1\u624b\u8fc7\u7a0b\uff08\u63e1\u624b\u4f7f\u7528\u4e34\u65f6\u5bc6\u94a5\uff09\u3002","title":"1. \u516c\u94a5\u653e\u7f6e\u7684\u4f5c\u7528"},{"location":"Cryptography/ssh/#2-ssh","text":"SSH\u63e1\u624b\u8fc7\u7a0b\u4f7f\u7528 \u975e\u5bf9\u79f0\u52a0\u5bc6 \u548c \u5bf9\u79f0\u52a0\u5bc6 \u7684\u7ed3\u5408\uff0c\u786e\u4fdd\u901a\u4fe1\u7684\u5b89\u5168\u6027\u3002","title":"2. SSH\u8fde\u63a5\u7684\u63e1\u624b\u8fc7\u7a0b"},{"location":"Cryptography/ssh/#1_2","text":"\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u534f\u5546\u4f7f\u7528\u7684\u52a0\u5bc6\u7b97\u6cd5\u3001\u54c8\u5e0c\u7b97\u6cd5\u548c\u5bc6\u94a5\u4ea4\u6362\u7b97\u6cd5\uff08\u5982 RSA\u3001ECDSA\u3001Diffie-Hellman \u7b49\uff09\u3002 \u786e\u5b9a\u53cc\u65b9\u652f\u6301\u7684\u52a0\u5bc6\u534f\u8bae\u548c\u7b97\u6cd5\u3002","title":"\u6b65\u9aa4 1\uff1a\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u534f\u5546\u7b97\u6cd5"},{"location":"Cryptography/ssh/#2diffie-hellman-ecdh","text":"\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4f7f\u7528 Diffie-Hellman \u6216\u692d\u5706\u66f2\u7ebf Diffie-Hellman\uff08ECDH\uff09\u7b97\u6cd5\u751f\u6210\u4e00\u4e2a \u5171\u4eab\u7684\u5bf9\u79f0\u5bc6\u94a5 \u3002 \u8fc7\u7a0b\uff1a \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u5404\u81ea\u751f\u6210\u4e00\u4e2a\u4e34\u65f6\u7684\u5bc6\u94a5\u5bf9\u3002 \u53cc\u65b9\u4ea4\u6362\u516c\u94a5\u3002 \u4f7f\u7528\u5bf9\u65b9\u7684\u516c\u94a5\u548c\u81ea\u5df1\u7684\u79c1\u94a5\u8ba1\u7b97\u51fa\u76f8\u540c\u7684\u5171\u4eab\u5bc6\u94a5\u3002 \u5171\u4eab\u5bc6\u94a5\u7528\u4e8e\u540e\u7eed\u7684\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1\u3002","title":"\u6b65\u9aa4 2\uff1a\u5bc6\u94a5\u4ea4\u6362\uff08Diffie-Hellman \u6216 ECDH\uff09"},{"location":"Cryptography/ssh/#3_1","text":"\u670d\u52a1\u5668\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u81ea\u5df1\u7684\u516c\u94a5\u3002 \u5ba2\u6237\u7aef\u4f7f\u7528\u672c\u5730\u5b58\u50a8\u7684\u670d\u52a1\u5668\u516c\u94a5\uff08\u6216\u901a\u8fc7 CA \u9a8c\u8bc1\uff09\u9a8c\u8bc1\u670d\u52a1\u5668\u7684\u8eab\u4efd\uff0c\u786e\u4fdd\u8fde\u63a5\u7684\u662f\u6b63\u786e\u7684\u670d\u52a1\u5668\u3002","title":"\u6b65\u9aa4 3\uff1a\u670d\u52a1\u5668\u8eab\u4efd\u9a8c\u8bc1"},{"location":"Cryptography/ssh/#4","text":"\u5ba2\u6237\u7aef\u4f7f\u7528\u79c1\u94a5\u5bf9\u968f\u673a\u6570\u636e\u8fdb\u884c\u7b7e\u540d\uff0c\u5e76\u5c06\u7b7e\u540d\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u3002 \u670d\u52a1\u5668\u4f7f\u7528\u5b58\u50a8\u5728 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u786e\u8ba4\u5ba2\u6237\u7aef\u7684\u8eab\u4efd\u3002","title":"\u6b65\u9aa4 4\uff1a\u5ba2\u6237\u7aef\u8eab\u4efd\u9a8c\u8bc1"},{"location":"Cryptography/ssh/#ssh_2","text":"\u5728 SSH \u8fde\u63a5\u4e2d\uff0c\u5ba2\u6237\u7aef\u4f7f\u7528\u79c1\u94a5\u5bf9\u968f\u673a\u6570\u636e\u8fdb\u884c\u7b7e\u540d\uff0c\u670d\u52a1\u5668\u4f7f\u7528\u5b58\u50a8\u5728 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u7684\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u4ece\u800c\u786e\u8ba4\u5ba2\u6237\u7aef\u7684\u8eab\u4efd\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u8fc7\u7a0b\uff1a","title":"\u8be6\u7ec6\u8bf4\u660e\uff1aSSH \u5ba2\u6237\u7aef\u8eab\u4efd\u9a8c\u8bc1\u8fc7\u7a0b"},{"location":"Cryptography/ssh/#1_3","text":"\u79c1\u94a5\u548c\u516c\u94a5 \uff1a \u5ba2\u6237\u7aef\u6301\u6709\u4e00\u5bf9\u5bc6\u94a5\uff1a\u79c1\u94a5\uff08 id_rsa \uff09\u548c\u516c\u94a5\uff08 id_rsa.pub \uff09\u3002 \u516c\u94a5\u5df2\u63d0\u524d\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u7684 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u3002 \u76ee\u6807 \uff1a \u786e\u4fdd\u53ea\u6709\u62e5\u6709\u79c1\u94a5\u7684\u5ba2\u6237\u7aef\u624d\u80fd\u767b\u5f55\u670d\u52a1\u5668\u3002","title":"1. \u80cc\u666f"},{"location":"Cryptography/ssh/#2_1","text":"","title":"2. \u5177\u4f53\u8fc7\u7a0b"},{"location":"Cryptography/ssh/#1_4","text":"\u670d\u52a1\u5668\u751f\u6210\u4e00\u6bb5\u968f\u673a\u6570\u636e\uff08\u79f0\u4e3a \u6311\u6218\u6570\u636e \uff0cChallenge Data\uff09\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002 \u8fd9\u6bb5\u968f\u673a\u6570\u636e\u7528\u4e8e\u9a8c\u8bc1\u5ba2\u6237\u7aef\u662f\u5426\u62e5\u6709\u5bf9\u5e94\u7684\u79c1\u94a5\u3002","title":"\u6b65\u9aa4 1\uff1a\u670d\u52a1\u5668\u751f\u6210\u968f\u673a\u6570\u636e"},{"location":"Cryptography/ssh/#2_2","text":"\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u670d\u52a1\u5668\u7684\u968f\u673a\u6570\u636e\u540e\uff0c\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u8fd9\u6bb5\u6570\u636e\u8fdb\u884c\u7b7e\u540d\u3002 \u7b7e\u540d\u8fc7\u7a0b\uff1a \u5ba2\u6237\u7aef\u4f7f\u7528\u79c1\u94a5\u5bf9\u968f\u673a\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\uff0c\u751f\u6210\u7b7e\u540d\u3002 \u7b7e\u540d\u662f\u79c1\u94a5\u52a0\u5bc6\u540e\u7684\u7ed3\u679c\uff0c\u53ea\u6709\u62e5\u6709\u79c1\u94a5\u7684\u5ba2\u6237\u7aef\u624d\u80fd\u751f\u6210\u6b63\u786e\u7684\u7b7e\u540d\u3002","title":"\u6b65\u9aa4 2\uff1a\u5ba2\u6237\u7aef\u4f7f\u7528\u79c1\u94a5\u7b7e\u540d"},{"location":"Cryptography/ssh/#3_2","text":"\u5ba2\u6237\u7aef\u5c06\u7b7e\u540d\u53d1\u9001\u56de\u670d\u52a1\u5668\u3002","title":"\u6b65\u9aa4 3\uff1a\u5ba2\u6237\u7aef\u53d1\u9001\u7b7e\u540d"},{"location":"Cryptography/ssh/#4_1","text":"\u670d\u52a1\u5668\u4f7f\u7528\u5b58\u50a8\u5728 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u7684\u516c\u94a5\u5bf9\u7b7e\u540d\u8fdb\u884c\u9a8c\u8bc1\u3002 \u9a8c\u8bc1\u8fc7\u7a0b\uff1a \u670d\u52a1\u5668\u4f7f\u7528\u516c\u94a5\u5bf9\u7b7e\u540d\u8fdb\u884c\u89e3\u5bc6\u3002 \u89e3\u5bc6\u540e\u5f97\u5230\u7684\u5185\u5bb9\u4e0e\u539f\u59cb\u7684\u968f\u673a\u6570\u636e\u8fdb\u884c\u6bd4\u5bf9\u3002 \u5982\u679c\u89e3\u5bc6\u7ed3\u679c\u4e0e\u968f\u673a\u6570\u636e\u4e00\u81f4\uff0c\u5219\u8bc1\u660e\u5ba2\u6237\u7aef\u6301\u6709\u5bf9\u5e94\u7684\u79c1\u94a5\uff0c\u8eab\u4efd\u9a8c\u8bc1\u901a\u8fc7\u3002","title":"\u6b65\u9aa4 4\uff1a\u670d\u52a1\u5668\u9a8c\u8bc1\u7b7e\u540d"},{"location":"Cryptography/ssh/#3_3","text":"\u79c1\u94a5\u4fdd\u5bc6\u6027 \uff1a \u79c1\u94a5\u59cb\u7ec8\u4fdd\u5b58\u5728\u5ba2\u6237\u7aef\uff0c\u4ece\u4e0d\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\u3002 \u516c\u94a5\u9a8c\u8bc1 \uff1a \u670d\u52a1\u5668\u4f7f\u7528\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u786e\u4fdd\u53ea\u6709\u62e5\u6709\u79c1\u94a5\u7684\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7\u9a8c\u8bc1\u3002 \u968f\u673a\u6570\u636e \uff1a \u6bcf\u6b21\u8fde\u63a5\u751f\u6210\u7684\u968f\u673a\u6570\u636e\u4e0d\u540c\uff0c\u9632\u6b62\u91cd\u653e\u653b\u51fb\u3002","title":"3. \u5b89\u5168\u6027\u5206\u6790"},{"location":"Cryptography/ssh/#4_2","text":"\u5047\u8bbe\uff1a - \u968f\u673a\u6570\u636e\u4e3a challenge_data \u3002 - \u5ba2\u6237\u7aef\u7684\u79c1\u94a5\u4e3a private_key \u3002 - \u670d\u52a1\u5668\u7684\u516c\u94a5\u4e3a public_key \u3002","title":"4. \u793a\u4f8b\uff1a\u7b7e\u540d\u9a8c\u8bc1\u8fc7\u7a0b"},{"location":"Cryptography/ssh/#_2","text":"\u5ba2\u6237\u7aef\u4f7f\u7528\u79c1\u94a5\u5bf9\u968f\u673a\u6570\u636e\u8fdb\u884c\u7b7e\u540d\uff1a signature = encrypt(challenge_data, private_key)","title":"\u5ba2\u6237\u7aef\u7b7e\u540d"},{"location":"Cryptography/ssh/#_3","text":"\u670d\u52a1\u5668\u4f7f\u7528\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff1a decrypted_data = decrypt(signature, public_key) if decrypted_data == challenge_data: \u9a8c\u8bc1\u901a\u8fc7 else: \u9a8c\u8bc1\u5931\u8d25","title":"\u670d\u52a1\u5668\u9a8c\u8bc1"},{"location":"Cryptography/ssh/#5","text":"\u5ba2\u6237\u7aef\u7b7e\u540d \uff1a\u5ba2\u6237\u7aef\u4f7f\u7528\u79c1\u94a5\u5bf9\u670d\u52a1\u5668\u751f\u6210\u7684\u968f\u673a\u6570\u636e\u8fdb\u884c\u7b7e\u540d\u3002 \u670d\u52a1\u5668\u9a8c\u8bc1 \uff1a\u670d\u52a1\u5668\u4f7f\u7528\u516c\u94a5\u9a8c\u8bc1\u7b7e\u540d\uff0c\u786e\u4fdd\u5ba2\u6237\u7aef\u6301\u6709\u5bf9\u5e94\u7684\u79c1\u94a5\u3002 \u5b89\u5168\u6027 \uff1a\u901a\u8fc7\u975e\u5bf9\u79f0\u52a0\u5bc6\u6280\u672f\uff0c\u786e\u4fdd\u8eab\u4efd\u9a8c\u8bc1\u7684\u5b89\u5168\u6027\uff0c\u79c1\u94a5\u59cb\u7ec8\u4e0d\u4f1a\u6cc4\u9732\u3002","title":"5. \u603b\u7ed3"},{"location":"Cryptography/ssh/#3_4","text":"\u63e1\u624b\u5b8c\u6210\u540e\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4f7f\u7528\u534f\u5546\u751f\u6210\u7684\u5171\u4eab\u5bc6\u94a5\u8fdb\u884c\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1\u3002 \u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff08\u5982 AES\uff09\u7528\u4e8e\u52a0\u5bc6\u6570\u636e\uff0c\u786e\u4fdd\u901a\u4fe1\u7684\u673a\u5bc6\u6027\u3002 \u6d88\u606f\u8ba4\u8bc1\u7801\uff08MAC\uff09\u7528\u4e8e\u9a8c\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027\uff0c\u9632\u6b62\u6570\u636e\u88ab\u7be1\u6539\u3002","title":"3. \u6570\u636e\u4f20\u8f93\u9636\u6bb5"},{"location":"Cryptography/ssh/#ssh_3","text":"\u516c\u94a5\u653e\u7f6e \uff1a \u5c06\u5ba2\u6237\u7aef\u7684\u516c\u94a5\u653e\u7f6e\u5230\u8fdc\u7a0b\u4e3b\u673a\u7684 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\uff0c\u7528\u4e8e\u8eab\u4efd\u9a8c\u8bc1\u3002 \u63e1\u624b\u9636\u6bb5 \uff1a \u534f\u5546\u52a0\u5bc6\u7b97\u6cd5\u3002 \u4f7f\u7528 Diffie-Hellman \u6216 ECDH \u751f\u6210\u5171\u4eab\u5bc6\u94a5\u3002 \u9a8c\u8bc1\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u7684\u8eab\u4efd\u3002 \u6570\u636e\u4f20\u8f93\u9636\u6bb5 \uff1a \u4f7f\u7528\u5171\u4eab\u5bc6\u94a5\u8fdb\u884c\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1\u3002 \u4f7f\u7528 MAC \u9a8c\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u3002","title":"\u603b\u7ed3\uff1aSSH\u8fde\u63a5\u7684\u52a0\u5bc6\u8fc7\u7a0b"},{"location":"Cryptography/ssh/#ssh_4","text":"\u5ba2\u6237\u7aef\u751f\u6210\u5bc6\u94a5\u5bf9 \uff1a ssh-keygen -t rsa \u751f\u6210 id_rsa \uff08\u79c1\u94a5\uff09\u548c id_rsa.pub \uff08\u516c\u94a5\uff09\u3002 \u5c06\u516c\u94a5\u590d\u5236\u5230\u8fdc\u7a0b\u4e3b\u673a \uff1a ssh-copy-id user@remote_host \u5c06\u516c\u94a5\u6dfb\u52a0\u5230\u8fdc\u7a0b\u4e3b\u673a\u7684 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\u3002 \u5efa\u7acb\u8fde\u63a5 \uff1a ssh user@remote_host \u63e1\u624b\u5b8c\u6210\u540e\uff0c\u8fdb\u5165\u52a0\u5bc6\u901a\u4fe1\u9636\u6bb5\u3002","title":"\u793a\u4f8b\uff1aSSH\u8fde\u63a5\u7684\u6d41\u7a0b"},{"location":"Cryptography/ssh/#_4","text":"\u975e\u5bf9\u79f0\u52a0\u5bc6 \uff1a\u786e\u4fdd\u63e1\u624b\u9636\u6bb5\u7684\u5b89\u5168\u6027\u3002 \u5bf9\u79f0\u52a0\u5bc6 \uff1a\u63d0\u9ad8\u6570\u636e\u4f20\u8f93\u7684\u6548\u7387\u3002 \u6d88\u606f\u8ba4\u8bc1\u7801\uff08MAC\uff09 \uff1a\u786e\u4fdd\u6570\u636e\u7684\u5b8c\u6574\u6027\u3002 \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0cSSH\u5b9e\u73b0\u4e86\u5b89\u5168\u7684\u8fdc\u7a0b\u767b\u5f55\u548c\u6570\u636e\u4f20\u8f93\u3002","title":"\u5b89\u5168\u6027\u4fdd\u8bc1"},{"location":"Cryptography/ssh/#2_3","text":"","title":"\u5173\u4e8e\u7b2c2\u6b65\u5f62\u6210\u5bf9\u79f0\u5bc6\u94a5\u7684\u5177\u4f53\u8fc7\u7a0b"},{"location":"Cryptography/ssh/#diffie-hellman","text":"Diffie-Hellman \u5bc6\u94a5\u4ea4\u6362\u662f\u4e00\u79cd\u57fa\u4e8e\u6570\u5b66\u96be\u9898\uff08\u79bb\u6563\u5bf9\u6570\u95ee\u9898\uff09\u7684\u7b97\u6cd5\uff0c\u7528\u4e8e\u5728\u4e0d\u5b89\u5168\u7684\u7f51\u7edc\u4e2d\u5b89\u5168\u5730\u751f\u6210\u5171\u4eab\u7684\u5bf9\u79f0\u5bc6\u94a5\u3002\u4ee5\u4e0b\u662f\u8be6\u7ec6\u7684\u8ba1\u7b97\u8fc7\u7a0b\u548c\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u3002","title":"Diffie-Hellman \u5bc6\u94a5\u4ea4\u6362\u7b97\u6cd5\u7684\u8ba1\u7b97\u8fc7\u7a0b"},{"location":"Cryptography/ssh/#1_5","text":"Diffie-Hellman \u5bc6\u94a5\u4ea4\u6362\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5229\u7528\u6a21\u5e42\u8fd0\u7b97\u7684\u6027\u8d28\uff0c\u53cc\u65b9\u901a\u8fc7\u4ea4\u6362\u90e8\u5206\u4fe1\u606f\uff0c\u8ba1\u7b97\u51fa\u76f8\u540c\u7684\u5171\u4eab\u5bc6\u94a5\uff0c\u800c\u65e0\u9700\u76f4\u63a5\u4f20\u8f93\u5bc6\u94a5\u3002","title":"1. \u57fa\u672c\u539f\u7406"},{"location":"Cryptography/ssh/#_5","text":"\u9009\u62e9\u4e00\u4e2a\u5927\u7d20\u6570 p \u548c\u4e00\u4e2a\u751f\u6210\u5143 g \uff08 g \u662f\u6a21 p \u7684\u4e00\u4e2a\u539f\u6839\uff09\u3002 \u53cc\u65b9\u5404\u81ea\u9009\u62e9\u4e00\u4e2a\u79c1\u94a5\uff0c\u5e76\u901a\u8fc7\u8ba1\u7b97\u751f\u6210\u516c\u94a5\u3002 \u901a\u8fc7\u4ea4\u6362\u516c\u94a5\uff0c\u53cc\u65b9\u53ef\u4ee5\u8ba1\u7b97\u51fa\u76f8\u540c\u7684\u5171\u4eab\u5bc6\u94a5\u3002","title":"\u6570\u5b66\u57fa\u7840"},{"location":"Cryptography/ssh/#2_4","text":"","title":"2. \u8ba1\u7b97\u6b65\u9aa4"},{"location":"Cryptography/ssh/#1_6","text":"\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u5171\u540c\u9009\u62e9\u4e00\u4e2a\u5927\u7d20\u6570 p \u548c\u4e00\u4e2a\u751f\u6210\u5143 g \u3002 \u4f8b\u5982\uff1a p = 23 \uff0c g = 5 \u3002","title":"\u6b65\u9aa4 1\uff1a\u9009\u62e9\u516c\u5171\u53c2\u6570"},{"location":"Cryptography/ssh/#2_5","text":"\u5ba2\u6237\u7aef \u9009\u62e9\u4e00\u4e2a\u79c1\u94a5 a \uff08\u968f\u673a\u6570\uff09\uff0c\u8ba1\u7b97\u516c\u94a5 A \uff1a A = g^a mod p \u4f8b\u5982\uff1a\u5ba2\u6237\u7aef\u9009\u62e9 a = 6 \uff0c\u5219\uff1a A = 5^6 mod 23 = 15625 mod 23 = 8 \u670d\u52a1\u5668 \u9009\u62e9\u4e00\u4e2a\u79c1\u94a5 b \uff08\u968f\u673a\u6570\uff09\uff0c\u8ba1\u7b97\u516c\u94a5 B \uff1a B = g^b mod p \u4f8b\u5982\uff1a\u670d\u52a1\u5668\u9009\u62e9 b = 15 \uff0c\u5219\uff1a B = 5^15 mod 23 = 30517578125 mod 23 = 19","title":"\u6b65\u9aa4 2\uff1a\u751f\u6210\u5bc6\u94a5\u5bf9"},{"location":"Cryptography/ssh/#3_5","text":"\u5ba2\u6237\u7aef\u5c06\u516c\u94a5 A = 8 \u53d1\u9001\u7ed9\u670d\u52a1\u5668\u3002 \u670d\u52a1\u5668\u5c06\u516c\u94a5 B = 19 \u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002","title":"\u6b65\u9aa4 3\uff1a\u4ea4\u6362\u516c\u94a5"},{"location":"Cryptography/ssh/#4_3","text":"\u5ba2\u6237\u7aef \u4f7f\u7528\u670d\u52a1\u5668\u7684\u516c\u94a5 B \u548c\u81ea\u5df1\u7684\u79c1\u94a5 a \u8ba1\u7b97\u5171\u4eab\u5bc6\u94a5\uff1a S = B^a mod p \u8ba1\u7b97\uff1a S = 19^6 mod 23 = 47045881 mod 23 = 2 \u670d\u52a1\u5668 \u4f7f\u7528\u5ba2\u6237\u7aef\u7684\u516c\u94a5 A \u548c\u81ea\u5df1\u7684\u79c1\u94a5 b \u8ba1\u7b97\u5171\u4eab\u5bc6\u94a5\uff1a S = A^b mod p \u8ba1\u7b97\uff1a S = 8^15 mod 23 = 35184372088832 mod 23 = 2 \u7ed3\u679c \uff1a \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u90fd\u8ba1\u7b97\u51fa\u4e86\u76f8\u540c\u7684\u5171\u4eab\u5bc6\u94a5 S = 2 \u3002","title":"\u6b65\u9aa4 4\uff1a\u8ba1\u7b97\u5171\u4eab\u5bc6\u94a5"},{"location":"Cryptography/ssh/#3_6","text":"\u79c1\u94a5\u4fdd\u5bc6 \uff1a \u79c1\u94a5 a \u548c b \u4ece\u4e0d\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\uff0c\u653b\u51fb\u8005\u65e0\u6cd5\u76f4\u63a5\u83b7\u53d6\u3002 \u6570\u5b66\u96be\u9898 \uff1a \u653b\u51fb\u8005\u5373\u4f7f\u622a\u83b7\u4e86 p \u3001 g \u3001 A \u548c B \uff0c\u4e5f\u65e0\u6cd5\u901a\u8fc7\u9006\u5411\u8ba1\u7b97\u8f7b\u6613\u63a8\u5bfc\u51fa\u79c1\u94a5 a \u6216 b \uff08\u79bb\u6563\u5bf9\u6570\u95ee\u9898\u7684\u96be\u5ea6\uff09\u3002","title":"3. \u5b89\u5168\u6027"},{"location":"Cryptography/ssh/#4_4","text":"\u516c\u5171\u53c2\u6570\uff1a p = 23 \uff0c g = 5 \u5ba2\u6237\u7aef\u79c1\u94a5\uff1a a = 6 \uff0c\u516c\u94a5\uff1a A = 8 \u670d\u52a1\u5668\u79c1\u94a5\uff1a b = 15 \uff0c\u516c\u94a5\uff1a B = 19 \u5171\u4eab\u5bc6\u94a5\uff1a S = 2","title":"4. \u793a\u4f8b\u603b\u7ed3"},{"location":"Cryptography/ssh/#5_1","text":"\u751f\u6210\u7684\u5171\u4eab\u5bc6\u94a5 S \u7528\u4e8e\u540e\u7eed\u7684\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1\uff08\u5982 AES \u52a0\u5bc6\uff09\u3002 Diffie-Hellman \u662f SSH\u3001TLS \u7b49\u534f\u8bae\u4e2d\u5bc6\u94a5\u4ea4\u6362\u7684\u57fa\u7840\u3002","title":"5. \u5e94\u7528"},{"location":"Cryptography/ssh/#diffie-hellman-ecdh","text":"ECDH \u662f Diffie-Hellman \u7684\u4e00\u79cd\u4f18\u5316\u7248\u672c\uff0c\u4f7f\u7528\u692d\u5706\u66f2\u7ebf\u4ee3\u66ff\u6a21\u5e42\u8fd0\u7b97\u3002 \u63d0\u4f9b\u76f8\u540c\u5b89\u5168\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u5bc6\u94a5\u957f\u5ea6\u66f4\u77ed\uff0c\u8ba1\u7b97\u6548\u7387\u66f4\u9ad8\u3002- \u7ed3\u679c \uff1a \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u90fd\u8ba1\u7b97\u51fa\u4e86\u76f8\u540c\u7684\u5171\u4eab\u5bc6\u94a5 S = 2 \u3002","title":"\u6269\u5c55\uff1a\u692d\u5706\u66f2\u7ebf Diffie-Hellman (ECDH)"},{"location":"Cryptography/ssh/#3_7","text":"\u79c1\u94a5\u4fdd\u5bc6 \uff1a \u79c1\u94a5 a \u548c b \u4ece\u4e0d\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\uff0c\u653b\u51fb\u8005\u65e0\u6cd5\u76f4\u63a5\u83b7\u53d6\u3002 \u6570\u5b66\u96be\u9898 \uff1a \u653b\u51fb\u8005\u5373\u4f7f\u622a\u83b7\u4e86 p \u3001 g \u3001 A \u548c B \uff0c\u4e5f\u65e0\u6cd5\u901a\u8fc7\u9006\u5411\u8ba1\u7b97\u8f7b\u6613\u63a8\u5bfc\u51fa\u79c1\u94a5 a \u6216 b \uff08\u79bb\u6563\u5bf9\u6570\u95ee\u9898\u7684\u96be\u5ea6\uff09\u3002","title":"3. \u5b89\u5168\u6027"},{"location":"Cryptography/ssh/#4_5","text":"\u516c\u5171\u53c2\u6570\uff1a p = 23 \uff0c g = 5 \u5ba2\u6237\u7aef\u79c1\u94a5\uff1a a = 6 \uff0c\u516c\u94a5\uff1a A = 8 \u670d\u52a1\u5668\u79c1\u94a5\uff1a b = 15 \uff0c\u516c\u94a5\uff1a B = 19 \u5171\u4eab\u5bc6\u94a5\uff1a S = 2","title":"4. \u793a\u4f8b\u603b\u7ed3"},{"location":"Cryptography/ssh/#5_2","text":"\u751f\u6210\u7684\u5171\u4eab\u5bc6\u94a5 S \u7528\u4e8e\u540e\u7eed\u7684\u5bf9\u79f0\u52a0\u5bc6\u901a\u4fe1\uff08\u5982 AES \u52a0\u5bc6\uff09\u3002 Diffie-Hellman \u662f SSH\u3001TLS \u7b49\u534f\u8bae\u4e2d\u5bc6\u94a5\u4ea4\u6362\u7684\u57fa\u7840\u3002","title":"5. \u5e94\u7528"},{"location":"Cryptography/ssh/#diffie-hellman-ecdh_1","text":"ECDH \u662f Diffie-Hellman \u7684\u4e00\u79cd\u4f18\u5316\u7248\u672c\uff0c\u4f7f\u7528\u692d\u5706\u66f2\u7ebf\u4ee3\u66ff\u6a21\u5e42\u8fd0\u7b97\u3002 \u63d0\u4f9b\u76f8\u540c\u5b89\u5168\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u5bc6\u94a5\u957f\u5ea6\u66f4\u77ed\uff0c\u8ba1\u7b97\u6548\u7387\u66f4\u9ad8\u3002","title":"\u6269\u5c55\uff1a\u692d\u5706\u66f2\u7ebf Diffie-Hellman (ECDH)"},{"location":"Insight/25-5-17/","text":"\u5199\u4e8e2025\u5e745\u670817\u65e5 \u4eba\u603b\u662f\u4f1a\u7ecf\u5386\u4e00\u4e9b\u8ff7\u832b\u65f6\u671f\uff0c\u7279\u522b\u662f\u7ad9\u5728\u4e0d\u540c\u7684\u9009\u62e9\u9762\u524d\uff0c\u4e0d\u77e5\u9053\u5982\u4f55\u9009\u62e9\uff0c\u4e0d\u77e5\u9053\u73b0\u5728\u4e0d\u7ecf\u610f\u7684\u9009\u62e9\u4ee5\u540e\u4f1a\u4e0d\u4f1a\u540e\u6094\uff0c\u4f1a\u7ea0\u7ed3\uff0c\u4f1a\u7126\u8651\uff0c\u5bb3\u6015\u81ea\u5df1\u9009\u9519\uff0c\u4ece\u800c\u5bfc\u81f4\u81ea\u5df1\u4e00\u76f4\u505c\u6ede\u4e0d\u524d\uff0c\u53e4\u4eba\u8bf4\u8fc7\u4e09\u601d\u800c\u540e\u884c\uff0c\u8c0b\u5b9a\u800c\u52a8\uff0c\u4f46\u4e00\u76f4\u601d\u8003\uff0c\u60f3\u7684\u8d8a\u6765\u8d8a\u8fdc\uff0c\u8d8a\u6765\u8d8a\u590d\u6742\u5c31\u4f1a\u5bfc\u81f4\u81ea\u5df1\u5927\u8111\u4e00\u7247\u6d46\u7cca\uff0c\u6211\u4e2a\u4eba\u503e\u5411\u4eba\u5c31\u8be5\u5e72\u81ea\u5df1\u60f3\u5e72\u7684\u4e8b\u60c5\uff0c\u65e0\u6240\u8c13\u5bf9\u9519\uff0c\u7ba1\u4ed6\u7684\uff0c\u5148\u5e72\u7740\u81ea\u5df1\u559c\u6b22\u7684\u4e8b\u60c5\uff0c\u575a\u6301\u81ea\u5df1\u70ed\u7231\u7684\u4e8b\u60c5\u603b\u4f1a\u6210\u529f\u5730\uff0c\u4eba\u5e94\u8be5\u662f\u8981\u8ba9\u81ea\u5df1\u8212\u670d\uff0c\u8981\u4fdd\u6301\u6e05\u9192\u5934\u8111\uff0c\u60f3\u591a\u4e86\u4e5f\u8981\u505c\u4e0b\u6765\u653e\u677e\u653e\u677e\u3002","title":"25\u5e745\u670817\u65e5"},{"location":"Insight/25-5-17/#2025517","text":"\u4eba\u603b\u662f\u4f1a\u7ecf\u5386\u4e00\u4e9b\u8ff7\u832b\u65f6\u671f\uff0c\u7279\u522b\u662f\u7ad9\u5728\u4e0d\u540c\u7684\u9009\u62e9\u9762\u524d\uff0c\u4e0d\u77e5\u9053\u5982\u4f55\u9009\u62e9\uff0c\u4e0d\u77e5\u9053\u73b0\u5728\u4e0d\u7ecf\u610f\u7684\u9009\u62e9\u4ee5\u540e\u4f1a\u4e0d\u4f1a\u540e\u6094\uff0c\u4f1a\u7ea0\u7ed3\uff0c\u4f1a\u7126\u8651\uff0c\u5bb3\u6015\u81ea\u5df1\u9009\u9519\uff0c\u4ece\u800c\u5bfc\u81f4\u81ea\u5df1\u4e00\u76f4\u505c\u6ede\u4e0d\u524d\uff0c\u53e4\u4eba\u8bf4\u8fc7\u4e09\u601d\u800c\u540e\u884c\uff0c\u8c0b\u5b9a\u800c\u52a8\uff0c\u4f46\u4e00\u76f4\u601d\u8003\uff0c\u60f3\u7684\u8d8a\u6765\u8d8a\u8fdc\uff0c\u8d8a\u6765\u8d8a\u590d\u6742\u5c31\u4f1a\u5bfc\u81f4\u81ea\u5df1\u5927\u8111\u4e00\u7247\u6d46\u7cca\uff0c\u6211\u4e2a\u4eba\u503e\u5411\u4eba\u5c31\u8be5\u5e72\u81ea\u5df1\u60f3\u5e72\u7684\u4e8b\u60c5\uff0c\u65e0\u6240\u8c13\u5bf9\u9519\uff0c\u7ba1\u4ed6\u7684\uff0c\u5148\u5e72\u7740\u81ea\u5df1\u559c\u6b22\u7684\u4e8b\u60c5\uff0c\u575a\u6301\u81ea\u5df1\u70ed\u7231\u7684\u4e8b\u60c5\u603b\u4f1a\u6210\u529f\u5730\uff0c\u4eba\u5e94\u8be5\u662f\u8981\u8ba9\u81ea\u5df1\u8212\u670d\uff0c\u8981\u4fdd\u6301\u6e05\u9192\u5934\u8111\uff0c\u60f3\u591a\u4e86\u4e5f\u8981\u505c\u4e0b\u6765\u653e\u677e\u653e\u677e\u3002","title":"\u5199\u4e8e2025\u5e745\u670817\u65e5"},{"location":"Linux/OS_interview/","text":"\u7b80\u5355\u8bf4\u4e0b\u4f60\u5bf9\u5e76\u53d1\u548c\u5e76\u884c\u7684\u7406\u89e3\uff1f \u5e76\u53d1 \u548c \u5e76\u884c \u662f\u64cd\u4f5c\u7cfb\u7edf\u548c\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e2d\u7684\u4e24\u4e2a\u91cd\u8981\u6982\u5ff5\uff1a \u5e76\u53d1\uff08Concurrency\uff09 \uff1a\u6307\u7684\u662f\u5728\u540c\u4e00\u65f6\u95f4\u6bb5\u5185\uff0c\u6709\u591a\u4e2a\u4efb\u52a1\u5728\u201c\u4ea4\u66ff\u201d\u8fdb\u884c\uff0c\u4f46\u67d0\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\u5728\u771f\u6b63\u6267\u884c\u3002\u6bd4\u5982\u5355\u6838CPU\u901a\u8fc7\u5feb\u901f\u5207\u6362\u4efb\u52a1\uff0c\u8ba9\u7528\u6237\u611f\u89c9\u591a\u4e2a\u4efb\u52a1\u5728\u540c\u65f6\u8fdb\u884c\u3002 \u5e76\u884c\uff08Parallelism\uff09 \uff1a\u6307\u7684\u662f\u5728\u540c\u4e00\u65f6\u523b\uff0c\u6709\u591a\u4e2a\u4efb\u52a1\u201c\u771f\u6b63\u540c\u65f6\u201d\u6267\u884c\u3002\u6bd4\u5982\u591a\u6838CPU\uff0c\u6bcf\u4e2a\u6838\u5fc3\u540c\u65f6\u5904\u7406\u4e00\u4e2a\u4efb\u52a1\uff0c\u591a\u4e2a\u4efb\u52a1\u7269\u7406\u4e0a\u540c\u65f6\u8fd0\u884c\u3002 \u603b\u7ed3\uff1a - \u5e76\u53d1\u5f3a\u8c03\u4efb\u52a1\u7684\u201c\u4ea4\u66ff\u201d\u6267\u884c\uff0c\u4f53\u73b0\u7684\u662f\u903b\u8f91\u4e0a\u7684\u540c\u65f6\u3002 - \u5e76\u884c\u5f3a\u8c03\u4efb\u52a1\u7684\u201c\u771f\u6b63\u540c\u65f6\u201d\u6267\u884c\uff0c\u4f53\u73b0\u7684\u662f\u7269\u7406\u4e0a\u7684\u540c\u65f6\u3002 \u540c\u6b65\u3001\u5f02\u6b65\u3001\u963b\u585e\u3001\u975e\u963b\u585e\u7684\u6982\u5ff5 \u540c\u6b65\u3001\u5f02\u6b65\u3001\u963b\u585e\u3001\u975e\u963b\u585e \u662f\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e76\u53d1\u7f16\u7a0b\u4e2d\u7684\u5e38\u89c1\u6982\u5ff5\uff1a \u540c\u6b65\uff08Synchronous\uff09 \u6307\u4efb\u52a1\u7684\u53d1\u8d77\u65b9\u5fc5\u987b\u7b49\u5230\u4efb\u52a1\u5b8c\u6210\u540e\u624d\u80fd\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u64cd\u4f5c\u3002 \u4e3e\u4f8b\uff1a\u4f60\u6253\u7535\u8bdd\u7ed9\u522b\u4eba\uff0c\u5fc5\u987b\u7b49\u5bf9\u65b9\u63a5\u542c\u5e76\u901a\u8bdd\u7ed3\u675f\u540e\uff0c\u4f60\u624d\u80fd\u505a\u4e0b\u4e00\u4ef6\u4e8b\u3002 \u5f02\u6b65\uff08Asynchronous\uff09 \u6307\u4efb\u52a1\u7684\u53d1\u8d77\u65b9\u53d1\u51fa\u4efb\u52a1\u540e\uff0c\u4e0d\u5fc5\u7b49\u5f85\u4efb\u52a1\u5b8c\u6210\uff0c\u53ef\u4ee5\u7acb\u5373\u8fdb\u884c\u540e\u7eed\u64cd\u4f5c\uff0c\u4efb\u52a1\u5b8c\u6210\u540e\u4f1a\u901a\u8fc7\u56de\u8c03\u3001\u901a\u77e5\u7b49\u65b9\u5f0f\u544a\u77e5\u7ed3\u679c\u3002 \u4e3e\u4f8b\uff1a\u4f60\u53d1\u77ed\u4fe1\u7ed9\u522b\u4eba\uff0c\u53d1\u51fa\u540e\u53ef\u4ee5\u505a\u522b\u7684\u4e8b\uff0c\u5bf9\u65b9\u56de\u590d\u65f6\u4f60\u518d\u5904\u7406\u3002 \u963b\u585e\uff08Blocking\uff09 \u6307\u5f53\u524d\u7ebf\u7a0b\u5728\u7b49\u5f85\u67d0\u4e2a\u64cd\u4f5c\u5b8c\u6210\u65f6\u4f1a\u88ab\u6302\u8d77\uff0c\u4e0d\u80fd\u505a\u5176\u4ed6\u4e8b\u60c5\uff0c\u76f4\u5230\u64cd\u4f5c\u5b8c\u6210\u624d\u6062\u590d\u6267\u884c\u3002 \u4e3e\u4f8b\uff1a\u4f60\u53bb\u94f6\u884c\u6392\u961f\u529e\u7406\u4e1a\u52a1\uff0c\u8f6e\u5230\u4f60\u4e4b\u524d\u53ea\u80fd\u4e00\u76f4\u7b49\u7740\uff0c\u4e0d\u80fd\u505a\u522b\u7684\u4e8b\u3002 \u975e\u963b\u585e\uff08Non-blocking\uff09 \u6307\u5f53\u524d\u7ebf\u7a0b\u5728\u7b49\u5f85\u67d0\u4e2a\u64cd\u4f5c\u65f6\u4e0d\u4f1a\u88ab\u6302\u8d77\uff0c\u5982\u679c\u64cd\u4f5c\u4e0d\u80fd\u7acb\u5373\u5b8c\u6210\uff0c\u4f1a\u7acb\u5373\u8fd4\u56de\uff0c\u53ef\u4ee5\u7ee7\u7eed\u505a\u5176\u4ed6\u4e8b\u60c5\u3002 \u4e3e\u4f8b\uff1a\u4f60\u53bb\u94f6\u884c\u53d1\u73b0\u6392\u961f\u4eba\u591a\uff0c\u5148\u53bb\u529e\u522b\u7684\u4e8b\uff0c\u8fc7\u4f1a\u513f\u518d\u56de\u6765\u770b\u770b\u3002 \u603b\u7ed3\uff1a - \u540c\u6b65/\u5f02\u6b65\u5f3a\u8c03\u4efb\u52a1\u7684\u53d1\u8d77\u548c\u5b8c\u6210\u7684\u5173\u7cfb\u3002 - \u963b\u585e/\u975e\u963b\u585e\u5f3a\u8c03\u7ebf\u7a0b\u5728\u7b49\u5f85\u65f6\u662f\u5426\u4f1a\u88ab\u6302\u8d77\u3002 \u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u57fa\u672c\u6982\u5ff5 \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u533a\u522b\uff1f \u4e3a\u4ec0\u4e48\u6709\u4e86\u8fdb\u7a0b\uff0c\u8fd8\u8981\u6709\u7ebf\u7a0b\u5462\uff1f \u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u57fa\u672c\u6982\u5ff5 \u8fdb\u7a0b\uff08Process\uff09 \uff1a\u662f\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\u3001\u4ee3\u7801\u3001\u6570\u636e\u548c\u7cfb\u7edf\u8d44\u6e90\u3002\u4e00\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\u3002 \u7ebf\u7a0b\uff08Thread\uff09 \uff1a\u662fCPU\u8c03\u5ea6\u548c\u6267\u884c\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u662f\u8fdb\u7a0b\u4e2d\u7684\u4e00\u4e2a\u6267\u884c\u6d41\u3002\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u7ebf\u7a0b\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90\uff0c\u4f46\u6709\u5404\u81ea\u7684\u6267\u884c\u6808\u548c\u5bc4\u5b58\u5668\u3002 \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u533a\u522b \u8fdb\u7a0b\uff08Process\uff09 \u7ebf\u7a0b\uff08Thread\uff09 \u5730\u5740\u7a7a\u95f4 \u72ec\u7acb \u540c\u4e00\u8fdb\u7a0b\u5185\u7ebf\u7a0b\u5171\u4eab \u8d44\u6e90\u5360\u7528 \u5360\u7528\u8d44\u6e90\u591a\uff0c\u5207\u6362\u5f00\u9500\u5927 \u5360\u7528\u8d44\u6e90\u5c11\uff0c\u5207\u6362\u5f00\u9500\u5c0f \u8c03\u5ea6 \u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6 \u64cd\u4f5c\u7cfb\u7edf\u6216\u7528\u6237\u7ea7\u8c03\u5ea6 \u5d29\u6e83\u5f71\u54cd \u4e00\u4e2a\u8fdb\u7a0b\u5d29\u6e83\u4e92\u4e0d\u5f71\u54cd \u4e00\u4e2a\u7ebf\u7a0b\u5d29\u6e83\u4f1a\u5f71\u54cd\u6574\u4e2a\u8fdb\u7a0b \u901a\u4fe1 \u8fdb\u7a0b\u95f4\u901a\u4fe1\u590d\u6742 \u7ebf\u7a0b\u95f4\u901a\u4fe1\u7b80\u5355\uff08\u5171\u4eab\u5185\u5b58\uff09 \u4e3a\u4ec0\u4e48\u6709\u4e86\u8fdb\u7a0b\uff0c\u8fd8\u8981\u6709\u7ebf\u7a0b\uff1f \u7ebf\u7a0b\u66f4\u8f7b\u91cf\uff0c\u521b\u5efa\u548c\u5207\u6362\u5f00\u9500\u5c0f\uff0c\u9002\u5408\u9700\u8981\u5927\u91cf\u5e76\u53d1\u7684\u573a\u666f\u3002 \u591a\u7ebf\u7a0b\u53ef\u4ee5\u8ba9\u540c\u4e00\u4e2a\u8fdb\u7a0b\u5185\u7684\u591a\u4e2a\u4efb\u52a1\u5e76\u53d1\u6267\u884c\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u6548\u7387\u548c\u8d44\u6e90\u5229\u7528\u7387\u3002 \u7ebf\u7a0b\u95f4\u901a\u4fe1\u548c\u6570\u636e\u5171\u4eab\u66f4\u65b9\u4fbf\uff0c\u9002\u5408\u9700\u8981\u9891\u7e41\u534f\u4f5c\u7684\u4efb\u52a1\u3002 \u603b\u7ed3\uff1a \u8fdb\u7a0b\u9002\u5408\u9694\u79bb\u6027\u5f3a\u3001\u8d44\u6e90\u72ec\u7acb\u7684\u4efb\u52a1\uff0c\u7ebf\u7a0b\u9002\u5408\u9ad8\u5e76\u53d1\u3001\u534f\u4f5c\u5bc6\u5207\u7684\u4efb\u52a1\u3002\u4e24\u8005\u7ed3\u5408\u4f7f\u7528\uff0c\u53ef\u4ee5\u517c\u987e\u5b89\u5168\u6027\u548c\u6548\u7387\u3002 \u8fdb\u7a0b\u7684\u72b6\u6001\u8f6c\u6362 \u8fdb\u7a0b\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8fd0\u884c\u65f6\uff0c\u4f1a\u7ecf\u5386\u591a\u79cd\u72b6\u6001\uff0c\u5e38\u89c1\u7684\u8fdb\u7a0b\u72b6\u6001\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a \u5c31\u7eea\uff08Ready\uff09 \u8fdb\u7a0b\u5df2\u83b7\u5f97\u9664CPU\u5916\u7684\u6240\u6709\u8d44\u6e90\uff0c\u7b49\u5f85\u88ab\u8c03\u5ea6\u5230CPU\u4e0a\u8fd0\u884c\u3002 \u8fd0\u884c\uff08Running\uff09 \u8fdb\u7a0b\u6b63\u5728CPU\u4e0a\u6267\u884c\u3002 \u963b\u585e/\u7b49\u5f85\uff08Blocked/Waiting\uff09 \u8fdb\u7a0b\u56e0\u4e3a\u7b49\u5f85\u67d0\u4e9b\u4e8b\u4ef6\uff08\u5982I/O\u64cd\u4f5c\u5b8c\u6210\uff09\u800c\u6682\u65f6\u4e0d\u80fd\u8fd0\u884c\uff0c\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002 \u7ed3\u675f\uff08Terminated\uff09 \u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\u6216\u88ab\u7ec8\u6b62\uff0c\u8fdb\u5165\u7ed3\u675f\u72b6\u6001\u3002 \u8fdb\u7a0b\u72b6\u6001\u8f6c\u6362\u56fe \u5e38\u89c1\u7684\u72b6\u6001\u8f6c\u6362\u6709\uff1a \u5c31\u7eea \u2192 \u8fd0\u884c \uff1a\u88ab\u8c03\u5ea6\u5668\u9009\u4e2d\uff0c\u83b7\u5f97CPU\u3002 \u8fd0\u884c \u2192 \u5c31\u7eea \uff1a\u65f6\u95f4\u7247\u7528\u5b8c\u6216\u88ab\u62a2\u5360\uff0c\u653e\u56de\u5c31\u7eea\u961f\u5217\u3002 \u8fd0\u884c \u2192 \u963b\u585e \uff1a\u7b49\u5f85I/O\u6216\u5176\u4ed6\u4e8b\u4ef6\uff0c\u4e3b\u52a8\u653e\u5f03CPU\u3002 \u963b\u585e \u2192 \u5c31\u7eea \uff1a\u7b49\u5f85\u7684\u4e8b\u4ef6\u53d1\u751f\uff0c\u91cd\u65b0\u8fdb\u5165\u5c31\u7eea\u961f\u5217\u3002 \u8fd0\u884c \u2192 \u7ed3\u675f \uff1a\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\u6216\u88ab\u7ec8\u6b62\u3002 \u603b\u7ed3\uff1a \u8fdb\u7a0b\u7684\u72b6\u6001\u8f6c\u6362\u53cd\u6620\u4e86\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u8fdb\u7a0b\u7684\u8c03\u5ea6\u548c\u7ba1\u7406\u8fc7\u7a0b\uff0c\u662f\u7406\u89e3\u8fdb\u7a0b\u751f\u547d\u5468\u671f\u548c\u8c03\u5ea6\u673a\u5236\u7684\u57fa\u7840\u3002","title":"\u9762\u8bd5\u989832\u9053"},{"location":"Linux/OS_interview/#_1","text":"\u5e76\u53d1 \u548c \u5e76\u884c \u662f\u64cd\u4f5c\u7cfb\u7edf\u548c\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e2d\u7684\u4e24\u4e2a\u91cd\u8981\u6982\u5ff5\uff1a \u5e76\u53d1\uff08Concurrency\uff09 \uff1a\u6307\u7684\u662f\u5728\u540c\u4e00\u65f6\u95f4\u6bb5\u5185\uff0c\u6709\u591a\u4e2a\u4efb\u52a1\u5728\u201c\u4ea4\u66ff\u201d\u8fdb\u884c\uff0c\u4f46\u67d0\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\u5728\u771f\u6b63\u6267\u884c\u3002\u6bd4\u5982\u5355\u6838CPU\u901a\u8fc7\u5feb\u901f\u5207\u6362\u4efb\u52a1\uff0c\u8ba9\u7528\u6237\u611f\u89c9\u591a\u4e2a\u4efb\u52a1\u5728\u540c\u65f6\u8fdb\u884c\u3002 \u5e76\u884c\uff08Parallelism\uff09 \uff1a\u6307\u7684\u662f\u5728\u540c\u4e00\u65f6\u523b\uff0c\u6709\u591a\u4e2a\u4efb\u52a1\u201c\u771f\u6b63\u540c\u65f6\u201d\u6267\u884c\u3002\u6bd4\u5982\u591a\u6838CPU\uff0c\u6bcf\u4e2a\u6838\u5fc3\u540c\u65f6\u5904\u7406\u4e00\u4e2a\u4efb\u52a1\uff0c\u591a\u4e2a\u4efb\u52a1\u7269\u7406\u4e0a\u540c\u65f6\u8fd0\u884c\u3002 \u603b\u7ed3\uff1a - \u5e76\u53d1\u5f3a\u8c03\u4efb\u52a1\u7684\u201c\u4ea4\u66ff\u201d\u6267\u884c\uff0c\u4f53\u73b0\u7684\u662f\u903b\u8f91\u4e0a\u7684\u540c\u65f6\u3002 - \u5e76\u884c\u5f3a\u8c03\u4efb\u52a1\u7684\u201c\u771f\u6b63\u540c\u65f6\u201d\u6267\u884c\uff0c\u4f53\u73b0\u7684\u662f\u7269\u7406\u4e0a\u7684\u540c\u65f6\u3002","title":"\u7b80\u5355\u8bf4\u4e0b\u4f60\u5bf9\u5e76\u53d1\u548c\u5e76\u884c\u7684\u7406\u89e3\uff1f"},{"location":"Linux/OS_interview/#_2","text":"\u540c\u6b65\u3001\u5f02\u6b65\u3001\u963b\u585e\u3001\u975e\u963b\u585e \u662f\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e76\u53d1\u7f16\u7a0b\u4e2d\u7684\u5e38\u89c1\u6982\u5ff5\uff1a","title":"\u540c\u6b65\u3001\u5f02\u6b65\u3001\u963b\u585e\u3001\u975e\u963b\u585e\u7684\u6982\u5ff5"},{"location":"Linux/OS_interview/#synchronous","text":"\u6307\u4efb\u52a1\u7684\u53d1\u8d77\u65b9\u5fc5\u987b\u7b49\u5230\u4efb\u52a1\u5b8c\u6210\u540e\u624d\u80fd\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u64cd\u4f5c\u3002 \u4e3e\u4f8b\uff1a\u4f60\u6253\u7535\u8bdd\u7ed9\u522b\u4eba\uff0c\u5fc5\u987b\u7b49\u5bf9\u65b9\u63a5\u542c\u5e76\u901a\u8bdd\u7ed3\u675f\u540e\uff0c\u4f60\u624d\u80fd\u505a\u4e0b\u4e00\u4ef6\u4e8b\u3002","title":"\u540c\u6b65\uff08Synchronous\uff09"},{"location":"Linux/OS_interview/#asynchronous","text":"\u6307\u4efb\u52a1\u7684\u53d1\u8d77\u65b9\u53d1\u51fa\u4efb\u52a1\u540e\uff0c\u4e0d\u5fc5\u7b49\u5f85\u4efb\u52a1\u5b8c\u6210\uff0c\u53ef\u4ee5\u7acb\u5373\u8fdb\u884c\u540e\u7eed\u64cd\u4f5c\uff0c\u4efb\u52a1\u5b8c\u6210\u540e\u4f1a\u901a\u8fc7\u56de\u8c03\u3001\u901a\u77e5\u7b49\u65b9\u5f0f\u544a\u77e5\u7ed3\u679c\u3002 \u4e3e\u4f8b\uff1a\u4f60\u53d1\u77ed\u4fe1\u7ed9\u522b\u4eba\uff0c\u53d1\u51fa\u540e\u53ef\u4ee5\u505a\u522b\u7684\u4e8b\uff0c\u5bf9\u65b9\u56de\u590d\u65f6\u4f60\u518d\u5904\u7406\u3002","title":"\u5f02\u6b65\uff08Asynchronous\uff09"},{"location":"Linux/OS_interview/#blocking","text":"\u6307\u5f53\u524d\u7ebf\u7a0b\u5728\u7b49\u5f85\u67d0\u4e2a\u64cd\u4f5c\u5b8c\u6210\u65f6\u4f1a\u88ab\u6302\u8d77\uff0c\u4e0d\u80fd\u505a\u5176\u4ed6\u4e8b\u60c5\uff0c\u76f4\u5230\u64cd\u4f5c\u5b8c\u6210\u624d\u6062\u590d\u6267\u884c\u3002 \u4e3e\u4f8b\uff1a\u4f60\u53bb\u94f6\u884c\u6392\u961f\u529e\u7406\u4e1a\u52a1\uff0c\u8f6e\u5230\u4f60\u4e4b\u524d\u53ea\u80fd\u4e00\u76f4\u7b49\u7740\uff0c\u4e0d\u80fd\u505a\u522b\u7684\u4e8b\u3002","title":"\u963b\u585e\uff08Blocking\uff09"},{"location":"Linux/OS_interview/#non-blocking","text":"\u6307\u5f53\u524d\u7ebf\u7a0b\u5728\u7b49\u5f85\u67d0\u4e2a\u64cd\u4f5c\u65f6\u4e0d\u4f1a\u88ab\u6302\u8d77\uff0c\u5982\u679c\u64cd\u4f5c\u4e0d\u80fd\u7acb\u5373\u5b8c\u6210\uff0c\u4f1a\u7acb\u5373\u8fd4\u56de\uff0c\u53ef\u4ee5\u7ee7\u7eed\u505a\u5176\u4ed6\u4e8b\u60c5\u3002 \u4e3e\u4f8b\uff1a\u4f60\u53bb\u94f6\u884c\u53d1\u73b0\u6392\u961f\u4eba\u591a\uff0c\u5148\u53bb\u529e\u522b\u7684\u4e8b\uff0c\u8fc7\u4f1a\u513f\u518d\u56de\u6765\u770b\u770b\u3002 \u603b\u7ed3\uff1a - \u540c\u6b65/\u5f02\u6b65\u5f3a\u8c03\u4efb\u52a1\u7684\u53d1\u8d77\u548c\u5b8c\u6210\u7684\u5173\u7cfb\u3002 - \u963b\u585e/\u975e\u963b\u585e\u5f3a\u8c03\u7ebf\u7a0b\u5728\u7b49\u5f85\u65f6\u662f\u5426\u4f1a\u88ab\u6302\u8d77\u3002","title":"\u975e\u963b\u585e\uff08Non-blocking\uff09"},{"location":"Linux/OS_interview/#_3","text":"","title":"\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u57fa\u672c\u6982\u5ff5 \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u533a\u522b\uff1f \u4e3a\u4ec0\u4e48\u6709\u4e86\u8fdb\u7a0b\uff0c\u8fd8\u8981\u6709\u7ebf\u7a0b\u5462\uff1f"},{"location":"Linux/OS_interview/#_4","text":"\u8fdb\u7a0b\uff08Process\uff09 \uff1a\u662f\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\u3001\u4ee3\u7801\u3001\u6570\u636e\u548c\u7cfb\u7edf\u8d44\u6e90\u3002\u4e00\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\u3002 \u7ebf\u7a0b\uff08Thread\uff09 \uff1a\u662fCPU\u8c03\u5ea6\u548c\u6267\u884c\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u662f\u8fdb\u7a0b\u4e2d\u7684\u4e00\u4e2a\u6267\u884c\u6d41\u3002\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u7ebf\u7a0b\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90\uff0c\u4f46\u6709\u5404\u81ea\u7684\u6267\u884c\u6808\u548c\u5bc4\u5b58\u5668\u3002","title":"\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"Linux/OS_interview/#_5","text":"\u8fdb\u7a0b\uff08Process\uff09 \u7ebf\u7a0b\uff08Thread\uff09 \u5730\u5740\u7a7a\u95f4 \u72ec\u7acb \u540c\u4e00\u8fdb\u7a0b\u5185\u7ebf\u7a0b\u5171\u4eab \u8d44\u6e90\u5360\u7528 \u5360\u7528\u8d44\u6e90\u591a\uff0c\u5207\u6362\u5f00\u9500\u5927 \u5360\u7528\u8d44\u6e90\u5c11\uff0c\u5207\u6362\u5f00\u9500\u5c0f \u8c03\u5ea6 \u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6 \u64cd\u4f5c\u7cfb\u7edf\u6216\u7528\u6237\u7ea7\u8c03\u5ea6 \u5d29\u6e83\u5f71\u54cd \u4e00\u4e2a\u8fdb\u7a0b\u5d29\u6e83\u4e92\u4e0d\u5f71\u54cd \u4e00\u4e2a\u7ebf\u7a0b\u5d29\u6e83\u4f1a\u5f71\u54cd\u6574\u4e2a\u8fdb\u7a0b \u901a\u4fe1 \u8fdb\u7a0b\u95f4\u901a\u4fe1\u590d\u6742 \u7ebf\u7a0b\u95f4\u901a\u4fe1\u7b80\u5355\uff08\u5171\u4eab\u5185\u5b58\uff09","title":"\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u533a\u522b"},{"location":"Linux/OS_interview/#_6","text":"\u7ebf\u7a0b\u66f4\u8f7b\u91cf\uff0c\u521b\u5efa\u548c\u5207\u6362\u5f00\u9500\u5c0f\uff0c\u9002\u5408\u9700\u8981\u5927\u91cf\u5e76\u53d1\u7684\u573a\u666f\u3002 \u591a\u7ebf\u7a0b\u53ef\u4ee5\u8ba9\u540c\u4e00\u4e2a\u8fdb\u7a0b\u5185\u7684\u591a\u4e2a\u4efb\u52a1\u5e76\u53d1\u6267\u884c\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u6548\u7387\u548c\u8d44\u6e90\u5229\u7528\u7387\u3002 \u7ebf\u7a0b\u95f4\u901a\u4fe1\u548c\u6570\u636e\u5171\u4eab\u66f4\u65b9\u4fbf\uff0c\u9002\u5408\u9700\u8981\u9891\u7e41\u534f\u4f5c\u7684\u4efb\u52a1\u3002 \u603b\u7ed3\uff1a \u8fdb\u7a0b\u9002\u5408\u9694\u79bb\u6027\u5f3a\u3001\u8d44\u6e90\u72ec\u7acb\u7684\u4efb\u52a1\uff0c\u7ebf\u7a0b\u9002\u5408\u9ad8\u5e76\u53d1\u3001\u534f\u4f5c\u5bc6\u5207\u7684\u4efb\u52a1\u3002\u4e24\u8005\u7ed3\u5408\u4f7f\u7528\uff0c\u53ef\u4ee5\u517c\u987e\u5b89\u5168\u6027\u548c\u6548\u7387\u3002","title":"\u4e3a\u4ec0\u4e48\u6709\u4e86\u8fdb\u7a0b\uff0c\u8fd8\u8981\u6709\u7ebf\u7a0b\uff1f"},{"location":"Linux/OS_interview/#_7","text":"\u8fdb\u7a0b\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8fd0\u884c\u65f6\uff0c\u4f1a\u7ecf\u5386\u591a\u79cd\u72b6\u6001\uff0c\u5e38\u89c1\u7684\u8fdb\u7a0b\u72b6\u6001\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a \u5c31\u7eea\uff08Ready\uff09 \u8fdb\u7a0b\u5df2\u83b7\u5f97\u9664CPU\u5916\u7684\u6240\u6709\u8d44\u6e90\uff0c\u7b49\u5f85\u88ab\u8c03\u5ea6\u5230CPU\u4e0a\u8fd0\u884c\u3002 \u8fd0\u884c\uff08Running\uff09 \u8fdb\u7a0b\u6b63\u5728CPU\u4e0a\u6267\u884c\u3002 \u963b\u585e/\u7b49\u5f85\uff08Blocked/Waiting\uff09 \u8fdb\u7a0b\u56e0\u4e3a\u7b49\u5f85\u67d0\u4e9b\u4e8b\u4ef6\uff08\u5982I/O\u64cd\u4f5c\u5b8c\u6210\uff09\u800c\u6682\u65f6\u4e0d\u80fd\u8fd0\u884c\uff0c\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002 \u7ed3\u675f\uff08Terminated\uff09 \u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\u6216\u88ab\u7ec8\u6b62\uff0c\u8fdb\u5165\u7ed3\u675f\u72b6\u6001\u3002","title":"\u8fdb\u7a0b\u7684\u72b6\u6001\u8f6c\u6362"},{"location":"Linux/OS_interview/#_8","text":"\u5e38\u89c1\u7684\u72b6\u6001\u8f6c\u6362\u6709\uff1a \u5c31\u7eea \u2192 \u8fd0\u884c \uff1a\u88ab\u8c03\u5ea6\u5668\u9009\u4e2d\uff0c\u83b7\u5f97CPU\u3002 \u8fd0\u884c \u2192 \u5c31\u7eea \uff1a\u65f6\u95f4\u7247\u7528\u5b8c\u6216\u88ab\u62a2\u5360\uff0c\u653e\u56de\u5c31\u7eea\u961f\u5217\u3002 \u8fd0\u884c \u2192 \u963b\u585e \uff1a\u7b49\u5f85I/O\u6216\u5176\u4ed6\u4e8b\u4ef6\uff0c\u4e3b\u52a8\u653e\u5f03CPU\u3002 \u963b\u585e \u2192 \u5c31\u7eea \uff1a\u7b49\u5f85\u7684\u4e8b\u4ef6\u53d1\u751f\uff0c\u91cd\u65b0\u8fdb\u5165\u5c31\u7eea\u961f\u5217\u3002 \u8fd0\u884c \u2192 \u7ed3\u675f \uff1a\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\u6216\u88ab\u7ec8\u6b62\u3002 \u603b\u7ed3\uff1a \u8fdb\u7a0b\u7684\u72b6\u6001\u8f6c\u6362\u53cd\u6620\u4e86\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u8fdb\u7a0b\u7684\u8c03\u5ea6\u548c\u7ba1\u7406\u8fc7\u7a0b\uff0c\u662f\u7406\u89e3\u8fdb\u7a0b\u751f\u547d\u5468\u671f\u548c\u8c03\u5ea6\u673a\u5236\u7684\u57fa\u7840\u3002","title":"\u8fdb\u7a0b\u72b6\u6001\u8f6c\u6362\u56fe"},{"location":"Linux/basics/","text":"Linux \u7684\u57fa\u7840\u77e5\u8bc6\u6982\u89c8 Linux \u662f\u4e00\u79cd\u5f00\u6e90\u7684\u7c7b Unix \u64cd\u4f5c\u7cfb\u7edf\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u670d\u52a1\u5668\u3001\u5d4c\u5165\u5f0f\u8bbe\u5907\u548c\u5f00\u53d1\u73af\u5883\u3002\u4ee5\u4e0b\u662f Linux \u7684\u4e3b\u8981\u77e5\u8bc6\u70b9\u5206\u7c7b\u548c\u7b80\u4ecb\uff1a 1. Linux \u57fa\u7840\u6982\u5ff5 \uff081\uff09Linux \u7684\u7ec4\u6210 \u5185\u6838\uff08Kernel\uff09 \uff1a \u64cd\u4f5c\u7cfb\u7edf\u7684\u6838\u5fc3\uff0c\u8d1f\u8d23\u786c\u4ef6\u7ba1\u7406\u3001\u8fdb\u7a0b\u8c03\u5ea6\u3001\u5185\u5b58\u7ba1\u7406\u7b49\u3002 Shell \uff1a \u7528\u6237\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4ea4\u4e92\u7684\u547d\u4ee4\u884c\u63a5\u53e3\uff0c\u5982 Bash\u3001Zsh\u3002 \u6587\u4ef6\u7cfb\u7edf \uff1a Linux \u4f7f\u7528\u5206\u5c42\u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u6839\u76ee\u5f55\u4e3a / \uff0c\u5e38\u89c1\u76ee\u5f55\u5305\u62ec home\u3001etc\u3001var \u7b49\u3002 \uff082\uff09Linux \u7684\u7279\u70b9 \u5f00\u6e90 \uff1a\u6e90\u4ee3\u7801\u516c\u5f00\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u4fee\u6539\u548c\u5206\u53d1\u3002 \u591a\u7528\u6237\u3001\u591a\u4efb\u52a1 \uff1a\u652f\u6301\u591a\u4e2a\u7528\u6237\u540c\u65f6\u767b\u5f55\u548c\u8fd0\u884c\u591a\u4e2a\u4efb\u52a1\u3002 \u5b89\u5168\u6027 \uff1a\u6743\u9650\u7ba1\u7406\u4e25\u683c\uff0c\u652f\u6301\u7528\u6237\u548c\u7ec4\u7684\u8bbf\u95ee\u63a7\u5236\u3002 2. \u6587\u4ef6\u548c\u76ee\u5f55\u7ba1\u7406 \uff081\uff09\u5e38\u7528\u547d\u4ee4 \u67e5\u770b\u76ee\u5f55\u5185\u5bb9 \uff1a ls \u5207\u6362\u76ee\u5f55 \uff1a cd <\u76ee\u5f55\u8def\u5f84> \u521b\u5efa\u6587\u4ef6\u548c\u76ee\u5f55 \uff1a touch <\u6587\u4ef6\u540d> # \u521b\u5efa\u7a7a\u6587\u4ef6 mkdir <\u76ee\u5f55\u540d> # \u521b\u5efa\u76ee\u5f55 \u5220\u9664\u6587\u4ef6\u548c\u76ee\u5f55 \uff1a rm <\u6587\u4ef6\u540d> # \u5220\u9664\u6587\u4ef6 rm -r <\u76ee\u5f55\u540d> # \u5220\u9664\u76ee\u5f55 \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 \uff1a cat <\u6587\u4ef6\u540d> # \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 less <\u6587\u4ef6\u540d> # \u5206\u9875\u67e5\u770b\u6587\u4ef6\u5185\u5bb9 \uff082\uff09\u6587\u4ef6\u6743\u9650 \u67e5\u770b\u6587\u4ef6\u6743\u9650 \uff1a ls -l \u4fee\u6539\u6587\u4ef6\u6743\u9650 \uff1a chmod 755 <\u6587\u4ef6\u540d> \u4fee\u6539\u6587\u4ef6\u6240\u6709\u8005 \uff1a chown <\u7528\u6237>:<\u7ec4> <\u6587\u4ef6\u540d> 3. \u7528\u6237\u548c\u6743\u9650\u7ba1\u7406 \uff081\uff09\u7528\u6237\u7ba1\u7406 \u6dfb\u52a0\u7528\u6237 \uff1a useradd <\u7528\u6237\u540d> \u5220\u9664\u7528\u6237 \uff1a userdel <\u7528\u6237\u540d> \u5207\u6362\u7528\u6237 \uff1a su <\u7528\u6237\u540d> \uff082\uff09\u6743\u9650\u7ba1\u7406 \u6743\u9650\u8868\u793a \uff1a \u6587\u4ef6\u6743\u9650\u5206\u4e3a\u4e09\u90e8\u5206\uff1a\u7528\u6237\uff08 u \uff09\u3001\u7ec4\uff08 g \uff09\u3001\u5176\u4ed6\u4eba\uff08 o \uff09\u3002 \u6743\u9650\u5305\u62ec\uff1a\u8bfb\uff08 r \uff09\u3001\u5199\uff08 w \uff09\u3001\u6267\u884c\uff08 x \uff09\u3002 \u4fee\u6539\u6743\u9650 \uff1a chmod u+x <\u6587\u4ef6\u540d> # \u7ed9\u7528\u6237\u6dfb\u52a0\u6267\u884c\u6743\u9650 4. \u8f6f\u4ef6\u5305\u7ba1\u7406 \uff081\uff09\u5e38\u89c1\u5305\u7ba1\u7406\u5de5\u5177 Debian \u7cfb\uff08\u5982 Ubuntu\uff09 \uff1a \u4f7f\u7528 apt \u6216 dpkg \u3002 sudo apt update sudo apt install <\u8f6f\u4ef6\u5305\u540d> Red Hat \u7cfb\uff08\u5982 CentOS\uff09 \uff1a \u4f7f\u7528 yum \u6216 dnf \u3002 sudo yum install <\u8f6f\u4ef6\u5305\u540d> \uff082\uff09\u6e90\u7801\u5b89\u88c5 \u4e0b\u8f7d\u6e90\u7801\u5305\uff0c\u89e3\u538b\u540e\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a ./configure make sudo make install 5. \u7f51\u7edc\u7ba1\u7406 \uff081\uff09\u67e5\u770b\u7f51\u7edc\u72b6\u6001 \u67e5\u770b IP \u5730\u5740 \uff1a ip addr show \u6d4b\u8bd5\u7f51\u7edc\u8fde\u901a\u6027 \uff1a ping <\u76ee\u6807IP\u6216\u57df\u540d> \uff082\uff09\u7aef\u53e3\u7ba1\u7406 \u67e5\u770b\u76d1\u542c\u7aef\u53e3 \uff1a ss -tuln \u68c0\u67e5\u7aef\u53e3\u5360\u7528 \uff1a lsof -i :<\u7aef\u53e3\u53f7> 6. \u8fdb\u7a0b\u7ba1\u7406 \uff081\uff09\u67e5\u770b\u8fdb\u7a0b \u67e5\u770b\u5f53\u524d\u8fd0\u884c\u7684\u8fdb\u7a0b \uff1a ps aux \u5b9e\u65f6\u67e5\u770b\u8fdb\u7a0b \uff1a top \uff082\uff09\u7ba1\u7406\u8fdb\u7a0b \u6740\u6b7b\u8fdb\u7a0b \uff1a kill <\u8fdb\u7a0bID> \u540e\u53f0\u8fd0\u884c\u8fdb\u7a0b \uff1a command & 7. \u65e5\u5fd7\u7ba1\u7406 \u7cfb\u7edf\u65e5\u5fd7\u6587\u4ef6 \uff1a \u7cfb\u7edf\u65e5\u5fd7\u901a\u5e38\u5b58\u50a8\u5728 log \u76ee\u5f55\u4e0b\u3002 \u67e5\u770b\u65e5\u5fd7 \uff1a tail -f /var/log/syslog 8. Shell \u811a\u672c \uff081\uff09\u811a\u672c\u57fa\u7840 \u521b\u5efa\u811a\u672c\u6587\u4ef6 \uff1a nano script.sh \u811a\u672c\u5185\u5bb9\u793a\u4f8b \uff1a #!/bin/bash echo \"Hello, Linux!\" \u8fd0\u884c\u811a\u672c \uff1a bash script.sh \uff082\uff09\u53d8\u91cf\u548c\u6761\u4ef6 \u5b9a\u4e49\u53d8\u91cf \uff1a name = \"Linux\" echo \"Hello, $name !\" \u6761\u4ef6\u5224\u65ad \uff1a if [ -f file.txt ] ; then echo \"File exists\" fi 9. \u5e38\u89c1 Linux \u53d1\u884c\u7248 Ubuntu \uff1a\u9002\u5408\u684c\u9762\u548c\u670d\u52a1\u5668\u4f7f\u7528\uff0c\u7528\u6237\u53cb\u597d\u3002 CentOS \uff1a\u7a33\u5b9a\u6027\u9ad8\uff0c\u5e38\u7528\u4e8e\u4f01\u4e1a\u670d\u52a1\u5668\u3002 Debian \uff1a\u793e\u533a\u9a71\u52a8\uff0c\u7a33\u5b9a\u6027\u5f3a\u3002 Arch Linux \uff1a\u6eda\u52a8\u66f4\u65b0\uff0c\u9002\u5408\u9ad8\u7ea7\u7528\u6237\u3002 10. Linux \u7684\u5e94\u7528\u573a\u666f \u670d\u52a1\u5668 \uff1aWeb \u670d\u52a1\u5668\u3001\u6570\u636e\u5e93\u670d\u52a1\u5668\u3001\u6587\u4ef6\u670d\u52a1\u5668\u7b49\u3002 \u5f00\u53d1\u73af\u5883 \uff1a\u7f16\u7a0b\u3001\u6d4b\u8bd5\u3001\u90e8\u7f72\u3002 \u5d4c\u5165\u5f0f\u8bbe\u5907 \uff1a\u8def\u7531\u5668\u3001\u667a\u80fd\u5bb6\u5c45\u8bbe\u5907\u7b49\u3002 \u4e91\u8ba1\u7b97 \uff1a\u5927\u591a\u6570\u4e91\u670d\u52a1\u5546\u4f7f\u7528 Linux \u4f5c\u4e3a\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\u3002 \u603b\u7ed3 Linux \u6d89\u53ca\u7684\u77e5\u8bc6\u70b9\u975e\u5e38\u5e7f\u6cdb\uff0c\u4ece\u57fa\u7840\u7684\u6587\u4ef6\u7ba1\u7406\u3001\u7528\u6237\u6743\u9650\uff0c\u5230\u9ad8\u7ea7\u7684\u7f51\u7edc\u7ba1\u7406\u3001\u8fdb\u7a0b\u63a7\u5236\uff0c\u518d\u5230 Shell \u811a\u672c\u548c\u7cfb\u7edf\u65e5\u5fd7\u7ba1\u7406\u3002\u638c\u63e1\u8fd9\u4e9b\u77e5\u8bc6\u53ef\u4ee5\u5e2e\u52a9\u4f60\u9ad8\u6548\u5730\u4f7f\u7528\u548c\u7ba1\u7406 Linux \u7cfb\u7edf\u3002","title":"\u57fa\u7840\u77e5\u8bc6"},{"location":"Linux/basics/#linux","text":"Linux \u662f\u4e00\u79cd\u5f00\u6e90\u7684\u7c7b Unix \u64cd\u4f5c\u7cfb\u7edf\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u670d\u52a1\u5668\u3001\u5d4c\u5165\u5f0f\u8bbe\u5907\u548c\u5f00\u53d1\u73af\u5883\u3002\u4ee5\u4e0b\u662f Linux \u7684\u4e3b\u8981\u77e5\u8bc6\u70b9\u5206\u7c7b\u548c\u7b80\u4ecb\uff1a","title":"Linux \u7684\u57fa\u7840\u77e5\u8bc6\u6982\u89c8"},{"location":"Linux/basics/#1-linux","text":"","title":"1. Linux \u57fa\u7840\u6982\u5ff5"},{"location":"Linux/basics/#1linux","text":"\u5185\u6838\uff08Kernel\uff09 \uff1a \u64cd\u4f5c\u7cfb\u7edf\u7684\u6838\u5fc3\uff0c\u8d1f\u8d23\u786c\u4ef6\u7ba1\u7406\u3001\u8fdb\u7a0b\u8c03\u5ea6\u3001\u5185\u5b58\u7ba1\u7406\u7b49\u3002 Shell \uff1a \u7528\u6237\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4ea4\u4e92\u7684\u547d\u4ee4\u884c\u63a5\u53e3\uff0c\u5982 Bash\u3001Zsh\u3002 \u6587\u4ef6\u7cfb\u7edf \uff1a Linux \u4f7f\u7528\u5206\u5c42\u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u6839\u76ee\u5f55\u4e3a / \uff0c\u5e38\u89c1\u76ee\u5f55\u5305\u62ec home\u3001etc\u3001var \u7b49\u3002","title":"\uff081\uff09Linux \u7684\u7ec4\u6210"},{"location":"Linux/basics/#2linux","text":"\u5f00\u6e90 \uff1a\u6e90\u4ee3\u7801\u516c\u5f00\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u4fee\u6539\u548c\u5206\u53d1\u3002 \u591a\u7528\u6237\u3001\u591a\u4efb\u52a1 \uff1a\u652f\u6301\u591a\u4e2a\u7528\u6237\u540c\u65f6\u767b\u5f55\u548c\u8fd0\u884c\u591a\u4e2a\u4efb\u52a1\u3002 \u5b89\u5168\u6027 \uff1a\u6743\u9650\u7ba1\u7406\u4e25\u683c\uff0c\u652f\u6301\u7528\u6237\u548c\u7ec4\u7684\u8bbf\u95ee\u63a7\u5236\u3002","title":"\uff082\uff09Linux \u7684\u7279\u70b9"},{"location":"Linux/basics/#2","text":"","title":"2. \u6587\u4ef6\u548c\u76ee\u5f55\u7ba1\u7406"},{"location":"Linux/basics/#1","text":"\u67e5\u770b\u76ee\u5f55\u5185\u5bb9 \uff1a ls \u5207\u6362\u76ee\u5f55 \uff1a cd <\u76ee\u5f55\u8def\u5f84> \u521b\u5efa\u6587\u4ef6\u548c\u76ee\u5f55 \uff1a touch <\u6587\u4ef6\u540d> # \u521b\u5efa\u7a7a\u6587\u4ef6 mkdir <\u76ee\u5f55\u540d> # \u521b\u5efa\u76ee\u5f55 \u5220\u9664\u6587\u4ef6\u548c\u76ee\u5f55 \uff1a rm <\u6587\u4ef6\u540d> # \u5220\u9664\u6587\u4ef6 rm -r <\u76ee\u5f55\u540d> # \u5220\u9664\u76ee\u5f55 \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 \uff1a cat <\u6587\u4ef6\u540d> # \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 less <\u6587\u4ef6\u540d> # \u5206\u9875\u67e5\u770b\u6587\u4ef6\u5185\u5bb9","title":"\uff081\uff09\u5e38\u7528\u547d\u4ee4"},{"location":"Linux/basics/#2_1","text":"\u67e5\u770b\u6587\u4ef6\u6743\u9650 \uff1a ls -l \u4fee\u6539\u6587\u4ef6\u6743\u9650 \uff1a chmod 755 <\u6587\u4ef6\u540d> \u4fee\u6539\u6587\u4ef6\u6240\u6709\u8005 \uff1a chown <\u7528\u6237>:<\u7ec4> <\u6587\u4ef6\u540d>","title":"\uff082\uff09\u6587\u4ef6\u6743\u9650"},{"location":"Linux/basics/#3","text":"","title":"3. \u7528\u6237\u548c\u6743\u9650\u7ba1\u7406"},{"location":"Linux/basics/#1_1","text":"\u6dfb\u52a0\u7528\u6237 \uff1a useradd <\u7528\u6237\u540d> \u5220\u9664\u7528\u6237 \uff1a userdel <\u7528\u6237\u540d> \u5207\u6362\u7528\u6237 \uff1a su <\u7528\u6237\u540d>","title":"\uff081\uff09\u7528\u6237\u7ba1\u7406"},{"location":"Linux/basics/#2_2","text":"\u6743\u9650\u8868\u793a \uff1a \u6587\u4ef6\u6743\u9650\u5206\u4e3a\u4e09\u90e8\u5206\uff1a\u7528\u6237\uff08 u \uff09\u3001\u7ec4\uff08 g \uff09\u3001\u5176\u4ed6\u4eba\uff08 o \uff09\u3002 \u6743\u9650\u5305\u62ec\uff1a\u8bfb\uff08 r \uff09\u3001\u5199\uff08 w \uff09\u3001\u6267\u884c\uff08 x \uff09\u3002 \u4fee\u6539\u6743\u9650 \uff1a chmod u+x <\u6587\u4ef6\u540d> # \u7ed9\u7528\u6237\u6dfb\u52a0\u6267\u884c\u6743\u9650","title":"\uff082\uff09\u6743\u9650\u7ba1\u7406"},{"location":"Linux/basics/#4","text":"","title":"4. \u8f6f\u4ef6\u5305\u7ba1\u7406"},{"location":"Linux/basics/#1_2","text":"Debian \u7cfb\uff08\u5982 Ubuntu\uff09 \uff1a \u4f7f\u7528 apt \u6216 dpkg \u3002 sudo apt update sudo apt install <\u8f6f\u4ef6\u5305\u540d> Red Hat \u7cfb\uff08\u5982 CentOS\uff09 \uff1a \u4f7f\u7528 yum \u6216 dnf \u3002 sudo yum install <\u8f6f\u4ef6\u5305\u540d>","title":"\uff081\uff09\u5e38\u89c1\u5305\u7ba1\u7406\u5de5\u5177"},{"location":"Linux/basics/#2_3","text":"\u4e0b\u8f7d\u6e90\u7801\u5305\uff0c\u89e3\u538b\u540e\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a ./configure make sudo make install","title":"\uff082\uff09\u6e90\u7801\u5b89\u88c5"},{"location":"Linux/basics/#5","text":"","title":"5. \u7f51\u7edc\u7ba1\u7406"},{"location":"Linux/basics/#1_3","text":"\u67e5\u770b IP \u5730\u5740 \uff1a ip addr show \u6d4b\u8bd5\u7f51\u7edc\u8fde\u901a\u6027 \uff1a ping <\u76ee\u6807IP\u6216\u57df\u540d>","title":"\uff081\uff09\u67e5\u770b\u7f51\u7edc\u72b6\u6001"},{"location":"Linux/basics/#2_4","text":"\u67e5\u770b\u76d1\u542c\u7aef\u53e3 \uff1a ss -tuln \u68c0\u67e5\u7aef\u53e3\u5360\u7528 \uff1a lsof -i :<\u7aef\u53e3\u53f7>","title":"\uff082\uff09\u7aef\u53e3\u7ba1\u7406"},{"location":"Linux/basics/#6","text":"","title":"6. \u8fdb\u7a0b\u7ba1\u7406"},{"location":"Linux/basics/#1_4","text":"\u67e5\u770b\u5f53\u524d\u8fd0\u884c\u7684\u8fdb\u7a0b \uff1a ps aux \u5b9e\u65f6\u67e5\u770b\u8fdb\u7a0b \uff1a top","title":"\uff081\uff09\u67e5\u770b\u8fdb\u7a0b"},{"location":"Linux/basics/#2_5","text":"\u6740\u6b7b\u8fdb\u7a0b \uff1a kill <\u8fdb\u7a0bID> \u540e\u53f0\u8fd0\u884c\u8fdb\u7a0b \uff1a command &","title":"\uff082\uff09\u7ba1\u7406\u8fdb\u7a0b"},{"location":"Linux/basics/#7","text":"\u7cfb\u7edf\u65e5\u5fd7\u6587\u4ef6 \uff1a \u7cfb\u7edf\u65e5\u5fd7\u901a\u5e38\u5b58\u50a8\u5728 log \u76ee\u5f55\u4e0b\u3002 \u67e5\u770b\u65e5\u5fd7 \uff1a tail -f /var/log/syslog","title":"7. \u65e5\u5fd7\u7ba1\u7406"},{"location":"Linux/basics/#8-shell","text":"","title":"8. Shell \u811a\u672c"},{"location":"Linux/basics/#1_5","text":"\u521b\u5efa\u811a\u672c\u6587\u4ef6 \uff1a nano script.sh \u811a\u672c\u5185\u5bb9\u793a\u4f8b \uff1a #!/bin/bash echo \"Hello, Linux!\" \u8fd0\u884c\u811a\u672c \uff1a bash script.sh","title":"\uff081\uff09\u811a\u672c\u57fa\u7840"},{"location":"Linux/basics/#2_6","text":"\u5b9a\u4e49\u53d8\u91cf \uff1a name = \"Linux\" echo \"Hello, $name !\" \u6761\u4ef6\u5224\u65ad \uff1a if [ -f file.txt ] ; then echo \"File exists\" fi","title":"\uff082\uff09\u53d8\u91cf\u548c\u6761\u4ef6"},{"location":"Linux/basics/#9-linux","text":"Ubuntu \uff1a\u9002\u5408\u684c\u9762\u548c\u670d\u52a1\u5668\u4f7f\u7528\uff0c\u7528\u6237\u53cb\u597d\u3002 CentOS \uff1a\u7a33\u5b9a\u6027\u9ad8\uff0c\u5e38\u7528\u4e8e\u4f01\u4e1a\u670d\u52a1\u5668\u3002 Debian \uff1a\u793e\u533a\u9a71\u52a8\uff0c\u7a33\u5b9a\u6027\u5f3a\u3002 Arch Linux \uff1a\u6eda\u52a8\u66f4\u65b0\uff0c\u9002\u5408\u9ad8\u7ea7\u7528\u6237\u3002","title":"9. \u5e38\u89c1 Linux \u53d1\u884c\u7248"},{"location":"Linux/basics/#10-linux","text":"\u670d\u52a1\u5668 \uff1aWeb \u670d\u52a1\u5668\u3001\u6570\u636e\u5e93\u670d\u52a1\u5668\u3001\u6587\u4ef6\u670d\u52a1\u5668\u7b49\u3002 \u5f00\u53d1\u73af\u5883 \uff1a\u7f16\u7a0b\u3001\u6d4b\u8bd5\u3001\u90e8\u7f72\u3002 \u5d4c\u5165\u5f0f\u8bbe\u5907 \uff1a\u8def\u7531\u5668\u3001\u667a\u80fd\u5bb6\u5c45\u8bbe\u5907\u7b49\u3002 \u4e91\u8ba1\u7b97 \uff1a\u5927\u591a\u6570\u4e91\u670d\u52a1\u5546\u4f7f\u7528 Linux \u4f5c\u4e3a\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\u3002","title":"10. Linux \u7684\u5e94\u7528\u573a\u666f"},{"location":"Linux/basics/#_1","text":"Linux \u6d89\u53ca\u7684\u77e5\u8bc6\u70b9\u975e\u5e38\u5e7f\u6cdb\uff0c\u4ece\u57fa\u7840\u7684\u6587\u4ef6\u7ba1\u7406\u3001\u7528\u6237\u6743\u9650\uff0c\u5230\u9ad8\u7ea7\u7684\u7f51\u7edc\u7ba1\u7406\u3001\u8fdb\u7a0b\u63a7\u5236\uff0c\u518d\u5230 Shell \u811a\u672c\u548c\u7cfb\u7edf\u65e5\u5fd7\u7ba1\u7406\u3002\u638c\u63e1\u8fd9\u4e9b\u77e5\u8bc6\u53ef\u4ee5\u5e2e\u52a9\u4f60\u9ad8\u6548\u5730\u4f7f\u7528\u548c\u7ba1\u7406 Linux \u7cfb\u7edf\u3002","title":"\u603b\u7ed3"},{"location":"Linux/mkdocs/","text":"\u7b80\u5355\u4ecb\u7ecd MkDocs MkDocs \u662f\u4e00\u4e2a\u57fa\u4e8e Python \u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u4e13\u6ce8\u4e8e\u6784\u5efa\u6587\u6863\u7c7b\u7f51\u7ad9\u3002\u5b83\u4f7f\u7528\u7b80\u5355\u7684 Markdown \u6587\u4ef6\u4f5c\u4e3a\u5185\u5bb9\u6765\u6e90\uff0c\u5e76\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u751f\u6210\u7f8e\u89c2\u7684\u9759\u6001\u7f51\u7ad9\u3002 \u7279\u70b9 \u7b80\u5355\u6613\u7528 \uff1a \u4f7f\u7528 Markdown \u7f16\u5199\u6587\u6863\uff0c\u8bed\u6cd5\u7b80\u5355\u3002 \u914d\u7f6e\u6587\u4ef6\uff08 mkdocs.yml \uff09\u7ed3\u6784\u6e05\u6670\uff0c\u6613\u4e8e\u7ba1\u7406\u3002 \u5feb\u901f\u9884\u89c8 \uff1a \u63d0\u4f9b\u672c\u5730\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u5b9e\u65f6\u9884\u89c8\u6587\u6863\u4fee\u6539\u3002 \u591a\u79cd\u4e3b\u9898 \uff1a \u5185\u7f6e\u591a\u79cd\u4e3b\u9898\uff0c\u652f\u6301 Material Design \u7b49\u6d41\u884c\u4e3b\u9898\u3002 \u6613\u4e8e\u90e8\u7f72 \uff1a \u652f\u6301\u5c06\u751f\u6210\u7684\u7f51\u7ad9\u90e8\u7f72\u5230 GitHub Pages\u3001Netlify \u7b49\u5e73\u53f0\u3002 \u5de5\u4f5c\u6d41\u7a0b \u5b89\u88c5 MkDocs \uff1a pip install mkdocs \u521b\u5efa\u9879\u76ee \uff1a mkdocs new my_project cd my_project \u8fd0\u884c\u672c\u5730\u670d\u52a1\u5668 \uff1a mkdocs serve \u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:8000 \u3002 \u751f\u6210\u9759\u6001\u7f51\u7ad9 \uff1a mkdocs build \u751f\u6210\u7684\u9759\u6001\u6587\u4ef6\u4f1a\u5b58\u50a8\u5728 site/ \u76ee\u5f55\u4e2d\u3002 \u90e8\u7f72\u5230 GitHub Pages \uff1a mkdocs gh-deploy \u5e94\u7528\u573a\u666f \u6280\u672f\u6587\u6863 \u4e2a\u4eba\u535a\u5ba2 \u9879\u76ee Wiki \u6559\u7a0b\u548c\u6307\u5357 \u603b\u7ed3 MkDocs \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u3001\u9ad8\u6548\u7684\u6587\u6863\u751f\u6210\u5de5\u5177\uff0c\u9002\u5408\u9700\u8981\u5feb\u901f\u6784\u5efa\u548c\u90e8\u7f72\u6587\u6863\u7c7b\u7f51\u7ad9\u7684\u573a\u666f\u3002","title":"mkdocs\u642d\u5efa\u535a\u5ba2"},{"location":"Linux/mkdocs/#mkdocs","text":"MkDocs \u662f\u4e00\u4e2a\u57fa\u4e8e Python \u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u4e13\u6ce8\u4e8e\u6784\u5efa\u6587\u6863\u7c7b\u7f51\u7ad9\u3002\u5b83\u4f7f\u7528\u7b80\u5355\u7684 Markdown \u6587\u4ef6\u4f5c\u4e3a\u5185\u5bb9\u6765\u6e90\uff0c\u5e76\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u751f\u6210\u7f8e\u89c2\u7684\u9759\u6001\u7f51\u7ad9\u3002","title":"\u7b80\u5355\u4ecb\u7ecd MkDocs"},{"location":"Linux/mkdocs/#_1","text":"\u7b80\u5355\u6613\u7528 \uff1a \u4f7f\u7528 Markdown \u7f16\u5199\u6587\u6863\uff0c\u8bed\u6cd5\u7b80\u5355\u3002 \u914d\u7f6e\u6587\u4ef6\uff08 mkdocs.yml \uff09\u7ed3\u6784\u6e05\u6670\uff0c\u6613\u4e8e\u7ba1\u7406\u3002 \u5feb\u901f\u9884\u89c8 \uff1a \u63d0\u4f9b\u672c\u5730\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u5b9e\u65f6\u9884\u89c8\u6587\u6863\u4fee\u6539\u3002 \u591a\u79cd\u4e3b\u9898 \uff1a \u5185\u7f6e\u591a\u79cd\u4e3b\u9898\uff0c\u652f\u6301 Material Design \u7b49\u6d41\u884c\u4e3b\u9898\u3002 \u6613\u4e8e\u90e8\u7f72 \uff1a \u652f\u6301\u5c06\u751f\u6210\u7684\u7f51\u7ad9\u90e8\u7f72\u5230 GitHub Pages\u3001Netlify \u7b49\u5e73\u53f0\u3002","title":"\u7279\u70b9"},{"location":"Linux/mkdocs/#_2","text":"\u5b89\u88c5 MkDocs \uff1a pip install mkdocs \u521b\u5efa\u9879\u76ee \uff1a mkdocs new my_project cd my_project \u8fd0\u884c\u672c\u5730\u670d\u52a1\u5668 \uff1a mkdocs serve \u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:8000 \u3002 \u751f\u6210\u9759\u6001\u7f51\u7ad9 \uff1a mkdocs build \u751f\u6210\u7684\u9759\u6001\u6587\u4ef6\u4f1a\u5b58\u50a8\u5728 site/ \u76ee\u5f55\u4e2d\u3002 \u90e8\u7f72\u5230 GitHub Pages \uff1a mkdocs gh-deploy","title":"\u5de5\u4f5c\u6d41\u7a0b"},{"location":"Linux/mkdocs/#_3","text":"\u6280\u672f\u6587\u6863 \u4e2a\u4eba\u535a\u5ba2 \u9879\u76ee Wiki \u6559\u7a0b\u548c\u6307\u5357","title":"\u5e94\u7528\u573a\u666f"},{"location":"Linux/mkdocs/#_4","text":"MkDocs \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u3001\u9ad8\u6548\u7684\u6587\u6863\u751f\u6210\u5de5\u5177\uff0c\u9002\u5408\u9700\u8981\u5feb\u901f\u6784\u5efa\u548c\u90e8\u7f72\u6587\u6863\u7c7b\u7f51\u7ad9\u7684\u573a\u666f\u3002","title":"\u603b\u7ed3"},{"location":"Linux/network/","text":"1. \u67e5\u8be2\u7f51\u7edc\u72b6\u6001\u7684\u547d\u4ee4 \uff081\uff09 ifconfig \uff08\u5df2\u88ab ip \u66ff\u4ee3\uff09 \u529f\u80fd \uff1a\u663e\u793a\u7f51\u7edc\u63a5\u53e3\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u7528\u6cd5 \uff1a ifconfig \u8f93\u51fa \uff1a\u663e\u793a\u7f51\u7edc\u63a5\u53e3\u7684 IP \u5730\u5740\u3001\u5b50\u7f51\u63a9\u7801\u3001\u5e7f\u64ad\u5730\u5740\u7b49\u3002 \uff082\uff09 ip \u547d\u4ee4 \u529f\u80fd \uff1a\u66ff\u4ee3 ifconfig \uff0c\u7528\u4e8e\u67e5\u770b\u548c\u7ba1\u7406\u7f51\u7edc\u63a5\u53e3\u3002 \u7528\u6cd5 \uff1a ip addr show \u8f93\u51fa \uff1a\u663e\u793a\u6240\u6709\u7f51\u7edc\u63a5\u53e3\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5305\u62ec IP \u5730\u5740\u3001MAC \u5730\u5740\u7b49\u3002 \uff083\uff09 ping \u529f\u80fd \uff1a\u6d4b\u8bd5\u4e0e\u76ee\u6807\u4e3b\u673a\u7684\u8fde\u901a\u6027\u3002 \u7528\u6cd5 \uff1a ping <\u76ee\u6807IP\u6216\u57df\u540d> \u793a\u4f8b \uff1a ping google.com \uff084\uff09 traceroute \u529f\u80fd \uff1a\u663e\u793a\u6570\u636e\u5305\u5230\u76ee\u6807\u4e3b\u673a\u7684\u8def\u7531\u8def\u5f84\u3002 \u7528\u6cd5 \uff1a traceroute <\u76ee\u6807IP\u6216\u57df\u540d> \u793a\u4f8b \uff1a traceroute google.com \uff085\uff09 netstat \uff08\u5df2\u88ab ss \u66ff\u4ee3\uff09 \u529f\u80fd \uff1a\u663e\u793a\u7f51\u7edc\u8fde\u63a5\u3001\u8def\u7531\u8868\u3001\u63a5\u53e3\u7edf\u8ba1\u7b49\u3002 \u7528\u6cd5 \uff1a netstat -an \u5e38\u7528\u9009\u9879 \uff1a -a \uff1a\u663e\u793a\u6240\u6709\u8fde\u63a5\u3002 -n \uff1a\u4ee5\u6570\u5b57\u5f62\u5f0f\u663e\u793a\u5730\u5740\u548c\u7aef\u53e3\u3002 \uff086\uff09 ss \u547d\u4ee4 \u529f\u80fd \uff1a\u66ff\u4ee3 netstat \uff0c\u7528\u4e8e\u663e\u793a\u7f51\u7edc\u8fde\u63a5\u4fe1\u606f\u3002 \u7528\u6cd5 \uff1a ss -tuln \u5e38\u7528\u9009\u9879 \uff1a -t \uff1a\u663e\u793a TCP \u8fde\u63a5\u3002 -u \uff1a\u663e\u793a UDP \u8fde\u63a5\u3002 -l \uff1a\u663e\u793a\u76d1\u542c\u7684\u7aef\u53e3\u3002 -n \uff1a\u4ee5\u6570\u5b57\u5f62\u5f0f\u663e\u793a\u5730\u5740\u548c\u7aef\u53e3\u3002 2. \u67e5\u8be2\u7aef\u53e3\u4f7f\u7528\u60c5\u51b5\u7684\u547d\u4ee4 \uff081\uff09 lsof \u529f\u80fd \uff1a\u5217\u51fa\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u5305\u62ec\u7f51\u7edc\u7aef\u53e3\u3002 \u7528\u6cd5 \uff1a lsof -i :<\u7aef\u53e3\u53f7> \u793a\u4f8b \uff1a lsof -i :80 \u8f93\u51fa \uff1a\u663e\u793a\u4f7f\u7528\u6307\u5b9a\u7aef\u53e3\u7684\u8fdb\u7a0b\u4fe1\u606f\u3002 \uff082\uff09 netstat \u7528\u6cd5 \uff1a netstat -tuln \u8f93\u51fa \uff1a\u663e\u793a\u6240\u6709\u76d1\u542c\u7684\u7aef\u53e3\u548c\u8fde\u63a5\u3002 \uff083\uff09 ss \u7528\u6cd5 \uff1a ss -tuln \u8f93\u51fa \uff1a\u663e\u793a\u6240\u6709\u76d1\u542c\u7684\u7aef\u53e3\u548c\u8fde\u63a5\u3002 \uff084\uff09 nmap \u529f\u80fd \uff1a\u626b\u63cf\u4e3b\u673a\u7684\u5f00\u653e\u7aef\u53e3\u3002 \u7528\u6cd5 \uff1a nmap <\u76ee\u6807IP> \u793a\u4f8b \uff1a nmap 192 .168.1.1 3. \u8865\u5145\u7684\u7f51\u7edc\u77e5\u8bc6 \uff081\uff09\u7f51\u7edc\u63a5\u53e3 lo \uff1a\u672c\u5730\u56de\u73af\u63a5\u53e3\uff0c\u901a\u5e38\u7528\u4e8e\u6d4b\u8bd5\u3002 eth0 \uff1a\u6709\u7ebf\u7f51\u7edc\u63a5\u53e3\u3002 wlan0 \uff1a\u65e0\u7ebf\u7f51\u7edc\u63a5\u53e3\u3002 \uff082\uff09\u5e38\u89c1\u7aef\u53e3\u53f7 80 \uff1aHTTP \u670d\u52a1\u3002 443 \uff1aHTTPS \u670d\u52a1\u3002 22 \uff1aSSH \u670d\u52a1\u3002 3306 \uff1aMySQL \u6570\u636e\u5e93\u670d\u52a1\u3002 53 \uff1aDNS \u670d\u52a1\u3002 \uff083\uff09\u7f51\u7edc\u6392\u9519\u601d\u8def \u68c0\u67e5\u7f51\u7edc\u8fde\u63a5 \uff1a \u4f7f\u7528 ping \u6d4b\u8bd5\u76ee\u6807\u4e3b\u673a\u662f\u5426\u53ef\u8fbe\u3002 \u68c0\u67e5\u8def\u7531 \uff1a \u4f7f\u7528 traceroute \u67e5\u770b\u6570\u636e\u5305\u7684\u8def\u7531\u8def\u5f84\u3002 \u68c0\u67e5\u7aef\u53e3\u72b6\u6001 \uff1a \u4f7f\u7528 ss \u6216 lsof \u67e5\u770b\u7aef\u53e3\u662f\u5426\u88ab\u5360\u7528\u3002 \u68c0\u67e5\u9632\u706b\u5899 \uff1a \u4f7f\u7528 iptables \u6216 firewalld \u67e5\u770b\u9632\u706b\u5899\u89c4\u5219\u3002 \uff084\uff09\u7f51\u7edc\u5de5\u5177 curl \uff1a\u7528\u4e8e\u53d1\u9001 HTTP \u8bf7\u6c42\u3002 curl http://example.com wget \uff1a\u7528\u4e8e\u4e0b\u8f7d\u6587\u4ef6\u3002 wget http://example.com/file.zip \u603b\u7ed3 \u67e5\u8be2\u7f51\u7edc\u72b6\u6001 \uff1a ifconfig \u3001 ip \u3001 ping \u3001 traceroute \u3001 ss \u3002 \u67e5\u8be2\u7aef\u53e3\u4f7f\u7528\u60c5\u51b5 \uff1a lsof \u3001 netstat \u3001 ss \u3001 nmap \u3002 \u7f51\u7edc\u6392\u9519 \uff1a\u7ed3\u5408 ping \u3001 traceroute \u3001 ss \u548c\u9632\u706b\u5899\u5de5\u5177\u8fdb\u884c\u6392\u67e5\u3002 \u901a\u8fc7\u8fd9\u4e9b\u547d\u4ee4\u548c\u77e5\u8bc6\uff0c\u4f60\u53ef\u4ee5\u9ad8\u6548\u5730\u7ba1\u7406\u548c\u6392\u67e5 Linux \u7cfb\u7edf\u4e2d\u7684\u7f51\u7edc\u95ee\u9898\u3002","title":"\u7f51\u7edc\u77e5\u8bc6"},{"location":"Linux/network/#1","text":"","title":"1. \u67e5\u8be2\u7f51\u7edc\u72b6\u6001\u7684\u547d\u4ee4"},{"location":"Linux/network/#1ifconfig-ip","text":"\u529f\u80fd \uff1a\u663e\u793a\u7f51\u7edc\u63a5\u53e3\u7684\u914d\u7f6e\u4fe1\u606f\u3002 \u7528\u6cd5 \uff1a ifconfig \u8f93\u51fa \uff1a\u663e\u793a\u7f51\u7edc\u63a5\u53e3\u7684 IP \u5730\u5740\u3001\u5b50\u7f51\u63a9\u7801\u3001\u5e7f\u64ad\u5730\u5740\u7b49\u3002","title":"\uff081\uff09ifconfig\uff08\u5df2\u88ab ip \u66ff\u4ee3\uff09"},{"location":"Linux/network/#2ip","text":"\u529f\u80fd \uff1a\u66ff\u4ee3 ifconfig \uff0c\u7528\u4e8e\u67e5\u770b\u548c\u7ba1\u7406\u7f51\u7edc\u63a5\u53e3\u3002 \u7528\u6cd5 \uff1a ip addr show \u8f93\u51fa \uff1a\u663e\u793a\u6240\u6709\u7f51\u7edc\u63a5\u53e3\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5305\u62ec IP \u5730\u5740\u3001MAC \u5730\u5740\u7b49\u3002","title":"\uff082\uff09ip \u547d\u4ee4"},{"location":"Linux/network/#3ping","text":"\u529f\u80fd \uff1a\u6d4b\u8bd5\u4e0e\u76ee\u6807\u4e3b\u673a\u7684\u8fde\u901a\u6027\u3002 \u7528\u6cd5 \uff1a ping <\u76ee\u6807IP\u6216\u57df\u540d> \u793a\u4f8b \uff1a ping google.com","title":"\uff083\uff09ping"},{"location":"Linux/network/#4traceroute","text":"\u529f\u80fd \uff1a\u663e\u793a\u6570\u636e\u5305\u5230\u76ee\u6807\u4e3b\u673a\u7684\u8def\u7531\u8def\u5f84\u3002 \u7528\u6cd5 \uff1a traceroute <\u76ee\u6807IP\u6216\u57df\u540d> \u793a\u4f8b \uff1a traceroute google.com","title":"\uff084\uff09traceroute"},{"location":"Linux/network/#5netstat-ss","text":"\u529f\u80fd \uff1a\u663e\u793a\u7f51\u7edc\u8fde\u63a5\u3001\u8def\u7531\u8868\u3001\u63a5\u53e3\u7edf\u8ba1\u7b49\u3002 \u7528\u6cd5 \uff1a netstat -an \u5e38\u7528\u9009\u9879 \uff1a -a \uff1a\u663e\u793a\u6240\u6709\u8fde\u63a5\u3002 -n \uff1a\u4ee5\u6570\u5b57\u5f62\u5f0f\u663e\u793a\u5730\u5740\u548c\u7aef\u53e3\u3002","title":"\uff085\uff09netstat\uff08\u5df2\u88ab ss \u66ff\u4ee3\uff09"},{"location":"Linux/network/#6ss","text":"\u529f\u80fd \uff1a\u66ff\u4ee3 netstat \uff0c\u7528\u4e8e\u663e\u793a\u7f51\u7edc\u8fde\u63a5\u4fe1\u606f\u3002 \u7528\u6cd5 \uff1a ss -tuln \u5e38\u7528\u9009\u9879 \uff1a -t \uff1a\u663e\u793a TCP \u8fde\u63a5\u3002 -u \uff1a\u663e\u793a UDP \u8fde\u63a5\u3002 -l \uff1a\u663e\u793a\u76d1\u542c\u7684\u7aef\u53e3\u3002 -n \uff1a\u4ee5\u6570\u5b57\u5f62\u5f0f\u663e\u793a\u5730\u5740\u548c\u7aef\u53e3\u3002","title":"\uff086\uff09ss \u547d\u4ee4"},{"location":"Linux/network/#2","text":"","title":"2. \u67e5\u8be2\u7aef\u53e3\u4f7f\u7528\u60c5\u51b5\u7684\u547d\u4ee4"},{"location":"Linux/network/#1lsof","text":"\u529f\u80fd \uff1a\u5217\u51fa\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u5305\u62ec\u7f51\u7edc\u7aef\u53e3\u3002 \u7528\u6cd5 \uff1a lsof -i :<\u7aef\u53e3\u53f7> \u793a\u4f8b \uff1a lsof -i :80 \u8f93\u51fa \uff1a\u663e\u793a\u4f7f\u7528\u6307\u5b9a\u7aef\u53e3\u7684\u8fdb\u7a0b\u4fe1\u606f\u3002","title":"\uff081\uff09lsof"},{"location":"Linux/network/#2netstat","text":"\u7528\u6cd5 \uff1a netstat -tuln \u8f93\u51fa \uff1a\u663e\u793a\u6240\u6709\u76d1\u542c\u7684\u7aef\u53e3\u548c\u8fde\u63a5\u3002","title":"\uff082\uff09netstat"},{"location":"Linux/network/#3ss","text":"\u7528\u6cd5 \uff1a ss -tuln \u8f93\u51fa \uff1a\u663e\u793a\u6240\u6709\u76d1\u542c\u7684\u7aef\u53e3\u548c\u8fde\u63a5\u3002","title":"\uff083\uff09ss"},{"location":"Linux/network/#4nmap","text":"\u529f\u80fd \uff1a\u626b\u63cf\u4e3b\u673a\u7684\u5f00\u653e\u7aef\u53e3\u3002 \u7528\u6cd5 \uff1a nmap <\u76ee\u6807IP> \u793a\u4f8b \uff1a nmap 192 .168.1.1","title":"\uff084\uff09nmap"},{"location":"Linux/network/#3","text":"","title":"3. \u8865\u5145\u7684\u7f51\u7edc\u77e5\u8bc6"},{"location":"Linux/network/#1_1","text":"lo \uff1a\u672c\u5730\u56de\u73af\u63a5\u53e3\uff0c\u901a\u5e38\u7528\u4e8e\u6d4b\u8bd5\u3002 eth0 \uff1a\u6709\u7ebf\u7f51\u7edc\u63a5\u53e3\u3002 wlan0 \uff1a\u65e0\u7ebf\u7f51\u7edc\u63a5\u53e3\u3002","title":"\uff081\uff09\u7f51\u7edc\u63a5\u53e3"},{"location":"Linux/network/#2_1","text":"80 \uff1aHTTP \u670d\u52a1\u3002 443 \uff1aHTTPS \u670d\u52a1\u3002 22 \uff1aSSH \u670d\u52a1\u3002 3306 \uff1aMySQL \u6570\u636e\u5e93\u670d\u52a1\u3002 53 \uff1aDNS \u670d\u52a1\u3002","title":"\uff082\uff09\u5e38\u89c1\u7aef\u53e3\u53f7"},{"location":"Linux/network/#3_1","text":"\u68c0\u67e5\u7f51\u7edc\u8fde\u63a5 \uff1a \u4f7f\u7528 ping \u6d4b\u8bd5\u76ee\u6807\u4e3b\u673a\u662f\u5426\u53ef\u8fbe\u3002 \u68c0\u67e5\u8def\u7531 \uff1a \u4f7f\u7528 traceroute \u67e5\u770b\u6570\u636e\u5305\u7684\u8def\u7531\u8def\u5f84\u3002 \u68c0\u67e5\u7aef\u53e3\u72b6\u6001 \uff1a \u4f7f\u7528 ss \u6216 lsof \u67e5\u770b\u7aef\u53e3\u662f\u5426\u88ab\u5360\u7528\u3002 \u68c0\u67e5\u9632\u706b\u5899 \uff1a \u4f7f\u7528 iptables \u6216 firewalld \u67e5\u770b\u9632\u706b\u5899\u89c4\u5219\u3002","title":"\uff083\uff09\u7f51\u7edc\u6392\u9519\u601d\u8def"},{"location":"Linux/network/#4","text":"curl \uff1a\u7528\u4e8e\u53d1\u9001 HTTP \u8bf7\u6c42\u3002 curl http://example.com wget \uff1a\u7528\u4e8e\u4e0b\u8f7d\u6587\u4ef6\u3002 wget http://example.com/file.zip","title":"\uff084\uff09\u7f51\u7edc\u5de5\u5177"},{"location":"Linux/network/#_1","text":"\u67e5\u8be2\u7f51\u7edc\u72b6\u6001 \uff1a ifconfig \u3001 ip \u3001 ping \u3001 traceroute \u3001 ss \u3002 \u67e5\u8be2\u7aef\u53e3\u4f7f\u7528\u60c5\u51b5 \uff1a lsof \u3001 netstat \u3001 ss \u3001 nmap \u3002 \u7f51\u7edc\u6392\u9519 \uff1a\u7ed3\u5408 ping \u3001 traceroute \u3001 ss \u548c\u9632\u706b\u5899\u5de5\u5177\u8fdb\u884c\u6392\u67e5\u3002 \u901a\u8fc7\u8fd9\u4e9b\u547d\u4ee4\u548c\u77e5\u8bc6\uff0c\u4f60\u53ef\u4ee5\u9ad8\u6548\u5730\u7ba1\u7406\u548c\u6392\u67e5 Linux \u7cfb\u7edf\u4e2d\u7684\u7f51\u7edc\u95ee\u9898\u3002","title":"\u603b\u7ed3"},{"location":"Linux/process/","text":"Linux\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edfAPI\u5982Linux\u7684fork\u3001exec\u3001wait\u7b49\u6765\u5b9e\u73b0\u8fdb\u7a0b\u7684\u521b\u5efa\u3001\u7ba1\u7406\u548c\u901a\u4fe1\u3002 \u5728 Linux \u4e0b\uff0cC/C++ \u521b\u5efa\u8fdb\u7a0b\u5e76\u6267\u884c\u65b0\u7a0b\u5e8f\uff0c\u5e38\u7528\u7684\u65b9\u5f0f\u662f \u5148\u7528 fork() \u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u518d\u7528 exec \u7cfb\u5217\u51fd\u6570\u5728\u5b50\u8fdb\u7a0b\u4e2d\u6267\u884c\u65b0\u7a0b\u5e8f \u3002 \u5178\u578b\u4ee3\u7801\u793a\u4f8b #include <unistd.h> #include <sys/types.h> #include <sys/wait.h> #include <iostream> using namespace std ; int main () { pid_t pid = fork (); // \u521b\u5efa\u5b50\u8fdb\u7a0b if ( pid == 0 ) { // \u5b50\u8fdb\u7a0b execlp ( \"ls\" , \"ls\" , \"-l\" , NULL ); // \u6267\u884cls -l\u547d\u4ee4 // \u5982\u679cexec\u6267\u884c\u5931\u8d25\uff0c\u624d\u4f1a\u6267\u884c\u4e0b\u9762\u8fd9\u884c perror ( \"exec failed\" ); } else if ( pid > 0 ) { // \u7236\u8fdb\u7a0b wait ( NULL ); // \u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f cout << \"\u5b50\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\" << endl ; } else { // fork\u5931\u8d25 perror ( \"fork failed\" ); } return 0 ; } \u8bf4\u660e fork() \uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u8fdb\u7a0b\uff0c\u7236\u8fdb\u7a0b\u8fd4\u56de\u5b50\u8fdb\u7a0bPID\uff0c\u5b50\u8fdb\u7a0b\u8fd4\u56de0\u3002 execlp() \uff1a\u5728\u5b50\u8fdb\u7a0b\u4e2d\u6267\u884c\u65b0\u7a0b\u5e8f\uff08\u5982 ls -l \uff09\uff0c\u6210\u529f\u540e\u4e0d\u4f1a\u8fd4\u56de\uff0c\u5931\u8d25\u624d\u4f1a\u7ee7\u7eed\u6267\u884c\u540e\u9762\u7684\u4ee3\u7801\u3002 wait(NULL) \uff1a\u7236\u8fdb\u7a0b\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f\u3002 \u5e38\u7528\u7684 exec \u7cfb\u5217\u51fd\u6570\u6709\uff1a - execl \u3001 execlp \u3001 execv \u3001 execvp \u7b49\uff0c\u533a\u522b\u5728\u4e8e\u53c2\u6570\u4f20\u9012\u65b9\u5f0f\u548c\u662f\u5426\u81ea\u52a8\u67e5\u627ePATH\u3002 \u603b\u7ed3\uff1a Linux \u4e0b C/C++ \u521b\u5efa\u8fdb\u7a0b\u5e76\u6267\u884c\u65b0\u7a0b\u5e8f\uff0c\u5e38\u7528 fork() + exec() \uff0c\u7236\u8fdb\u7a0b\u53ef\u7528 wait() \u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f\u3002 \u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff09\u5e38\u89c1\u65b9\u5f0f\u6709\uff1a \u7ba1\u9053\uff08pipe\uff09 \u547d\u540d\u7ba1\u9053\uff08FIFO\uff09 \u4fe1\u53f7\uff08signal\uff09 \u5171\u4eab\u5185\u5b58\uff08shm\uff09 \u6d88\u606f\u961f\u5217\uff08message queue\uff09 \u5957\u63a5\u5b57\uff08socket\uff09 \u4e0b\u9762\u4ee5 \u533f\u540d\u7ba1\u9053 \u548c \u5171\u4eab\u5185\u5b58 \u4e3a\u4f8b\uff0c\u5206\u522b\u7528C++\u4ee3\u7801\u7b80\u5355\u6f14\u793a\uff1a 1. \u533f\u540d\u7ba1\u9053\uff08pipe\uff09 #include <unistd.h> #include <iostream> using namespace std ; int main () { int fd [ 2 ]; pipe ( fd ); // \u521b\u5efa\u7ba1\u9053 pid_t pid = fork (); if ( pid == 0 ) { // \u5b50\u8fdb\u7a0b\uff1a\u5199\u6570\u636e close ( fd [ 0 ]); const char * msg = \"hello from child\" ; write ( fd [ 1 ], msg , 16 ); close ( fd [ 1 ]); } else { // \u7236\u8fdb\u7a0b\uff1a\u8bfb\u6570\u636e close ( fd [ 1 ]); char buf [ 64 ] = { 0 }; read ( fd [ 0 ], buf , 64 ); cout << \"\u7236\u8fdb\u7a0b\u6536\u5230: \" << buf << endl ; close ( fd [ 0 ]); } return 0 ; } 2. \u5171\u4eab\u5185\u5b58\uff08shm\uff09 #include <sys/ipc.h> #include <sys/shm.h> #include <unistd.h> #include <cstring> #include <iostream> using namespace std ; int main () { int shmid = shmget ( IPC_PRIVATE , 64 , IPC_CREAT | 0666 ); // \u521b\u5efa\u5171\u4eab\u5185\u5b58 pid_t pid = fork (); if ( pid == 0 ) { // \u5b50\u8fdb\u7a0b\uff1a\u5199\u6570\u636e char * shmaddr = ( char * ) shmat ( shmid , nullptr , 0 ); strcpy ( shmaddr , \"hello from child\" ); shmdt ( shmaddr ); } else { // \u7236\u8fdb\u7a0b\uff1a\u8bfb\u6570\u636e sleep ( 1 ); // \u7b49\u5f85\u5b50\u8fdb\u7a0b\u5199\u5165 char * shmaddr = ( char * ) shmat ( shmid , nullptr , 0 ); cout << \"\u7236\u8fdb\u7a0b\u6536\u5230: \" << shmaddr << endl ; shmdt ( shmaddr ); shmctl ( shmid , IPC_RMID , nullptr ); // \u5220\u9664\u5171\u4eab\u5185\u5b58 } return 0 ; } \u603b\u7ed3\uff1a \u5e38\u89c1IPC\u65b9\u5f0f\u6709\u7ba1\u9053\u3001\u5171\u4eab\u5185\u5b58\u3001\u6d88\u606f\u961f\u5217\u3001\u4fe1\u53f7\u3001\u5957\u63a5\u5b57\u7b49\u3002\u5b9e\u9645\u5f00\u53d1\u4e2d\u53ef\u6839\u636e\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u901a\u4fe1\u65b9\u5f0f\u3002 \u4fe1\u53f7\uff08signal\uff09 \u662f Linux/Unix \u7cfb\u7edf\u4e2d\u4e00\u79cd\u7528\u4e8e \u8fdb\u7a0b\u95f4\u901a\u4fe1\u548c\u8fdb\u7a0b\u63a7\u5236 \u7684\u673a\u5236\uff0c\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u5f02\u6b65\u901a\u77e5\u3002\u64cd\u4f5c\u7cfb\u7edf\u6216\u5176\u4ed6\u8fdb\u7a0b\u53ef\u4ee5\u5411\u76ee\u6807\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7\uff0c\u901a\u77e5\u5b83\u53d1\u751f\u4e86\u67d0\u79cd\u4e8b\u4ef6\uff08\u5982\u7ec8\u6b62\u3001\u6682\u505c\u3001\u7ee7\u7eed\u3001\u5b9a\u65f6\u5668\u5230\u671f\u7b49\uff09\u3002 \u5e38\u89c1\u4fe1\u53f7\u4e3e\u4f8b SIGINT \uff1a\u4e2d\u65ad\u4fe1\u53f7\uff08\u5982\u6309Ctrl+C\uff09 SIGTERM \uff1a\u7ec8\u6b62\u4fe1\u53f7\uff08\u8bf7\u6c42\u7a0b\u5e8f\u6b63\u5e38\u7ec8\u6b62\uff09 SIGKILL \uff1a\u5f3a\u5236\u7ec8\u6b62\u4fe1\u53f7\uff08\u65e0\u6cd5\u88ab\u6355\u83b7\u6216\u5ffd\u7565\uff09 SIGSTOP \uff1a\u6682\u505c\u8fdb\u7a0b SIGCONT \uff1a\u7ee7\u7eed\u6267\u884c SIGCHLD \uff1a\u5b50\u8fdb\u7a0b\u72b6\u6001\u6539\u53d8 \u7528\u6cd5\u8bf4\u660e \u8fdb\u7a0b\u53ef\u4ee5\u7528 kill \u547d\u4ee4\u6216 kill() \u51fd\u6570\u5411\u5176\u4ed6\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7\u3002 \u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7\u6ce8\u518c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff08 signal() \u6216 sigaction() \uff09\u54cd\u5e94\u7279\u5b9a\u4fe1\u53f7\u3002 \u7b80\u5355C++\u4ee3\u7801\u793a\u4f8b #include <iostream> #include <csignal> #include <unistd.h> using namespace std ; void handler ( int signum ) { cout << \"\u6536\u5230\u4fe1\u53f7: \" << signum << endl ; exit ( 0 ); } int main () { signal ( SIGINT , handler ); // \u6355\u83b7Ctrl+C while ( true ) { cout << \"\u8fd0\u884c\u4e2d...\" << endl ; sleep ( 1 ); } return 0 ; } \u603b\u7ed3\uff1a \u4fe1\u53f7\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u5f0f\uff0c\u5e38\u7528\u4e8e\u901a\u77e5\u3001\u63a7\u5236\u8fdb\u7a0b\u72b6\u6001\u3001\u5f02\u5e38\u5904\u7406\u7b49\u573a\u666f\u3002 \u5728 Linux \u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u67e5\u770b\u5404\u79cd\u8fdb\u7a0b\u7684\u72b6\u6001\uff1a 1. \u4f7f\u7528 ps \u547d\u4ee4 ps aux \u6216 ps -ef - \u8fd9\u4f1a\u5217\u51fa\u6240\u6709\u8fdb\u7a0b\u53ca\u5176\u72b6\u6001\uff08STAT\u5217\uff09\u3002 \u5e38\u89c1\u72b6\u6001\u7801\uff08STAT\u5217\uff09\uff1a - R\uff1a\u8fd0\u884c\uff08Running\uff09 - S\uff1a\u53ef\u4e2d\u65ad\u7761\u7720\uff08Sleeping\uff09 - D\uff1a\u4e0d\u53ef\u4e2d\u65ad\u7761\u7720\uff08Disk sleep\uff09 - T\uff1a\u505c\u6b62\uff08Stopped\uff09 - Z\uff1a\u50f5\u5c38\uff08Zombie\uff09 2. \u4f7f\u7528 top \u6216 htop top - \u5b9e\u65f6\u663e\u793a\u8fdb\u7a0b\u72b6\u6001\uff0c S \u3001 R \u3001 Z \u7b49\u542b\u4e49\u540c\u4e0a\u3002 3. \u67e5\u770b proc \u76ee\u5f55 \u6bcf\u4e2a\u8fdb\u7a0b\u5728 /proc/[pid]/status \u6587\u4ef6\u4e2d\u6709\u8be6\u7ec6\u72b6\u6001\u4fe1\u606f\uff1a cat /proc/1/status - \u5176\u4e2d State: \u4e00\u884c\u663e\u793a\u8be5\u8fdb\u7a0b\u7684\u72b6\u6001\u3002 \u603b\u7ed3\uff1a - ps \u3001 top \u3001 htop \u7b49\u547d\u4ee4\u90fd\u53ef\u4ee5\u67e5\u770b\u8fdb\u7a0b\u72b6\u6001\u3002 - \u8fdb\u7a0b\u72b6\u6001\u5e38\u89c1\u6709\uff1aR\uff08\u8fd0\u884c\uff09\u3001S\uff08\u7761\u7720\uff09\u3001D\uff08\u4e0d\u53ef\u4e2d\u65ad\uff09\u3001T\uff08\u505c\u6b62\uff09\u3001Z\uff08\u50f5\u5c38\uff09\u7b49\u3002 \u5f15\u5165 \u8fdb\u7a0b \u7684\u539f\u56e0\uff0c\u662f\u4e3a\u4e86\u5b9e\u73b0 \u591a\u9053\u7a0b\u5e8f\u8bbe\u8ba1 \uff0c\u8ba9\u591a\u4e2a\u7a0b\u5e8f\u80fd\u5728\u540c\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u201c\u540c\u65f6\u201d\u8fd0\u884c\uff0c\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\u548c\u7cfb\u7edf\u54cd\u5e94\u901f\u5ea6\u3002\u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002 \u4ec0\u4e48\u662f\u8fdb\u7a0b \u8fdb\u7a0b\uff08Process\uff09 \u662f\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u7684\u5b9e\u4f8b\uff0c\u662f\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u62e5\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\u3001\u6570\u636e\u3001\u4ee3\u7801\u548c\u7cfb\u7edf\u8d44\u6e90\u3002 \u8fdb\u7a0b\u7531\u4ec0\u4e48\u7ec4\u6210 \u7a0b\u5e8f\u4ee3\u7801 \u8fdb\u7a0b\u8981\u6267\u884c\u7684\u6307\u4ee4\uff08\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4ee3\u7801\u6bb5\uff09\u3002 \u6570\u636e\u6bb5 \u5305\u62ec\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf\u3001\u5806\u3001\u6808\u7b49\u3002 \u8fdb\u7a0b\u63a7\u5236\u5757\uff08PCB\uff09 \u64cd\u4f5c\u7cfb\u7edf\u7528\u6765\u7ba1\u7406\u548c\u63cf\u8ff0\u8fdb\u7a0b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5305\u542b\uff1a \u8fdb\u7a0b\u72b6\u6001\uff08\u5982\u8fd0\u884c\u3001\u5c31\u7eea\u3001\u963b\u585e\u7b49\uff09 \u7a0b\u5e8f\u8ba1\u6570\u5668\uff08PC\uff09 \u5bc4\u5b58\u5668\u5185\u5bb9 \u8fdb\u7a0b\u53f7\uff08PID\uff09 \u6240\u5360\u7528\u7684\u8d44\u6e90\uff08\u5982\u6253\u5f00\u7684\u6587\u4ef6\u3001\u5185\u5b58\u7b49\uff09 \u8c03\u5ea6\u4fe1\u606f\u548c\u4f18\u5148\u7ea7 \u7cfb\u7edf\u8d44\u6e90 \u5982\u6253\u5f00\u7684\u6587\u4ef6\u3001\u4fe1\u53f7\u91cf\u3001\u6d88\u606f\u961f\u5217\u3001\u5171\u4eab\u5185\u5b58\u7b49\u3002 \u603b\u7ed3\uff1a - \u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002 - \u8fdb\u7a0b\u7531\u7a0b\u5e8f\u4ee3\u7801\u3001\u6570\u636e\u3001PCB\u548c\u7cfb\u7edf\u8d44\u6e90\u7b49\u7ec4\u6210\u3002 \u67e5\u770b\u8fdb\u7a0b\u63a7\u5236\u5757PCB \u5728 Linux \u4e0b \u8fdb\u7a0b\u63a7\u5236\u5757\u7684\u5927\u90e8\u5206\u4fe1\u606f\u90fd\u53ef\u4ee5\u901a\u8fc7 /proc/[pid]/ \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u67e5\u770b \uff0c\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u66b4\u9732\u7ed9\u7528\u6237\u7684PCB\u5185\u5bb9\u3002 \u5e38\u7528\u547d\u4ee4\u5982\u4e0b\uff1a 1. \u67e5\u770b\u8fdb\u7a0b\u72b6\u6001\u548c\u5173\u952e\u4fe1\u606f cat /proc/<pid>/status - \u5305\u542b\u8fdb\u7a0b\u540d\u3001\u72b6\u6001\u3001PID\u3001PPID\u3001UID\u3001\u5185\u5b58\u3001\u7ebf\u7a0b\u6570\u7b49\u3002 2. \u67e5\u770b\u8fdb\u7a0b\u8be6\u7ec6\u4fe1\u606f cat /proc/<pid>/stat - \u5305\u542b\u8fdb\u7a0b\u7684\u6240\u6709\u6838\u5fc3\u5b57\u6bb5\uff08\u5982\u72b6\u6001\u3001\u4f18\u5148\u7ea7\u3001CPU\u65f6\u95f4\u3001\u5185\u5b58\u7b49\uff09\u3002 \u8fdb\u7a0b\u63a7\u5236\u5757\uff08PCB\uff09 \u7684\u4e3b\u8981\u4fe1\u606f\u3002\u4e0b\u9762\u5bf9\u5e38\u89c1\u5b57\u6bb5\u505a\u7b80\u8981\u89e3\u91ca\uff1a Name \uff1a\u8fdb\u7a0b\u540d Umask \uff1a\u6587\u4ef6\u521b\u5efa\u63a9\u7801 State \uff1a\u8fdb\u7a0b\u72b6\u6001\uff08\u5982 I=idle\uff0cR=running\uff0cS=sleeping\uff0cZ=zombie \u7b49\uff09 Tgid \uff1a\u7ebf\u7a0b\u7ec4ID\uff08\u4e00\u822c\u7b49\u4e8e\u4e3b\u7ebf\u7a0b\u7684PID\uff09 Ngid \uff1aNUMA\u7ec4ID\uff08\u4e00\u822c\u4e3a0\uff09 Pid \uff1a\u8fdb\u7a0bID PPid \uff1a\u7236\u8fdb\u7a0bID TracerPid \uff1a\u8ddf\u8e2a\u8be5\u8fdb\u7a0b\u7684\u8fdb\u7a0bID\uff08\u5982\u88ab\u8c03\u8bd5\u65f6\uff09 Uid/Gid \uff1a\u7528\u6237ID/\u7ec4ID\uff084\u5217\u5206\u522b\u4e3a\u5b9e\u9645\u3001\u6709\u6548\u3001\u4fdd\u5b58\u7684\u3001\u6587\u4ef6\u7cfb\u7edf\u7684ID\uff09 FDSize \uff1a\u6587\u4ef6\u63cf\u8ff0\u7b26\u8868\u5927\u5c0f Groups \uff1a\u6240\u5c5e\u7684\u7ec4 NStgid/NSpid/NSpgid/NSsid \uff1a\u547d\u540d\u7a7a\u95f4\u76f8\u5173\u7684\u8fdb\u7a0b/\u7ec4/\u4f1a\u8bddID Threads \uff1a\u8be5\u8fdb\u7a0b\u7684\u7ebf\u7a0b\u6570 SigQ \uff1a\u4fe1\u53f7\u961f\u5217\uff08\u5df2\u5360\u7528/\u6700\u5927\uff09 SigPnd/ShdPnd \uff1a\u8fdb\u7a0b/\u7ebf\u7a0b\u7684\u5f85\u5904\u7406\u4fe1\u53f7 SigBlk/SigIgn/SigCgt \uff1a\u88ab\u963b\u585e/\u5ffd\u7565/\u6355\u83b7\u7684\u4fe1\u53f7\u63a9\u7801 CapInh/CapPrm/CapEff/CapBnd/CapAmb \uff1a\u8fdb\u7a0b\u7684\u5404\u79cd\u80fd\u529b\uff08capabilities\uff09\u63a9\u7801 NoNewPrivs \uff1a\u662f\u5426\u7981\u6b62\u65b0\u7279\u6743 Seccomp \uff1a\u5b89\u5168\u8ba1\u7b97\u6a21\u5f0f Speculation_Store_Bypass \uff1aCPU\u6295\u673a\u6267\u884c\u5b89\u5168\u72b6\u6001 Cpus_allowed/Cpus_allowed_list \uff1a\u5141\u8bb8\u5728\u54ea\u4e9bCPU\u4e0a\u8fd0\u884c Mems_allowed/Mems_allowed_list \uff1a\u5141\u8bb8\u5728\u54ea\u4e9b\u5185\u5b58\u8282\u70b9\u4e0a\u8fd0\u884c voluntary_ctxt_switches \uff1a\u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\u6b21\u6570 nonvoluntary_ctxt_switches \uff1a\u975e\u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\u6b21\u6570 \u8fd9\u4e9b\u5b57\u6bb5\u5171\u540c\u63cf\u8ff0\u4e86\u8fdb\u7a0b\u7684\u57fa\u672c\u4fe1\u606f\u3001\u8d44\u6e90\u3001\u6743\u9650\u3001\u72b6\u6001\u7b49\uff0c\u662f\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u8fdb\u7a0b\u7684\u91cd\u8981\u6570\u636e\u3002 3. \u67e5\u770b\u8fdb\u7a0b\u6253\u5f00\u7684\u6587\u4ef6 ls /proc/<pid>/fd - \u663e\u793a\u8be5\u8fdb\u7a0b\u6253\u5f00\u7684\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 4. \u67e5\u770b\u8fdb\u7a0b\u7684\u5185\u5b58\u6620\u5c04 cat /proc/<pid>/maps \u603b\u7ed3\uff1a - /proc/[pid]/status \u548c /proc/[pid]/stat \u5c31\u662fPCB\u4fe1\u606f\u7684\u4e3b\u8981\u6765\u6e90\u3002 - \u6ca1\u6709\u5355\u72ec\u7684\u201cpcb\u201d\u547d\u4ee4\uff0c\u90fd\u662f\u901a\u8fc7 proc \u4f2a\u6587\u4ef6\u7cfb\u7edf\u6765\u67e5\u770b\u3002 \u5728linux\u5b50\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0bfork\u7684\uff0c\u90a3\u8fd9\u4e2a\u5de8\u5927\u7684\u8fdb\u7a0b\u7f51\u7edc\u90fd\u662f\u7531\u4e00\u4e2a\u6700\u5f00\u59cb\u7684\u8fdb\u7a0b\u4ea7\u751f\u5417\uff0c\u6211\u60f3\u77e5\u9053\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u7684\u65f6\u5019\u8fd9\u4e9b\u8fdb\u7a0b\u662f\u600e\u4e48\u8c03\u5ea6\u7684 \u4f60\u7684\u7406\u89e3\u662f\u5bf9\u7684\uff01\u5728Linux\u7cfb\u7edf\u4e2d\uff0c \u6240\u6709\u7528\u6237\u8fdb\u7a0b\u6700\u7ec8\u90fd\u662f\u7531\u4e00\u4e2a\u201c\u6700\u521d\u7684\u8fdb\u7a0b\u201d\u7956\u5148\u884d\u751f\u51fa\u6765\u7684 \u3002\u8fd9\u4e2a\u201c\u6700\u521d\u7684\u8fdb\u7a0b\u201d\u5c31\u662f init\u8fdb\u7a0b \uff08\u5728\u73b0\u4ee3\u7cfb\u7edf\u4e2d\u901a\u5e38\u662f systemd \uff0cPID\u4e3a1\uff09\u3002 Linux\u542f\u52a8\u548c\u8fdb\u7a0b\u6811\u7684\u5f62\u6210 \u5185\u6838\u542f\u52a8 \u8ba1\u7b97\u673a\u52a0\u7535\u540e\uff0c\u52a0\u8f7d\u5e76\u542f\u52a8Linux\u5185\u6838\u3002 \u5185\u6838\u521b\u5efa\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\uff08PID 1\uff09 \u5185\u6838\u4f1a\u624b\u52a8\u521b\u5efa\u7b2c\u4e00\u4e2a\u7528\u6237\u7a7a\u95f4\u8fdb\u7a0b\uff0c\u4f20\u7edf\u4e0a\u53eb init \uff0c\u73b0\u4ee3Linux\u591a\u4e3a systemd \uff0c\u5b83\u7684PID\u6c38\u8fdc\u662f1\u3002 init\uff08systemd\uff09\u8d1f\u8d23\u542f\u52a8\u5176\u4ed6\u8fdb\u7a0b init / systemd \u4f1a\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u542f\u52a8\u5404\u79cd\u7cfb\u7edf\u670d\u52a1\u3001\u5b88\u62a4\u8fdb\u7a0b\u3001\u767b\u5f55\u7ec8\u7aef\u7b49\u3002 \u8fd9\u4e9b\u670d\u52a1\u8fdb\u7a0b\u53c8\u53ef\u4ee5fork\u51fa\u81ea\u5df1\u7684\u5b50\u8fdb\u7a0b\uff0c\u5f62\u6210\u4e00\u68f5\u8fdb\u7a0b\u6811\u3002 \u7528\u6237\u767b\u5f55\u540eshell\u7b49\u8fdb\u7a0b\u88ab\u542f\u52a8 \u7528\u6237\u767b\u5f55\u540e\uff0cshell\uff08\u5982bash\uff09\u88ab\u542f\u52a8\uff0c\u7528\u6237\u5728shell\u4e2d\u8fd0\u884c\u7684\u6bcf\u4e2a\u7a0b\u5e8f\uff0c\u90fd\u662fshell\u7684\u5b50\u8fdb\u7a0b\u3002 \u8fdb\u7a0b\u8c03\u5ea6 \u8c03\u5ea6\u7531\u5185\u6838\u8d1f\u8d23 \u5185\u6838\u4e2d\u7684\u8c03\u5ea6\u5668\uff08scheduler\uff09\u8d1f\u8d23\u51b3\u5b9a\u54ea\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b\u4ec0\u4e48\u65f6\u5019\u8fd0\u884c\uff0c\u5206\u914dCPU\u65f6\u95f4\u7247\u3002 \u8c03\u5ea6\u7b97\u6cd5 Linux\u91c7\u7528CFS\uff08\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u5668\uff09\u7b49\u7b97\u6cd5\uff0c\u4fdd\u8bc1\u8fdb\u7a0b\u516c\u5e73\u3001\u9ad8\u6548\u5730\u4f7f\u7528CPU\u3002 \u8fdb\u7a0b\u72b6\u6001\u5207\u6362 \u5185\u6838\u4f1a\u6839\u636e\u8fdb\u7a0b\u72b6\u6001\uff08\u5c31\u7eea\u3001\u8fd0\u884c\u3001\u963b\u585e\u7b49\uff09\u52a8\u6001\u5207\u6362\u8fdb\u7a0b\uff0c\u4fdd\u8bc1\u7cfb\u7edf\u54cd\u5e94\u548c\u8d44\u6e90\u5229\u7528\u7387\u3002 \u8fdb\u7a0b\u6811\u793a\u610f systemd/init (PID 1) \u251c\u2500 \u670d\u52a1A \u251c\u2500 \u670d\u52a1B \u251c\u2500 login \u2502 \u2514\u2500 bash \u2502 \u2514\u2500 \u7528\u6237\u7a0b\u5e8f \u2514\u2500 ... \u603b\u7ed3\uff1a - Linux\u6240\u6709\u8fdb\u7a0b\u6700\u7ec8\u90fd\u53ef\u8ffd\u6eaf\u5230PID 1\uff08init/systemd\uff09\u3002 - \u5185\u6838\u8d1f\u8d23\u8fdb\u7a0b\u8c03\u5ea6\uff0c\u4fdd\u8bc1\u591a\u8fdb\u7a0b\u5e76\u53d1\u8fd0\u884c\u3002 - \u8fdb\u7a0b\u6811\u7ed3\u6784\u6e05\u6670\uff0c\u7236\u5b50\u5173\u7cfb\u660e\u786e\uff0c\u7cfb\u7edf\u542f\u52a8\u65f6\u7531init/systemd\u9010\u6b65\u6d3e\u751f\u51fa\u6574\u4e2a\u8fdb\u7a0b\u7f51\u7edc\u3002","title":"\u8fdb\u7a0b\u95f4\u901a\u4fe1"},{"location":"Linux/process/#linuxapilinuxforkexecwait","text":"\u5728 Linux \u4e0b\uff0cC/C++ \u521b\u5efa\u8fdb\u7a0b\u5e76\u6267\u884c\u65b0\u7a0b\u5e8f\uff0c\u5e38\u7528\u7684\u65b9\u5f0f\u662f \u5148\u7528 fork() \u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u518d\u7528 exec \u7cfb\u5217\u51fd\u6570\u5728\u5b50\u8fdb\u7a0b\u4e2d\u6267\u884c\u65b0\u7a0b\u5e8f \u3002","title":"Linux\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edfAPI\u5982Linux\u7684fork\u3001exec\u3001wait\u7b49\u6765\u5b9e\u73b0\u8fdb\u7a0b\u7684\u521b\u5efa\u3001\u7ba1\u7406\u548c\u901a\u4fe1\u3002"},{"location":"Linux/process/#_1","text":"#include <unistd.h> #include <sys/types.h> #include <sys/wait.h> #include <iostream> using namespace std ; int main () { pid_t pid = fork (); // \u521b\u5efa\u5b50\u8fdb\u7a0b if ( pid == 0 ) { // \u5b50\u8fdb\u7a0b execlp ( \"ls\" , \"ls\" , \"-l\" , NULL ); // \u6267\u884cls -l\u547d\u4ee4 // \u5982\u679cexec\u6267\u884c\u5931\u8d25\uff0c\u624d\u4f1a\u6267\u884c\u4e0b\u9762\u8fd9\u884c perror ( \"exec failed\" ); } else if ( pid > 0 ) { // \u7236\u8fdb\u7a0b wait ( NULL ); // \u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f cout << \"\u5b50\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\" << endl ; } else { // fork\u5931\u8d25 perror ( \"fork failed\" ); } return 0 ; }","title":"\u5178\u578b\u4ee3\u7801\u793a\u4f8b"},{"location":"Linux/process/#_2","text":"fork() \uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u8fdb\u7a0b\uff0c\u7236\u8fdb\u7a0b\u8fd4\u56de\u5b50\u8fdb\u7a0bPID\uff0c\u5b50\u8fdb\u7a0b\u8fd4\u56de0\u3002 execlp() \uff1a\u5728\u5b50\u8fdb\u7a0b\u4e2d\u6267\u884c\u65b0\u7a0b\u5e8f\uff08\u5982 ls -l \uff09\uff0c\u6210\u529f\u540e\u4e0d\u4f1a\u8fd4\u56de\uff0c\u5931\u8d25\u624d\u4f1a\u7ee7\u7eed\u6267\u884c\u540e\u9762\u7684\u4ee3\u7801\u3002 wait(NULL) \uff1a\u7236\u8fdb\u7a0b\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f\u3002 \u5e38\u7528\u7684 exec \u7cfb\u5217\u51fd\u6570\u6709\uff1a - execl \u3001 execlp \u3001 execv \u3001 execvp \u7b49\uff0c\u533a\u522b\u5728\u4e8e\u53c2\u6570\u4f20\u9012\u65b9\u5f0f\u548c\u662f\u5426\u81ea\u52a8\u67e5\u627ePATH\u3002 \u603b\u7ed3\uff1a Linux \u4e0b C/C++ \u521b\u5efa\u8fdb\u7a0b\u5e76\u6267\u884c\u65b0\u7a0b\u5e8f\uff0c\u5e38\u7528 fork() + exec() \uff0c\u7236\u8fdb\u7a0b\u53ef\u7528 wait() \u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f\u3002","title":"\u8bf4\u660e"},{"location":"Linux/process/#ipc","text":"\u7ba1\u9053\uff08pipe\uff09 \u547d\u540d\u7ba1\u9053\uff08FIFO\uff09 \u4fe1\u53f7\uff08signal\uff09 \u5171\u4eab\u5185\u5b58\uff08shm\uff09 \u6d88\u606f\u961f\u5217\uff08message queue\uff09 \u5957\u63a5\u5b57\uff08socket\uff09 \u4e0b\u9762\u4ee5 \u533f\u540d\u7ba1\u9053 \u548c \u5171\u4eab\u5185\u5b58 \u4e3a\u4f8b\uff0c\u5206\u522b\u7528C++\u4ee3\u7801\u7b80\u5355\u6f14\u793a\uff1a","title":"\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff09\u5e38\u89c1\u65b9\u5f0f\u6709\uff1a"},{"location":"Linux/process/#1-pipe","text":"#include <unistd.h> #include <iostream> using namespace std ; int main () { int fd [ 2 ]; pipe ( fd ); // \u521b\u5efa\u7ba1\u9053 pid_t pid = fork (); if ( pid == 0 ) { // \u5b50\u8fdb\u7a0b\uff1a\u5199\u6570\u636e close ( fd [ 0 ]); const char * msg = \"hello from child\" ; write ( fd [ 1 ], msg , 16 ); close ( fd [ 1 ]); } else { // \u7236\u8fdb\u7a0b\uff1a\u8bfb\u6570\u636e close ( fd [ 1 ]); char buf [ 64 ] = { 0 }; read ( fd [ 0 ], buf , 64 ); cout << \"\u7236\u8fdb\u7a0b\u6536\u5230: \" << buf << endl ; close ( fd [ 0 ]); } return 0 ; }","title":"1. \u533f\u540d\u7ba1\u9053\uff08pipe\uff09"},{"location":"Linux/process/#2-shm","text":"#include <sys/ipc.h> #include <sys/shm.h> #include <unistd.h> #include <cstring> #include <iostream> using namespace std ; int main () { int shmid = shmget ( IPC_PRIVATE , 64 , IPC_CREAT | 0666 ); // \u521b\u5efa\u5171\u4eab\u5185\u5b58 pid_t pid = fork (); if ( pid == 0 ) { // \u5b50\u8fdb\u7a0b\uff1a\u5199\u6570\u636e char * shmaddr = ( char * ) shmat ( shmid , nullptr , 0 ); strcpy ( shmaddr , \"hello from child\" ); shmdt ( shmaddr ); } else { // \u7236\u8fdb\u7a0b\uff1a\u8bfb\u6570\u636e sleep ( 1 ); // \u7b49\u5f85\u5b50\u8fdb\u7a0b\u5199\u5165 char * shmaddr = ( char * ) shmat ( shmid , nullptr , 0 ); cout << \"\u7236\u8fdb\u7a0b\u6536\u5230: \" << shmaddr << endl ; shmdt ( shmaddr ); shmctl ( shmid , IPC_RMID , nullptr ); // \u5220\u9664\u5171\u4eab\u5185\u5b58 } return 0 ; } \u603b\u7ed3\uff1a \u5e38\u89c1IPC\u65b9\u5f0f\u6709\u7ba1\u9053\u3001\u5171\u4eab\u5185\u5b58\u3001\u6d88\u606f\u961f\u5217\u3001\u4fe1\u53f7\u3001\u5957\u63a5\u5b57\u7b49\u3002\u5b9e\u9645\u5f00\u53d1\u4e2d\u53ef\u6839\u636e\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u901a\u4fe1\u65b9\u5f0f\u3002 \u4fe1\u53f7\uff08signal\uff09 \u662f Linux/Unix \u7cfb\u7edf\u4e2d\u4e00\u79cd\u7528\u4e8e \u8fdb\u7a0b\u95f4\u901a\u4fe1\u548c\u8fdb\u7a0b\u63a7\u5236 \u7684\u673a\u5236\uff0c\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u5f02\u6b65\u901a\u77e5\u3002\u64cd\u4f5c\u7cfb\u7edf\u6216\u5176\u4ed6\u8fdb\u7a0b\u53ef\u4ee5\u5411\u76ee\u6807\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7\uff0c\u901a\u77e5\u5b83\u53d1\u751f\u4e86\u67d0\u79cd\u4e8b\u4ef6\uff08\u5982\u7ec8\u6b62\u3001\u6682\u505c\u3001\u7ee7\u7eed\u3001\u5b9a\u65f6\u5668\u5230\u671f\u7b49\uff09\u3002","title":"2. \u5171\u4eab\u5185\u5b58\uff08shm\uff09"},{"location":"Linux/process/#_3","text":"SIGINT \uff1a\u4e2d\u65ad\u4fe1\u53f7\uff08\u5982\u6309Ctrl+C\uff09 SIGTERM \uff1a\u7ec8\u6b62\u4fe1\u53f7\uff08\u8bf7\u6c42\u7a0b\u5e8f\u6b63\u5e38\u7ec8\u6b62\uff09 SIGKILL \uff1a\u5f3a\u5236\u7ec8\u6b62\u4fe1\u53f7\uff08\u65e0\u6cd5\u88ab\u6355\u83b7\u6216\u5ffd\u7565\uff09 SIGSTOP \uff1a\u6682\u505c\u8fdb\u7a0b SIGCONT \uff1a\u7ee7\u7eed\u6267\u884c SIGCHLD \uff1a\u5b50\u8fdb\u7a0b\u72b6\u6001\u6539\u53d8","title":"\u5e38\u89c1\u4fe1\u53f7\u4e3e\u4f8b"},{"location":"Linux/process/#_4","text":"\u8fdb\u7a0b\u53ef\u4ee5\u7528 kill \u547d\u4ee4\u6216 kill() \u51fd\u6570\u5411\u5176\u4ed6\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7\u3002 \u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7\u6ce8\u518c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff08 signal() \u6216 sigaction() \uff09\u54cd\u5e94\u7279\u5b9a\u4fe1\u53f7\u3002","title":"\u7528\u6cd5\u8bf4\u660e"},{"location":"Linux/process/#c","text":"#include <iostream> #include <csignal> #include <unistd.h> using namespace std ; void handler ( int signum ) { cout << \"\u6536\u5230\u4fe1\u53f7: \" << signum << endl ; exit ( 0 ); } int main () { signal ( SIGINT , handler ); // \u6355\u83b7Ctrl+C while ( true ) { cout << \"\u8fd0\u884c\u4e2d...\" << endl ; sleep ( 1 ); } return 0 ; } \u603b\u7ed3\uff1a \u4fe1\u53f7\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u5f0f\uff0c\u5e38\u7528\u4e8e\u901a\u77e5\u3001\u63a7\u5236\u8fdb\u7a0b\u72b6\u6001\u3001\u5f02\u5e38\u5904\u7406\u7b49\u573a\u666f\u3002 \u5728 Linux \u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u67e5\u770b\u5404\u79cd\u8fdb\u7a0b\u7684\u72b6\u6001\uff1a","title":"\u7b80\u5355C++\u4ee3\u7801\u793a\u4f8b"},{"location":"Linux/process/#1-ps","text":"ps aux \u6216 ps -ef - \u8fd9\u4f1a\u5217\u51fa\u6240\u6709\u8fdb\u7a0b\u53ca\u5176\u72b6\u6001\uff08STAT\u5217\uff09\u3002 \u5e38\u89c1\u72b6\u6001\u7801\uff08STAT\u5217\uff09\uff1a - R\uff1a\u8fd0\u884c\uff08Running\uff09 - S\uff1a\u53ef\u4e2d\u65ad\u7761\u7720\uff08Sleeping\uff09 - D\uff1a\u4e0d\u53ef\u4e2d\u65ad\u7761\u7720\uff08Disk sleep\uff09 - T\uff1a\u505c\u6b62\uff08Stopped\uff09 - Z\uff1a\u50f5\u5c38\uff08Zombie\uff09","title":"1. \u4f7f\u7528 ps \u547d\u4ee4"},{"location":"Linux/process/#2-top-htop","text":"top - \u5b9e\u65f6\u663e\u793a\u8fdb\u7a0b\u72b6\u6001\uff0c S \u3001 R \u3001 Z \u7b49\u542b\u4e49\u540c\u4e0a\u3002","title":"2. \u4f7f\u7528 top \u6216 htop"},{"location":"Linux/process/#3-proc","text":"\u6bcf\u4e2a\u8fdb\u7a0b\u5728 /proc/[pid]/status \u6587\u4ef6\u4e2d\u6709\u8be6\u7ec6\u72b6\u6001\u4fe1\u606f\uff1a cat /proc/1/status - \u5176\u4e2d State: \u4e00\u884c\u663e\u793a\u8be5\u8fdb\u7a0b\u7684\u72b6\u6001\u3002 \u603b\u7ed3\uff1a - ps \u3001 top \u3001 htop \u7b49\u547d\u4ee4\u90fd\u53ef\u4ee5\u67e5\u770b\u8fdb\u7a0b\u72b6\u6001\u3002 - \u8fdb\u7a0b\u72b6\u6001\u5e38\u89c1\u6709\uff1aR\uff08\u8fd0\u884c\uff09\u3001S\uff08\u7761\u7720\uff09\u3001D\uff08\u4e0d\u53ef\u4e2d\u65ad\uff09\u3001T\uff08\u505c\u6b62\uff09\u3001Z\uff08\u50f5\u5c38\uff09\u7b49\u3002 \u5f15\u5165 \u8fdb\u7a0b \u7684\u539f\u56e0\uff0c\u662f\u4e3a\u4e86\u5b9e\u73b0 \u591a\u9053\u7a0b\u5e8f\u8bbe\u8ba1 \uff0c\u8ba9\u591a\u4e2a\u7a0b\u5e8f\u80fd\u5728\u540c\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u201c\u540c\u65f6\u201d\u8fd0\u884c\uff0c\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\u548c\u7cfb\u7edf\u54cd\u5e94\u901f\u5ea6\u3002\u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002","title":"3. \u67e5\u770b proc \u76ee\u5f55"},{"location":"Linux/process/#_5","text":"\u8fdb\u7a0b\uff08Process\uff09 \u662f\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u7684\u5b9e\u4f8b\uff0c\u662f\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u62e5\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\u3001\u6570\u636e\u3001\u4ee3\u7801\u548c\u7cfb\u7edf\u8d44\u6e90\u3002","title":"\u4ec0\u4e48\u662f\u8fdb\u7a0b"},{"location":"Linux/process/#_6","text":"\u7a0b\u5e8f\u4ee3\u7801 \u8fdb\u7a0b\u8981\u6267\u884c\u7684\u6307\u4ee4\uff08\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4ee3\u7801\u6bb5\uff09\u3002 \u6570\u636e\u6bb5 \u5305\u62ec\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf\u3001\u5806\u3001\u6808\u7b49\u3002 \u8fdb\u7a0b\u63a7\u5236\u5757\uff08PCB\uff09 \u64cd\u4f5c\u7cfb\u7edf\u7528\u6765\u7ba1\u7406\u548c\u63cf\u8ff0\u8fdb\u7a0b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5305\u542b\uff1a \u8fdb\u7a0b\u72b6\u6001\uff08\u5982\u8fd0\u884c\u3001\u5c31\u7eea\u3001\u963b\u585e\u7b49\uff09 \u7a0b\u5e8f\u8ba1\u6570\u5668\uff08PC\uff09 \u5bc4\u5b58\u5668\u5185\u5bb9 \u8fdb\u7a0b\u53f7\uff08PID\uff09 \u6240\u5360\u7528\u7684\u8d44\u6e90\uff08\u5982\u6253\u5f00\u7684\u6587\u4ef6\u3001\u5185\u5b58\u7b49\uff09 \u8c03\u5ea6\u4fe1\u606f\u548c\u4f18\u5148\u7ea7 \u7cfb\u7edf\u8d44\u6e90 \u5982\u6253\u5f00\u7684\u6587\u4ef6\u3001\u4fe1\u53f7\u91cf\u3001\u6d88\u606f\u961f\u5217\u3001\u5171\u4eab\u5185\u5b58\u7b49\u3002 \u603b\u7ed3\uff1a - \u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002 - \u8fdb\u7a0b\u7531\u7a0b\u5e8f\u4ee3\u7801\u3001\u6570\u636e\u3001PCB\u548c\u7cfb\u7edf\u8d44\u6e90\u7b49\u7ec4\u6210\u3002","title":"\u8fdb\u7a0b\u7531\u4ec0\u4e48\u7ec4\u6210"},{"location":"Linux/process/#pcb","text":"\u5728 Linux \u4e0b \u8fdb\u7a0b\u63a7\u5236\u5757\u7684\u5927\u90e8\u5206\u4fe1\u606f\u90fd\u53ef\u4ee5\u901a\u8fc7 /proc/[pid]/ \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u67e5\u770b \uff0c\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u66b4\u9732\u7ed9\u7528\u6237\u7684PCB\u5185\u5bb9\u3002 \u5e38\u7528\u547d\u4ee4\u5982\u4e0b\uff1a","title":"\u67e5\u770b\u8fdb\u7a0b\u63a7\u5236\u5757PCB"},{"location":"Linux/process/#1","text":"cat /proc/<pid>/status - \u5305\u542b\u8fdb\u7a0b\u540d\u3001\u72b6\u6001\u3001PID\u3001PPID\u3001UID\u3001\u5185\u5b58\u3001\u7ebf\u7a0b\u6570\u7b49\u3002","title":"1. \u67e5\u770b\u8fdb\u7a0b\u72b6\u6001\u548c\u5173\u952e\u4fe1\u606f"},{"location":"Linux/process/#2","text":"cat /proc/<pid>/stat - \u5305\u542b\u8fdb\u7a0b\u7684\u6240\u6709\u6838\u5fc3\u5b57\u6bb5\uff08\u5982\u72b6\u6001\u3001\u4f18\u5148\u7ea7\u3001CPU\u65f6\u95f4\u3001\u5185\u5b58\u7b49\uff09\u3002 \u8fdb\u7a0b\u63a7\u5236\u5757\uff08PCB\uff09 \u7684\u4e3b\u8981\u4fe1\u606f\u3002\u4e0b\u9762\u5bf9\u5e38\u89c1\u5b57\u6bb5\u505a\u7b80\u8981\u89e3\u91ca\uff1a Name \uff1a\u8fdb\u7a0b\u540d Umask \uff1a\u6587\u4ef6\u521b\u5efa\u63a9\u7801 State \uff1a\u8fdb\u7a0b\u72b6\u6001\uff08\u5982 I=idle\uff0cR=running\uff0cS=sleeping\uff0cZ=zombie \u7b49\uff09 Tgid \uff1a\u7ebf\u7a0b\u7ec4ID\uff08\u4e00\u822c\u7b49\u4e8e\u4e3b\u7ebf\u7a0b\u7684PID\uff09 Ngid \uff1aNUMA\u7ec4ID\uff08\u4e00\u822c\u4e3a0\uff09 Pid \uff1a\u8fdb\u7a0bID PPid \uff1a\u7236\u8fdb\u7a0bID TracerPid \uff1a\u8ddf\u8e2a\u8be5\u8fdb\u7a0b\u7684\u8fdb\u7a0bID\uff08\u5982\u88ab\u8c03\u8bd5\u65f6\uff09 Uid/Gid \uff1a\u7528\u6237ID/\u7ec4ID\uff084\u5217\u5206\u522b\u4e3a\u5b9e\u9645\u3001\u6709\u6548\u3001\u4fdd\u5b58\u7684\u3001\u6587\u4ef6\u7cfb\u7edf\u7684ID\uff09 FDSize \uff1a\u6587\u4ef6\u63cf\u8ff0\u7b26\u8868\u5927\u5c0f Groups \uff1a\u6240\u5c5e\u7684\u7ec4 NStgid/NSpid/NSpgid/NSsid \uff1a\u547d\u540d\u7a7a\u95f4\u76f8\u5173\u7684\u8fdb\u7a0b/\u7ec4/\u4f1a\u8bddID Threads \uff1a\u8be5\u8fdb\u7a0b\u7684\u7ebf\u7a0b\u6570 SigQ \uff1a\u4fe1\u53f7\u961f\u5217\uff08\u5df2\u5360\u7528/\u6700\u5927\uff09 SigPnd/ShdPnd \uff1a\u8fdb\u7a0b/\u7ebf\u7a0b\u7684\u5f85\u5904\u7406\u4fe1\u53f7 SigBlk/SigIgn/SigCgt \uff1a\u88ab\u963b\u585e/\u5ffd\u7565/\u6355\u83b7\u7684\u4fe1\u53f7\u63a9\u7801 CapInh/CapPrm/CapEff/CapBnd/CapAmb \uff1a\u8fdb\u7a0b\u7684\u5404\u79cd\u80fd\u529b\uff08capabilities\uff09\u63a9\u7801 NoNewPrivs \uff1a\u662f\u5426\u7981\u6b62\u65b0\u7279\u6743 Seccomp \uff1a\u5b89\u5168\u8ba1\u7b97\u6a21\u5f0f Speculation_Store_Bypass \uff1aCPU\u6295\u673a\u6267\u884c\u5b89\u5168\u72b6\u6001 Cpus_allowed/Cpus_allowed_list \uff1a\u5141\u8bb8\u5728\u54ea\u4e9bCPU\u4e0a\u8fd0\u884c Mems_allowed/Mems_allowed_list \uff1a\u5141\u8bb8\u5728\u54ea\u4e9b\u5185\u5b58\u8282\u70b9\u4e0a\u8fd0\u884c voluntary_ctxt_switches \uff1a\u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\u6b21\u6570 nonvoluntary_ctxt_switches \uff1a\u975e\u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\u6b21\u6570","title":"2. \u67e5\u770b\u8fdb\u7a0b\u8be6\u7ec6\u4fe1\u606f"},{"location":"Linux/process/#_7","text":"","title":"\u8fd9\u4e9b\u5b57\u6bb5\u5171\u540c\u63cf\u8ff0\u4e86\u8fdb\u7a0b\u7684\u57fa\u672c\u4fe1\u606f\u3001\u8d44\u6e90\u3001\u6743\u9650\u3001\u72b6\u6001\u7b49\uff0c\u662f\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u8fdb\u7a0b\u7684\u91cd\u8981\u6570\u636e\u3002"},{"location":"Linux/process/#3","text":"ls /proc/<pid>/fd - \u663e\u793a\u8be5\u8fdb\u7a0b\u6253\u5f00\u7684\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002","title":"3. \u67e5\u770b\u8fdb\u7a0b\u6253\u5f00\u7684\u6587\u4ef6"},{"location":"Linux/process/#4","text":"cat /proc/<pid>/maps \u603b\u7ed3\uff1a - /proc/[pid]/status \u548c /proc/[pid]/stat \u5c31\u662fPCB\u4fe1\u606f\u7684\u4e3b\u8981\u6765\u6e90\u3002 - \u6ca1\u6709\u5355\u72ec\u7684\u201cpcb\u201d\u547d\u4ee4\uff0c\u90fd\u662f\u901a\u8fc7 proc \u4f2a\u6587\u4ef6\u7cfb\u7edf\u6765\u67e5\u770b\u3002","title":"4. \u67e5\u770b\u8fdb\u7a0b\u7684\u5185\u5b58\u6620\u5c04"},{"location":"Linux/process/#linuxfork","text":"\u4f60\u7684\u7406\u89e3\u662f\u5bf9\u7684\uff01\u5728Linux\u7cfb\u7edf\u4e2d\uff0c \u6240\u6709\u7528\u6237\u8fdb\u7a0b\u6700\u7ec8\u90fd\u662f\u7531\u4e00\u4e2a\u201c\u6700\u521d\u7684\u8fdb\u7a0b\u201d\u7956\u5148\u884d\u751f\u51fa\u6765\u7684 \u3002\u8fd9\u4e2a\u201c\u6700\u521d\u7684\u8fdb\u7a0b\u201d\u5c31\u662f init\u8fdb\u7a0b \uff08\u5728\u73b0\u4ee3\u7cfb\u7edf\u4e2d\u901a\u5e38\u662f systemd \uff0cPID\u4e3a1\uff09\u3002","title":"\u5728linux\u5b50\u8fdb\u7a0b\u662f\u7236\u8fdb\u7a0bfork\u7684\uff0c\u90a3\u8fd9\u4e2a\u5de8\u5927\u7684\u8fdb\u7a0b\u7f51\u7edc\u90fd\u662f\u7531\u4e00\u4e2a\u6700\u5f00\u59cb\u7684\u8fdb\u7a0b\u4ea7\u751f\u5417\uff0c\u6211\u60f3\u77e5\u9053\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u7684\u65f6\u5019\u8fd9\u4e9b\u8fdb\u7a0b\u662f\u600e\u4e48\u8c03\u5ea6\u7684"},{"location":"Linux/process/#linux","text":"\u5185\u6838\u542f\u52a8 \u8ba1\u7b97\u673a\u52a0\u7535\u540e\uff0c\u52a0\u8f7d\u5e76\u542f\u52a8Linux\u5185\u6838\u3002 \u5185\u6838\u521b\u5efa\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\uff08PID 1\uff09 \u5185\u6838\u4f1a\u624b\u52a8\u521b\u5efa\u7b2c\u4e00\u4e2a\u7528\u6237\u7a7a\u95f4\u8fdb\u7a0b\uff0c\u4f20\u7edf\u4e0a\u53eb init \uff0c\u73b0\u4ee3Linux\u591a\u4e3a systemd \uff0c\u5b83\u7684PID\u6c38\u8fdc\u662f1\u3002 init\uff08systemd\uff09\u8d1f\u8d23\u542f\u52a8\u5176\u4ed6\u8fdb\u7a0b init / systemd \u4f1a\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u542f\u52a8\u5404\u79cd\u7cfb\u7edf\u670d\u52a1\u3001\u5b88\u62a4\u8fdb\u7a0b\u3001\u767b\u5f55\u7ec8\u7aef\u7b49\u3002 \u8fd9\u4e9b\u670d\u52a1\u8fdb\u7a0b\u53c8\u53ef\u4ee5fork\u51fa\u81ea\u5df1\u7684\u5b50\u8fdb\u7a0b\uff0c\u5f62\u6210\u4e00\u68f5\u8fdb\u7a0b\u6811\u3002 \u7528\u6237\u767b\u5f55\u540eshell\u7b49\u8fdb\u7a0b\u88ab\u542f\u52a8 \u7528\u6237\u767b\u5f55\u540e\uff0cshell\uff08\u5982bash\uff09\u88ab\u542f\u52a8\uff0c\u7528\u6237\u5728shell\u4e2d\u8fd0\u884c\u7684\u6bcf\u4e2a\u7a0b\u5e8f\uff0c\u90fd\u662fshell\u7684\u5b50\u8fdb\u7a0b\u3002","title":"Linux\u542f\u52a8\u548c\u8fdb\u7a0b\u6811\u7684\u5f62\u6210"},{"location":"Linux/process/#_8","text":"\u8c03\u5ea6\u7531\u5185\u6838\u8d1f\u8d23 \u5185\u6838\u4e2d\u7684\u8c03\u5ea6\u5668\uff08scheduler\uff09\u8d1f\u8d23\u51b3\u5b9a\u54ea\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b\u4ec0\u4e48\u65f6\u5019\u8fd0\u884c\uff0c\u5206\u914dCPU\u65f6\u95f4\u7247\u3002 \u8c03\u5ea6\u7b97\u6cd5 Linux\u91c7\u7528CFS\uff08\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u5668\uff09\u7b49\u7b97\u6cd5\uff0c\u4fdd\u8bc1\u8fdb\u7a0b\u516c\u5e73\u3001\u9ad8\u6548\u5730\u4f7f\u7528CPU\u3002 \u8fdb\u7a0b\u72b6\u6001\u5207\u6362 \u5185\u6838\u4f1a\u6839\u636e\u8fdb\u7a0b\u72b6\u6001\uff08\u5c31\u7eea\u3001\u8fd0\u884c\u3001\u963b\u585e\u7b49\uff09\u52a8\u6001\u5207\u6362\u8fdb\u7a0b\uff0c\u4fdd\u8bc1\u7cfb\u7edf\u54cd\u5e94\u548c\u8d44\u6e90\u5229\u7528\u7387\u3002","title":"\u8fdb\u7a0b\u8c03\u5ea6"},{"location":"Linux/process/#_9","text":"systemd/init (PID 1) \u251c\u2500 \u670d\u52a1A \u251c\u2500 \u670d\u52a1B \u251c\u2500 login \u2502 \u2514\u2500 bash \u2502 \u2514\u2500 \u7528\u6237\u7a0b\u5e8f \u2514\u2500 ... \u603b\u7ed3\uff1a - Linux\u6240\u6709\u8fdb\u7a0b\u6700\u7ec8\u90fd\u53ef\u8ffd\u6eaf\u5230PID 1\uff08init/systemd\uff09\u3002 - \u5185\u6838\u8d1f\u8d23\u8fdb\u7a0b\u8c03\u5ea6\uff0c\u4fdd\u8bc1\u591a\u8fdb\u7a0b\u5e76\u53d1\u8fd0\u884c\u3002 - \u8fdb\u7a0b\u6811\u7ed3\u6784\u6e05\u6670\uff0c\u7236\u5b50\u5173\u7cfb\u660e\u786e\uff0c\u7cfb\u7edf\u542f\u52a8\u65f6\u7531init/systemd\u9010\u6b65\u6d3e\u751f\u51fa\u6574\u4e2a\u8fdb\u7a0b\u7f51\u7edc\u3002","title":"\u8fdb\u7a0b\u6811\u793a\u610f"},{"location":"Math/Calculus/Green/","text":"","title":"\u683c\u6797\u516c\u5f0f"},{"location":"Math/Linear_Algebra/Similarity_Matrix/","text":"","title":"\u76f8\u4f3c\u77e9\u9635"},{"location":"Math/Probability_Theory/Maximum_Likelihood_Estimation/","text":"","title":"\u6700\u5927\u4f3c\u7136\u4f30\u8ba1"},{"location":"Network/Network_Interview/","text":"\u4e3a\u4ec0\u4e48\u9700\u8981\u4e09\u6b21\u63e1\u624b\uff1f\u4e24\u6b21\u4e0d\u884c\uff1f \u4e09\u6b21\u63e1\u624b\u662f\u4e3a\u4e86 \u53ef\u9760\u5730\u5efa\u7acbTCP\u8fde\u63a5\uff0c\u786e\u4fdd\u901a\u4fe1\u53cc\u65b9\u90fd\u5177\u5907\u6536\u53d1\u80fd\u529b \u3002 \u5982\u679c\u53ea\u8fdb\u884c\u4e24\u6b21\u63e1\u624b\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u95ee\u9898\uff1a \u5047\u8bbe\u5ba2\u6237\u7aef\u53d1\u9001\u4e86\u7b2c\u4e00\u6b21SYN\u8bf7\u6c42\uff0c\u4f46\u7531\u4e8e\u7f51\u7edc\u5ef6\u8fdf\uff0c\u670d\u52a1\u7aef\u8fdf\u8fdf\u6ca1\u6709\u6536\u5230\u3002\u5ba2\u6237\u7aef\u8d85\u65f6\u540e\u91cd\u53d1SYN\uff0c\u5e76\u6210\u529f\u5efa\u7acb\u8fde\u63a5\u3002\u6b64\u65f6\uff0c\u7b2c\u4e00\u6b21SYN\u8fdf\u5230\uff0c\u670d\u52a1\u7aef\u53c8\u6536\u5230\u5e76\u56de\u590dSYN+ACK\uff0c\u4f46\u5ba2\u6237\u7aef\u5df2\u7ecf\u4e0d\u518d\u7b49\u5f85\uff0c\u670d\u52a1\u7aef\u5374\u4ee5\u4e3a\u8fde\u63a5\u5df2\u5efa\u7acb\uff0c\u9020\u6210\u201c \u534a\u8fde\u63a5 \u201d\u6216\u201c \u5931\u6548\u8fde\u63a5 \u201d\u95ee\u9898\u3002 \u4e09\u6b21\u63e1\u624b\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a \u7b2c\u4e00\u6b21 \uff1a\u5ba2\u6237\u7aef\u53d1\u9001SYN\uff0c\u8868\u793a\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5\u3002 \u7b2c\u4e8c\u6b21 \uff1a\u670d\u52a1\u7aef\u6536\u5230SYN\uff0c\u56de\u590dSYN+ACK\uff0c\u8868\u793a\u540c\u610f\u8fde\u63a5\u5e76\u544a\u77e5\u81ea\u5df1\u4e5f\u53ef\u4ee5\u901a\u4fe1\u3002 \u7b2c\u4e09\u6b21 \uff1a\u5ba2\u6237\u7aef\u6536\u5230SYN+ACK\u540e\uff0c\u518d\u53d1\u9001ACK\uff0c\u8868\u793a\u81ea\u5df1\u4e5f\u53ef\u4ee5\u901a\u4fe1\uff0c\u8fde\u63a5\u5efa\u7acb\u3002 \u4e09\u6b21\u63e1\u624b\u53ef\u4ee5\u786e\u4fdd\uff1a - \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u90fd\u786e\u8ba4\u4e86\u5bf9\u65b9\u7684\u63a5\u6536\u548c\u53d1\u9001\u80fd\u529b\u3002 - \u907f\u514d\u5386\u53f2\u5931\u6548\u8fde\u63a5\u5f71\u54cd\u5f53\u524d\u901a\u4fe1\u3002 \u603b\u7ed3\uff1a \u4e09\u6b21\u63e1\u624b\u662f\u4e3a\u4e86\u9632\u6b62\u5386\u53f2\u8fde\u63a5\u8bf7\u6c42\u9020\u6210\u9519\u8bef\u8fde\u63a5\uff0c\u786e\u4fdd\u53cc\u65b9\u90fd\u80fd\u6b63\u5e38\u6536\u53d1\u6570\u636e\u3002\u4e24\u6b21\u63e1\u624b\u65e0\u6cd5\u4fdd\u8bc1\u8fd9\u4e00\u70b9\u3002 SYN \u662f Synchronize\uff08\u540c\u6b65\uff09 \u7684\u7f29\u5199\uff0c\u662f TCP \u534f\u8bae\u4e2d\u7528\u4e8e\u5efa\u7acb\u8fde\u63a5\u7684\u4e00\u4e2a\u6807\u5fd7\u4f4d\uff08flag\uff09\u3002 \u5728\u4e09\u6b21\u63e1\u624b\u8fc7\u7a0b\u4e2d\uff1a SYN \u8868\u793a\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5\uff0c\u544a\u8bc9\u5bf9\u65b9\u201c\u6211\u8981\u5efa\u7acb\u8fde\u63a5\uff0c\u5e76\u540c\u6b65\u5e8f\u5217\u53f7\u201d\u3002 \u6570\u636e\u5305\u7684 TCP \u9996\u90e8\u4e2d\u6709\u4e00\u4e2a SYN \u6807\u5fd7\u4f4d\uff0c\u53ea\u6709\u5728\u5efa\u7acb\u8fde\u63a5\u65f6\u624d\u4f1a\u88ab\u7f6e\u4e3a 1\u3002 \u603b\u7ed3\uff1a SYN \u5c31\u662f\u201c\u540c\u6b65\u5e8f\u5217\u53f7\u201d\u7684\u610f\u601d\uff0c\u7528\u4e8e\u53d1\u8d77\u548c\u5efa\u7acb TCP \u8fde\u63a5\u3002 \u901a\u4fd7\u4e00\u70b9\u89e3\u91ca\uff1a \u5047\u8bbe\u4f60\u548c\u670b\u53cb\u6253\u7535\u8bdd\uff1a \u7b2c\u4e00\u6b21 \uff1a\u4f60\u8bf4\u201c\u5582\uff0c\u4f60\u5728\u5417\uff1f\u201d\uff08\u4f60\u53d1SYN\uff09 \u7b2c\u4e8c\u6b21 \uff1a\u670b\u53cb\u8bf4\u201c\u6211\u5728\uff0c\u4f60\u80fd\u542c\u5230\u6211\u5417\uff1f\u201d\uff08\u670b\u53cb\u53d1SYN+ACK\uff09 \u7b2c\u4e09\u6b21 \uff1a\u4f60\u8bf4\u201c\u6211\u80fd\u542c\u5230\u4f60\uff01\u201d\uff08\u4f60\u53d1ACK\uff09 \u8fd9\u6837\u4f60\u4eec\u90fd\u77e5\u9053\u5bf9\u65b9\u80fd\u542c\u89c1\u81ea\u5df1\uff0c\u901a\u4fe1\u624d\u7b97\u771f\u6b63\u5efa\u7acb\u3002 \u5982\u679c\u53ea\u6709\u4e24\u6b21\uff1a \u4f60\u8bf4\u201c\u5582\uff0c\u4f60\u5728\u5417\uff1f\u201d \u670b\u53cb\u8bf4\u201c\u6211\u5728\uff0c\u4f60\u80fd\u542c\u5230\u6211\u5417\uff1f\u201d \u8fd9\u65f6\u670b\u53cb\u4e0d\u77e5\u9053\u4f60\u5230\u5e95\u80fd\u4e0d\u80fd\u542c\u89c1\u4ed6\uff0c\u53ef\u80fd\u4f60\u5df2\u7ecf\u8d70\u5f00\u4e86\uff0c\u4f46\u4ed6\u8fd8\u4ee5\u4e3a\u4f60\u4eec\u80fd\u6b63\u5e38\u804a\u5929\uff0c\u5bb9\u6613\u51fa\u9519\u3002 \u603b\u7ed3\uff1a \u4e09\u6b21\u63e1\u624b\u5c31\u662f\u4e3a\u4e86\u8ba9\u53cc\u65b9\u90fd\u786e\u8ba4\u201c\u6211\u80fd\u8054\u7cfb\u4f60\uff0c\u4f60\u4e5f\u80fd\u8054\u7cfb\u6211\u201d\uff0c\u9632\u6b62\u51fa\u73b0\u4e00\u65b9\u4ee5\u4e3a\u80fd\u901a\u4fe1\u3001\u53e6\u4e00\u65b9\u5374\u4e0d\u884c\u7684\u5c34\u5c2c\u60c5\u51b5\u3002\u4e24\u6b21\u63e1\u624b\u505a\u4e0d\u5230\u8fd9\u4e00\u70b9\u3002","title":"\u8ba1\u7b97\u673a\u7f51\u7edc45\u9053\u9762\u8bd5"},{"location":"Network/Network_Interview/#_1","text":"\u4e09\u6b21\u63e1\u624b\u662f\u4e3a\u4e86 \u53ef\u9760\u5730\u5efa\u7acbTCP\u8fde\u63a5\uff0c\u786e\u4fdd\u901a\u4fe1\u53cc\u65b9\u90fd\u5177\u5907\u6536\u53d1\u80fd\u529b \u3002 \u5982\u679c\u53ea\u8fdb\u884c\u4e24\u6b21\u63e1\u624b\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u95ee\u9898\uff1a \u5047\u8bbe\u5ba2\u6237\u7aef\u53d1\u9001\u4e86\u7b2c\u4e00\u6b21SYN\u8bf7\u6c42\uff0c\u4f46\u7531\u4e8e\u7f51\u7edc\u5ef6\u8fdf\uff0c\u670d\u52a1\u7aef\u8fdf\u8fdf\u6ca1\u6709\u6536\u5230\u3002\u5ba2\u6237\u7aef\u8d85\u65f6\u540e\u91cd\u53d1SYN\uff0c\u5e76\u6210\u529f\u5efa\u7acb\u8fde\u63a5\u3002\u6b64\u65f6\uff0c\u7b2c\u4e00\u6b21SYN\u8fdf\u5230\uff0c\u670d\u52a1\u7aef\u53c8\u6536\u5230\u5e76\u56de\u590dSYN+ACK\uff0c\u4f46\u5ba2\u6237\u7aef\u5df2\u7ecf\u4e0d\u518d\u7b49\u5f85\uff0c\u670d\u52a1\u7aef\u5374\u4ee5\u4e3a\u8fde\u63a5\u5df2\u5efa\u7acb\uff0c\u9020\u6210\u201c \u534a\u8fde\u63a5 \u201d\u6216\u201c \u5931\u6548\u8fde\u63a5 \u201d\u95ee\u9898\u3002 \u4e09\u6b21\u63e1\u624b\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a \u7b2c\u4e00\u6b21 \uff1a\u5ba2\u6237\u7aef\u53d1\u9001SYN\uff0c\u8868\u793a\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5\u3002 \u7b2c\u4e8c\u6b21 \uff1a\u670d\u52a1\u7aef\u6536\u5230SYN\uff0c\u56de\u590dSYN+ACK\uff0c\u8868\u793a\u540c\u610f\u8fde\u63a5\u5e76\u544a\u77e5\u81ea\u5df1\u4e5f\u53ef\u4ee5\u901a\u4fe1\u3002 \u7b2c\u4e09\u6b21 \uff1a\u5ba2\u6237\u7aef\u6536\u5230SYN+ACK\u540e\uff0c\u518d\u53d1\u9001ACK\uff0c\u8868\u793a\u81ea\u5df1\u4e5f\u53ef\u4ee5\u901a\u4fe1\uff0c\u8fde\u63a5\u5efa\u7acb\u3002 \u4e09\u6b21\u63e1\u624b\u53ef\u4ee5\u786e\u4fdd\uff1a - \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u90fd\u786e\u8ba4\u4e86\u5bf9\u65b9\u7684\u63a5\u6536\u548c\u53d1\u9001\u80fd\u529b\u3002 - \u907f\u514d\u5386\u53f2\u5931\u6548\u8fde\u63a5\u5f71\u54cd\u5f53\u524d\u901a\u4fe1\u3002 \u603b\u7ed3\uff1a \u4e09\u6b21\u63e1\u624b\u662f\u4e3a\u4e86\u9632\u6b62\u5386\u53f2\u8fde\u63a5\u8bf7\u6c42\u9020\u6210\u9519\u8bef\u8fde\u63a5\uff0c\u786e\u4fdd\u53cc\u65b9\u90fd\u80fd\u6b63\u5e38\u6536\u53d1\u6570\u636e\u3002\u4e24\u6b21\u63e1\u624b\u65e0\u6cd5\u4fdd\u8bc1\u8fd9\u4e00\u70b9\u3002 SYN \u662f Synchronize\uff08\u540c\u6b65\uff09 \u7684\u7f29\u5199\uff0c\u662f TCP \u534f\u8bae\u4e2d\u7528\u4e8e\u5efa\u7acb\u8fde\u63a5\u7684\u4e00\u4e2a\u6807\u5fd7\u4f4d\uff08flag\uff09\u3002 \u5728\u4e09\u6b21\u63e1\u624b\u8fc7\u7a0b\u4e2d\uff1a SYN \u8868\u793a\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5\uff0c\u544a\u8bc9\u5bf9\u65b9\u201c\u6211\u8981\u5efa\u7acb\u8fde\u63a5\uff0c\u5e76\u540c\u6b65\u5e8f\u5217\u53f7\u201d\u3002 \u6570\u636e\u5305\u7684 TCP \u9996\u90e8\u4e2d\u6709\u4e00\u4e2a SYN \u6807\u5fd7\u4f4d\uff0c\u53ea\u6709\u5728\u5efa\u7acb\u8fde\u63a5\u65f6\u624d\u4f1a\u88ab\u7f6e\u4e3a 1\u3002 \u603b\u7ed3\uff1a SYN \u5c31\u662f\u201c\u540c\u6b65\u5e8f\u5217\u53f7\u201d\u7684\u610f\u601d\uff0c\u7528\u4e8e\u53d1\u8d77\u548c\u5efa\u7acb TCP \u8fde\u63a5\u3002 \u901a\u4fd7\u4e00\u70b9\u89e3\u91ca\uff1a \u5047\u8bbe\u4f60\u548c\u670b\u53cb\u6253\u7535\u8bdd\uff1a \u7b2c\u4e00\u6b21 \uff1a\u4f60\u8bf4\u201c\u5582\uff0c\u4f60\u5728\u5417\uff1f\u201d\uff08\u4f60\u53d1SYN\uff09 \u7b2c\u4e8c\u6b21 \uff1a\u670b\u53cb\u8bf4\u201c\u6211\u5728\uff0c\u4f60\u80fd\u542c\u5230\u6211\u5417\uff1f\u201d\uff08\u670b\u53cb\u53d1SYN+ACK\uff09 \u7b2c\u4e09\u6b21 \uff1a\u4f60\u8bf4\u201c\u6211\u80fd\u542c\u5230\u4f60\uff01\u201d\uff08\u4f60\u53d1ACK\uff09 \u8fd9\u6837\u4f60\u4eec\u90fd\u77e5\u9053\u5bf9\u65b9\u80fd\u542c\u89c1\u81ea\u5df1\uff0c\u901a\u4fe1\u624d\u7b97\u771f\u6b63\u5efa\u7acb\u3002 \u5982\u679c\u53ea\u6709\u4e24\u6b21\uff1a \u4f60\u8bf4\u201c\u5582\uff0c\u4f60\u5728\u5417\uff1f\u201d \u670b\u53cb\u8bf4\u201c\u6211\u5728\uff0c\u4f60\u80fd\u542c\u5230\u6211\u5417\uff1f\u201d \u8fd9\u65f6\u670b\u53cb\u4e0d\u77e5\u9053\u4f60\u5230\u5e95\u80fd\u4e0d\u80fd\u542c\u89c1\u4ed6\uff0c\u53ef\u80fd\u4f60\u5df2\u7ecf\u8d70\u5f00\u4e86\uff0c\u4f46\u4ed6\u8fd8\u4ee5\u4e3a\u4f60\u4eec\u80fd\u6b63\u5e38\u804a\u5929\uff0c\u5bb9\u6613\u51fa\u9519\u3002 \u603b\u7ed3\uff1a \u4e09\u6b21\u63e1\u624b\u5c31\u662f\u4e3a\u4e86\u8ba9\u53cc\u65b9\u90fd\u786e\u8ba4\u201c\u6211\u80fd\u8054\u7cfb\u4f60\uff0c\u4f60\u4e5f\u80fd\u8054\u7cfb\u6211\u201d\uff0c\u9632\u6b62\u51fa\u73b0\u4e00\u65b9\u4ee5\u4e3a\u80fd\u901a\u4fe1\u3001\u53e6\u4e00\u65b9\u5374\u4e0d\u884c\u7684\u5c34\u5c2c\u60c5\u51b5\u3002\u4e24\u6b21\u63e1\u624b\u505a\u4e0d\u5230\u8fd9\u4e00\u70b9\u3002","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u4e09\u6b21\u63e1\u624b\uff1f\u4e24\u6b21\u4e0d\u884c\uff1f"},{"location":"Network/network_design/","text":"\u66a8\u5357\u5927\u5b66\u7f51\u7edc\u8bbe\u8ba1 \u903b\u8f91\u7ed3\u6784\u8bbe\u8ba1 \u7269\u7406\u7ed3\u6784\u8bbe\u8ba1","title":"\u7f51\u7edc\u8bbe\u8ba1\u62a5\u544a"},{"location":"Network/network_design/#_1","text":"","title":"\u66a8\u5357\u5927\u5b66\u7f51\u7edc\u8bbe\u8ba1"},{"location":"Network/network_design/#_2","text":"","title":"\u903b\u8f91\u7ed3\u6784\u8bbe\u8ba1"},{"location":"Network/network_design/#_3","text":"","title":"\u7269\u7406\u7ed3\u6784\u8bbe\u8ba1"},{"location":"Project/chat_usegpt/","text":"\u8fd9\u4e2a\u9879\u76ee\u4e3b\u8981\u6d4b\u8bd5\u6570\u636e\u5e93 \u8c03\u7528\u5927\u8bed\u8a00\u6a21\u578b\u6765\u505a\u4e86\u4e00\u4e2a\u804a\u5929\u9875\u9762","title":"\u804a\u5929web\u5e94\u7528"},{"location":"Project/chat_usegpt/#_1","text":"","title":"\u8fd9\u4e2a\u9879\u76ee\u4e3b\u8981\u6d4b\u8bd5\u6570\u636e\u5e93"},{"location":"Project/chat_usegpt/#_2","text":"","title":"\u8c03\u7528\u5927\u8bed\u8a00\u6a21\u578b\u6765\u505a\u4e86\u4e00\u4e2a\u804a\u5929\u9875\u9762"},{"location":"Project/llm_testpilot/","text":"\u5bf9\u5927\u6a21\u578b\u81ea\u52a8\u5316\u751f\u6210\u5355\u5143\u6d4b\u8bd5\u7684\u7ecf\u9a8c\u6027\u8bc4\u4f30 \u70b9\u51fb\u8fd9\u91cc\u4e0b\u8f7d PDF \u6587\u4ef6","title":"\u5bf9\u5927\u6a21\u578b\u81ea\u52a8\u5316\u751f\u6210\u5355\u5143\u6d4b\u8bd5\u7684\u7ecf\u9a8c\u6027\u8bc4\u4f30"},{"location":"Project/llm_testpilot/#_1","text":"\u70b9\u51fb\u8fd9\u91cc\u4e0b\u8f7d PDF \u6587\u4ef6","title":"\u5bf9\u5927\u6a21\u578b\u81ea\u52a8\u5316\u751f\u6210\u5355\u5143\u6d4b\u8bd5\u7684\u7ecf\u9a8c\u6027\u8bc4\u4f30"},{"location":"Project/plan/","text":"\ud83e\udde0 \u7b97\u6cd5\u5c97\u9762\u8bd5\u51c6\u5907\u8ba1\u5212\uff084 \u5468\uff09 \ud83d\udcc5 \u7b2c 1 \u5468\uff1a\u57fa\u7840\u6253\u7262 + \u9ad8\u9891\u9898\u5165\u95e8 \u7c7b\u522b \u5185\u5bb9 \u76ee\u6807/\u8d44\u6e90 \u7b97\u6cd5\u5237\u9898 \u6570\u7ec4\u3001\u5b57\u7b26\u4e32\u3001\u54c8\u5e0c\u8868\u3001\u53cc\u6307\u9488 LeetCode \u70ed\u9898 100 \u524d 10 \u9898 \u7b97\u6cd5\u7b14\u8bb0 \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\u3001\u57fa\u672c\u7b97\u6cd5\u6a21\u677f \u5199\u6210 Markdown/\u7b14\u8bb0\u672c \u8ba1\u7b97\u673a\u57fa\u7840 \u6570\u636e\u7ed3\u6784\u57fa\u7840\u3001\u5185\u5b58\u6a21\u578b\u3001\u6808\u5806\u533a\u522b \u300a\u738b\u9053\u6570\u636e\u7ed3\u6784\u300b/\u9762\u8bd5\u516b\u80a1\u6587 \u9879\u76ee\u51c6\u5907 \u68b3\u7406\u4f60\u505a\u8fc7\u7684\u9879\u76ee\uff0c\u63d0\u70bc\u7b97\u6cd5\u4eae\u70b9 \u6574\u7406\u6210\u4e00\u9875\u7eb8\u603b\u7ed3\uff08STAR \u6cd5\u5219\uff09 \ud83d\udcc5 \u7b2c 2 \u5468\uff1a\u8fdb\u9636\u9898\u578b + \u6570\u5b66\u4e0e\u7f16\u7a0b\u80fd\u529b\u63d0\u5347 \u7c7b\u522b \u5185\u5bb9 \u76ee\u6807/\u8d44\u6e90 \u7b97\u6cd5\u5237\u9898 \u94fe\u8868\u3001\u6808\u3001\u961f\u5217\u3001\u4e8c\u53c9\u6811\u904d\u5386 LeetCode \u70ed\u9898 100 \u7b2c 11\\~25 \u9898 \u7b97\u6cd5\u590d\u76d8 \u6bcf\u5929\u81f3\u5c11\u6574\u7406 1 \u9898\u89e3 \u601d\u8def\u6e05\u6670 + \u65f6\u95f4/\u7a7a\u95f4\u5206\u6790 \u6570\u5b66\u57fa\u7840 \u6982\u7387\u8bba\u57fa\u7840\u3001\u671f\u671b\u65b9\u5dee\u3001\u8d1d\u53f6\u65af\u516c\u5f0f \u300a\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1\u300b\u6559\u6750\u7b14\u8bb0 \u7f16\u7a0b\u80fd\u529b C++ STL / Python \u57fa\u7840\uff08map, set\uff09 \u5199\u51e0\u4e2a\u5c0f\u51fd\u6570\u9a8c\u8bc1\u7528\u6cd5 \ud83d\udcc5 \u7b2c 3 \u5468\uff1a\u9ad8\u9891\u96be\u9898 + \u7cfb\u7edf\u77e5\u8bc6\u56de\u987e \u7c7b\u522b \u5185\u5bb9 \u76ee\u6807/\u8d44\u6e90 \u7b97\u6cd5\u5237\u9898 \u52a8\u6001\u89c4\u5212\u3001\u56de\u6eaf\u3001\u8d2a\u5fc3\u3001\u4e8c\u5206\u67e5\u627e LeetCode \u70ed\u9898 100 \u7b2c 26\\~50 \u9898 \u7cfb\u7edf\u516b\u80a1 \u64cd\u4f5c\u7cfb\u7edf+\u8ba1\u7b97\u673a\u7f51\u7edc\u7b80\u7b54\u9898\u590d\u76d8 \u201c\u9762\u8bd5\u5b98\u7cfb\u5217\u201d\u6587\u7ae0 / \u725b\u5ba2\u771f\u9898\u603b\u7ed3 \u9879\u76ee\u5f3a\u5316 \u505a\u9879\u76ee PPT \u6216\u6587\u6863\uff0c\u6a21\u62df\u8bb2\u89e3\u6d41\u7a0b \u51c6\u5907\u9762\u8bd5\u65f6\u7684\u81ea\u6211\u4ecb\u7ecd + \u9879\u76ee\u8bb2\u89e3 \u6a21\u62df\u9762\u8bd5 \u725b\u5ba2\u7f51\u5728\u7ebf\u6a21\u62df / \u548c\u540c\u5b66\u7ec4\u961f\u7ec3\u4e60 \u4e00\u5929\u81f3\u5c11\u4e00\u6b21\u8ba1\u65f6\u5199\u9898 \ud83d\udcc5 \u7b2c 4 \u5468\uff1a\u51b2\u523a\u9636\u6bb5 + \u7efc\u5408\u6a21\u62df \u7c7b\u522b \u5185\u5bb9 \u76ee\u6807/\u8d44\u6e90 \u7b97\u6cd5\u5237\u9898 \u56fe\u8bba\u3001\u5e76\u67e5\u96c6\u3001\u62d3\u6251\u6392\u5e8f\u3001\u5806\u3001Trie\u6811 LeetCode \u70ed\u9898 100 \u7b2c 51\\~100 \u9898 \u7efc\u5408\u9898\u56de\u987e \u6574\u7406\u6613\u9519\u9898/\u4e0d\u4f1a\u7684\u9898 \u5efa\u7acb\u9519\u9898\u672c\uff0c\u5199\u6e05\u695a\u4e0d\u4f1a\u7684\u70b9 \u6570\u5b66/ML\uff08\u53ef\u9009\uff09 \u7ebf\u6027\u4ee3\u6570+\u68af\u5ea6\u4e0b\u964d+\u673a\u5668\u5b66\u4e60\u539f\u7406 \u9002\u7528\u4e8e AI/\u7b97\u6cd5\u5de5\u7a0b\u5c97 \u6a21\u62df\u9762\u8bd5 \u81ea\u6211\u4ecb\u7ecd + \u6280\u672f\u95ee\u7b54 + \u767d\u677f\u7b97\u6cd5 \u81ea\u5df1\u5f55\u89c6\u9891/\u8bed\u97f3\u7ec3\u4e60\u3001\u6539\u8fdb\u8868\u8fbe \u7b80\u5386\u4f18\u5316 \u4fee\u6539\u9879\u76ee\u63cf\u8ff0 + \u5f3a\u8c03\u7b97\u6cd5\u548c\u7ed3\u679c \u7b80\u6d01\u6709\u4eae\u70b9\uff0c\u907f\u514d\u6d41\u6c34\u8d26 \ud83c\udf81 \u9644\u52a0\u8d44\u6e90\u63a8\u8350 \u2705 \u5237\u9898\u7f51\u7ad9\uff1a LeetCode\uff08\u4e3b\u6218\u573a\uff09 \u725b\u5ba2\u7f51\uff08\u6709\u5f88\u591a\u516c\u53f8\u7b14\u8bd5\u539f\u9898\uff09 \u7a0b\u5e8f\u5458\u9762\u8bd5\u91d1\u5178\uff08\u5251\u6307 Offer\uff09 \u2705 \u77e5\u8bc6\u70b9\u603b\u7ed3\uff1a labuladong \u7684\u7b97\u6cd5\u5c0f\u6284\uff08\u5f3a\u63a8\uff01\uff09 \u300a\u738b\u9053\u8ba1\u7b97\u673a\u7ec4\u6210\u300b+\u300a\u64cd\u4f5c\u7cfb\u7edf\u300b+\u300a\u7f51\u7edc\u300b GitHub \u4e0a\u7684 tech-interview-handbook \ud83d\ude80 \u9762\u8bd5\u524d\u4e00\u5468\u7279\u522b\u5efa\u8bae \u6bcf\u5929\u6a21\u62df\u4e00\u573a\u771f\u5b9e\u9762\u8bd5\uff08\u9898 + \u81ea\u6211\u4ecb\u7ecd + \u9879\u76ee\uff09 \u5237\u9519\u9898\u548c\u7b14\u8bb0\uff0c\u4e0d\u518d\u76f2\u76ee\u5237\u65b0\u9898 \u65e9\u7761\u65e9\u8d77\uff0c\u4fdd\u6301\u7a33\u5b9a\u7684\u4f5c\u606f\u548c\u5fc3\u6001","title":"\u9762\u8bd5\u8ba1\u5212"},{"location":"Project/plan/#4","text":"","title":"\ud83e\udde0 \u7b97\u6cd5\u5c97\u9762\u8bd5\u51c6\u5907\u8ba1\u5212\uff084 \u5468\uff09"},{"location":"Project/plan/#1","text":"\u7c7b\u522b \u5185\u5bb9 \u76ee\u6807/\u8d44\u6e90 \u7b97\u6cd5\u5237\u9898 \u6570\u7ec4\u3001\u5b57\u7b26\u4e32\u3001\u54c8\u5e0c\u8868\u3001\u53cc\u6307\u9488 LeetCode \u70ed\u9898 100 \u524d 10 \u9898 \u7b97\u6cd5\u7b14\u8bb0 \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\u3001\u57fa\u672c\u7b97\u6cd5\u6a21\u677f \u5199\u6210 Markdown/\u7b14\u8bb0\u672c \u8ba1\u7b97\u673a\u57fa\u7840 \u6570\u636e\u7ed3\u6784\u57fa\u7840\u3001\u5185\u5b58\u6a21\u578b\u3001\u6808\u5806\u533a\u522b \u300a\u738b\u9053\u6570\u636e\u7ed3\u6784\u300b/\u9762\u8bd5\u516b\u80a1\u6587 \u9879\u76ee\u51c6\u5907 \u68b3\u7406\u4f60\u505a\u8fc7\u7684\u9879\u76ee\uff0c\u63d0\u70bc\u7b97\u6cd5\u4eae\u70b9 \u6574\u7406\u6210\u4e00\u9875\u7eb8\u603b\u7ed3\uff08STAR \u6cd5\u5219\uff09","title":"\ud83d\udcc5 \u7b2c 1 \u5468\uff1a\u57fa\u7840\u6253\u7262 + \u9ad8\u9891\u9898\u5165\u95e8"},{"location":"Project/plan/#2","text":"\u7c7b\u522b \u5185\u5bb9 \u76ee\u6807/\u8d44\u6e90 \u7b97\u6cd5\u5237\u9898 \u94fe\u8868\u3001\u6808\u3001\u961f\u5217\u3001\u4e8c\u53c9\u6811\u904d\u5386 LeetCode \u70ed\u9898 100 \u7b2c 11\\~25 \u9898 \u7b97\u6cd5\u590d\u76d8 \u6bcf\u5929\u81f3\u5c11\u6574\u7406 1 \u9898\u89e3 \u601d\u8def\u6e05\u6670 + \u65f6\u95f4/\u7a7a\u95f4\u5206\u6790 \u6570\u5b66\u57fa\u7840 \u6982\u7387\u8bba\u57fa\u7840\u3001\u671f\u671b\u65b9\u5dee\u3001\u8d1d\u53f6\u65af\u516c\u5f0f \u300a\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1\u300b\u6559\u6750\u7b14\u8bb0 \u7f16\u7a0b\u80fd\u529b C++ STL / Python \u57fa\u7840\uff08map, set\uff09 \u5199\u51e0\u4e2a\u5c0f\u51fd\u6570\u9a8c\u8bc1\u7528\u6cd5","title":"\ud83d\udcc5 \u7b2c 2 \u5468\uff1a\u8fdb\u9636\u9898\u578b + \u6570\u5b66\u4e0e\u7f16\u7a0b\u80fd\u529b\u63d0\u5347"},{"location":"Project/plan/#3","text":"\u7c7b\u522b \u5185\u5bb9 \u76ee\u6807/\u8d44\u6e90 \u7b97\u6cd5\u5237\u9898 \u52a8\u6001\u89c4\u5212\u3001\u56de\u6eaf\u3001\u8d2a\u5fc3\u3001\u4e8c\u5206\u67e5\u627e LeetCode \u70ed\u9898 100 \u7b2c 26\\~50 \u9898 \u7cfb\u7edf\u516b\u80a1 \u64cd\u4f5c\u7cfb\u7edf+\u8ba1\u7b97\u673a\u7f51\u7edc\u7b80\u7b54\u9898\u590d\u76d8 \u201c\u9762\u8bd5\u5b98\u7cfb\u5217\u201d\u6587\u7ae0 / \u725b\u5ba2\u771f\u9898\u603b\u7ed3 \u9879\u76ee\u5f3a\u5316 \u505a\u9879\u76ee PPT \u6216\u6587\u6863\uff0c\u6a21\u62df\u8bb2\u89e3\u6d41\u7a0b \u51c6\u5907\u9762\u8bd5\u65f6\u7684\u81ea\u6211\u4ecb\u7ecd + \u9879\u76ee\u8bb2\u89e3 \u6a21\u62df\u9762\u8bd5 \u725b\u5ba2\u7f51\u5728\u7ebf\u6a21\u62df / \u548c\u540c\u5b66\u7ec4\u961f\u7ec3\u4e60 \u4e00\u5929\u81f3\u5c11\u4e00\u6b21\u8ba1\u65f6\u5199\u9898","title":"\ud83d\udcc5 \u7b2c 3 \u5468\uff1a\u9ad8\u9891\u96be\u9898 + \u7cfb\u7edf\u77e5\u8bc6\u56de\u987e"},{"location":"Project/plan/#4_1","text":"\u7c7b\u522b \u5185\u5bb9 \u76ee\u6807/\u8d44\u6e90 \u7b97\u6cd5\u5237\u9898 \u56fe\u8bba\u3001\u5e76\u67e5\u96c6\u3001\u62d3\u6251\u6392\u5e8f\u3001\u5806\u3001Trie\u6811 LeetCode \u70ed\u9898 100 \u7b2c 51\\~100 \u9898 \u7efc\u5408\u9898\u56de\u987e \u6574\u7406\u6613\u9519\u9898/\u4e0d\u4f1a\u7684\u9898 \u5efa\u7acb\u9519\u9898\u672c\uff0c\u5199\u6e05\u695a\u4e0d\u4f1a\u7684\u70b9 \u6570\u5b66/ML\uff08\u53ef\u9009\uff09 \u7ebf\u6027\u4ee3\u6570+\u68af\u5ea6\u4e0b\u964d+\u673a\u5668\u5b66\u4e60\u539f\u7406 \u9002\u7528\u4e8e AI/\u7b97\u6cd5\u5de5\u7a0b\u5c97 \u6a21\u62df\u9762\u8bd5 \u81ea\u6211\u4ecb\u7ecd + \u6280\u672f\u95ee\u7b54 + \u767d\u677f\u7b97\u6cd5 \u81ea\u5df1\u5f55\u89c6\u9891/\u8bed\u97f3\u7ec3\u4e60\u3001\u6539\u8fdb\u8868\u8fbe \u7b80\u5386\u4f18\u5316 \u4fee\u6539\u9879\u76ee\u63cf\u8ff0 + \u5f3a\u8c03\u7b97\u6cd5\u548c\u7ed3\u679c \u7b80\u6d01\u6709\u4eae\u70b9\uff0c\u907f\u514d\u6d41\u6c34\u8d26","title":"\ud83d\udcc5 \u7b2c 4 \u5468\uff1a\u51b2\u523a\u9636\u6bb5 + \u7efc\u5408\u6a21\u62df"},{"location":"Project/plan/#_1","text":"","title":"\ud83c\udf81 \u9644\u52a0\u8d44\u6e90\u63a8\u8350"},{"location":"Project/plan/#_2","text":"LeetCode\uff08\u4e3b\u6218\u573a\uff09 \u725b\u5ba2\u7f51\uff08\u6709\u5f88\u591a\u516c\u53f8\u7b14\u8bd5\u539f\u9898\uff09 \u7a0b\u5e8f\u5458\u9762\u8bd5\u91d1\u5178\uff08\u5251\u6307 Offer\uff09","title":"\u2705 \u5237\u9898\u7f51\u7ad9\uff1a"},{"location":"Project/plan/#_3","text":"labuladong \u7684\u7b97\u6cd5\u5c0f\u6284\uff08\u5f3a\u63a8\uff01\uff09 \u300a\u738b\u9053\u8ba1\u7b97\u673a\u7ec4\u6210\u300b+\u300a\u64cd\u4f5c\u7cfb\u7edf\u300b+\u300a\u7f51\u7edc\u300b GitHub \u4e0a\u7684 tech-interview-handbook","title":"\u2705 \u77e5\u8bc6\u70b9\u603b\u7ed3\uff1a"},{"location":"Project/plan/#_4","text":"\u6bcf\u5929\u6a21\u62df\u4e00\u573a\u771f\u5b9e\u9762\u8bd5\uff08\u9898 + \u81ea\u6211\u4ecb\u7ecd + \u9879\u76ee\uff09 \u5237\u9519\u9898\u548c\u7b14\u8bb0\uff0c\u4e0d\u518d\u76f2\u76ee\u5237\u65b0\u9898 \u65e9\u7761\u65e9\u8d77\uff0c\u4fdd\u6301\u7a33\u5b9a\u7684\u4f5c\u606f\u548c\u5fc3\u6001","title":"\ud83d\ude80 \u9762\u8bd5\u524d\u4e00\u5468\u7279\u522b\u5efa\u8bae"},{"location":"Project/quantum/","text":"\u7ecf\u5178\u7b97\u6cd5 \u7ecf\u5178\u7b97\u6cd5\u4e3b\u8981\u57fa\u4e8e\u4f20\u7edf\u8ba1\u7b97\u673a\u548c\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u7ecf\u5178\u7b97\u6cd5\uff1a 1. \u57fa\u4e8e\u7279\u5f81\u7684\u7b97\u6cd5 Eigenfaces\uff08\u7279\u5f81\u8138\uff09 \uff1a \u4f7f\u7528\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u63d0\u53d6\u4eba\u8138\u7684\u4e3b\u8981\u7279\u5f81\u3002 \u901a\u8fc7\u964d\u7ef4\u5c06\u4eba\u8138\u8868\u793a\u4e3a\u7279\u5f81\u5411\u91cf\u3002 Fisherfaces \uff1a \u4f7f\u7528\u7ebf\u6027\u5224\u522b\u5206\u6790\uff08LDA\uff09\u6765\u589e\u5f3a\u7c7b\u95f4\u5dee\u5f02\u3002 \u5728\u5c0f\u6837\u672c\u6570\u636e\u96c6\u4e0a\u8868\u73b0\u8f83\u597d\u3002 2. \u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u7b97\u6cd5 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09 \uff1a \u7ecf\u5178\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u5982 VGG-Face\u3001FaceNet \u548c DeepFace\u3002 \u901a\u8fc7\u5377\u79ef\u5c42\u63d0\u53d6\u4eba\u8138\u7279\u5f81\uff0c\u9002\u7528\u4e8e\u5927\u89c4\u6a21\u6570\u636e\u96c6\u3002 ResNet \u548c\u5176\u53d8\u4f53 \uff1a \u4f7f\u7528\u6b8b\u5dee\u7f51\u7edc\uff08ResNet\uff09\u7ed3\u6784\uff0c\u89e3\u51b3\u6df1\u5c42\u7f51\u7edc\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002 ArcFace \u548c CosFace \u662f\u57fa\u4e8e ResNet \u7684\u4eba\u8138\u8bc6\u522b\u6a21\u578b\u3002 Transformer \u6a21\u578b \uff1a \u5982 Vision Transformer\uff08ViT\uff09\uff0c\u901a\u8fc7\u81ea\u6ce8\u610f\u529b\u673a\u5236\u63d0\u53d6\u4eba\u8138\u7279\u5f81\u3002 \u5728\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e0a\u8868\u73b0\u4f18\u5f02\u3002 3. \u57fa\u4e8e\u4f20\u7edf\u673a\u5668\u5b66\u4e60\u7684\u7b97\u6cd5 \u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09 \uff1a \u4f7f\u7528\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5\uff08\u5982 HOG \u6216 LBP\uff09\u540e\uff0c\u5229\u7528 SVM \u8fdb\u884c\u5206\u7c7b\u3002 K-\u8fd1\u90bb\uff08KNN\uff09 \uff1a \u7b80\u5355\u6613\u7528\uff0c\u4f46\u5728\u9ad8\u7ef4\u6570\u636e\u4e0a\u6548\u7387\u8f83\u4f4e\u3002 \u968f\u673a\u68ee\u6797\u548c\u51b3\u7b56\u6811 \uff1a \u7528\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\u7684\u4eba\u8138\u5206\u7c7b\u4efb\u52a1\u3002 \u91cf\u5b50\u7b97\u6cd5 \u91cf\u5b50\u7b97\u6cd5\u5728\u4eba\u8138\u8bc6\u522b\u4e2d\u7684\u7814\u7a76\u5c1a\u5904\u4e8e\u65e9\u671f\u9636\u6bb5\uff0c\u4f46\u4ee5\u4e0b\u662f\u4e00\u4e9b\u6f5c\u5728\u7684\u91cf\u5b50\u7b97\u6cd5\u548c\u5e94\u7528\u65b9\u5411\uff1a 1. \u91cf\u5b50\u652f\u6301\u5411\u91cf\u673a\uff08QSVM\uff09 \u57fa\u4e8e\u91cf\u5b50\u8ba1\u7b97\u7684\u652f\u6301\u5411\u91cf\u673a\u3002 \u5229\u7528\u91cf\u5b50\u6001\u8868\u793a\u9ad8\u7ef4\u7279\u5f81\u7a7a\u95f4\uff0c\u63d0\u5347\u5206\u7c7b\u6548\u7387\u3002 \u9002\u7528\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\u7684\u4e8c\u5206\u7c7b\u6216\u591a\u5206\u7c7b\u4efb\u52a1\u3002 2. \u91cf\u5b50\u4e3b\u6210\u5206\u5206\u6790\uff08QPCA\uff09 \u7c7b\u4f3c\u4e8e\u7ecf\u5178\u7684 PCA\uff0c\u7528\u4e8e\u964d\u7ef4\u548c\u7279\u5f81\u63d0\u53d6\u3002 \u5229\u7528\u91cf\u5b50\u8ba1\u7b97\u52a0\u901f\u7279\u5f81\u503c\u5206\u89e3\u8fc7\u7a0b\u3002 \u53ef\u7528\u4e8e\u63d0\u53d6\u4eba\u8138\u7684\u4e3b\u8981\u7279\u5f81\u3002 3. \u91cf\u5b50\u6700\u8fd1\u90bb\uff08Quantum KNN\uff09 \u57fa\u4e8e\u91cf\u5b50\u6001\u7684\u6700\u8fd1\u90bb\u7b97\u6cd5\u3002 \u5229\u7528\u91cf\u5b50\u53e0\u52a0\u6001\u5e76\u884c\u8ba1\u7b97\u8ddd\u79bb\uff0c\u63d0\u5347\u641c\u7d22\u6548\u7387\u3002 \u9002\u7528\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\u7684\u5feb\u901f\u5206\u7c7b\u3002 4. \u91cf\u5b50\u795e\u7ecf\u7f51\u7edc\uff08QNN\uff09 \u5c06\u91cf\u5b50\u8ba1\u7b97\u4e0e\u795e\u7ecf\u7f51\u7edc\u7ed3\u5408\uff0c\u7528\u4e8e\u4eba\u8138\u7279\u5f81\u63d0\u53d6\u548c\u5206\u7c7b\u3002 \u91cf\u5b50\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u5229\u7528\u91cf\u5b50\u6001\u7684\u9ad8\u7ef4\u7279\u6027\u8868\u793a\u590d\u6742\u7684\u7279\u5f81\u3002 5. \u91cf\u5b50\u76f8\u4f3c\u6027\u6d4b\u91cf \u4f7f\u7528\u91cf\u5b50\u6001\u7684\u5185\u79ef\u8ba1\u7b97\u76f8\u4f3c\u6027\u3002 \u53ef\u7528\u4e8e\u4eba\u8138\u5339\u914d\u548c\u9a8c\u8bc1\u4efb\u52a1\u3002 6. \u91cf\u5b50\u5f3a\u5316\u5b66\u4e60 \u5728\u4eba\u8138\u8bc6\u522b\u7684\u52a8\u6001\u573a\u666f\u4e2d\uff0c\u91cf\u5b50\u5f3a\u5316\u5b66\u4e60\u53ef\u4ee5\u4f18\u5316\u7279\u5f81\u63d0\u53d6\u548c\u5206\u7c7b\u7b56\u7565\u3002 \u7ecf\u5178\u7b97\u6cd5\u4e0e\u91cf\u5b50\u7b97\u6cd5\u7684\u5bf9\u6bd4 \u7279\u6027 \u7ecf\u5178\u7b97\u6cd5 \u91cf\u5b50\u7b97\u6cd5 \u8ba1\u7b97\u6548\u7387 \u4f9d\u8d56\u4e8e\u786c\u4ef6\u6027\u80fd\uff0c\u5904\u7406\u5927\u89c4\u6a21\u6570\u636e\u8f83\u6162 \u5229\u7528\u91cf\u5b50\u5e76\u884c\u6027\uff0c\u7406\u8bba\u4e0a\u66f4\u9ad8\u6548 \u9002\u7528\u573a\u666f \u5927\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u6210\u719f\u7684\u5de5\u4e1a\u5e94\u7528 \u5c0f\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u7814\u7a76\u9636\u6bb5 \u5b9e\u73b0\u96be\u5ea6 \u5de5\u7a0b\u5b9e\u73b0\u8f83\u4e3a\u6210\u719f \u91cf\u5b50\u786c\u4ef6\u548c\u7b97\u6cd5\u5b9e\u73b0\u4ecd\u6709\u6311\u6218 \u9c81\u68d2\u6027 \u5bf9\u566a\u58f0\u548c\u6570\u636e\u7f3a\u5931\u6709\u8f83\u597d\u5904\u7406\u80fd\u529b \u5bf9\u91cf\u5b50\u566a\u58f0\u654f\u611f \u672a\u6765\u5c55\u671b \u7ecf\u5178\u7b97\u6cd5 \uff1a\u968f\u7740\u6df1\u5ea6\u5b66\u4e60\u548c\u786c\u4ef6\u7684\u53d1\u5c55\uff0c\u7ecf\u5178\u7b97\u6cd5\u5728\u4eba\u8138\u8bc6\u522b\u4e2d\u7684\u8868\u73b0\u5df2\u7ecf\u975e\u5e38\u6210\u719f\uff0c\u5c24\u5176\u662f\u5728\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e0a\u3002 \u91cf\u5b50\u7b97\u6cd5 \uff1a\u91cf\u5b50\u7b97\u6cd5\u5728\u4eba\u8138\u8bc6\u522b\u4e2d\u7684\u5e94\u7528\u4ecd\u5904\u4e8e\u7814\u7a76\u9636\u6bb5\uff0c\u4f46\u5728\u7279\u5b9a\u573a\u666f\uff08\u5982\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\u6216\u9ad8\u7ef4\u7279\u5f81\u63d0\u53d6\uff09\u4e2d\u53ef\u80fd\u5177\u6709\u4f18\u52bf\u3002 \u672c\u6b21\u5b9e\u9a8c\u4ece\u91cf\u5b50\u652f\u6301\u5411\u91cf\u673a\uff08QSVM\uff09\u6216\u91cf\u5b50\u4e3b\u6210\u5206\u5206\u6790\uff08QPCA\uff09\u5165\u624b\uff0c\u6765\u4e0e\u7ecf\u5178\u7b97\u6cd5\u8fdb\u884c\u5bf9\u6bd4 \u6570\u636e\u96c6\u9009\u62e9 \u4ee5\u4e0b\u662f\u4e00\u4e9b\u9002\u5408\u4eba\u8138\u8bc6\u522b\u5b9e\u9a8c\u7684\u516c\u5f00\u6570\u636e\u96c6\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u5b9e\u9a8c\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u6570\u636e\u96c6\uff1a 1. \u5e38\u89c1\u4eba\u8138\u8bc6\u522b\u6570\u636e\u96c6 LFW (Labeled Faces in the Wild) \u63cf\u8ff0 \uff1a\u5305\u542b 13,000 \u591a\u5f20\u6807\u6ce8\u7684\u4eba\u8138\u56fe\u50cf\uff0c\u9002\u7528\u4e8e\u4eba\u8138\u9a8c\u8bc1\u548c\u8bc6\u522b\u4efb\u52a1\u3002 \u7279\u70b9 \uff1a\u56fe\u50cf\u6765\u81ea\u73b0\u5b9e\u573a\u666f\uff0c\u5177\u6709\u591a\u6837\u6027\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a LFW \u5b98\u65b9\u7f51\u7ad9 CelebA (CelebFaces Attributes Dataset) \u63cf\u8ff0 \uff1a\u5305\u542b 20 \u4e07\u5f20\u540d\u4eba\u8138\u90e8\u56fe\u50cf\uff0c\u5e26\u6709 40 \u4e2a\u5c5e\u6027\u6807\u7b7e\uff08\u5982\u6027\u522b\u3001\u773c\u955c\u3001\u53d1\u578b\u7b49\uff09\u3002 \u7279\u70b9 \uff1a\u9002\u7528\u4e8e\u4eba\u8138\u5c5e\u6027\u5206\u6790\u548c\u751f\u6210\u4efb\u52a1\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a CelebA \u6570\u636e\u96c6 CASIA-WebFace \u63cf\u8ff0 \uff1a\u5305\u542b 10,000 \u591a\u4e2a\u8eab\u4efd\u7684 50 \u4e07\u5f20\u4eba\u8138\u56fe\u50cf\u3002 \u7279\u70b9 \uff1a\u9002\u7528\u4e8e\u4eba\u8138\u8bc6\u522b\u6a21\u578b\u7684\u8bad\u7ec3\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a CASIA-WebFace \u6570\u636e\u96c6 FER2013 (Facial Expression Recognition 2013) \u63cf\u8ff0 \uff1a\u5305\u542b 35,000 \u5f20\u4eba\u8138\u56fe\u50cf\uff0c\u6807\u6ce8\u4e86 7 \u79cd\u8868\u60c5\u7c7b\u522b\uff08\u5982\u9ad8\u5174\u3001\u60b2\u4f24\u3001\u6124\u6012\u7b49\uff09\u3002 \u7279\u70b9 \uff1a\u9002\u7528\u4e8e\u8868\u60c5\u8bc6\u522b\u4efb\u52a1\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a FER2013 \u6570\u636e\u96c6 WIDER FACE \u63cf\u8ff0 \uff1a\u5305\u542b 32,000 \u5f20\u56fe\u50cf\uff0c\u6807\u6ce8\u4e86 39 \u4e07\u5f20\u4eba\u8138\uff0c\u5177\u6709\u4e0d\u540c\u7684\u59ff\u6001\u3001\u8868\u60c5\u548c\u5149\u7167\u6761\u4ef6\u3002 \u7279\u70b9 \uff1a\u9002\u7528\u4e8e\u4eba\u8138\u68c0\u6d4b\u4efb\u52a1\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a WIDER FACE \u6570\u636e\u96c6 2. \u9ad8\u8d28\u91cf\u6570\u636e\u96c6\uff08\u9700\u8981\u7533\u8bf7\uff09 VGGFace \u548c VGGFace2 \u63cf\u8ff0 \uff1a\u5305\u542b\u6570\u767e\u4e07\u5f20\u4eba\u8138\u56fe\u50cf\uff0c\u9002\u7528\u4e8e\u4eba\u8138\u8bc6\u522b\u548c\u9a8c\u8bc1\u4efb\u52a1\u3002 \u7279\u70b9 \uff1aVGGFace2 \u63d0\u4f9b\u4e86\u66f4\u9ad8\u7684\u591a\u6837\u6027\uff08\u59ff\u6001\u3001\u5e74\u9f84\u3001\u79cd\u65cf\u7b49\uff09\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a VGGFace \u6570\u636e\u96c6 MS-Celeb-1M \u63cf\u8ff0 \uff1a\u5305\u542b 100 \u4e07\u5f20\u540d\u4eba\u8138\u90e8\u56fe\u50cf\u3002 \u7279\u70b9 \uff1a\u9002\u7528\u4e8e\u5927\u89c4\u6a21\u4eba\u8138\u8bc6\u522b\u4efb\u52a1\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a\u9700\u8981\u7533\u8bf7\uff0c\u5df2\u90e8\u5206\u4e0b\u7ebf\u3002 3. \u5c0f\u578b\u6570\u636e\u96c6\uff08\u9002\u5408\u5feb\u901f\u5b9e\u9a8c\uff09 Yale Face Database \u63cf\u8ff0 \uff1a\u5305\u542b 15 \u4e2a\u4eba\u7684 165 \u5f20\u4eba\u8138\u56fe\u50cf\uff0c\u5177\u6709\u4e0d\u540c\u7684\u8868\u60c5\u548c\u5149\u7167\u6761\u4ef6\u3002 \u7279\u70b9 \uff1a\u9002\u7528\u4e8e\u5c0f\u89c4\u6a21\u5b9e\u9a8c\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a Yale Face \u6570\u636e\u96c6 ORL (Olivetti Research Laboratory) \u63cf\u8ff0 \uff1a\u5305\u542b 40 \u4e2a\u4eba\u7684 400 \u5f20\u4eba\u8138\u56fe\u50cf\uff0c\u6bcf\u4eba 10 \u5f20\u3002 \u7279\u70b9 \uff1a\u9002\u7528\u4e8e\u4eba\u8138\u5206\u7c7b\u548c\u8bc6\u522b\u4efb\u52a1\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a ORL \u6570\u636e\u96c6 4. \u81ea\u5b9a\u4e49\u6570\u636e\u96c6 \u5982\u679c\u516c\u5f00\u6570\u636e\u96c6\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u521b\u5efa\u81ea\u5b9a\u4e49\u6570\u636e\u96c6\uff1a 1. \u6536\u96c6\u56fe\u50cf \uff1a\u4f7f\u7528\u624b\u673a\u6216\u76f8\u673a\u62cd\u6444\u4eba\u8138\u56fe\u50cf\u3002 2. \u6807\u6ce8\u5de5\u5177 \uff1a\u4f7f\u7528\u5de5\u5177\uff08\u5982 LabelImg \u6216 CVAT\uff09\u5bf9\u56fe\u50cf\u8fdb\u884c\u6807\u6ce8\u3002 3. \u6570\u636e\u589e\u5f3a \uff1a\u901a\u8fc7\u65cb\u8f6c\u3001\u88c1\u526a\u3001\u8c03\u6574\u4eae\u5ea6\u7b49\u65b9\u5f0f\u6269\u5145\u6570\u636e\u96c6\u3002 5. \u6570\u636e\u96c6\u5e73\u53f0 \u4ee5\u4e0b\u5e73\u53f0\u63d0\u4f9b\u4e86\u591a\u79cd\u516c\u5f00\u6570\u636e\u96c6\uff1a - Kaggle \uff1a https://www.kaggle.com/ - Google Dataset Search \uff1a https://datasetsearch.research.google.com/ - Papers with Code \uff1a https://paperswithcode.com/datasets \u5efa\u8bae \u5982\u679c\u4f60\u662f\u521d\u5b66\u8005\uff0c\u53ef\u4ee5\u4ece\u5c0f\u578b\u6570\u636e\u96c6\uff08\u5982 ORL \u6216 Yale\uff09\u5165\u624b\uff0c\u5feb\u901f\u9a8c\u8bc1\u7b97\u6cd5\u3002 \u5982\u679c\u9700\u8981\u8bad\u7ec3\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u63a8\u8350\u4f7f\u7528 CelebA \u6216 CASIA-WebFace \u7b49\u5927\u89c4\u6a21\u6570\u636e\u96c6\u3002 \u6839\u636e\u5b9e\u9a8c\u76ee\u6807\uff08\u5982\u8bc6\u522b\u3001\u68c0\u6d4b\u6216\u8868\u60c5\u5206\u6790\uff09\u9009\u62e9\u5408\u9002\u7684\u6570\u636e\u96c6\u3002","title":"\u91cf\u5b50\u7b97\u6cd5\u8fdb\u884c\u4eba\u8138\u8bc6\u522b"},{"location":"Project/quantum/#_1","text":"\u7ecf\u5178\u7b97\u6cd5\u4e3b\u8981\u57fa\u4e8e\u4f20\u7edf\u8ba1\u7b97\u673a\u548c\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u7ecf\u5178\u7b97\u6cd5\uff1a","title":"\u7ecf\u5178\u7b97\u6cd5"},{"location":"Project/quantum/#1","text":"Eigenfaces\uff08\u7279\u5f81\u8138\uff09 \uff1a \u4f7f\u7528\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u63d0\u53d6\u4eba\u8138\u7684\u4e3b\u8981\u7279\u5f81\u3002 \u901a\u8fc7\u964d\u7ef4\u5c06\u4eba\u8138\u8868\u793a\u4e3a\u7279\u5f81\u5411\u91cf\u3002 Fisherfaces \uff1a \u4f7f\u7528\u7ebf\u6027\u5224\u522b\u5206\u6790\uff08LDA\uff09\u6765\u589e\u5f3a\u7c7b\u95f4\u5dee\u5f02\u3002 \u5728\u5c0f\u6837\u672c\u6570\u636e\u96c6\u4e0a\u8868\u73b0\u8f83\u597d\u3002","title":"1. \u57fa\u4e8e\u7279\u5f81\u7684\u7b97\u6cd5"},{"location":"Project/quantum/#2","text":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09 \uff1a \u7ecf\u5178\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u5982 VGG-Face\u3001FaceNet \u548c DeepFace\u3002 \u901a\u8fc7\u5377\u79ef\u5c42\u63d0\u53d6\u4eba\u8138\u7279\u5f81\uff0c\u9002\u7528\u4e8e\u5927\u89c4\u6a21\u6570\u636e\u96c6\u3002 ResNet \u548c\u5176\u53d8\u4f53 \uff1a \u4f7f\u7528\u6b8b\u5dee\u7f51\u7edc\uff08ResNet\uff09\u7ed3\u6784\uff0c\u89e3\u51b3\u6df1\u5c42\u7f51\u7edc\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002 ArcFace \u548c CosFace \u662f\u57fa\u4e8e ResNet \u7684\u4eba\u8138\u8bc6\u522b\u6a21\u578b\u3002 Transformer \u6a21\u578b \uff1a \u5982 Vision Transformer\uff08ViT\uff09\uff0c\u901a\u8fc7\u81ea\u6ce8\u610f\u529b\u673a\u5236\u63d0\u53d6\u4eba\u8138\u7279\u5f81\u3002 \u5728\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e0a\u8868\u73b0\u4f18\u5f02\u3002","title":"2. \u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u7b97\u6cd5"},{"location":"Project/quantum/#3","text":"\u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09 \uff1a \u4f7f\u7528\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5\uff08\u5982 HOG \u6216 LBP\uff09\u540e\uff0c\u5229\u7528 SVM \u8fdb\u884c\u5206\u7c7b\u3002 K-\u8fd1\u90bb\uff08KNN\uff09 \uff1a \u7b80\u5355\u6613\u7528\uff0c\u4f46\u5728\u9ad8\u7ef4\u6570\u636e\u4e0a\u6548\u7387\u8f83\u4f4e\u3002 \u968f\u673a\u68ee\u6797\u548c\u51b3\u7b56\u6811 \uff1a \u7528\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\u7684\u4eba\u8138\u5206\u7c7b\u4efb\u52a1\u3002","title":"3. \u57fa\u4e8e\u4f20\u7edf\u673a\u5668\u5b66\u4e60\u7684\u7b97\u6cd5"},{"location":"Project/quantum/#_2","text":"\u91cf\u5b50\u7b97\u6cd5\u5728\u4eba\u8138\u8bc6\u522b\u4e2d\u7684\u7814\u7a76\u5c1a\u5904\u4e8e\u65e9\u671f\u9636\u6bb5\uff0c\u4f46\u4ee5\u4e0b\u662f\u4e00\u4e9b\u6f5c\u5728\u7684\u91cf\u5b50\u7b97\u6cd5\u548c\u5e94\u7528\u65b9\u5411\uff1a","title":"\u91cf\u5b50\u7b97\u6cd5"},{"location":"Project/quantum/#1-qsvm","text":"\u57fa\u4e8e\u91cf\u5b50\u8ba1\u7b97\u7684\u652f\u6301\u5411\u91cf\u673a\u3002 \u5229\u7528\u91cf\u5b50\u6001\u8868\u793a\u9ad8\u7ef4\u7279\u5f81\u7a7a\u95f4\uff0c\u63d0\u5347\u5206\u7c7b\u6548\u7387\u3002 \u9002\u7528\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\u7684\u4e8c\u5206\u7c7b\u6216\u591a\u5206\u7c7b\u4efb\u52a1\u3002","title":"1. \u91cf\u5b50\u652f\u6301\u5411\u91cf\u673a\uff08QSVM\uff09"},{"location":"Project/quantum/#2-qpca","text":"\u7c7b\u4f3c\u4e8e\u7ecf\u5178\u7684 PCA\uff0c\u7528\u4e8e\u964d\u7ef4\u548c\u7279\u5f81\u63d0\u53d6\u3002 \u5229\u7528\u91cf\u5b50\u8ba1\u7b97\u52a0\u901f\u7279\u5f81\u503c\u5206\u89e3\u8fc7\u7a0b\u3002 \u53ef\u7528\u4e8e\u63d0\u53d6\u4eba\u8138\u7684\u4e3b\u8981\u7279\u5f81\u3002","title":"2. \u91cf\u5b50\u4e3b\u6210\u5206\u5206\u6790\uff08QPCA\uff09"},{"location":"Project/quantum/#3-quantum-knn","text":"\u57fa\u4e8e\u91cf\u5b50\u6001\u7684\u6700\u8fd1\u90bb\u7b97\u6cd5\u3002 \u5229\u7528\u91cf\u5b50\u53e0\u52a0\u6001\u5e76\u884c\u8ba1\u7b97\u8ddd\u79bb\uff0c\u63d0\u5347\u641c\u7d22\u6548\u7387\u3002 \u9002\u7528\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\u7684\u5feb\u901f\u5206\u7c7b\u3002","title":"3. \u91cf\u5b50\u6700\u8fd1\u90bb\uff08Quantum KNN\uff09"},{"location":"Project/quantum/#4-qnn","text":"\u5c06\u91cf\u5b50\u8ba1\u7b97\u4e0e\u795e\u7ecf\u7f51\u7edc\u7ed3\u5408\uff0c\u7528\u4e8e\u4eba\u8138\u7279\u5f81\u63d0\u53d6\u548c\u5206\u7c7b\u3002 \u91cf\u5b50\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u5229\u7528\u91cf\u5b50\u6001\u7684\u9ad8\u7ef4\u7279\u6027\u8868\u793a\u590d\u6742\u7684\u7279\u5f81\u3002","title":"4. \u91cf\u5b50\u795e\u7ecf\u7f51\u7edc\uff08QNN\uff09"},{"location":"Project/quantum/#5","text":"\u4f7f\u7528\u91cf\u5b50\u6001\u7684\u5185\u79ef\u8ba1\u7b97\u76f8\u4f3c\u6027\u3002 \u53ef\u7528\u4e8e\u4eba\u8138\u5339\u914d\u548c\u9a8c\u8bc1\u4efb\u52a1\u3002","title":"5. \u91cf\u5b50\u76f8\u4f3c\u6027\u6d4b\u91cf"},{"location":"Project/quantum/#6","text":"\u5728\u4eba\u8138\u8bc6\u522b\u7684\u52a8\u6001\u573a\u666f\u4e2d\uff0c\u91cf\u5b50\u5f3a\u5316\u5b66\u4e60\u53ef\u4ee5\u4f18\u5316\u7279\u5f81\u63d0\u53d6\u548c\u5206\u7c7b\u7b56\u7565\u3002","title":"6. \u91cf\u5b50\u5f3a\u5316\u5b66\u4e60"},{"location":"Project/quantum/#_3","text":"\u7279\u6027 \u7ecf\u5178\u7b97\u6cd5 \u91cf\u5b50\u7b97\u6cd5 \u8ba1\u7b97\u6548\u7387 \u4f9d\u8d56\u4e8e\u786c\u4ef6\u6027\u80fd\uff0c\u5904\u7406\u5927\u89c4\u6a21\u6570\u636e\u8f83\u6162 \u5229\u7528\u91cf\u5b50\u5e76\u884c\u6027\uff0c\u7406\u8bba\u4e0a\u66f4\u9ad8\u6548 \u9002\u7528\u573a\u666f \u5927\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u6210\u719f\u7684\u5de5\u4e1a\u5e94\u7528 \u5c0f\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u7814\u7a76\u9636\u6bb5 \u5b9e\u73b0\u96be\u5ea6 \u5de5\u7a0b\u5b9e\u73b0\u8f83\u4e3a\u6210\u719f \u91cf\u5b50\u786c\u4ef6\u548c\u7b97\u6cd5\u5b9e\u73b0\u4ecd\u6709\u6311\u6218 \u9c81\u68d2\u6027 \u5bf9\u566a\u58f0\u548c\u6570\u636e\u7f3a\u5931\u6709\u8f83\u597d\u5904\u7406\u80fd\u529b \u5bf9\u91cf\u5b50\u566a\u58f0\u654f\u611f","title":"\u7ecf\u5178\u7b97\u6cd5\u4e0e\u91cf\u5b50\u7b97\u6cd5\u7684\u5bf9\u6bd4"},{"location":"Project/quantum/#_4","text":"\u7ecf\u5178\u7b97\u6cd5 \uff1a\u968f\u7740\u6df1\u5ea6\u5b66\u4e60\u548c\u786c\u4ef6\u7684\u53d1\u5c55\uff0c\u7ecf\u5178\u7b97\u6cd5\u5728\u4eba\u8138\u8bc6\u522b\u4e2d\u7684\u8868\u73b0\u5df2\u7ecf\u975e\u5e38\u6210\u719f\uff0c\u5c24\u5176\u662f\u5728\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e0a\u3002 \u91cf\u5b50\u7b97\u6cd5 \uff1a\u91cf\u5b50\u7b97\u6cd5\u5728\u4eba\u8138\u8bc6\u522b\u4e2d\u7684\u5e94\u7528\u4ecd\u5904\u4e8e\u7814\u7a76\u9636\u6bb5\uff0c\u4f46\u5728\u7279\u5b9a\u573a\u666f\uff08\u5982\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\u6216\u9ad8\u7ef4\u7279\u5f81\u63d0\u53d6\uff09\u4e2d\u53ef\u80fd\u5177\u6709\u4f18\u52bf\u3002 \u672c\u6b21\u5b9e\u9a8c\u4ece\u91cf\u5b50\u652f\u6301\u5411\u91cf\u673a\uff08QSVM\uff09\u6216\u91cf\u5b50\u4e3b\u6210\u5206\u5206\u6790\uff08QPCA\uff09\u5165\u624b\uff0c\u6765\u4e0e\u7ecf\u5178\u7b97\u6cd5\u8fdb\u884c\u5bf9\u6bd4","title":"\u672a\u6765\u5c55\u671b"},{"location":"Project/quantum/#_5","text":"\u4ee5\u4e0b\u662f\u4e00\u4e9b\u9002\u5408\u4eba\u8138\u8bc6\u522b\u5b9e\u9a8c\u7684\u516c\u5f00\u6570\u636e\u96c6\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u5b9e\u9a8c\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u6570\u636e\u96c6\uff1a","title":"\u6570\u636e\u96c6\u9009\u62e9"},{"location":"Project/quantum/#1_1","text":"","title":"1. \u5e38\u89c1\u4eba\u8138\u8bc6\u522b\u6570\u636e\u96c6"},{"location":"Project/quantum/#lfw-labeled-faces-in-the-wild","text":"\u63cf\u8ff0 \uff1a\u5305\u542b 13,000 \u591a\u5f20\u6807\u6ce8\u7684\u4eba\u8138\u56fe\u50cf\uff0c\u9002\u7528\u4e8e\u4eba\u8138\u9a8c\u8bc1\u548c\u8bc6\u522b\u4efb\u52a1\u3002 \u7279\u70b9 \uff1a\u56fe\u50cf\u6765\u81ea\u73b0\u5b9e\u573a\u666f\uff0c\u5177\u6709\u591a\u6837\u6027\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a LFW \u5b98\u65b9\u7f51\u7ad9","title":"LFW (Labeled Faces in the Wild)"},{"location":"Project/quantum/#celeba-celebfaces-attributes-dataset","text":"\u63cf\u8ff0 \uff1a\u5305\u542b 20 \u4e07\u5f20\u540d\u4eba\u8138\u90e8\u56fe\u50cf\uff0c\u5e26\u6709 40 \u4e2a\u5c5e\u6027\u6807\u7b7e\uff08\u5982\u6027\u522b\u3001\u773c\u955c\u3001\u53d1\u578b\u7b49\uff09\u3002 \u7279\u70b9 \uff1a\u9002\u7528\u4e8e\u4eba\u8138\u5c5e\u6027\u5206\u6790\u548c\u751f\u6210\u4efb\u52a1\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a CelebA \u6570\u636e\u96c6","title":"CelebA (CelebFaces Attributes Dataset)"},{"location":"Project/quantum/#casia-webface","text":"\u63cf\u8ff0 \uff1a\u5305\u542b 10,000 \u591a\u4e2a\u8eab\u4efd\u7684 50 \u4e07\u5f20\u4eba\u8138\u56fe\u50cf\u3002 \u7279\u70b9 \uff1a\u9002\u7528\u4e8e\u4eba\u8138\u8bc6\u522b\u6a21\u578b\u7684\u8bad\u7ec3\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a CASIA-WebFace \u6570\u636e\u96c6","title":"CASIA-WebFace"},{"location":"Project/quantum/#fer2013-facial-expression-recognition-2013","text":"\u63cf\u8ff0 \uff1a\u5305\u542b 35,000 \u5f20\u4eba\u8138\u56fe\u50cf\uff0c\u6807\u6ce8\u4e86 7 \u79cd\u8868\u60c5\u7c7b\u522b\uff08\u5982\u9ad8\u5174\u3001\u60b2\u4f24\u3001\u6124\u6012\u7b49\uff09\u3002 \u7279\u70b9 \uff1a\u9002\u7528\u4e8e\u8868\u60c5\u8bc6\u522b\u4efb\u52a1\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a FER2013 \u6570\u636e\u96c6","title":"FER2013 (Facial Expression Recognition 2013)"},{"location":"Project/quantum/#wider-face","text":"\u63cf\u8ff0 \uff1a\u5305\u542b 32,000 \u5f20\u56fe\u50cf\uff0c\u6807\u6ce8\u4e86 39 \u4e07\u5f20\u4eba\u8138\uff0c\u5177\u6709\u4e0d\u540c\u7684\u59ff\u6001\u3001\u8868\u60c5\u548c\u5149\u7167\u6761\u4ef6\u3002 \u7279\u70b9 \uff1a\u9002\u7528\u4e8e\u4eba\u8138\u68c0\u6d4b\u4efb\u52a1\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a WIDER FACE \u6570\u636e\u96c6","title":"WIDER FACE"},{"location":"Project/quantum/#2_1","text":"","title":"2. \u9ad8\u8d28\u91cf\u6570\u636e\u96c6\uff08\u9700\u8981\u7533\u8bf7\uff09"},{"location":"Project/quantum/#vggface-vggface2","text":"\u63cf\u8ff0 \uff1a\u5305\u542b\u6570\u767e\u4e07\u5f20\u4eba\u8138\u56fe\u50cf\uff0c\u9002\u7528\u4e8e\u4eba\u8138\u8bc6\u522b\u548c\u9a8c\u8bc1\u4efb\u52a1\u3002 \u7279\u70b9 \uff1aVGGFace2 \u63d0\u4f9b\u4e86\u66f4\u9ad8\u7684\u591a\u6837\u6027\uff08\u59ff\u6001\u3001\u5e74\u9f84\u3001\u79cd\u65cf\u7b49\uff09\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a VGGFace \u6570\u636e\u96c6","title":"VGGFace \u548c VGGFace2"},{"location":"Project/quantum/#ms-celeb-1m","text":"\u63cf\u8ff0 \uff1a\u5305\u542b 100 \u4e07\u5f20\u540d\u4eba\u8138\u90e8\u56fe\u50cf\u3002 \u7279\u70b9 \uff1a\u9002\u7528\u4e8e\u5927\u89c4\u6a21\u4eba\u8138\u8bc6\u522b\u4efb\u52a1\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a\u9700\u8981\u7533\u8bf7\uff0c\u5df2\u90e8\u5206\u4e0b\u7ebf\u3002","title":"MS-Celeb-1M"},{"location":"Project/quantum/#3_1","text":"","title":"3. \u5c0f\u578b\u6570\u636e\u96c6\uff08\u9002\u5408\u5feb\u901f\u5b9e\u9a8c\uff09"},{"location":"Project/quantum/#yale-face-database","text":"\u63cf\u8ff0 \uff1a\u5305\u542b 15 \u4e2a\u4eba\u7684 165 \u5f20\u4eba\u8138\u56fe\u50cf\uff0c\u5177\u6709\u4e0d\u540c\u7684\u8868\u60c5\u548c\u5149\u7167\u6761\u4ef6\u3002 \u7279\u70b9 \uff1a\u9002\u7528\u4e8e\u5c0f\u89c4\u6a21\u5b9e\u9a8c\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a Yale Face \u6570\u636e\u96c6","title":"Yale Face Database"},{"location":"Project/quantum/#orl-olivetti-research-laboratory","text":"\u63cf\u8ff0 \uff1a\u5305\u542b 40 \u4e2a\u4eba\u7684 400 \u5f20\u4eba\u8138\u56fe\u50cf\uff0c\u6bcf\u4eba 10 \u5f20\u3002 \u7279\u70b9 \uff1a\u9002\u7528\u4e8e\u4eba\u8138\u5206\u7c7b\u548c\u8bc6\u522b\u4efb\u52a1\u3002 \u4e0b\u8f7d\u5730\u5740 \uff1a ORL \u6570\u636e\u96c6","title":"ORL (Olivetti Research Laboratory)"},{"location":"Project/quantum/#4","text":"\u5982\u679c\u516c\u5f00\u6570\u636e\u96c6\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u521b\u5efa\u81ea\u5b9a\u4e49\u6570\u636e\u96c6\uff1a 1. \u6536\u96c6\u56fe\u50cf \uff1a\u4f7f\u7528\u624b\u673a\u6216\u76f8\u673a\u62cd\u6444\u4eba\u8138\u56fe\u50cf\u3002 2. \u6807\u6ce8\u5de5\u5177 \uff1a\u4f7f\u7528\u5de5\u5177\uff08\u5982 LabelImg \u6216 CVAT\uff09\u5bf9\u56fe\u50cf\u8fdb\u884c\u6807\u6ce8\u3002 3. \u6570\u636e\u589e\u5f3a \uff1a\u901a\u8fc7\u65cb\u8f6c\u3001\u88c1\u526a\u3001\u8c03\u6574\u4eae\u5ea6\u7b49\u65b9\u5f0f\u6269\u5145\u6570\u636e\u96c6\u3002","title":"4. \u81ea\u5b9a\u4e49\u6570\u636e\u96c6"},{"location":"Project/quantum/#5_1","text":"\u4ee5\u4e0b\u5e73\u53f0\u63d0\u4f9b\u4e86\u591a\u79cd\u516c\u5f00\u6570\u636e\u96c6\uff1a - Kaggle \uff1a https://www.kaggle.com/ - Google Dataset Search \uff1a https://datasetsearch.research.google.com/ - Papers with Code \uff1a https://paperswithcode.com/datasets","title":"5. \u6570\u636e\u96c6\u5e73\u53f0"},{"location":"Project/quantum/#_6","text":"\u5982\u679c\u4f60\u662f\u521d\u5b66\u8005\uff0c\u53ef\u4ee5\u4ece\u5c0f\u578b\u6570\u636e\u96c6\uff08\u5982 ORL \u6216 Yale\uff09\u5165\u624b\uff0c\u5feb\u901f\u9a8c\u8bc1\u7b97\u6cd5\u3002 \u5982\u679c\u9700\u8981\u8bad\u7ec3\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u63a8\u8350\u4f7f\u7528 CelebA \u6216 CASIA-WebFace \u7b49\u5927\u89c4\u6a21\u6570\u636e\u96c6\u3002 \u6839\u636e\u5b9e\u9a8c\u76ee\u6807\uff08\u5982\u8bc6\u522b\u3001\u68c0\u6d4b\u6216\u8868\u60c5\u5206\u6790\uff09\u9009\u62e9\u5408\u9002\u7684\u6570\u636e\u96c6\u3002","title":"\u5efa\u8bae"},{"location":"Project/test_usegpt/","text":"\u8fd9\u4e2a\u9879\u76ee\u662f\u8c03\u7528\u5927\u8bed\u8a00\u6a21\u578b\u5b9e\u73b0\u81ea\u52a8\u5316\u7f16\u5199java\u6d4b\u8bd5\u7528\u4f8b \u9879\u76ee\u4f1a\u5c06ai\u8fd4\u56de\u7684\u6d4b\u8bd5\u4ee3\u7801\u653e\u5165\u6307\u5b9a\u76ee\u5f55\uff0c\u8fd0\u884cmaven\u6d4b\u8bd5\u6307\u4ee4","title":"\u8c03\u7528ai\u81ea\u52a8\u5316java\u6d4b\u8bd5"},{"location":"Project/test_usegpt/#java","text":"","title":"\u8fd9\u4e2a\u9879\u76ee\u662f\u8c03\u7528\u5927\u8bed\u8a00\u6a21\u578b\u5b9e\u73b0\u81ea\u52a8\u5316\u7f16\u5199java\u6d4b\u8bd5\u7528\u4f8b"},{"location":"Project/test_usegpt/#aimaven","text":"","title":"\u9879\u76ee\u4f1a\u5c06ai\u8fd4\u56de\u7684\u6d4b\u8bd5\u4ee3\u7801\u653e\u5165\u6307\u5b9a\u76ee\u5f55\uff0c\u8fd0\u884cmaven\u6d4b\u8bd5\u6307\u4ee4"},{"location":"Project/todo516/","text":"\ud83c\udfaf \u4e00\u3001\u6838\u5fc3\u8003\u5bdf\u6a21\u5757\u603b\u89c8 \u6a21\u5757 \u8bf4\u660e \u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784 \u6700\u6838\u5fc3\u90e8\u5206\uff0c\u57fa\u672c\u5fc5\u95ee\uff0c\u91cd\u70b9\u8003\u5bdf LeetCode \u5237\u9898\u80fd\u529b \u6570\u5b66\u57fa\u7840 \u6982\u7387\u8bba\u3001\u7ebf\u6027\u4ee3\u6570\u3001\u5fae\u79ef\u5206\uff0c\u5c24\u5176\u662f\u7ebf\u6027\u4ee3\u6570\u548c\u6982\u7387 \u7f16\u7a0b\u80fd\u529b \u901a\u5e38\u7528 C++ \u6216 Python\uff0c\u73b0\u573a\u5199\u4ee3\u7801\uff08\u6216\u5728\u7ebf\u7b14\u8bd5\uff09 \u8ba1\u7b97\u673a\u57fa\u7840 \u64cd\u4f5c\u7cfb\u7edf\u3001\u7f51\u7edc\u3001\u7f16\u8bd1\u539f\u7406\u3001\u6570\u636e\u5e93\u7b49\uff0c\u4e86\u89e3\u57fa\u672c\u6982\u5ff5 \u9879\u76ee\u7ecf\u5386 / \u5b9e\u4e60 \u8bb2\u6e05\u695a\u4f60\u505a\u8fc7\u4ec0\u4e48\u3001\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\u3001\u7528\u4e86\u4ec0\u4e48\u7b97\u6cd5 \u673a\u5668\u5b66\u4e60\u57fa\u7840\uff08\u53ef\u9009\uff09 \u5982\u679c\u4f60\u6295\u7684\u662f AI/\u7b97\u6cd5\u5de5\u7a0b\u5c97\uff0c\u53ef\u80fd\u4f1a\u95ee\u6a21\u578b\u3001\u4f18\u5316\u3001\u635f\u5931\u51fd\u6570\u7b49\u5185\u5bb9 \ud83d\udcda \u4e8c\u3001\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\uff08\u91cd\u70b9\uff01\uff09 \u5e38\u89c1\u9ad8\u9891\u9898\u578b\uff08\u5efa\u8bae\u5237 LeetCode Top 100\uff09\uff1a \u7c7b\u578b \u4f8b\u9898\uff08\u4f60\u53ef\u4ee5\u53bb LeetCode \u4e0a\u641c\uff09 \u6570\u7ec4 / \u53cc\u6307\u9488 \u4e24\u6570\u4e4b\u548c\u3001\u4e09\u6570\u4e4b\u548c\u3001\u79fb\u52a8\u96f6\u3001\u76db\u6c34\u6700\u591a\u7684\u5bb9\u5668 \u54c8\u5e0c / \u5b57\u7b26\u4e32 \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u3001\u5f02\u4f4d\u8bcd\u5206\u7ec4\u3001LRU \u7f13\u5b58\u673a\u5236 \u94fe\u8868 \u53cd\u8f6c\u94fe\u8868\u3001\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868\u3001\u73af\u5f62\u94fe\u8868 \u6808 / \u961f\u5217 \u6700\u5c0f\u6808\u3001\u6709\u6548\u62ec\u53f7\u3001\u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c \u4e8c\u53c9\u6811 \u524d\u5e8f\u4e2d\u5e8f\u540e\u5e8f\u904d\u5386\u3001\u5bf9\u79f0\u4e8c\u53c9\u6811\u3001\u6700\u5927\u6df1\u5ea6 \u4e8c\u5206\u67e5\u627e \u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4\u3001\u5e73\u65b9\u6839\u51fd\u6570 \u52a8\u6001\u89c4\u5212 \u722c\u697c\u68af\u3001\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3001\u96f6\u94b1\u5151\u6362\u30010-1 \u80cc\u5305\u95ee\u9898 \u56de\u6eaf / DFS \u5168\u6392\u5217\u3001\u7ec4\u5408\u603b\u548c\u3001N\u7687\u540e\u95ee\u9898 \u8d2a\u5fc3\u7b97\u6cd5 \u8df3\u8dc3\u6e38\u620f\u3001\u533a\u95f4\u8c03\u5ea6\u3001\u4e70\u5356\u80a1\u7968\u95ee\u9898 \u56fe\u7b97\u6cd5 \u5e76\u67e5\u96c6\u3001\u62d3\u6251\u6392\u5e8f\u3001\u6700\u77ed\u8def\u5f84\uff08Dijkstra / BFS\uff09\u7b49 \ud83e\uddee \u4e09\u3001\u6570\u5b66\u57fa\u7840 \u91cd\u70b9\u8003\u5bdf\uff1a \u7ebf\u6027\u4ee3\u6570 \uff1a \u5411\u91cf\u3001\u77e9\u9635\u8fd0\u7b97\u3001\u7279\u5f81\u503c/\u7279\u5f81\u5411\u91cf\u3001\u6b63\u4ea4\u3001\u5947\u5f02\u503c\u5206\u89e3\uff08SVD\uff09 \u6982\u7387\u8bba\u4e0e\u7edf\u8ba1 \uff1a \u6761\u4ef6\u6982\u7387\u3001\u8d1d\u53f6\u65af\u516c\u5f0f\u3001\u671f\u671b\u3001\u65b9\u5dee\u3001\u534f\u65b9\u5dee \u5206\u5e03\uff08\u9ad8\u65af\u3001\u4f2f\u52aa\u5229\u3001\u4e8c\u9879\u5206\u5e03\u3001\u5747\u5300\u5206\u5e03\u7b49\uff09 \u5fae\u79ef\u5206 \uff1a \u6c42\u5bfc\u3001\u94fe\u5f0f\u6cd5\u5219\u3001\u6781\u503c\u6761\u4ef6\uff08\u7528\u4e8e\u68af\u5ea6\u4e0b\u964d\uff09 \ud83d\udcbb \u56db\u3001\u7f16\u7a0b\u80fd\u529b \u8981\u6c42\uff1a \u719f\u7ec3\u638c\u63e1\u4e00\u95e8\u8bed\u8a00\uff08\u901a\u5e38\u662f C++ \u6216 Python \uff09\uff1b \u624b\u5199\u4ee3\u7801\u65f6\u903b\u8f91\u6e05\u6670\u3001\u65e0\u8bed\u6cd5\u9519\u8bef\uff1b \u4e86\u89e3\u65f6\u95f4\u590d\u6742\u5ea6\u3001\u7a7a\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff1b \u4f1a\u7528\u57fa\u672c STL\uff08C++\uff09\u6216\u5e38\u7528\u5e93\uff08Python\uff09\u3002 \ud83d\udcd8 \u4e94\u3001\u5e38\u89c1\u9762\u8bd5\u95ee\u9898\u4e3e\u4f8b \u6280\u672f\u9762\u8bd5\uff1a \u201c\u5b9e\u73b0\u4e00\u4e2a LRU \u7f13\u5b58\u201d \u201c\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u5224\u65ad\u662f\u5426\u4e3a\u5e73\u8861\u4e8c\u53c9\u6811\u201d \u201c\u8bbe\u8ba1\u4e00\u4e2a\u7535\u5546\u79d2\u6740\u7cfb\u7edf\u7684\u5e93\u5b58\u9650\u6d41\u65b9\u6848\u201d \u201c\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u7ebf\u7a0b\u5b89\u5168\u7684\u961f\u5217\uff1f\u201d \u6570\u5b66/\u673a\u5668\u5b66\u4e60\u76f8\u5173\uff08\u5982\u4f60\u6295 AI \u65b9\u5411\uff09\uff1a \u201c\u68af\u5ea6\u4e0b\u964d\u6cd5\u548c\u725b\u987f\u6cd5\u7684\u533a\u522b\uff1f\u201d \u201c\u4ec0\u4e48\u662f\u8fc7\u62df\u5408\uff1f\u600e\u4e48\u7f13\u89e3\uff1f\u201d \u201c\u903b\u8f91\u56de\u5f52\u4e0e\u7ebf\u6027\u56de\u5f52\u7684\u533a\u522b\uff1f\u201d \u201csoftmax \u8f93\u51fa\u4e3a\u5565\u8981\u51cf\u6700\u5927\u503c\uff1f\u201d \u9879\u76ee\u7c7b\u95ee\u9898\uff1a \u201c\u4f60\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86\u4ec0\u4e48\u7b97\u6cd5\uff1f\u600e\u4e48\u9009\u7684\uff1f\u201d \u201c\u9879\u76ee\u4e2d\u9047\u5230\u7684\u6700\u5927\u6311\u6218\u662f\uff1f\u4f60\u662f\u5982\u4f55\u89e3\u51b3\u7684\uff1f\u201d \ud83d\udcc4 \u516d\u3001\u52a0\u5206\u9879 ACM / \u84dd\u6865\u676f / \u6570\u5b66\u5efa\u6a21\u83b7\u5956\u7ecf\u5386\uff1b \u6709\u5b8c\u6574\u7684\u7b97\u6cd5\u7b14\u8bd5\u8bb0\u5f55\u548c\u9898\u89e3\uff08\u5982 LeetCode profile\uff09\uff1b GitHub \u6709\u9879\u76ee\uff0c\u6216\u53d1\u8fc7\u8bba\u6587\uff08\u5373\u4f7f\u662f\u6821\u5185\u8bfe\u9898\uff09\uff1b \u4e86\u89e3\u5e38\u89c1\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff08\u5982\u679c\u662f AI/\u7b97\u6cd5\u5de5\u7a0b\u65b9\u5411\uff09\uff1b \u5b9e\u4e60\u7ecf\u5386\uff08\u54ea\u6015\u662f\u6821\u5185\u5b9e\u9a8c\u5ba4\uff09\u4e5f\u80fd\u663e\u8457\u52a0\u5206\u3002 \u2705 \u5efa\u8bae\u51c6\u5907\u8def\u5f84 \u5237\u9898\uff1a LeetCode \u70ed\u9898 100 / \u5251\u6307 offer \u7ecf\u5178\u9898 / labuladong \u4e13\u680f\uff1b \u77e5\u8bc6\u70b9\u603b\u7ed3\uff1a \u628a\u6570\u636e\u7ed3\u6784\u3001DP\u3001\u56fe\u8bba\u3001\u6392\u5e8f\u7b49\u603b\u7ed3\u6210\u7b14\u8bb0\uff1b \u9879\u76ee\u5305\u88c5\uff1a \u6e05\u6670\u8868\u8fbe\u7b97\u6cd5\u5e94\u7528\u573a\u666f\u3001\u6539\u8fdb\u70b9\u3001\u6548\u679c\u63d0\u5347\uff1b \u516b\u80a1\u6587\u51c6\u5907\uff1a \u8ba1\u7b97\u673a\u7f51\u7edc\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u5e38\u89c1\u7b97\u6cd5\u5b9a\u4e49\u7b49\uff1b \u9762\u8bd5\u6a21\u62df\uff1a \u591a\u7528\u725b\u5ba2\u7f51\u3001\u529b\u6263\u8ba8\u8bba\u533a\u627e\u771f\u9898\u505a\u6a21\u62df\u7ec3\u4e60\u3002 \u5982\u679c\u4f60\u65b9\u4fbf\u7684\u8bdd\uff0c\u6211\u53ef\u4ee5\u5e2e\u4f60\u5b9a\u5236\u4e00\u4e2a\u300c\u7b97\u6cd5\u5c97\u9762\u8bd5\u51c6\u5907\u8ba1\u5212\u8868\u300d\u6216\u63a8\u8350\u6bcf\u65e5\u7ec3\u4e60\u9898\u5355\uff0c\u662f\u5426\u9700\u8981\uff1f","title":"\u5b66\u4e60\u51c6\u5907"},{"location":"Project/todo516/#_1","text":"\u6a21\u5757 \u8bf4\u660e \u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784 \u6700\u6838\u5fc3\u90e8\u5206\uff0c\u57fa\u672c\u5fc5\u95ee\uff0c\u91cd\u70b9\u8003\u5bdf LeetCode \u5237\u9898\u80fd\u529b \u6570\u5b66\u57fa\u7840 \u6982\u7387\u8bba\u3001\u7ebf\u6027\u4ee3\u6570\u3001\u5fae\u79ef\u5206\uff0c\u5c24\u5176\u662f\u7ebf\u6027\u4ee3\u6570\u548c\u6982\u7387 \u7f16\u7a0b\u80fd\u529b \u901a\u5e38\u7528 C++ \u6216 Python\uff0c\u73b0\u573a\u5199\u4ee3\u7801\uff08\u6216\u5728\u7ebf\u7b14\u8bd5\uff09 \u8ba1\u7b97\u673a\u57fa\u7840 \u64cd\u4f5c\u7cfb\u7edf\u3001\u7f51\u7edc\u3001\u7f16\u8bd1\u539f\u7406\u3001\u6570\u636e\u5e93\u7b49\uff0c\u4e86\u89e3\u57fa\u672c\u6982\u5ff5 \u9879\u76ee\u7ecf\u5386 / \u5b9e\u4e60 \u8bb2\u6e05\u695a\u4f60\u505a\u8fc7\u4ec0\u4e48\u3001\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\u3001\u7528\u4e86\u4ec0\u4e48\u7b97\u6cd5 \u673a\u5668\u5b66\u4e60\u57fa\u7840\uff08\u53ef\u9009\uff09 \u5982\u679c\u4f60\u6295\u7684\u662f AI/\u7b97\u6cd5\u5de5\u7a0b\u5c97\uff0c\u53ef\u80fd\u4f1a\u95ee\u6a21\u578b\u3001\u4f18\u5316\u3001\u635f\u5931\u51fd\u6570\u7b49\u5185\u5bb9","title":"\ud83c\udfaf \u4e00\u3001\u6838\u5fc3\u8003\u5bdf\u6a21\u5757\u603b\u89c8"},{"location":"Project/todo516/#_2","text":"","title":"\ud83d\udcda \u4e8c\u3001\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\uff08\u91cd\u70b9\uff01\uff09"},{"location":"Project/todo516/#leetcode-top-100","text":"\u7c7b\u578b \u4f8b\u9898\uff08\u4f60\u53ef\u4ee5\u53bb LeetCode \u4e0a\u641c\uff09 \u6570\u7ec4 / \u53cc\u6307\u9488 \u4e24\u6570\u4e4b\u548c\u3001\u4e09\u6570\u4e4b\u548c\u3001\u79fb\u52a8\u96f6\u3001\u76db\u6c34\u6700\u591a\u7684\u5bb9\u5668 \u54c8\u5e0c / \u5b57\u7b26\u4e32 \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u3001\u5f02\u4f4d\u8bcd\u5206\u7ec4\u3001LRU \u7f13\u5b58\u673a\u5236 \u94fe\u8868 \u53cd\u8f6c\u94fe\u8868\u3001\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868\u3001\u73af\u5f62\u94fe\u8868 \u6808 / \u961f\u5217 \u6700\u5c0f\u6808\u3001\u6709\u6548\u62ec\u53f7\u3001\u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c \u4e8c\u53c9\u6811 \u524d\u5e8f\u4e2d\u5e8f\u540e\u5e8f\u904d\u5386\u3001\u5bf9\u79f0\u4e8c\u53c9\u6811\u3001\u6700\u5927\u6df1\u5ea6 \u4e8c\u5206\u67e5\u627e \u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4\u3001\u5e73\u65b9\u6839\u51fd\u6570 \u52a8\u6001\u89c4\u5212 \u722c\u697c\u68af\u3001\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3001\u96f6\u94b1\u5151\u6362\u30010-1 \u80cc\u5305\u95ee\u9898 \u56de\u6eaf / DFS \u5168\u6392\u5217\u3001\u7ec4\u5408\u603b\u548c\u3001N\u7687\u540e\u95ee\u9898 \u8d2a\u5fc3\u7b97\u6cd5 \u8df3\u8dc3\u6e38\u620f\u3001\u533a\u95f4\u8c03\u5ea6\u3001\u4e70\u5356\u80a1\u7968\u95ee\u9898 \u56fe\u7b97\u6cd5 \u5e76\u67e5\u96c6\u3001\u62d3\u6251\u6392\u5e8f\u3001\u6700\u77ed\u8def\u5f84\uff08Dijkstra / BFS\uff09\u7b49","title":"\u5e38\u89c1\u9ad8\u9891\u9898\u578b\uff08\u5efa\u8bae\u5237 LeetCode Top 100\uff09\uff1a"},{"location":"Project/todo516/#_3","text":"","title":"\ud83e\uddee \u4e09\u3001\u6570\u5b66\u57fa\u7840"},{"location":"Project/todo516/#_4","text":"\u7ebf\u6027\u4ee3\u6570 \uff1a \u5411\u91cf\u3001\u77e9\u9635\u8fd0\u7b97\u3001\u7279\u5f81\u503c/\u7279\u5f81\u5411\u91cf\u3001\u6b63\u4ea4\u3001\u5947\u5f02\u503c\u5206\u89e3\uff08SVD\uff09 \u6982\u7387\u8bba\u4e0e\u7edf\u8ba1 \uff1a \u6761\u4ef6\u6982\u7387\u3001\u8d1d\u53f6\u65af\u516c\u5f0f\u3001\u671f\u671b\u3001\u65b9\u5dee\u3001\u534f\u65b9\u5dee \u5206\u5e03\uff08\u9ad8\u65af\u3001\u4f2f\u52aa\u5229\u3001\u4e8c\u9879\u5206\u5e03\u3001\u5747\u5300\u5206\u5e03\u7b49\uff09 \u5fae\u79ef\u5206 \uff1a \u6c42\u5bfc\u3001\u94fe\u5f0f\u6cd5\u5219\u3001\u6781\u503c\u6761\u4ef6\uff08\u7528\u4e8e\u68af\u5ea6\u4e0b\u964d\uff09","title":"\u91cd\u70b9\u8003\u5bdf\uff1a"},{"location":"Project/todo516/#_5","text":"","title":"\ud83d\udcbb \u56db\u3001\u7f16\u7a0b\u80fd\u529b"},{"location":"Project/todo516/#_6","text":"\u719f\u7ec3\u638c\u63e1\u4e00\u95e8\u8bed\u8a00\uff08\u901a\u5e38\u662f C++ \u6216 Python \uff09\uff1b \u624b\u5199\u4ee3\u7801\u65f6\u903b\u8f91\u6e05\u6670\u3001\u65e0\u8bed\u6cd5\u9519\u8bef\uff1b \u4e86\u89e3\u65f6\u95f4\u590d\u6742\u5ea6\u3001\u7a7a\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff1b \u4f1a\u7528\u57fa\u672c STL\uff08C++\uff09\u6216\u5e38\u7528\u5e93\uff08Python\uff09\u3002","title":"\u8981\u6c42\uff1a"},{"location":"Project/todo516/#_7","text":"","title":"\ud83d\udcd8 \u4e94\u3001\u5e38\u89c1\u9762\u8bd5\u95ee\u9898\u4e3e\u4f8b"},{"location":"Project/todo516/#_8","text":"\u201c\u5b9e\u73b0\u4e00\u4e2a LRU \u7f13\u5b58\u201d \u201c\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u5224\u65ad\u662f\u5426\u4e3a\u5e73\u8861\u4e8c\u53c9\u6811\u201d \u201c\u8bbe\u8ba1\u4e00\u4e2a\u7535\u5546\u79d2\u6740\u7cfb\u7edf\u7684\u5e93\u5b58\u9650\u6d41\u65b9\u6848\u201d \u201c\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2a\u7ebf\u7a0b\u5b89\u5168\u7684\u961f\u5217\uff1f\u201d","title":"\u6280\u672f\u9762\u8bd5\uff1a"},{"location":"Project/todo516/#ai","text":"\u201c\u68af\u5ea6\u4e0b\u964d\u6cd5\u548c\u725b\u987f\u6cd5\u7684\u533a\u522b\uff1f\u201d \u201c\u4ec0\u4e48\u662f\u8fc7\u62df\u5408\uff1f\u600e\u4e48\u7f13\u89e3\uff1f\u201d \u201c\u903b\u8f91\u56de\u5f52\u4e0e\u7ebf\u6027\u56de\u5f52\u7684\u533a\u522b\uff1f\u201d \u201csoftmax \u8f93\u51fa\u4e3a\u5565\u8981\u51cf\u6700\u5927\u503c\uff1f\u201d","title":"\u6570\u5b66/\u673a\u5668\u5b66\u4e60\u76f8\u5173\uff08\u5982\u4f60\u6295 AI \u65b9\u5411\uff09\uff1a"},{"location":"Project/todo516/#_9","text":"\u201c\u4f60\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86\u4ec0\u4e48\u7b97\u6cd5\uff1f\u600e\u4e48\u9009\u7684\uff1f\u201d \u201c\u9879\u76ee\u4e2d\u9047\u5230\u7684\u6700\u5927\u6311\u6218\u662f\uff1f\u4f60\u662f\u5982\u4f55\u89e3\u51b3\u7684\uff1f\u201d","title":"\u9879\u76ee\u7c7b\u95ee\u9898\uff1a"},{"location":"Project/todo516/#_10","text":"ACM / \u84dd\u6865\u676f / \u6570\u5b66\u5efa\u6a21\u83b7\u5956\u7ecf\u5386\uff1b \u6709\u5b8c\u6574\u7684\u7b97\u6cd5\u7b14\u8bd5\u8bb0\u5f55\u548c\u9898\u89e3\uff08\u5982 LeetCode profile\uff09\uff1b GitHub \u6709\u9879\u76ee\uff0c\u6216\u53d1\u8fc7\u8bba\u6587\uff08\u5373\u4f7f\u662f\u6821\u5185\u8bfe\u9898\uff09\uff1b \u4e86\u89e3\u5e38\u89c1\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff08\u5982\u679c\u662f AI/\u7b97\u6cd5\u5de5\u7a0b\u65b9\u5411\uff09\uff1b \u5b9e\u4e60\u7ecf\u5386\uff08\u54ea\u6015\u662f\u6821\u5185\u5b9e\u9a8c\u5ba4\uff09\u4e5f\u80fd\u663e\u8457\u52a0\u5206\u3002","title":"\ud83d\udcc4 \u516d\u3001\u52a0\u5206\u9879"},{"location":"Project/todo516/#_11","text":"\u5237\u9898\uff1a LeetCode \u70ed\u9898 100 / \u5251\u6307 offer \u7ecf\u5178\u9898 / labuladong \u4e13\u680f\uff1b \u77e5\u8bc6\u70b9\u603b\u7ed3\uff1a \u628a\u6570\u636e\u7ed3\u6784\u3001DP\u3001\u56fe\u8bba\u3001\u6392\u5e8f\u7b49\u603b\u7ed3\u6210\u7b14\u8bb0\uff1b \u9879\u76ee\u5305\u88c5\uff1a \u6e05\u6670\u8868\u8fbe\u7b97\u6cd5\u5e94\u7528\u573a\u666f\u3001\u6539\u8fdb\u70b9\u3001\u6548\u679c\u63d0\u5347\uff1b \u516b\u80a1\u6587\u51c6\u5907\uff1a \u8ba1\u7b97\u673a\u7f51\u7edc\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u5e38\u89c1\u7b97\u6cd5\u5b9a\u4e49\u7b49\uff1b \u9762\u8bd5\u6a21\u62df\uff1a \u591a\u7528\u725b\u5ba2\u7f51\u3001\u529b\u6263\u8ba8\u8bba\u533a\u627e\u771f\u9898\u505a\u6a21\u62df\u7ec3\u4e60\u3002 \u5982\u679c\u4f60\u65b9\u4fbf\u7684\u8bdd\uff0c\u6211\u53ef\u4ee5\u5e2e\u4f60\u5b9a\u5236\u4e00\u4e2a\u300c\u7b97\u6cd5\u5c97\u9762\u8bd5\u51c6\u5907\u8ba1\u5212\u8868\u300d\u6216\u63a8\u8350\u6bcf\u65e5\u7ec3\u4e60\u9898\u5355\uff0c\u662f\u5426\u9700\u8981\uff1f","title":"\u2705 \u5efa\u8bae\u51c6\u5907\u8def\u5f84"},{"location":"Rust/begin_rust/","text":"Rust \u7684\u7279\u70b9 Rust \u662f\u4e00\u79cd\u7cfb\u7edf\u7f16\u7a0b\u8bed\u8a00\uff0c\u4ee5\u5b89\u5168\u6027\u3001\u9ad8\u6027\u80fd\u548c\u5e76\u53d1\u6027\u4e3a\u6838\u5fc3\u8bbe\u8ba1\u76ee\u6807\u3002\u4ee5\u4e0b\u662f Rust \u7684\u4e3b\u8981\u7279\u70b9\uff1a 1. \u5185\u5b58\u5b89\u5168 \u6240\u6709\u6743\u7cfb\u7edf \uff1a Rust \u901a\u8fc7\u6240\u6709\u6743\uff08Ownership\uff09\u3001\u501f\u7528\uff08Borrowing\uff09\u548c\u751f\u547d\u5468\u671f\uff08Lifetimes\uff09\u673a\u5236\u7ba1\u7406\u5185\u5b58\uff0c\u907f\u514d\u4e86\u5e38\u89c1\u7684\u5185\u5b58\u9519\u8bef\uff08\u5982\u7a7a\u6307\u9488\u3001\u60ac\u5782\u6307\u9488\u3001\u5185\u5b58\u6cc4\u6f0f\uff09\u3002 \u65e0\u5783\u573e\u56de\u6536 \uff1a Rust \u4e0d\u4f9d\u8d56\u5783\u573e\u56de\u6536\u5668\uff0c\u800c\u662f\u901a\u8fc7\u7f16\u8bd1\u65f6\u68c0\u67e5\u786e\u4fdd\u5185\u5b58\u5b89\u5168\uff0c\u6027\u80fd\u66f4\u9ad8\u3002 2. \u9ad8\u6027\u80fd \u63a5\u8fd1 C/C++ \u7684\u6027\u80fd \uff1a Rust \u662f\u4e00\u95e8\u7cfb\u7edf\u7ea7\u8bed\u8a00\uff0c\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u6027\u80fd\u63a5\u8fd1 C \u548c C++\u3002 \u96f6\u6210\u672c\u62bd\u8c61 \uff1a Rust \u63d0\u4f9b\u4e86\u9ad8\u7ea7\u62bd\u8c61\uff08\u5982\u8fed\u4ee3\u5668\u3001\u95ed\u5305\u7b49\uff09\uff0c\u4f46\u4e0d\u4f1a\u5f15\u5165\u989d\u5916\u7684\u8fd0\u884c\u65f6\u5f00\u9500\u3002 3. \u5e76\u53d1\u6027 \u6570\u636e\u7ade\u4e89\u7684\u7f16\u8bd1\u65f6\u68c0\u6d4b \uff1a Rust \u7684\u6240\u6709\u6743\u7cfb\u7edf\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u68c0\u6d4b\u5e76\u53d1\u4ee3\u7801\u4e2d\u7684\u6570\u636e\u7ade\u4e89\u95ee\u9898\uff0c\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\u3002 \u65e0\u9501\u5e76\u53d1 \uff1a Rust \u63d0\u4f9b\u4e86\u591a\u79cd\u65e0\u9501\u5e76\u53d1\u5de5\u5177\uff08\u5982 Arc \u548c Mutex \uff09\uff0c\u7b80\u5316\u4e86\u5e76\u53d1\u7f16\u7a0b\u3002 4. \u73b0\u4ee3\u5316\u8bed\u8a00\u7279\u6027 \u6a21\u5f0f\u5339\u914d \uff1a Rust \u63d0\u4f9b\u5f3a\u5927\u7684\u6a21\u5f0f\u5339\u914d\u529f\u80fd\uff08 match \u8bed\u53e5\uff09\uff0c\u4f7f\u4ee3\u7801\u66f4\u7b80\u6d01\u6613\u8bfb\u3002 \u6cdb\u578b\u548c\u7279\u6027\uff08Traits\uff09 \uff1a Rust \u652f\u6301\u6cdb\u578b\u7f16\u7a0b\u548c\u7279\u6027\uff08\u7c7b\u4f3c\u4e8e\u63a5\u53e3\uff09\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u590d\u7528\u6027\u548c\u7075\u6d3b\u6027\u3002 \u5b8f\u7cfb\u7edf \uff1a Rust \u7684\u5b8f\u7cfb\u7edf\u529f\u80fd\u5f3a\u5927\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee3\u7801\u751f\u6210\u548c\u5143\u7f16\u7a0b\u3002 5. \u5f00\u53d1\u8005\u53cb\u597d \u5f3a\u5927\u7684\u7f16\u8bd1\u5668 \uff1a Rust \u7684\u7f16\u8bd1\u5668\uff08 rustc \uff09\u63d0\u4f9b\u8be6\u7ec6\u7684\u9519\u8bef\u4fe1\u606f\u548c\u5efa\u8bae\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\u3002 \u5305\u7ba1\u7406\u5668\u548c\u6784\u5efa\u5de5\u5177 \uff1a Rust \u63d0\u4f9b\u5185\u7f6e\u7684\u5305\u7ba1\u7406\u5668\u548c\u6784\u5efa\u5de5\u5177\uff08 Cargo \uff09\uff0c\u7b80\u5316\u4e86\u4f9d\u8d56\u7ba1\u7406\u548c\u9879\u76ee\u6784\u5efa\u3002 \u8de8\u5e73\u53f0\u652f\u6301 \uff1a Rust \u652f\u6301\u591a\u79cd\u5e73\u53f0\uff08\u5982 Windows\u3001Linux\u3001macOS \u548c\u5d4c\u5165\u5f0f\u8bbe\u5907\uff09\u3002 6. \u751f\u6001\u7cfb\u7edf \u4e30\u5bcc\u7684\u5e93\u548c\u5de5\u5177 \uff1a Rust \u62e5\u6709\u6d3b\u8dc3\u7684\u793e\u533a\u548c\u4e30\u5bcc\u7684\u7b2c\u4e09\u65b9\u5e93\uff08\u901a\u8fc7 crates.io \u63d0\u4f9b\uff09\u3002 WebAssembly \u652f\u6301 \uff1a Rust \u53ef\u4ee5\u7f16\u8bd1\u4e3a WebAssembly\uff0c\u9002\u5408\u9ad8\u6027\u80fd Web \u5e94\u7528\u5f00\u53d1\u3002 \u5d4c\u5165\u5f0f\u5f00\u53d1 \uff1a Rust \u652f\u6301\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5f00\u53d1\uff0c\u9002\u5408\u8d44\u6e90\u53d7\u9650\u7684\u73af\u5883\u3002 7. \u5b89\u5168\u6027 \u7c7b\u578b\u7cfb\u7edf \uff1a Rust \u7684\u7c7b\u578b\u7cfb\u7edf\u975e\u5e38\u4e25\u683c\uff0c\u907f\u514d\u4e86\u8bb8\u591a\u8fd0\u884c\u65f6\u9519\u8bef\u3002 \u65e0\u6570\u636e\u7ade\u4e89 \uff1a Rust \u7684\u5e76\u53d1\u6a21\u578b\u786e\u4fdd\u4e86\u7ebf\u7a0b\u5b89\u5168\uff0c\u907f\u514d\u4e86\u6570\u636e\u7ade\u4e89\u95ee\u9898\u3002 \u603b\u7ed3 Rust \u662f\u4e00\u95e8\u517c\u5177 \u6027\u80fd \u548c \u5b89\u5168\u6027 \u7684\u73b0\u4ee3\u7cfb\u7edf\u7f16\u7a0b\u8bed\u8a00\uff0c\u9002\u5408\u5f00\u53d1\u9ad8\u6027\u80fd\u3001\u5185\u5b58\u5b89\u5168\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u5728\u7cfb\u7edf\u7f16\u7a0b\u3001WebAssembly\u3001\u5d4c\u5165\u5f0f\u5f00\u53d1\u548c\u5e76\u53d1\u7f16\u7a0b\u7b49\u9886\u57df\u8868\u73b0\u51fa\u8272\u3002 \u770b\u4e86Rust\u5f00\u53d1\u8005\u8ddfLinux\u4f20\u7edfC\u5f00\u53d1\u8005\u7684battle(\u5927\u6982\u662f\u4e89\u8bba\u5173\u4e8e\u4e00\u4e9bLinux\u7cfb\u7edfapi\u8c03\u7528\u7684\u5199\u6cd5),\u6211\u66f4\u60f3\u4e86\u89e3\u8fd9\u95e8\u8bed\u8a00\u4e86,\u8fd9\u95e8\u8bed\u8a00\u4ee5\u9ad8\u6027\u80fd,\u5b89\u5168\u6027\u4e3a\u7279\u70b9,\u5e0c\u671b\u4e0d\u4f1a\u8ba9\u6211\u5931\u671b\u3002 \u9605\u8bfbRust\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u78b0\u5230\u7684\u4e00\u4e9b\u5c0f\u540d\u8bcd Rustacean \u662f Rust \u793e\u533a\u5bf9 Rust \u5f00\u53d1\u8005\u7684\u6635\u79f0\uff0c\u6765\u6e90\u4e8e\u5355\u8bcd Crustacean \uff08\u7532\u58f3\u7c7b\u52a8\u7269\uff09\u3002Rust \u7684\u5409\u7965\u7269\u662f\u4e00\u53ea\u540d\u4e3a Ferris \u7684\u8783\u87f9\uff0c\u56e0\u6b64 Rust \u5f00\u53d1\u8005\u88ab\u4eb2\u5207\u5730\u79f0\u4e3a Rustacean \u3002 \u76f8\u5173\u80cc\u666f Ferris \uff1a Rust \u7684\u975e\u5b98\u65b9\u5409\u7965\u7269\uff0c\u662f\u4e00\u53ea\u53ef\u7231\u7684\u7ea2\u8272\u8783\u87f9\u3002 Ferris \u7684\u540d\u5b57\u6765\u6e90\u4e8e \"ferrous\"\uff08\u94c1\u7684\uff09\uff0c\u4e0e Rust\uff08\u9508\uff09\u76f8\u5173\u3002 Rustacean \u7684\u542b\u4e49 \uff1a Rustacean \u662f Rust \u793e\u533a\u7684\u81ea\u79f0\uff0c\u8868\u793a\u5bf9 Rust \u7f16\u7a0b\u8bed\u8a00\u7684\u70ed\u7231\u548c\u5f52\u5c5e\u611f\u3002 \u793e\u533a\u6587\u5316 \uff1a Rust \u793e\u533a\u4ee5\u53cb\u597d\u548c\u5305\u5bb9\u8457\u79f0\uff0cRustacean \u4eec\u4e50\u4e8e\u5e2e\u52a9\u65b0\u624b\u5b66\u4e60 Rust\u3002 \u603b\u7ed3 Rustacean \u662f Rust \u5f00\u53d1\u8005\u7684\u6635\u79f0\uff0c\u8c61\u5f81\u7740 Rust \u793e\u533a\u7684\u6d3b\u529b\u548c\u53cb\u597d\u3002\u5982\u679c\u4f60\u6b63\u5728\u5b66\u4e60\u6216\u4f7f\u7528 Rust\uff0c\u4f60\u4e5f\u53ef\u4ee5\u81ea\u79f0\u4e3a\u4e00\u540d Rustacean\uff01 \u4e3a\u4ec0\u4e48Rust\u8981\u8bbe\u8ba1\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u4e0d\u53ef\u53d8,\u4e3a\u4ec0\u4e48\u8981\u53d8\u91cf\u906e\u853d \u53d8\u91cf\u906e\u853d\u7684\u610f\u4e49\u5728\u4e8e\uff1a 1. \u4fdd\u6301\u4e0d\u53ef\u53d8\u6027 \uff1a\u907f\u514d\u76f4\u63a5\u4fee\u6539\u53d8\u91cf\u503c\uff0c\u7b26\u5408 Rust \u7684\u5b89\u5168\u8bbe\u8ba1\u3002 2. \u7b80\u5316\u547d\u540d \uff1a\u907f\u514d\u5f15\u5165\u65b0\u7684\u53d8\u91cf\u540d\uff0c\u4f7f\u4ee3\u7801\u66f4\u7b80\u6d01\u3002 3. \u7075\u6d3b\u6027 \uff1a\u5141\u8bb8\u5728\u540c\u4e00\u4f5c\u7528\u57df\u5185\u91cd\u65b0\u58f0\u660e\u53d8\u91cf\uff0c\u65b9\u4fbf\u7c7b\u578b\u8f6c\u6362\u6216\u91cd\u65b0\u8ba1\u7b97\u3002 4. \u5b89\u5168\u6027 \uff1a\u907f\u514d\u53ef\u53d8\u53d8\u91cf\u7684\u526f\u4f5c\u7528\uff0c\u5c24\u5176\u662f\u5728\u5e76\u53d1\u573a\u666f\u4e2d\u3002 5. \u7f16\u8bd1\u5668\u4f18\u5316 \uff1a\u7f16\u8bd1\u5668\u4f1a\u4f18\u5316\u906e\u853d\u7684\u5185\u5b58\u5206\u914d\uff0c\u51cf\u5c11\u6027\u80fd\u5f00\u9500\u3002 Rust \u8bbe\u8ba1\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u4e0d\u53ef\u53d8\u7684\u539f\u56e0\u4e3b\u8981\u662f\u4e3a\u4e86 \u5b89\u5168\u6027 \u548c \u6027\u80fd \uff0c\u540c\u65f6\u7b80\u5316\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7ef4\u62a4\u6027\u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u539f\u56e0\uff1a 1. \u6570\u636e\u5b89\u5168\u6027 \u907f\u514d\u610f\u5916\u4fee\u6539 \uff1a \u9ed8\u8ba4\u4e0d\u53ef\u53d8\u53ef\u4ee5\u9632\u6b62\u5f00\u53d1\u8005\u65e0\u610f\u4e2d\u4fee\u6539\u53d8\u91cf\u7684\u503c\uff0c\u51cf\u5c11\u6f5c\u5728\u7684\u903b\u8f91\u9519\u8bef\u3002 \u7ebf\u7a0b\u5b89\u5168 \uff1a \u5728\u5e76\u53d1\u7f16\u7a0b\u4e2d\uff0c\u4e0d\u53ef\u53d8\u53d8\u91cf\u5929\u7136\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u907f\u514d\u4e86\u6570\u636e\u7ade\u4e89\u95ee\u9898\u3002 2. \u9f13\u52b1\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c Rust \u501f\u9274\u4e86\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u7684\u8bbe\u8ba1\u7406\u5ff5\uff0c\u9f13\u52b1\u4f7f\u7528\u4e0d\u53ef\u53d8\u6570\u636e\u3002 \u4e0d\u53ef\u53d8\u53d8\u91cf\u4f7f\u4ee3\u7801\u66f4\u5bb9\u6613\u63a8\u5bfc\u548c\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u53d8\u91cf\u7684\u503c\u4e0d\u4f1a\u5728\u7a0b\u5e8f\u4e2d\u9014\u53d1\u751f\u53d8\u5316\u3002 3. \u4f18\u5316\u7f16\u8bd1\u5668\u6027\u80fd \u4e0d\u53ef\u53d8\u53d8\u91cf\u7684\u503c\u5728\u6574\u4e2a\u751f\u547d\u5468\u671f\u5185\u4e0d\u4f1a\u6539\u53d8\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u66f4\u597d\u5730\u8fdb\u884c\u4f18\u5316\uff0c\u4f8b\u5982\uff1a \u5185\u8054\u4f18\u5316\u3002 \u5e38\u91cf\u6298\u53e0\u3002 \u6d88\u9664\u4e0d\u5fc5\u8981\u7684\u5185\u5b58\u5206\u914d\u3002 4. \u4ee3\u7801\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027 \u4e0d\u53ef\u53d8\u53d8\u91cf\u4f7f\u4ee3\u7801\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u56e0\u4e3a\u5f00\u53d1\u8005\u53ef\u4ee5\u786e\u4fe1\u53d8\u91cf\u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539\u3002 \u8fd9\u51cf\u5c11\u4e86\u8c03\u8bd5\u548c\u7ef4\u62a4\u7684\u590d\u6742\u6027\u3002 5. \u663e\u5f0f\u53ef\u53d8\u6027 \u5982\u679c\u9700\u8981\u4fee\u6539\u53d8\u91cf\uff0c\u5fc5\u987b\u663e\u5f0f\u4f7f\u7528 mut \u58f0\u660e\u4e3a\u53ef\u53d8\uff1a let mut x = 5 ; x = 6 ; \u8fd9\u79cd\u8bbe\u8ba1\u4f7f\u5f97\u4ee3\u7801\u7684\u610f\u56fe\u66f4\u52a0\u6e05\u6670\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5feb\u901f\u8bc6\u522b\u54ea\u4e9b\u53d8\u91cf\u662f\u53ef\u53d8\u7684\u3002 6. \u5e76\u53d1\u573a\u666f\u4e2d\u7684\u5b89\u5168\u6027 \u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u4e0d\u53ef\u53d8\u53d8\u91cf\u53ef\u4ee5\u907f\u514d\u6570\u636e\u7ade\u4e89\u95ee\u9898\u3002 Rust \u7684\u6240\u6709\u6743\u548c\u501f\u7528\u673a\u5236\u4e0e\u4e0d\u53ef\u53d8\u6027\u7ed3\u5408\uff0c\u786e\u4fdd\u4e86\u7ebf\u7a0b\u95f4\u7684\u6570\u636e\u8bbf\u95ee\u5b89\u5168\u3002 \u603b\u7ed3 Rust \u8bbe\u8ba1\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u4e0d\u53ef\u53d8\uff0c\u662f\u4e3a\u4e86\uff1a 1. \u63d0\u9ad8\u6570\u636e\u5b89\u5168\u6027\uff0c\u907f\u514d\u610f\u5916\u4fee\u6539\u3002 2. \u9f13\u52b1\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c\uff0c\u7b80\u5316\u4ee3\u7801\u903b\u8f91\u3002 3. \u63d0\u5347\u7f16\u8bd1\u5668\u4f18\u5316\u80fd\u529b\uff0c\u589e\u5f3a\u6027\u80fd\u3002 4. \u589e\u5f3a\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 5. \u5728\u5e76\u53d1\u573a\u666f\u4e2d\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\u3002 \u8fd9\u79cd\u8bbe\u8ba1\u867d\u7136\u589e\u52a0\u4e86\u4e00\u4e9b\u663e\u5f0f\u58f0\u660e\u7684\u6210\u672c\uff0c\u4f46\u6362\u6765\u4e86\u66f4\u9ad8\u7684\u5b89\u5168\u6027\u548c\u4ee3\u7801\u8d28\u91cf\u3002","title":"Rust\u7684\u7279\u70b9"},{"location":"Rust/begin_rust/#rust","text":"Rust \u662f\u4e00\u79cd\u7cfb\u7edf\u7f16\u7a0b\u8bed\u8a00\uff0c\u4ee5\u5b89\u5168\u6027\u3001\u9ad8\u6027\u80fd\u548c\u5e76\u53d1\u6027\u4e3a\u6838\u5fc3\u8bbe\u8ba1\u76ee\u6807\u3002\u4ee5\u4e0b\u662f Rust \u7684\u4e3b\u8981\u7279\u70b9\uff1a","title":"Rust \u7684\u7279\u70b9"},{"location":"Rust/begin_rust/#1","text":"\u6240\u6709\u6743\u7cfb\u7edf \uff1a Rust \u901a\u8fc7\u6240\u6709\u6743\uff08Ownership\uff09\u3001\u501f\u7528\uff08Borrowing\uff09\u548c\u751f\u547d\u5468\u671f\uff08Lifetimes\uff09\u673a\u5236\u7ba1\u7406\u5185\u5b58\uff0c\u907f\u514d\u4e86\u5e38\u89c1\u7684\u5185\u5b58\u9519\u8bef\uff08\u5982\u7a7a\u6307\u9488\u3001\u60ac\u5782\u6307\u9488\u3001\u5185\u5b58\u6cc4\u6f0f\uff09\u3002 \u65e0\u5783\u573e\u56de\u6536 \uff1a Rust \u4e0d\u4f9d\u8d56\u5783\u573e\u56de\u6536\u5668\uff0c\u800c\u662f\u901a\u8fc7\u7f16\u8bd1\u65f6\u68c0\u67e5\u786e\u4fdd\u5185\u5b58\u5b89\u5168\uff0c\u6027\u80fd\u66f4\u9ad8\u3002","title":"1. \u5185\u5b58\u5b89\u5168"},{"location":"Rust/begin_rust/#2","text":"\u63a5\u8fd1 C/C++ \u7684\u6027\u80fd \uff1a Rust \u662f\u4e00\u95e8\u7cfb\u7edf\u7ea7\u8bed\u8a00\uff0c\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u6027\u80fd\u63a5\u8fd1 C \u548c C++\u3002 \u96f6\u6210\u672c\u62bd\u8c61 \uff1a Rust \u63d0\u4f9b\u4e86\u9ad8\u7ea7\u62bd\u8c61\uff08\u5982\u8fed\u4ee3\u5668\u3001\u95ed\u5305\u7b49\uff09\uff0c\u4f46\u4e0d\u4f1a\u5f15\u5165\u989d\u5916\u7684\u8fd0\u884c\u65f6\u5f00\u9500\u3002","title":"2. \u9ad8\u6027\u80fd"},{"location":"Rust/begin_rust/#3","text":"\u6570\u636e\u7ade\u4e89\u7684\u7f16\u8bd1\u65f6\u68c0\u6d4b \uff1a Rust \u7684\u6240\u6709\u6743\u7cfb\u7edf\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u68c0\u6d4b\u5e76\u53d1\u4ee3\u7801\u4e2d\u7684\u6570\u636e\u7ade\u4e89\u95ee\u9898\uff0c\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\u3002 \u65e0\u9501\u5e76\u53d1 \uff1a Rust \u63d0\u4f9b\u4e86\u591a\u79cd\u65e0\u9501\u5e76\u53d1\u5de5\u5177\uff08\u5982 Arc \u548c Mutex \uff09\uff0c\u7b80\u5316\u4e86\u5e76\u53d1\u7f16\u7a0b\u3002","title":"3. \u5e76\u53d1\u6027"},{"location":"Rust/begin_rust/#4","text":"\u6a21\u5f0f\u5339\u914d \uff1a Rust \u63d0\u4f9b\u5f3a\u5927\u7684\u6a21\u5f0f\u5339\u914d\u529f\u80fd\uff08 match \u8bed\u53e5\uff09\uff0c\u4f7f\u4ee3\u7801\u66f4\u7b80\u6d01\u6613\u8bfb\u3002 \u6cdb\u578b\u548c\u7279\u6027\uff08Traits\uff09 \uff1a Rust \u652f\u6301\u6cdb\u578b\u7f16\u7a0b\u548c\u7279\u6027\uff08\u7c7b\u4f3c\u4e8e\u63a5\u53e3\uff09\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u590d\u7528\u6027\u548c\u7075\u6d3b\u6027\u3002 \u5b8f\u7cfb\u7edf \uff1a Rust \u7684\u5b8f\u7cfb\u7edf\u529f\u80fd\u5f3a\u5927\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ee3\u7801\u751f\u6210\u548c\u5143\u7f16\u7a0b\u3002","title":"4. \u73b0\u4ee3\u5316\u8bed\u8a00\u7279\u6027"},{"location":"Rust/begin_rust/#5","text":"\u5f3a\u5927\u7684\u7f16\u8bd1\u5668 \uff1a Rust \u7684\u7f16\u8bd1\u5668\uff08 rustc \uff09\u63d0\u4f9b\u8be6\u7ec6\u7684\u9519\u8bef\u4fe1\u606f\u548c\u5efa\u8bae\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\u3002 \u5305\u7ba1\u7406\u5668\u548c\u6784\u5efa\u5de5\u5177 \uff1a Rust \u63d0\u4f9b\u5185\u7f6e\u7684\u5305\u7ba1\u7406\u5668\u548c\u6784\u5efa\u5de5\u5177\uff08 Cargo \uff09\uff0c\u7b80\u5316\u4e86\u4f9d\u8d56\u7ba1\u7406\u548c\u9879\u76ee\u6784\u5efa\u3002 \u8de8\u5e73\u53f0\u652f\u6301 \uff1a Rust \u652f\u6301\u591a\u79cd\u5e73\u53f0\uff08\u5982 Windows\u3001Linux\u3001macOS \u548c\u5d4c\u5165\u5f0f\u8bbe\u5907\uff09\u3002","title":"5. \u5f00\u53d1\u8005\u53cb\u597d"},{"location":"Rust/begin_rust/#6","text":"\u4e30\u5bcc\u7684\u5e93\u548c\u5de5\u5177 \uff1a Rust \u62e5\u6709\u6d3b\u8dc3\u7684\u793e\u533a\u548c\u4e30\u5bcc\u7684\u7b2c\u4e09\u65b9\u5e93\uff08\u901a\u8fc7 crates.io \u63d0\u4f9b\uff09\u3002 WebAssembly \u652f\u6301 \uff1a Rust \u53ef\u4ee5\u7f16\u8bd1\u4e3a WebAssembly\uff0c\u9002\u5408\u9ad8\u6027\u80fd Web \u5e94\u7528\u5f00\u53d1\u3002 \u5d4c\u5165\u5f0f\u5f00\u53d1 \uff1a Rust \u652f\u6301\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5f00\u53d1\uff0c\u9002\u5408\u8d44\u6e90\u53d7\u9650\u7684\u73af\u5883\u3002","title":"6. \u751f\u6001\u7cfb\u7edf"},{"location":"Rust/begin_rust/#7","text":"\u7c7b\u578b\u7cfb\u7edf \uff1a Rust \u7684\u7c7b\u578b\u7cfb\u7edf\u975e\u5e38\u4e25\u683c\uff0c\u907f\u514d\u4e86\u8bb8\u591a\u8fd0\u884c\u65f6\u9519\u8bef\u3002 \u65e0\u6570\u636e\u7ade\u4e89 \uff1a Rust \u7684\u5e76\u53d1\u6a21\u578b\u786e\u4fdd\u4e86\u7ebf\u7a0b\u5b89\u5168\uff0c\u907f\u514d\u4e86\u6570\u636e\u7ade\u4e89\u95ee\u9898\u3002","title":"7. \u5b89\u5168\u6027"},{"location":"Rust/begin_rust/#_1","text":"Rust \u662f\u4e00\u95e8\u517c\u5177 \u6027\u80fd \u548c \u5b89\u5168\u6027 \u7684\u73b0\u4ee3\u7cfb\u7edf\u7f16\u7a0b\u8bed\u8a00\uff0c\u9002\u5408\u5f00\u53d1\u9ad8\u6027\u80fd\u3001\u5185\u5b58\u5b89\u5168\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u5728\u7cfb\u7edf\u7f16\u7a0b\u3001WebAssembly\u3001\u5d4c\u5165\u5f0f\u5f00\u53d1\u548c\u5e76\u53d1\u7f16\u7a0b\u7b49\u9886\u57df\u8868\u73b0\u51fa\u8272\u3002 \u770b\u4e86Rust\u5f00\u53d1\u8005\u8ddfLinux\u4f20\u7edfC\u5f00\u53d1\u8005\u7684battle(\u5927\u6982\u662f\u4e89\u8bba\u5173\u4e8e\u4e00\u4e9bLinux\u7cfb\u7edfapi\u8c03\u7528\u7684\u5199\u6cd5),\u6211\u66f4\u60f3\u4e86\u89e3\u8fd9\u95e8\u8bed\u8a00\u4e86,\u8fd9\u95e8\u8bed\u8a00\u4ee5\u9ad8\u6027\u80fd,\u5b89\u5168\u6027\u4e3a\u7279\u70b9,\u5e0c\u671b\u4e0d\u4f1a\u8ba9\u6211\u5931\u671b\u3002","title":"\u603b\u7ed3"},{"location":"Rust/begin_rust/#rust_1","text":"Rustacean \u662f Rust \u793e\u533a\u5bf9 Rust \u5f00\u53d1\u8005\u7684\u6635\u79f0\uff0c\u6765\u6e90\u4e8e\u5355\u8bcd Crustacean \uff08\u7532\u58f3\u7c7b\u52a8\u7269\uff09\u3002Rust \u7684\u5409\u7965\u7269\u662f\u4e00\u53ea\u540d\u4e3a Ferris \u7684\u8783\u87f9\uff0c\u56e0\u6b64 Rust \u5f00\u53d1\u8005\u88ab\u4eb2\u5207\u5730\u79f0\u4e3a Rustacean \u3002","title":"\u9605\u8bfbRust\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u78b0\u5230\u7684\u4e00\u4e9b\u5c0f\u540d\u8bcd"},{"location":"Rust/begin_rust/#_2","text":"Ferris \uff1a Rust \u7684\u975e\u5b98\u65b9\u5409\u7965\u7269\uff0c\u662f\u4e00\u53ea\u53ef\u7231\u7684\u7ea2\u8272\u8783\u87f9\u3002 Ferris \u7684\u540d\u5b57\u6765\u6e90\u4e8e \"ferrous\"\uff08\u94c1\u7684\uff09\uff0c\u4e0e Rust\uff08\u9508\uff09\u76f8\u5173\u3002 Rustacean \u7684\u542b\u4e49 \uff1a Rustacean \u662f Rust \u793e\u533a\u7684\u81ea\u79f0\uff0c\u8868\u793a\u5bf9 Rust \u7f16\u7a0b\u8bed\u8a00\u7684\u70ed\u7231\u548c\u5f52\u5c5e\u611f\u3002 \u793e\u533a\u6587\u5316 \uff1a Rust \u793e\u533a\u4ee5\u53cb\u597d\u548c\u5305\u5bb9\u8457\u79f0\uff0cRustacean \u4eec\u4e50\u4e8e\u5e2e\u52a9\u65b0\u624b\u5b66\u4e60 Rust\u3002","title":"\u76f8\u5173\u80cc\u666f"},{"location":"Rust/begin_rust/#_3","text":"Rustacean \u662f Rust \u5f00\u53d1\u8005\u7684\u6635\u79f0\uff0c\u8c61\u5f81\u7740 Rust \u793e\u533a\u7684\u6d3b\u529b\u548c\u53cb\u597d\u3002\u5982\u679c\u4f60\u6b63\u5728\u5b66\u4e60\u6216\u4f7f\u7528 Rust\uff0c\u4f60\u4e5f\u53ef\u4ee5\u81ea\u79f0\u4e3a\u4e00\u540d Rustacean\uff01","title":"\u603b\u7ed3"},{"location":"Rust/begin_rust/#rust_2","text":"\u53d8\u91cf\u906e\u853d\u7684\u610f\u4e49\u5728\u4e8e\uff1a 1. \u4fdd\u6301\u4e0d\u53ef\u53d8\u6027 \uff1a\u907f\u514d\u76f4\u63a5\u4fee\u6539\u53d8\u91cf\u503c\uff0c\u7b26\u5408 Rust \u7684\u5b89\u5168\u8bbe\u8ba1\u3002 2. \u7b80\u5316\u547d\u540d \uff1a\u907f\u514d\u5f15\u5165\u65b0\u7684\u53d8\u91cf\u540d\uff0c\u4f7f\u4ee3\u7801\u66f4\u7b80\u6d01\u3002 3. \u7075\u6d3b\u6027 \uff1a\u5141\u8bb8\u5728\u540c\u4e00\u4f5c\u7528\u57df\u5185\u91cd\u65b0\u58f0\u660e\u53d8\u91cf\uff0c\u65b9\u4fbf\u7c7b\u578b\u8f6c\u6362\u6216\u91cd\u65b0\u8ba1\u7b97\u3002 4. \u5b89\u5168\u6027 \uff1a\u907f\u514d\u53ef\u53d8\u53d8\u91cf\u7684\u526f\u4f5c\u7528\uff0c\u5c24\u5176\u662f\u5728\u5e76\u53d1\u573a\u666f\u4e2d\u3002 5. \u7f16\u8bd1\u5668\u4f18\u5316 \uff1a\u7f16\u8bd1\u5668\u4f1a\u4f18\u5316\u906e\u853d\u7684\u5185\u5b58\u5206\u914d\uff0c\u51cf\u5c11\u6027\u80fd\u5f00\u9500\u3002 Rust \u8bbe\u8ba1\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u4e0d\u53ef\u53d8\u7684\u539f\u56e0\u4e3b\u8981\u662f\u4e3a\u4e86 \u5b89\u5168\u6027 \u548c \u6027\u80fd \uff0c\u540c\u65f6\u7b80\u5316\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7ef4\u62a4\u6027\u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u539f\u56e0\uff1a","title":"\u4e3a\u4ec0\u4e48Rust\u8981\u8bbe\u8ba1\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u4e0d\u53ef\u53d8,\u4e3a\u4ec0\u4e48\u8981\u53d8\u91cf\u906e\u853d"},{"location":"Rust/begin_rust/#1_1","text":"\u907f\u514d\u610f\u5916\u4fee\u6539 \uff1a \u9ed8\u8ba4\u4e0d\u53ef\u53d8\u53ef\u4ee5\u9632\u6b62\u5f00\u53d1\u8005\u65e0\u610f\u4e2d\u4fee\u6539\u53d8\u91cf\u7684\u503c\uff0c\u51cf\u5c11\u6f5c\u5728\u7684\u903b\u8f91\u9519\u8bef\u3002 \u7ebf\u7a0b\u5b89\u5168 \uff1a \u5728\u5e76\u53d1\u7f16\u7a0b\u4e2d\uff0c\u4e0d\u53ef\u53d8\u53d8\u91cf\u5929\u7136\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u907f\u514d\u4e86\u6570\u636e\u7ade\u4e89\u95ee\u9898\u3002","title":"1. \u6570\u636e\u5b89\u5168\u6027"},{"location":"Rust/begin_rust/#2_1","text":"Rust \u501f\u9274\u4e86\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u7684\u8bbe\u8ba1\u7406\u5ff5\uff0c\u9f13\u52b1\u4f7f\u7528\u4e0d\u53ef\u53d8\u6570\u636e\u3002 \u4e0d\u53ef\u53d8\u53d8\u91cf\u4f7f\u4ee3\u7801\u66f4\u5bb9\u6613\u63a8\u5bfc\u548c\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u53d8\u91cf\u7684\u503c\u4e0d\u4f1a\u5728\u7a0b\u5e8f\u4e2d\u9014\u53d1\u751f\u53d8\u5316\u3002","title":"2. \u9f13\u52b1\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c"},{"location":"Rust/begin_rust/#3_1","text":"\u4e0d\u53ef\u53d8\u53d8\u91cf\u7684\u503c\u5728\u6574\u4e2a\u751f\u547d\u5468\u671f\u5185\u4e0d\u4f1a\u6539\u53d8\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u66f4\u597d\u5730\u8fdb\u884c\u4f18\u5316\uff0c\u4f8b\u5982\uff1a \u5185\u8054\u4f18\u5316\u3002 \u5e38\u91cf\u6298\u53e0\u3002 \u6d88\u9664\u4e0d\u5fc5\u8981\u7684\u5185\u5b58\u5206\u914d\u3002","title":"3. \u4f18\u5316\u7f16\u8bd1\u5668\u6027\u80fd"},{"location":"Rust/begin_rust/#4_1","text":"\u4e0d\u53ef\u53d8\u53d8\u91cf\u4f7f\u4ee3\u7801\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u56e0\u4e3a\u5f00\u53d1\u8005\u53ef\u4ee5\u786e\u4fe1\u53d8\u91cf\u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539\u3002 \u8fd9\u51cf\u5c11\u4e86\u8c03\u8bd5\u548c\u7ef4\u62a4\u7684\u590d\u6742\u6027\u3002","title":"4. \u4ee3\u7801\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027"},{"location":"Rust/begin_rust/#5_1","text":"\u5982\u679c\u9700\u8981\u4fee\u6539\u53d8\u91cf\uff0c\u5fc5\u987b\u663e\u5f0f\u4f7f\u7528 mut \u58f0\u660e\u4e3a\u53ef\u53d8\uff1a let mut x = 5 ; x = 6 ; \u8fd9\u79cd\u8bbe\u8ba1\u4f7f\u5f97\u4ee3\u7801\u7684\u610f\u56fe\u66f4\u52a0\u6e05\u6670\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5feb\u901f\u8bc6\u522b\u54ea\u4e9b\u53d8\u91cf\u662f\u53ef\u53d8\u7684\u3002","title":"5. \u663e\u5f0f\u53ef\u53d8\u6027"},{"location":"Rust/begin_rust/#6_1","text":"\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u4e0d\u53ef\u53d8\u53d8\u91cf\u53ef\u4ee5\u907f\u514d\u6570\u636e\u7ade\u4e89\u95ee\u9898\u3002 Rust \u7684\u6240\u6709\u6743\u548c\u501f\u7528\u673a\u5236\u4e0e\u4e0d\u53ef\u53d8\u6027\u7ed3\u5408\uff0c\u786e\u4fdd\u4e86\u7ebf\u7a0b\u95f4\u7684\u6570\u636e\u8bbf\u95ee\u5b89\u5168\u3002","title":"6. \u5e76\u53d1\u573a\u666f\u4e2d\u7684\u5b89\u5168\u6027"},{"location":"Rust/begin_rust/#_4","text":"Rust \u8bbe\u8ba1\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u4e0d\u53ef\u53d8\uff0c\u662f\u4e3a\u4e86\uff1a 1. \u63d0\u9ad8\u6570\u636e\u5b89\u5168\u6027\uff0c\u907f\u514d\u610f\u5916\u4fee\u6539\u3002 2. \u9f13\u52b1\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c\uff0c\u7b80\u5316\u4ee3\u7801\u903b\u8f91\u3002 3. \u63d0\u5347\u7f16\u8bd1\u5668\u4f18\u5316\u80fd\u529b\uff0c\u589e\u5f3a\u6027\u80fd\u3002 4. \u589e\u5f3a\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 5. \u5728\u5e76\u53d1\u573a\u666f\u4e2d\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\u3002 \u8fd9\u79cd\u8bbe\u8ba1\u867d\u7136\u589e\u52a0\u4e86\u4e00\u4e9b\u663e\u5f0f\u58f0\u660e\u7684\u6210\u672c\uff0c\u4f46\u6362\u6765\u4e86\u66f4\u9ad8\u7684\u5b89\u5168\u6027\u548c\u4ee3\u7801\u8d28\u91cf\u3002","title":"\u603b\u7ed3"},{"location":"Rust/cargo/","text":"Rust \u57fa\u7840\u77e5\u8bc6\u6574\u7406 rustc Rust \u7684\u7f16\u8bd1\u5668\uff0c\u7528\u4e8e\u76f4\u63a5\u7f16\u8bd1 .rs \u6587\u4ef6\u3002 \u793a\u4f8b\uff1a rustc main.rs ./main cargo new hello_world \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Rust \u9879\u76ee\uff0c\u5305\u542b\u9ed8\u8ba4\u7684\u76ee\u5f55\u7ed3\u6784\u548c\u914d\u7f6e\u6587\u4ef6\u3002 \u793a\u4f8b\uff1a cargo new hello_world cd hello_world cargo build \u7f16\u8bd1\u9879\u76ee\uff0c\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff08\u9ed8\u8ba4\u5728 target/debug \u76ee\u5f55\u4e0b\uff09\u3002 \u793a\u4f8b\uff1a cargo build cargo run \u7f16\u8bd1\u5e76\u8fd0\u884c\u9879\u76ee\u3002 \u793a\u4f8b\uff1a cargo run cargo check \u68c0\u67e5\u4ee3\u7801\u662f\u5426\u6709\u9519\u8bef\uff0c\u4f46\u4e0d\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff08\u901f\u5ea6\u66f4\u5feb\uff09\u3002 \u793a\u4f8b\uff1a cargo check target/debug \u9ed8\u8ba4\u7684\u7f16\u8bd1\u8f93\u51fa\u76ee\u5f55\uff0c\u5b58\u653e\u8c03\u8bd5\u6a21\u5f0f\u4e0b\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u793a\u4f8b\uff1a ./target/debug/hello_world \u603b\u7ed3 rustc \uff1a\u76f4\u63a5\u7f16\u8bd1\u5355\u4e2a\u6587\u4ef6\u3002 cargo \uff1a\u9879\u76ee\u7ba1\u7406\u5de5\u5177\uff0c\u652f\u6301\u521b\u5efa\u3001\u6784\u5efa\u3001\u8fd0\u884c\u548c\u68c0\u67e5\u9879\u76ee\u3002 target/debug \uff1a\u5b58\u653e\u8c03\u8bd5\u6a21\u5f0f\u4e0b\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 cargo build --release \u7684\u539f\u7406 \u4f5c\u7528 \uff1a cargo build --release \u7528\u4e8e\u4ee5 \u53d1\u5e03\u6a21\u5f0f\uff08Release Mode\uff09 \u7f16\u8bd1\u9879\u76ee\u3002 \u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4f1a\u542f\u7528 \u4f18\u5316\u9009\u9879 \uff0c\u4ee5\u63d0\u9ad8\u8fd0\u884c\u65f6\u6027\u80fd\u3002 \u4f18\u5316\u9009\u9879 \uff1a \u7f16\u8bd1\u5668\u4f1a\u542f\u7528\u66f4\u9ad8\u7ea7\u522b\u7684\u4f18\u5316\uff08\u5982 -C opt-level=3 \uff09\uff0c\u5305\u62ec\uff1a \u5185\u8054\u51fd\u6570\u3002 \u79fb\u9664\u672a\u4f7f\u7528\u7684\u4ee3\u7801\u3002 \u66f4\u9ad8\u6548\u7684\u6307\u4ee4\u751f\u6210\u3002 \u8fd9\u4e9b\u4f18\u5316\u4f1a\u589e\u52a0\u7f16\u8bd1\u65f6\u95f4\uff0c\u4f46\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u8fd0\u884c\u901f\u5ea6\u66f4\u5feb\u3002 \u8f93\u51fa\u76ee\u5f55 \uff1a \u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4f1a\u5b58\u653e\u5728 target/release \u76ee\u5f55\u4e0b\uff0c\u800c\u4e0d\u662f target/debug \u3002 \u9002\u7528\u573a\u666f \uff1a \u53d1\u5e03\u5230\u751f\u4ea7\u73af\u5883\u65f6\u4f7f\u7528\uff0c\u9002\u5408\u5bf9\u6027\u80fd\u8981\u6c42\u8f83\u9ad8\u7684\u573a\u666f\u3002 \u4e0d\u9002\u5408\u5f00\u53d1\u9636\u6bb5\uff0c\u56e0\u4e3a\u7f16\u8bd1\u65f6\u95f4\u8f83\u957f\uff0c\u8c03\u8bd5\u4fe1\u606f\u8f83\u5c11\u3002 \u793a\u4f8b \u7f16\u8bd1\u547d\u4ee4\uff1a cargo build --release \u8fd0\u884c\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff1a ./target/release/your_project_name \u603b\u7ed3 cargo build --release \uff1a\u4ee5\u53d1\u5e03\u6a21\u5f0f\u7f16\u8bd1\uff0c\u542f\u7528\u4f18\u5316\uff0c\u751f\u6210\u9ad8\u6027\u80fd\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u8f93\u51fa\u76ee\u5f55 \uff1a target/release \u3002 \u9002\u7528\u573a\u666f \uff1a\u751f\u4ea7\u73af\u5883\u6216\u6027\u80fd\u5173\u952e\u7684\u5e94\u7528\u3002","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"Rust/cargo/#rust","text":"rustc Rust \u7684\u7f16\u8bd1\u5668\uff0c\u7528\u4e8e\u76f4\u63a5\u7f16\u8bd1 .rs \u6587\u4ef6\u3002 \u793a\u4f8b\uff1a rustc main.rs ./main cargo new hello_world \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Rust \u9879\u76ee\uff0c\u5305\u542b\u9ed8\u8ba4\u7684\u76ee\u5f55\u7ed3\u6784\u548c\u914d\u7f6e\u6587\u4ef6\u3002 \u793a\u4f8b\uff1a cargo new hello_world cd hello_world cargo build \u7f16\u8bd1\u9879\u76ee\uff0c\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff08\u9ed8\u8ba4\u5728 target/debug \u76ee\u5f55\u4e0b\uff09\u3002 \u793a\u4f8b\uff1a cargo build cargo run \u7f16\u8bd1\u5e76\u8fd0\u884c\u9879\u76ee\u3002 \u793a\u4f8b\uff1a cargo run cargo check \u68c0\u67e5\u4ee3\u7801\u662f\u5426\u6709\u9519\u8bef\uff0c\u4f46\u4e0d\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff08\u901f\u5ea6\u66f4\u5feb\uff09\u3002 \u793a\u4f8b\uff1a cargo check target/debug \u9ed8\u8ba4\u7684\u7f16\u8bd1\u8f93\u51fa\u76ee\u5f55\uff0c\u5b58\u653e\u8c03\u8bd5\u6a21\u5f0f\u4e0b\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u793a\u4f8b\uff1a ./target/debug/hello_world","title":"Rust \u57fa\u7840\u77e5\u8bc6\u6574\u7406"},{"location":"Rust/cargo/#_1","text":"rustc \uff1a\u76f4\u63a5\u7f16\u8bd1\u5355\u4e2a\u6587\u4ef6\u3002 cargo \uff1a\u9879\u76ee\u7ba1\u7406\u5de5\u5177\uff0c\u652f\u6301\u521b\u5efa\u3001\u6784\u5efa\u3001\u8fd0\u884c\u548c\u68c0\u67e5\u9879\u76ee\u3002 target/debug \uff1a\u5b58\u653e\u8c03\u8bd5\u6a21\u5f0f\u4e0b\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002","title":"\u603b\u7ed3"},{"location":"Rust/cargo/#cargo-build-release","text":"\u4f5c\u7528 \uff1a cargo build --release \u7528\u4e8e\u4ee5 \u53d1\u5e03\u6a21\u5f0f\uff08Release Mode\uff09 \u7f16\u8bd1\u9879\u76ee\u3002 \u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4f1a\u542f\u7528 \u4f18\u5316\u9009\u9879 \uff0c\u4ee5\u63d0\u9ad8\u8fd0\u884c\u65f6\u6027\u80fd\u3002 \u4f18\u5316\u9009\u9879 \uff1a \u7f16\u8bd1\u5668\u4f1a\u542f\u7528\u66f4\u9ad8\u7ea7\u522b\u7684\u4f18\u5316\uff08\u5982 -C opt-level=3 \uff09\uff0c\u5305\u62ec\uff1a \u5185\u8054\u51fd\u6570\u3002 \u79fb\u9664\u672a\u4f7f\u7528\u7684\u4ee3\u7801\u3002 \u66f4\u9ad8\u6548\u7684\u6307\u4ee4\u751f\u6210\u3002 \u8fd9\u4e9b\u4f18\u5316\u4f1a\u589e\u52a0\u7f16\u8bd1\u65f6\u95f4\uff0c\u4f46\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u8fd0\u884c\u901f\u5ea6\u66f4\u5feb\u3002 \u8f93\u51fa\u76ee\u5f55 \uff1a \u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4f1a\u5b58\u653e\u5728 target/release \u76ee\u5f55\u4e0b\uff0c\u800c\u4e0d\u662f target/debug \u3002 \u9002\u7528\u573a\u666f \uff1a \u53d1\u5e03\u5230\u751f\u4ea7\u73af\u5883\u65f6\u4f7f\u7528\uff0c\u9002\u5408\u5bf9\u6027\u80fd\u8981\u6c42\u8f83\u9ad8\u7684\u573a\u666f\u3002 \u4e0d\u9002\u5408\u5f00\u53d1\u9636\u6bb5\uff0c\u56e0\u4e3a\u7f16\u8bd1\u65f6\u95f4\u8f83\u957f\uff0c\u8c03\u8bd5\u4fe1\u606f\u8f83\u5c11\u3002","title":"cargo build --release \u7684\u539f\u7406"},{"location":"Rust/cargo/#_2","text":"","title":"\u793a\u4f8b"},{"location":"Rust/cargo/#_3","text":"cargo build --release","title":"\u7f16\u8bd1\u547d\u4ee4\uff1a"},{"location":"Rust/cargo/#_4","text":"./target/release/your_project_name","title":"\u8fd0\u884c\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff1a"},{"location":"Rust/cargo/#_5","text":"cargo build --release \uff1a\u4ee5\u53d1\u5e03\u6a21\u5f0f\u7f16\u8bd1\uff0c\u542f\u7528\u4f18\u5316\uff0c\u751f\u6210\u9ad8\u6027\u80fd\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u8f93\u51fa\u76ee\u5f55 \uff1a target/release \u3002 \u9002\u7528\u573a\u666f \uff1a\u751f\u4ea7\u73af\u5883\u6216\u6027\u80fd\u5173\u952e\u7684\u5e94\u7528\u3002","title":"\u603b\u7ed3"}]}